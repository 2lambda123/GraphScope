Search.setIndex({"docnames": ["analytical_engine/builtin_algorithms", "analytical_engine/customized_algorithms", "analytical_engine/deployment", "analytical_engine/design_of_gae", "analytical_engine/dev_and_test", "analytical_engine/faqs", "analytical_engine/flash", "analytical_engine/getting_started", "analytical_engine/guide_and_examples", "analytical_engine/ingress", "analytical_engine/key_concepts", "analytical_engine/networkx_compatibility", "analytical_engine/overview_and_architecture", "analytical_engine/performance_tuning", "analytical_engine/programming_model_pie", "analytical_engine/tutorial_dev_algo_cpp_flash", "analytical_engine/tutorial_dev_algo_cpp_pie", "analytical_engine/tutorial_dev_algo_java", "analytical_engine/tutorial_dev_algo_python", "analytical_engine/tutorial_networkx_algorithms", "analytical_engine/tutorial_networkx_operations", "analytical_engine/tutorial_run_builtin_algo", "analytical_engine/tutorial_run_giraph_apps", "analytical_engine/tutorial_run_graphx_apps", "analytical_engine/vertex_centric_models", "contact_us", "deployment/deploy_graphscope_on_clouds", "deployment/deploy_graphscope_on_self_managed_k8s", "deployment/deploy_graphscope_with_helm", "deployment/deploy_with_existing_vineyard_cluster", "deployment/install_in_offline_env", "deployment/install_on_local", "design_of_gae", "development/code_style_guide", "development/dev_guide", "development/how_to_contribute", "development/how_to_debug", "development/how_to_submit_pr", "development/how_to_test", "frag_intro", "frequently_asked_questions", "getting_started_gle", "graph_workloads", "graphscope_for_data_scientists", "how_to_load_graphs", "how_to_report_bugs", "index", "interactive_engine/deployment", "interactive_engine/design_of_gie", "interactive_engine/dev_and_test", "interactive_engine/faq", "interactive_engine/getting_started", "interactive_engine/guide_and_examples", "interactive_engine/supported_gremlin_steps", "interactive_engine/tinkerpop_eco", "interactive_engine/tutorial_ldbc_gremlin", "java_tutorials", "key_features", "learning_engine/design_of_gle", "learning_engine/dev_and_test", "learning_engine/getting_started", "learning_engine/graph_sampling", "learning_engine/guide_and_examples", "learning_engine/tutorial_node_classification_k8s", "learning_engine/tutorial_node_classification_local", "overview/design_of_graphscope", "overview/getting_started", "overview/glossary", "overview/graph_analytics_workloads", "overview/graph_interactive_workloads", "overview/graph_learning_workloads", "overview/intro", "overview/positioning", "performance_and_benchmark", "python_tutorials", "reference/analytical_engine_index", "reference/app", "reference/context", "reference/cython_sdk", "reference/gae_java/about", "reference/gae_java/index", "reference/generated/graphscope.Vertex", "reference/generated/graphscope.declare", "reference/generated/graphscope.framework.app.load_app", "reference/generated/graphscope.framework.dag_utils.add_column", "reference/generated/graphscope.framework.dag_utils.add_labels_to_graph", "reference/generated/graphscope.framework.dag_utils.arrow_to_dynamic", "reference/generated/graphscope.framework.dag_utils.bind_app", "reference/generated/graphscope.framework.dag_utils.clear_edges", "reference/generated/graphscope.framework.dag_utils.clear_graph", "reference/generated/graphscope.framework.dag_utils.context_to_dataframe", "reference/generated/graphscope.framework.dag_utils.context_to_numpy", "reference/generated/graphscope.framework.dag_utils.copy_graph", "reference/generated/graphscope.framework.dag_utils.create_app", "reference/generated/graphscope.framework.dag_utils.create_graph", "reference/generated/graphscope.framework.dag_utils.create_graph_view", "reference/generated/graphscope.framework.dag_utils.create_loader", "reference/generated/graphscope.framework.dag_utils.create_subgraph", "reference/generated/graphscope.framework.dag_utils.create_unload_op", "reference/generated/graphscope.framework.dag_utils.dynamic_to_arrow", "reference/generated/graphscope.framework.dag_utils.fetch_gremlin_result", "reference/generated/graphscope.framework.dag_utils.get_context_data", "reference/generated/graphscope.framework.dag_utils.graph_to_dataframe", "reference/generated/graphscope.framework.dag_utils.graph_to_numpy", "reference/generated/graphscope.framework.dag_utils.gremlin_query", "reference/generated/graphscope.framework.dag_utils.gremlin_to_subgraph", "reference/generated/graphscope.framework.dag_utils.modify_edges", "reference/generated/graphscope.framework.dag_utils.modify_vertices", "reference/generated/graphscope.framework.dag_utils.output", "reference/generated/graphscope.framework.dag_utils.project_arrow_property_graph", "reference/generated/graphscope.framework.dag_utils.project_to_simple", "reference/generated/graphscope.framework.dag_utils.report_graph", "reference/generated/graphscope.framework.dag_utils.run_app", "reference/generated/graphscope.framework.dag_utils.to_data_sink", "reference/generated/graphscope.framework.dag_utils.to_directed", "reference/generated/graphscope.framework.dag_utils.to_undirected", "reference/generated/graphscope.framework.dag_utils.to_vineyard_dataframe", "reference/generated/graphscope.framework.dag_utils.to_vineyard_tensor", "reference/generated/graphscope.framework.dag_utils.unload_app", "reference/generated/graphscope.framework.dag_utils.unload_context", "reference/generated/graphscope.framework.dag_utils.unload_graph", "reference/generated/graphscope.framework.operation.Operation.__init__", "reference/generated/graphscope.framework.operation.Operation.as_op_def", "reference/generated/graphscope.framework.operation.Operation.eval", "reference/generated/graphscope.framework.operation.Operation.evaluated", "reference/generated/graphscope.framework.operation.Operation.key", "reference/generated/graphscope.framework.operation.Operation.signature", "reference/generated/graphscope.g", "reference/generated/graphscope.get_default_session", "reference/generated/graphscope.get_option", "reference/generated/graphscope.graphlearn", "reference/generated/graphscope.gremlin", "reference/generated/graphscope.has_default_session", "reference/generated/graphscope.session", "reference/generated/graphscope.set_option", "reference/gnn_engine/algo_en", "reference/gnn_engine/data_loader_en", "reference/gnn_engine/graph_object_en", "reference/gnn_engine/graph_query_en", "reference/gnn_engine/graph_sampling_en", "reference/gnn_engine/graph_traverse_en", "reference/gnn_engine/gsl_en", "reference/gnn_engine/install_en", "reference/gnn_engine/model_programming_en", "reference/gnn_engine/negative_sampling_en", "reference/gnn_engine/operator", "reference/gnn_engine/other_source", "reference/gnn_engine/quick_start_en", "reference/gnn_engine/system_config", "reference/graph", "reference/interactive", "reference/learning", "reference/networkx/builtin", "reference/networkx/functions", "reference/networkx/generated/graphscope.nx.classes.function.add_cycle", "reference/networkx/generated/graphscope.nx.classes.function.add_path", "reference/networkx/generated/graphscope.nx.classes.function.add_star", "reference/networkx/generated/graphscope.nx.classes.function.all_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.common_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.create_empty_copy", "reference/networkx/generated/graphscope.nx.classes.function.degree", "reference/networkx/generated/graphscope.nx.classes.function.degree_histogram", "reference/networkx/generated/graphscope.nx.classes.function.density", "reference/networkx/generated/graphscope.nx.classes.function.edge_subgraph", "reference/networkx/generated/graphscope.nx.classes.function.edges", "reference/networkx/generated/graphscope.nx.classes.function.freeze", "reference/networkx/generated/graphscope.nx.classes.function.induced_subgraph", "reference/networkx/generated/graphscope.nx.classes.function.info", "reference/networkx/generated/graphscope.nx.classes.function.is_directed", "reference/networkx/generated/graphscope.nx.classes.function.is_empty", "reference/networkx/generated/graphscope.nx.classes.function.is_frozen", "reference/networkx/generated/graphscope.nx.classes.function.is_negatively_weighted", "reference/networkx/generated/graphscope.nx.classes.function.is_weighted", "reference/networkx/generated/graphscope.nx.classes.function.neighbors", "reference/networkx/generated/graphscope.nx.classes.function.nodes", "reference/networkx/generated/graphscope.nx.classes.function.nodes_with_selfloops", "reference/networkx/generated/graphscope.nx.classes.function.non_edges", "reference/networkx/generated/graphscope.nx.classes.function.non_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.number_of_edges", "reference/networkx/generated/graphscope.nx.classes.function.number_of_nodes", "reference/networkx/generated/graphscope.nx.classes.function.number_of_selfloops", "reference/networkx/generated/graphscope.nx.classes.function.selfloop_edges", "reference/networkx/generated/graphscope.nx.classes.function.subgraph", "reference/networkx/generated/graphscope.nx.classes.function.to_directed", "reference/networkx/generated/graphscope.nx.classes.function.to_undirected", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas_g", "reference/networkx/generated/graphscope.nx.generators.classic.balanced_tree", "reference/networkx/generated/graphscope.nx.generators.classic.barbell_graph", "reference/networkx/generated/graphscope.nx.generators.classic.binomial_tree", "reference/networkx/generated/graphscope.nx.generators.classic.circulant_graph", "reference/networkx/generated/graphscope.nx.generators.classic.circular_ladder_graph", "reference/networkx/generated/graphscope.nx.generators.classic.complete_graph", "reference/networkx/generated/graphscope.nx.generators.classic.complete_multipartite_graph", "reference/networkx/generated/graphscope.nx.generators.classic.cycle_graph", "reference/networkx/generated/graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph", "reference/networkx/generated/graphscope.nx.generators.classic.empty_graph", "reference/networkx/generated/graphscope.nx.generators.classic.full_rary_tree", "reference/networkx/generated/graphscope.nx.generators.classic.ladder_graph", "reference/networkx/generated/graphscope.nx.generators.classic.lollipop_graph", "reference/networkx/generated/graphscope.nx.generators.classic.null_graph", "reference/networkx/generated/graphscope.nx.generators.classic.path_graph", "reference/networkx/generated/graphscope.nx.generators.classic.star_graph", "reference/networkx/generated/graphscope.nx.generators.classic.trivial_graph", "reference/networkx/generated/graphscope.nx.generators.classic.turan_graph", "reference/networkx/generated/graphscope.nx.generators.classic.wheel_graph", "reference/networkx/generated/graphscope.nx.generators.community.LFR_benchmark_graph", "reference/networkx/generated/graphscope.nx.generators.community.caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.connected_caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.gaussian_random_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.planted_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.random_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.relaxed_caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.ring_of_cliques", "reference/networkx/generated/graphscope.nx.generators.community.stochastic_block_model", "reference/networkx/generated/graphscope.nx.generators.community.windmill_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.configuration_model", "reference/networkx/generated/graphscope.nx.generators.degree_seq.degree_sequence_tree", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_configuration_model", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.expected_degree_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.havel_hakimi_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.random_degree_sequence_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gn_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gnc_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gnr_graph", "reference/networkx/generated/graphscope.nx.generators.directed.random_k_out_graph", "reference/networkx/generated/graphscope.nx.generators.directed.scale_free_graph", "reference/networkx/generated/graphscope.nx.generators.duplication.duplication_divergence_graph", "reference/networkx/generated/graphscope.nx.generators.duplication.partial_duplication_graph", "reference/networkx/generated/graphscope.nx.generators.ego.ego_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.chordal_cycle_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.margulis_gabber_galil_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.paley_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.geographical_threshold_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.soft_random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.thresholded_random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.waxman_graph", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hkn_harary_graph", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hnm_harary_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.general_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.k_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.uniform_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.joint_degree_graph", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielski_graph", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielskian", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees", "reference/networkx/generated/graphscope.nx.generators.small.LCF_graph", "reference/networkx/generated/graphscope.nx.generators.small.bull_graph", "reference/networkx/generated/graphscope.nx.generators.small.chvatal_graph", "reference/networkx/generated/graphscope.nx.generators.small.cubical_graph", "reference/networkx/generated/graphscope.nx.generators.small.desargues_graph", "reference/networkx/generated/graphscope.nx.generators.small.diamond_graph", "reference/networkx/generated/graphscope.nx.generators.small.dodecahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.frucht_graph", "reference/networkx/generated/graphscope.nx.generators.small.heawood_graph", "reference/networkx/generated/graphscope.nx.generators.small.house_graph", "reference/networkx/generated/graphscope.nx.generators.small.house_x_graph", "reference/networkx/generated/graphscope.nx.generators.small.icosahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.krackhardt_kite_graph", "reference/networkx/generated/graphscope.nx.generators.small.make_small_graph", "reference/networkx/generated/graphscope.nx.generators.small.moebius_kantor_graph", "reference/networkx/generated/graphscope.nx.generators.small.octahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.pappus_graph", "reference/networkx/generated/graphscope.nx.generators.small.petersen_graph", "reference/networkx/generated/graphscope.nx.generators.small.sedgewick_maze_graph", "reference/networkx/generated/graphscope.nx.generators.small.tetrahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.truncated_cube_graph", "reference/networkx/generated/graphscope.nx.generators.small.truncated_tetrahedron_graph", "reference/networkx/generated/graphscope.nx.generators.small.tutte_graph", "reference/networkx/generated/graphscope.nx.generators.social.davis_southern_women_graph", "reference/networkx/generated/graphscope.nx.generators.social.florentine_families_graph", "reference/networkx/generated/graphscope.nx.generators.social.karate_club_graph", "reference/networkx/generated/graphscope.nx.generators.social.les_miserables_graph", "reference/networkx/generated/graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge", "reference/networkx/generated/graphscope.nx.generators.sudoku.sudoku_graph", "reference/networkx/generated/graphscope.nx.generators.trees.prefix_tree", "reference/networkx/generated/graphscope.nx.generators.trees.random_tree", "reference/networkx/generated/graphscope.nx.generators.triads.triad_graph", "reference/networkx/generated/networkx.generators.internet_as_graphs.random_internet_as_graph", "reference/networkx/generated/networkx.generators.stochastic.stochastic_graph", "reference/networkx/generators", "reference/networkx/graphs", "reference/networkx/index", "reference/networkx/io", "reference/networkx/transformation", "reference/operation", "reference/python_index", "reference/selector", "reference/session", "resources_estimator", "storage_engine/gart", "storage_engine/getting_started", "storage_engine/graphar", "storage_engine/grin", "storage_engine/groot", "storage_engine/vineyard", "tutorial/builtin", "tutorial/scaling", "user_guide_and_examples_of_gae", "user_guide_and_examples_of_gle", "utilities/error_codes", "utilities/gs", "utilities/how_to_find_logs", "utilities/monitoring", "zh/analytics_engine", "zh/deployment", "zh/developer_guide", "zh/frequently_asked_questions", "zh/getting_started", "zh/graph_transformation", "zh/index", "zh/installation", "zh/interactive_engine", "zh/learning_engine", "zh/loading_graph", "zh/tutorials"], "filenames": ["analytical_engine/builtin_algorithms.md", "analytical_engine/customized_algorithms.md", "analytical_engine/deployment.md", "analytical_engine/design_of_gae.md", "analytical_engine/dev_and_test.md", "analytical_engine/faqs.md", "analytical_engine/flash.md", "analytical_engine/getting_started.md", "analytical_engine/guide_and_examples.md", "analytical_engine/ingress.md", "analytical_engine/key_concepts.rst", "analytical_engine/networkx_compatibility.md", "analytical_engine/overview_and_architecture.md", "analytical_engine/performance_tuning.md", "analytical_engine/programming_model_pie.md", "analytical_engine/tutorial_dev_algo_cpp_flash.md", "analytical_engine/tutorial_dev_algo_cpp_pie.md", "analytical_engine/tutorial_dev_algo_java.md", "analytical_engine/tutorial_dev_algo_python.rst", "analytical_engine/tutorial_networkx_algorithms.md", "analytical_engine/tutorial_networkx_operations.md", "analytical_engine/tutorial_run_builtin_algo.md", "analytical_engine/tutorial_run_giraph_apps.md", "analytical_engine/tutorial_run_graphx_apps.md", "analytical_engine/vertex_centric_models.md", "contact_us.md", "deployment/deploy_graphscope_on_clouds.md", "deployment/deploy_graphscope_on_self_managed_k8s.md", "deployment/deploy_graphscope_with_helm.md", "deployment/deploy_with_existing_vineyard_cluster.md", "deployment/install_in_offline_env.md", "deployment/install_on_local.md", "design_of_gae.md", "development/code_style_guide.md", "development/dev_guide.md", "development/how_to_contribute.md", "development/how_to_debug.md", "development/how_to_submit_pr.md", "development/how_to_test.md", "frag_intro.md", "frequently_asked_questions.rst", "getting_started_gle.md", "graph_workloads.md", "graphscope_for_data_scientists.md", "how_to_load_graphs.md", "how_to_report_bugs.md", "index.rst", "interactive_engine/deployment.md", "interactive_engine/design_of_gie.md", "interactive_engine/dev_and_test.md", "interactive_engine/faq.md", "interactive_engine/getting_started.md", "interactive_engine/guide_and_examples.md", "interactive_engine/supported_gremlin_steps.md", "interactive_engine/tinkerpop_eco.md", "interactive_engine/tutorial_ldbc_gremlin.md", "java_tutorials.md", "key_features.md", "learning_engine/design_of_gle.md", "learning_engine/dev_and_test.md", "learning_engine/getting_started.md", "learning_engine/graph_sampling.md", "learning_engine/guide_and_examples.md", "learning_engine/tutorial_node_classification_k8s.md", "learning_engine/tutorial_node_classification_local.md", "overview/design_of_graphscope.md", "overview/getting_started.md", "overview/glossary.md", "overview/graph_analytics_workloads.md", "overview/graph_interactive_workloads.md", "overview/graph_learning_workloads.md", "overview/intro.md", "overview/positioning.md", "performance_and_benchmark.md", "python_tutorials.md", "reference/analytical_engine_index.rst", "reference/app.rst", "reference/context.rst", "reference/cython_sdk.rst", "reference/gae_java/about.rst", "reference/gae_java/index.rst", "reference/generated/graphscope.Vertex.rst", "reference/generated/graphscope.declare.rst", "reference/generated/graphscope.framework.app.load_app.rst", "reference/generated/graphscope.framework.dag_utils.add_column.rst", "reference/generated/graphscope.framework.dag_utils.add_labels_to_graph.rst", "reference/generated/graphscope.framework.dag_utils.arrow_to_dynamic.rst", "reference/generated/graphscope.framework.dag_utils.bind_app.rst", "reference/generated/graphscope.framework.dag_utils.clear_edges.rst", "reference/generated/graphscope.framework.dag_utils.clear_graph.rst", "reference/generated/graphscope.framework.dag_utils.context_to_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.context_to_numpy.rst", "reference/generated/graphscope.framework.dag_utils.copy_graph.rst", "reference/generated/graphscope.framework.dag_utils.create_app.rst", "reference/generated/graphscope.framework.dag_utils.create_graph.rst", "reference/generated/graphscope.framework.dag_utils.create_graph_view.rst", "reference/generated/graphscope.framework.dag_utils.create_loader.rst", "reference/generated/graphscope.framework.dag_utils.create_subgraph.rst", "reference/generated/graphscope.framework.dag_utils.create_unload_op.rst", "reference/generated/graphscope.framework.dag_utils.dynamic_to_arrow.rst", "reference/generated/graphscope.framework.dag_utils.fetch_gremlin_result.rst", "reference/generated/graphscope.framework.dag_utils.get_context_data.rst", "reference/generated/graphscope.framework.dag_utils.graph_to_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.graph_to_numpy.rst", "reference/generated/graphscope.framework.dag_utils.gremlin_query.rst", "reference/generated/graphscope.framework.dag_utils.gremlin_to_subgraph.rst", "reference/generated/graphscope.framework.dag_utils.modify_edges.rst", "reference/generated/graphscope.framework.dag_utils.modify_vertices.rst", "reference/generated/graphscope.framework.dag_utils.output.rst", "reference/generated/graphscope.framework.dag_utils.project_arrow_property_graph.rst", "reference/generated/graphscope.framework.dag_utils.project_to_simple.rst", "reference/generated/graphscope.framework.dag_utils.report_graph.rst", "reference/generated/graphscope.framework.dag_utils.run_app.rst", "reference/generated/graphscope.framework.dag_utils.to_data_sink.rst", "reference/generated/graphscope.framework.dag_utils.to_directed.rst", "reference/generated/graphscope.framework.dag_utils.to_undirected.rst", "reference/generated/graphscope.framework.dag_utils.to_vineyard_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.to_vineyard_tensor.rst", "reference/generated/graphscope.framework.dag_utils.unload_app.rst", "reference/generated/graphscope.framework.dag_utils.unload_context.rst", "reference/generated/graphscope.framework.dag_utils.unload_graph.rst", "reference/generated/graphscope.framework.operation.Operation.__init__.rst", "reference/generated/graphscope.framework.operation.Operation.as_op_def.rst", "reference/generated/graphscope.framework.operation.Operation.eval.rst", "reference/generated/graphscope.framework.operation.Operation.evaluated.rst", "reference/generated/graphscope.framework.operation.Operation.key.rst", "reference/generated/graphscope.framework.operation.Operation.signature.rst", "reference/generated/graphscope.g.rst", "reference/generated/graphscope.get_default_session.rst", "reference/generated/graphscope.get_option.rst", "reference/generated/graphscope.graphlearn.rst", "reference/generated/graphscope.gremlin.rst", "reference/generated/graphscope.has_default_session.rst", "reference/generated/graphscope.session.rst", "reference/generated/graphscope.set_option.rst", "reference/gnn_engine/algo_en.rst", "reference/gnn_engine/data_loader_en.rst", "reference/gnn_engine/graph_object_en.rst", "reference/gnn_engine/graph_query_en.rst", "reference/gnn_engine/graph_sampling_en.rst", "reference/gnn_engine/graph_traverse_en.rst", "reference/gnn_engine/gsl_en.rst", "reference/gnn_engine/install_en.rst", "reference/gnn_engine/model_programming_en.rst", "reference/gnn_engine/negative_sampling_en.rst", "reference/gnn_engine/operator.rst", "reference/gnn_engine/other_source.rst", "reference/gnn_engine/quick_start_en.rst", "reference/gnn_engine/system_config.rst", "reference/graph.rst", "reference/interactive.rst", "reference/learning.rst", "reference/networkx/builtin.rst", "reference/networkx/functions.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_cycle.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_path.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_star.rst", "reference/networkx/generated/graphscope.nx.classes.function.all_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.common_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.create_empty_copy.rst", "reference/networkx/generated/graphscope.nx.classes.function.degree.rst", "reference/networkx/generated/graphscope.nx.classes.function.degree_histogram.rst", "reference/networkx/generated/graphscope.nx.classes.function.density.rst", "reference/networkx/generated/graphscope.nx.classes.function.edge_subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.freeze.rst", "reference/networkx/generated/graphscope.nx.classes.function.induced_subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.info.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_directed.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_empty.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_frozen.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_negatively_weighted.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_weighted.rst", "reference/networkx/generated/graphscope.nx.classes.function.neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.nodes.rst", "reference/networkx/generated/graphscope.nx.classes.function.nodes_with_selfloops.rst", "reference/networkx/generated/graphscope.nx.classes.function.non_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.non_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_nodes.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_selfloops.rst", "reference/networkx/generated/graphscope.nx.classes.function.selfloop_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.to_directed.rst", "reference/networkx/generated/graphscope.nx.classes.function.to_undirected.rst", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas.rst", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas_g.rst", "reference/networkx/generated/graphscope.nx.generators.classic.balanced_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.barbell_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.binomial_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.circulant_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.circular_ladder_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.complete_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.complete_multipartite_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.cycle_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.empty_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.full_rary_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.ladder_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.lollipop_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.null_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.path_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.star_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.trivial_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.turan_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.wheel_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.LFR_benchmark_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.connected_caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.gaussian_random_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.planted_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.random_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.relaxed_caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.ring_of_cliques.rst", "reference/networkx/generated/graphscope.nx.generators.community.stochastic_block_model.rst", "reference/networkx/generated/graphscope.nx.generators.community.windmill_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.configuration_model.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.degree_sequence_tree.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_configuration_model.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.expected_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.havel_hakimi_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.random_degree_sequence_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gn_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gnc_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gnr_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.random_k_out_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.scale_free_graph.rst", "reference/networkx/generated/graphscope.nx.generators.duplication.duplication_divergence_graph.rst", "reference/networkx/generated/graphscope.nx.generators.duplication.partial_duplication_graph.rst", "reference/networkx/generated/graphscope.nx.generators.ego.ego_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.chordal_cycle_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.margulis_gabber_galil_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.paley_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.geographical_threshold_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.soft_random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.thresholded_random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.waxman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hkn_harary_graph.rst", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hnm_harary_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.general_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.k_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.uniform_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.joint_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielski_graph.rst", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielskian.rst", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees.rst", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees.rst", "reference/networkx/generated/graphscope.nx.generators.small.LCF_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.bull_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.chvatal_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.cubical_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.desargues_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.diamond_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.dodecahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.frucht_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.heawood_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.house_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.house_x_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.icosahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.krackhardt_kite_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.make_small_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.moebius_kantor_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.octahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.pappus_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.petersen_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.sedgewick_maze_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.tetrahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.truncated_cube_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.truncated_tetrahedron_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.tutte_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.davis_southern_women_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.florentine_families_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.karate_club_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.les_miserables_graph.rst", "reference/networkx/generated/graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge.rst", "reference/networkx/generated/graphscope.nx.generators.sudoku.sudoku_graph.rst", "reference/networkx/generated/graphscope.nx.generators.trees.prefix_tree.rst", "reference/networkx/generated/graphscope.nx.generators.trees.random_tree.rst", "reference/networkx/generated/graphscope.nx.generators.triads.triad_graph.rst", "reference/networkx/generated/networkx.generators.internet_as_graphs.random_internet_as_graph.rst", "reference/networkx/generated/networkx.generators.stochastic.stochastic_graph.rst", "reference/networkx/generators.rst", "reference/networkx/graphs.rst", "reference/networkx/index.rst", "reference/networkx/io.rst", "reference/networkx/transformation.rst", "reference/operation.rst", "reference/python_index.rst", "reference/selector.rst", "reference/session.rst", "resources_estimator.md", "storage_engine/gart.md", "storage_engine/getting_started.md", "storage_engine/graphar.md", "storage_engine/grin.md", "storage_engine/groot.md", "storage_engine/vineyard.md", "tutorial/builtin.rst", "tutorial/scaling.rst", "user_guide_and_examples_of_gae.md", "user_guide_and_examples_of_gle.md", "utilities/error_codes.md", "utilities/gs.md", "utilities/how_to_find_logs.md", "utilities/monitoring.md", "zh/analytics_engine.rst", "zh/deployment.rst", "zh/developer_guide.rst", "zh/frequently_asked_questions.rst", "zh/getting_started.rst", "zh/graph_transformation.rst", "zh/index.rst", "zh/installation.rst", "zh/interactive_engine.rst", "zh/learning_engine.rst", "zh/loading_graph.rst", "zh/tutorials.rst"], "titles": ["Built-in Algorithms", "Customized Algorithms", "Deployment for GAE", "Design of Analytical Engine", "Dev and Test", "FAQs", "Programming Model: FLASH", "Getting Started", "Guide and Examples", "Ingress: Incrementalize Graph Algorithms", "Key Concepts", "NetworkX Compatibility", "Overview and Architecture", "Performance Tuning", "Programming Model: PIE", "Tutorial: Develop Your Algorithms in C++ with FLASH Model", "Tutorial: Develop your Algorithm in C++ with PIE Model", "Tutorial: Develop your Algorithm in Java with PIE Model", "Tutorial: Develop algorithms in Python", "Tutorial: Graph Algorithms with NetowrkX APIs", "Tutorial: Graph Operations with NetowrkX APIs", "Tutorial: Running Builtin Algorithms", "Tutorial: Run Giraph Applications on GraphScope", "Tutorial: Run GraphX Applications on GraphScope", "Vertex-Centric Model", "Contact Us", "Deploy GraphScope on Clouds", "Deploy on K8s Cluster", "Deploy GraphScope with <code class=\"docutils literal notranslate\"><span class=\"pre\">helm</span></code>", "Depoly with Existing Vineyard Cluster", "Install GraphScope in offline environment", "Install GraphScope on Local", "Design of GAE", "Code Style Guide", "Development Guide", "How to Contribute", "Debugging on local deployment", "How to Submit Pull-requests", "How to Test", "Introduction to ArrowFragment", "Frequently Asked Questions", "Getting Started for GLE", "Graph Workloads", "GraphScope for Data Scientists", "How to Load Graphs", "How to Report Bugs", "GraphScope: A One-Stop Large-Scale Graph Computing System from Alibaba", "Standalone Deployment for GIE", "Design of GIE", "Dev and Test", "FAQs for GIE Gremlin Usage", "Getting Started", "Guide and Examples", "Supported Gremlin Steps", "Apache TinkerPop Ecosystem", "Tutorial: LDBC Gremlin", "Tutorials for Java Users", "Key Features", "Design of GLE", "Dev and Test", "Getting Started", "Graph Sampling", "Guide and Examples", "Tutorial: Training a Node Classification Model on K8s Cluster", "Tutorial: Training a Node Classification Model on Your Local Machine", "Design of GraphScope", "Getting Started", "Glossary", "Graph Analytics Workloads", "Graph Interactive Workloads", "Graph Learning Workloads", "Introducing GraphScope", "Positioning of GraphScope", "Performance and Benchmark", "Tutorials for Python Users", "Analytical Engine API Reference", "Analytical App", "Context", "Cython SDK API", "About Grape JDK", "Java Reference (javadoc)", "graphscope.Vertex", "graphscope.declare", "graphscope.framework.app.load_app", "graphscope.framework.dag_utils.add_column", "graphscope.framework.dag_utils.add_labels_to_graph", "graphscope.framework.dag_utils.arrow_to_dynamic", "graphscope.framework.dag_utils.bind_app", "graphscope.framework.dag_utils.clear_edges", "graphscope.framework.dag_utils.clear_graph", "graphscope.framework.dag_utils.context_to_dataframe", "graphscope.framework.dag_utils.context_to_numpy", "graphscope.framework.dag_utils.copy_graph", "graphscope.framework.dag_utils.create_app", "graphscope.framework.dag_utils.create_graph", "graphscope.framework.dag_utils.create_graph_view", "graphscope.framework.dag_utils.create_loader", "graphscope.framework.dag_utils.create_subgraph", "graphscope.framework.dag_utils.create_unload_op", "graphscope.framework.dag_utils.dynamic_to_arrow", "graphscope.framework.dag_utils.fetch_gremlin_result", "graphscope.framework.dag_utils.get_context_data", "graphscope.framework.dag_utils.graph_to_dataframe", "graphscope.framework.dag_utils.graph_to_numpy", "graphscope.framework.dag_utils.gremlin_query", "graphscope.framework.dag_utils.gremlin_to_subgraph", "graphscope.framework.dag_utils.modify_edges", "graphscope.framework.dag_utils.modify_vertices", "graphscope.framework.dag_utils.output", "graphscope.framework.dag_utils.project_arrow_property_graph", "graphscope.framework.dag_utils.project_to_simple", "graphscope.framework.dag_utils.report_graph", "graphscope.framework.dag_utils.run_app", "graphscope.framework.dag_utils.to_data_sink", "graphscope.framework.dag_utils.to_directed", "graphscope.framework.dag_utils.to_undirected", "graphscope.framework.dag_utils.to_vineyard_dataframe", "graphscope.framework.dag_utils.to_vineyard_tensor", "graphscope.framework.dag_utils.unload_app", "graphscope.framework.dag_utils.unload_context", "graphscope.framework.dag_utils.unload_graph", "graphscope.framework.operation.Operation.__init__", "graphscope.framework.operation.Operation.as_op_def", "graphscope.framework.operation.Operation.eval", "graphscope.framework.operation.Operation.evaluated", "graphscope.framework.operation.Operation.key", "graphscope.framework.operation.Operation.signature", "graphscope.g", "graphscope.get_default_session", "graphscope.get_option", "graphscope.graphlearn", "graphscope.gremlin", "graphscope.has_default_session", "graphscope.session", "graphscope.set_option", "Developing Your Own Model", "Data Source", "Graph Object", "Graph Query", "Graph Sampling", "Graph Traversal", "Graph Sampling Language\uff08GSL)", "Install from pip", "Graph Learning Model", "Negative Sampling", "Defining Your Own Operator", "Integrating Other Data Sources", "Quick Start", "System configuration", "Graph", "Interactive Query", "Graph Learning", "Builtin algorithms", "Functions", "graphscope.nx.classes.function.add_cycle", "graphscope.nx.classes.function.add_path", "graphscope.nx.classes.function.add_star", "graphscope.nx.classes.function.all_neighbors", "graphscope.nx.classes.function.common_neighbors", "graphscope.nx.classes.function.create_empty_copy", "graphscope.nx.classes.function.degree", "graphscope.nx.classes.function.degree_histogram", "graphscope.nx.classes.function.density", "graphscope.nx.classes.function.edge_subgraph", "graphscope.nx.classes.function.edges", "graphscope.nx.classes.function.freeze", "graphscope.nx.classes.function.induced_subgraph", "graphscope.nx.classes.function.info", "graphscope.nx.classes.function.is_directed", "graphscope.nx.classes.function.is_empty", "graphscope.nx.classes.function.is_frozen", "graphscope.nx.classes.function.is_negatively_weighted", "graphscope.nx.classes.function.is_weighted", "graphscope.nx.classes.function.neighbors", "graphscope.nx.classes.function.nodes", "graphscope.nx.classes.function.nodes_with_selfloops", "graphscope.nx.classes.function.non_edges", "graphscope.nx.classes.function.non_neighbors", "graphscope.nx.classes.function.number_of_edges", "graphscope.nx.classes.function.number_of_nodes", "graphscope.nx.classes.function.number_of_selfloops", "graphscope.nx.classes.function.selfloop_edges", "graphscope.nx.classes.function.subgraph", "graphscope.nx.classes.function.to_directed", "graphscope.nx.classes.function.to_undirected", "graphscope.nx.generators.atlas.graph_atlas", "graphscope.nx.generators.atlas.graph_atlas_g", "graphscope.nx.generators.classic.balanced_tree", "graphscope.nx.generators.classic.barbell_graph", "graphscope.nx.generators.classic.binomial_tree", "graphscope.nx.generators.classic.circulant_graph", "graphscope.nx.generators.classic.circular_ladder_graph", "graphscope.nx.generators.classic.complete_graph", "graphscope.nx.generators.classic.complete_multipartite_graph", "graphscope.nx.generators.classic.cycle_graph", "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph", "graphscope.nx.generators.classic.empty_graph", "graphscope.nx.generators.classic.full_rary_tree", "graphscope.nx.generators.classic.ladder_graph", "graphscope.nx.generators.classic.lollipop_graph", "graphscope.nx.generators.classic.null_graph", "graphscope.nx.generators.classic.path_graph", "graphscope.nx.generators.classic.star_graph", "graphscope.nx.generators.classic.trivial_graph", "graphscope.nx.generators.classic.turan_graph", "graphscope.nx.generators.classic.wheel_graph", "graphscope.nx.generators.community.LFR_benchmark_graph", "graphscope.nx.generators.community.caveman_graph", "graphscope.nx.generators.community.connected_caveman_graph", "graphscope.nx.generators.community.gaussian_random_partition_graph", "graphscope.nx.generators.community.planted_partition_graph", "graphscope.nx.generators.community.random_partition_graph", "graphscope.nx.generators.community.relaxed_caveman_graph", "graphscope.nx.generators.community.ring_of_cliques", "graphscope.nx.generators.community.stochastic_block_model", "graphscope.nx.generators.community.windmill_graph", "graphscope.nx.generators.degree_seq.configuration_model", "graphscope.nx.generators.degree_seq.degree_sequence_tree", "graphscope.nx.generators.degree_seq.directed_configuration_model", "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph", "graphscope.nx.generators.degree_seq.expected_degree_graph", "graphscope.nx.generators.degree_seq.havel_hakimi_graph", "graphscope.nx.generators.degree_seq.random_degree_sequence_graph", "graphscope.nx.generators.directed.gn_graph", "graphscope.nx.generators.directed.gnc_graph", "graphscope.nx.generators.directed.gnr_graph", "graphscope.nx.generators.directed.random_k_out_graph", "graphscope.nx.generators.directed.scale_free_graph", "graphscope.nx.generators.duplication.duplication_divergence_graph", "graphscope.nx.generators.duplication.partial_duplication_graph", "graphscope.nx.generators.ego.ego_graph", "graphscope.nx.generators.expanders.chordal_cycle_graph", "graphscope.nx.generators.expanders.margulis_gabber_galil_graph", "graphscope.nx.generators.expanders.paley_graph", "graphscope.nx.generators.geometric.geographical_threshold_graph", "graphscope.nx.generators.geometric.random_geometric_graph", "graphscope.nx.generators.geometric.soft_random_geometric_graph", "graphscope.nx.generators.geometric.thresholded_random_geometric_graph", "graphscope.nx.generators.geometric.waxman_graph", "graphscope.nx.generators.harary_graph.hkn_harary_graph", "graphscope.nx.generators.harary_graph.hnm_harary_graph", "graphscope.nx.generators.intersection.general_random_intersection_graph", "graphscope.nx.generators.intersection.k_random_intersection_graph", "graphscope.nx.generators.intersection.uniform_random_intersection_graph", "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph", "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree", "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree", "graphscope.nx.generators.joint_degree_seq.joint_degree_graph", "graphscope.nx.generators.mycielski.mycielski_graph", "graphscope.nx.generators.mycielski.mycielskian", "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees", "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees", "graphscope.nx.generators.small.LCF_graph", "graphscope.nx.generators.small.bull_graph", "graphscope.nx.generators.small.chvatal_graph", "graphscope.nx.generators.small.cubical_graph", "graphscope.nx.generators.small.desargues_graph", "graphscope.nx.generators.small.diamond_graph", "graphscope.nx.generators.small.dodecahedral_graph", "graphscope.nx.generators.small.frucht_graph", "graphscope.nx.generators.small.heawood_graph", "graphscope.nx.generators.small.house_graph", "graphscope.nx.generators.small.house_x_graph", "graphscope.nx.generators.small.icosahedral_graph", "graphscope.nx.generators.small.krackhardt_kite_graph", "graphscope.nx.generators.small.make_small_graph", "graphscope.nx.generators.small.moebius_kantor_graph", "graphscope.nx.generators.small.octahedral_graph", "graphscope.nx.generators.small.pappus_graph", "graphscope.nx.generators.small.petersen_graph", "graphscope.nx.generators.small.sedgewick_maze_graph", "graphscope.nx.generators.small.tetrahedral_graph", "graphscope.nx.generators.small.truncated_cube_graph", "graphscope.nx.generators.small.truncated_tetrahedron_graph", "graphscope.nx.generators.small.tutte_graph", "graphscope.nx.generators.social.davis_southern_women_graph", "graphscope.nx.generators.social.florentine_families_graph", "graphscope.nx.generators.social.karate_club_graph", "graphscope.nx.generators.social.les_miserables_graph", "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge", "graphscope.nx.generators.sudoku.sudoku_graph", "graphscope.nx.generators.trees.prefix_tree", "graphscope.nx.generators.trees.random_tree", "graphscope.nx.generators.triads.triad_graph", "networkx.generators.internet_as_graphs.random_internet_as_graph", "networkx.generators.stochastic.stochastic_graph", "Graph generators", "Graph types", "NetworkX-style API", "Reading graphs", "Graph Transformation", "Operation", "Python API Reference", "Selector", "Session", "Resources Estimator", "GART: Bridging the Gap between Relational OLTP and Graph Workloads", "Getting Started", "GraphAr: Standard Graph Data File Format", "GRIN: Graph Retrieval INterface", "Groot: Persistent Graph Store", "In-memory immutable graphs on Vineyard", "Applications and algorithms", "Scaling and repartitioning", "User Guide and Examples of GAE", "User Guide and Examples of GLE", "Error Codes", "Command-line Utility <code class=\"docutils literal notranslate\"><span class=\"pre\">gs</span></code>", "How to Find logs", "Monitoring", "\u56fe\u5206\u6790\u5f15\u64ce", "\u90e8\u7f72", "\u5f00\u53d1\u8005\u6307\u5357", "\u5e38\u89c1\u95ee\u9898", "\u5feb\u901f\u4e0a\u624b", "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c", "GraphScope: \u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf", "\u5b89\u88c5", "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce", "\u56fe\u5b66\u4e60\u5f15\u64ce", "\u8f7d\u56fe", "\u5165\u95e8\u6559\u7a0b"], "terms": {"The": [0, 1, 2, 4, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 24, 27, 28, 29, 30, 31, 32, 34, 35, 38, 40, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 85, 100, 104, 105, 106, 107, 110, 118, 120, 121, 128, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 149, 150, 151, 152, 156, 157, 161, 162, 163, 166, 167, 169, 171, 172, 177, 180, 185, 186, 187, 188, 189, 190, 193, 196, 199, 202, 204, 205, 206, 208, 209, 211, 213, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 286, 287, 289, 290, 293, 294, 296, 299, 300, 301, 302, 303, 304, 308, 310], "graph": [0, 3, 4, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 22, 23, 24, 27, 28, 34, 35, 40, 47, 48, 49, 50, 51, 53, 56, 60, 62, 67, 71, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88, 89, 92, 94, 95, 97, 99, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 120, 127, 130, 131, 136, 142, 145, 146, 150, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 288, 291, 292, 293, 294, 303, 304, 310, 314, 315, 316, 318, 319, 320], "analyt": [0, 1, 5, 8, 12, 14, 15, 16, 17, 18, 23, 27, 31, 32, 34, 38, 40, 55, 56, 67, 69, 71, 72, 74, 78, 79, 82, 87, 149, 287, 292, 294, 300, 303, 304, 310], "engin": [0, 1, 2, 5, 8, 16, 17, 23, 27, 31, 32, 38, 40, 43, 44, 47, 48, 49, 50, 52, 55, 58, 62, 63, 66, 67, 68, 69, 70, 72, 76, 79, 87, 104, 105, 130, 131, 135, 143, 149, 150, 151, 287, 293, 294, 296, 300, 301, 302, 303, 313, 314], "gae": [0, 3, 10, 12, 14, 15, 31, 40, 46, 56, 57, 65, 68, 72, 73, 74, 79, 104, 105, 150, 311, 312], "graphscop": [0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 18, 24, 32, 33, 35, 36, 39, 40, 42, 44, 47, 49, 52, 53, 54, 55, 56, 57, 59, 62, 63, 64, 66, 67, 69, 73, 74, 76, 77, 79, 149, 150, 151, 152, 287, 289, 290, 291, 292, 293, 294, 295, 299, 300, 301, 302, 303, 304, 310, 311, 313, 314, 315, 318, 320, 321], "offer": [0, 2, 9, 12, 20, 32, 46, 49, 57, 58, 65, 66, 67, 71, 72, 299], "mani": [0, 4, 6, 10, 12, 14, 24, 31, 32, 34, 35, 40, 43, 48, 51, 59, 66, 68, 70, 136, 143, 190, 234, 236, 287, 299, 304], "which": [0, 2, 4, 6, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 38, 40, 43, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 78, 79, 83, 86, 99, 110, 112, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 149, 150, 151, 152, 166, 191, 193, 206, 207, 208, 216, 218, 235, 236, 237, 244, 246, 247, 265, 277, 279, 281, 285, 286, 287, 289, 290, 291, 293, 294, 296, 298, 299, 300, 301, 302, 304], "enabl": [0, 4, 6, 15, 17, 18, 23, 30, 40, 55, 58, 63, 64, 65, 66, 70, 71, 72, 73, 75, 146, 152, 287, 294, 299, 300, 303, 304, 308], "user": [0, 2, 4, 6, 9, 11, 12, 14, 15, 17, 18, 22, 23, 24, 27, 28, 30, 32, 35, 38, 40, 46, 48, 50, 53, 54, 55, 57, 61, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 135, 137, 138, 139, 140, 141, 142, 144, 147, 150, 287, 293, 294, 296, 299, 300, 303, 314, 318], "analyz": [0, 7, 19, 27, 65, 66, 68, 71, 141, 299], "data": [0, 2, 3, 4, 6, 9, 11, 12, 16, 17, 18, 19, 20, 22, 23, 24, 27, 29, 30, 32, 40, 44, 46, 48, 49, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 82, 84, 90, 91, 96, 102, 103, 108, 116, 117, 135, 137, 138, 139, 140, 141, 145, 149, 159, 165, 181, 182, 197, 214, 230, 249, 279, 287, 289, 290, 293, 294, 296, 299, 301, 302, 304, 310, 311, 313, 314, 319], "least": [0, 6, 35, 55, 152, 186, 208], "effort": [0, 32, 73, 299], "cover": [0, 6, 15, 38, 61], "wide": [0, 11, 12, 24, 51, 56, 57, 61, 65, 66, 68, 69, 70, 72, 139, 298, 304], "rang": [0, 18, 50, 53, 55, 57, 60, 61, 63, 64, 65, 66, 69, 72, 75, 77, 78, 90, 91, 102, 103, 108, 116, 117, 135, 140, 144, 192, 194, 196, 199, 202, 214, 220, 234, 235, 236, 237, 265, 287, 292, 299, 310, 313, 314, 318, 319], "applic": [0, 4, 6, 8, 10, 11, 14, 24, 32, 40, 47, 48, 54, 57, 58, 67, 68, 69, 70, 73, 75, 76, 78, 87, 139, 218, 242, 298, 308], "commun": [0, 4, 6, 8, 9, 12, 15, 16, 18, 24, 27, 57, 65, 66, 67, 68, 71, 75, 76, 79, 137, 145, 238, 279, 284, 288, 298], "detect": [0, 6, 8, 9, 57, 65, 66, 68, 69, 71, 72, 76, 206, 210, 211, 212], "etc": [0, 6, 7, 15, 28, 43, 48, 54, 58, 61, 66, 67, 70, 73, 77, 135, 138, 139, 140, 143, 154, 166, 175, 180, 181, 287, 289, 300], "ar": [0, 2, 4, 6, 8, 9, 10, 12, 14, 15, 16, 17, 20, 22, 23, 24, 27, 28, 31, 32, 33, 35, 36, 40, 43, 47, 48, 49, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 82, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 152, 161, 162, 163, 176, 177, 182, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 205, 206, 209, 210, 211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 226, 230, 232, 233, 234, 235, 236, 237, 238, 242, 244, 246, 248, 249, 252, 270, 279, 280, 281, 282, 283, 287, 290, 293, 294, 296, 298, 299, 300, 301, 303, 308, 320], "implement": [0, 1, 4, 8, 9, 12, 16, 18, 22, 24, 32, 43, 48, 53, 54, 57, 58, 61, 65, 69, 72, 75, 76, 79, 135, 137, 139, 140, 141, 143, 146, 147, 149, 150, 152, 228, 229, 233, 234, 236, 238, 239, 240, 281, 282, 290, 310], "pie": [0, 1, 3, 8, 12, 32, 55, 56, 57, 68, 79, 82, 292, 304, 314, 316], "program": [0, 3, 9, 15, 16, 17, 18, 20, 23, 24, 56, 57, 61, 65, 67, 68, 70, 72, 73, 79, 135, 140, 141, 299, 300, 304], "model": [0, 1, 3, 8, 9, 18, 43, 48, 54, 55, 56, 57, 60, 61, 62, 65, 66, 68, 69, 72, 79, 137, 139, 141, 142, 206, 210, 214, 216, 218, 220, 226, 228, 229, 234, 235, 236, 237, 238, 242, 243, 277, 284, 294, 298, 304, 314], "highli": [0, 4, 12, 32, 55, 57, 67, 68, 298], "optim": [0, 9, 12, 14, 32, 48, 55, 57, 58, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 135, 147, 299, 301, 314], "best": [0, 16, 65, 67, 69, 72, 73, 76, 287, 310], "perform": [0, 3, 4, 6, 9, 12, 14, 17, 22, 23, 24, 38, 46, 48, 53, 55, 56, 58, 65, 67, 68, 70, 71, 72, 77, 137, 141, 143, 149, 244, 249, 279, 291, 293, 296, 300, 302, 304], "can": [0, 1, 2, 4, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 43, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 63, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 79, 83, 85, 100, 111, 112, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 161, 162, 165, 169, 190, 193, 206, 207, 208, 215, 216, 218, 234, 235, 236, 237, 244, 248, 249, 256, 258, 260, 265, 268, 273, 274, 279, 281, 287, 290, 291, 293, 294, 296, 298, 299, 300, 301, 302, 304, 308, 310], "us": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 22, 23, 24, 28, 29, 30, 33, 34, 35, 36, 38, 40, 43, 44, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 84, 85, 111, 112, 121, 126, 135, 136, 137, 138, 139, 141, 143, 146, 148, 149, 150, 151, 152, 171, 172, 181, 193, 196, 200, 206, 207, 208, 214, 216, 220, 221, 223, 225, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 244, 248, 252, 265, 270, 279, 281, 284, 285, 287, 289, 290, 292, 294, 298, 299, 302, 303, 304, 308, 310, 314, 320], "them": [0, 1, 2, 6, 8, 12, 14, 15, 17, 24, 27, 29, 32, 34, 38, 40, 43, 48, 53, 55, 63, 65, 66, 68, 70, 72, 73, 74, 84, 135, 138, 147, 192, 279, 293, 299, 300, 310], "out": [0, 6, 9, 12, 27, 28, 32, 35, 44, 50, 58, 66, 67, 68, 69, 72, 76, 78, 135, 138, 139, 141, 149, 152, 209, 218, 219, 226, 227, 230, 244, 245, 281, 285, 287, 299, 300, 301, 303, 314, 318], "box": [0, 67, 280], "manner": [0, 2, 17, 18, 31, 34, 66, 68, 69], "here": [0, 4, 10, 14, 16, 17, 18, 20, 23, 27, 34, 35, 36, 38, 40, 47, 48, 49, 50, 51, 53, 54, 55, 57, 59, 60, 63, 64, 70, 73, 76, 136, 137, 141, 144, 146, 147, 149, 152, 206, 218, 233, 234, 236, 245, 265, 287, 290, 298, 299, 300, 314], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 43, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 75, 76, 77, 78, 79, 80, 83, 85, 111, 121, 123, 127, 128, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 160, 162, 164, 166, 167, 168, 169, 170, 171, 172, 181, 182, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 308, 310, 313, 314, 318, 319, 320], "full": [0, 4, 12, 16, 17, 18, 22, 32, 50, 57, 58, 61, 65, 70, 72, 76, 135, 138, 139, 141, 197, 300, 304, 310, 319], "list": [0, 16, 19, 20, 30, 32, 35, 36, 47, 50, 53, 54, 55, 57, 63, 67, 70, 74, 76, 78, 96, 97, 106, 107, 121, 136, 139, 141, 149, 152, 161, 163, 166, 173, 175, 181, 182, 185, 186, 190, 192, 193, 211, 214, 216, 218, 219, 220, 221, 222, 234, 238, 241, 244, 245, 250, 252, 265, 281, 287, 288, 290, 294, 300, 303, 308, 315, 318], "support": [0, 3, 4, 6, 9, 10, 12, 17, 18, 20, 22, 24, 28, 31, 32, 35, 40, 43, 46, 47, 48, 50, 51, 54, 55, 56, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 76, 77, 79, 85, 135, 136, 137, 139, 140, 141, 143, 144, 146, 149, 152, 287, 290, 293, 294, 296, 298, 300, 301, 303, 304, 313], "bf": [0, 15, 17, 32, 73, 76, 310], "df": [0, 32], "hit": [0, 32, 34, 76, 77, 152, 288, 293, 310], "lpa": [0, 7, 32, 66, 76, 310], "sssp": [0, 7, 8, 9, 14, 17, 18, 22, 24, 32, 39, 66, 73, 76, 77, 83, 293, 294, 302, 303, 310], "thi": [0, 2, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 43, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 76, 77, 78, 93, 108, 111, 126, 135, 136, 137, 139, 140, 141, 142, 143, 145, 147, 149, 152, 169, 183, 184, 185, 186, 187, 188, 193, 196, 198, 199, 206, 207, 208, 210, 211, 214, 215, 216, 218, 220, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 246, 248, 265, 267, 270, 275, 279, 281, 282, 284, 285, 286, 287, 289, 291, 293, 294, 295, 296, 298, 299, 300, 304, 308, 310], "find": [0, 4, 8, 9, 22, 30, 34, 35, 38, 40, 43, 46, 49, 50, 51, 53, 55, 63, 66, 68, 69, 73, 75, 83, 129, 134, 152, 157, 176, 177, 206, 294, 299, 300], "problem": [0, 2, 6, 9, 11, 14, 15, 24, 30, 35, 36, 40, 42, 43, 48, 55, 68, 70], "from": [0, 2, 3, 4, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 22, 23, 24, 27, 28, 29, 32, 34, 35, 36, 40, 43, 44, 47, 48, 49, 50, 51, 53, 54, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 83, 100, 105, 106, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 155, 166, 185, 187, 192, 194, 196, 199, 206, 209, 213, 214, 215, 216, 218, 221, 226, 227, 229, 230, 234, 235, 236, 237, 238, 239, 246, 253, 262, 274, 279, 281, 282, 286, 287, 289, 290, 293, 294, 299, 301, 310, 314, 315, 318, 320], "given": [0, 7, 9, 14, 20, 32, 43, 47, 48, 49, 53, 54, 55, 61, 66, 69, 70, 72, 76, 139, 141, 144, 147, 149, 151, 186, 193, 204, 216, 217, 218, 219, 220, 221, 222, 230, 238, 239, 240, 244, 245, 246, 247, 251, 279, 282, 283, 286, 287, 293, 294, 298, 299, 302, 303], "weight": [0, 7, 19, 20, 39, 53, 55, 61, 66, 68, 73, 76, 106, 135, 137, 138, 139, 140, 141, 144, 147, 152, 154, 155, 156, 160, 171, 172, 214, 226, 230, 234, 237, 277, 285, 286, 287, 289, 294, 319], "As": [0, 7, 12, 15, 16, 18, 20, 22, 24, 27, 40, 48, 51, 55, 60, 61, 65, 69, 135, 137, 143, 144, 145, 216, 298, 299], "result": [0, 2, 4, 6, 7, 9, 12, 14, 15, 16, 17, 18, 19, 24, 35, 43, 48, 49, 53, 55, 57, 61, 65, 66, 68, 69, 70, 75, 76, 77, 84, 90, 91, 100, 101, 108, 110, 112, 113, 116, 117, 129, 135, 138, 139, 141, 143, 144, 146, 149, 150, 152, 216, 218, 221, 240, 287, 300, 302, 310, 314], "comput": [0, 3, 4, 6, 9, 14, 15, 16, 17, 18, 19, 22, 23, 24, 30, 32, 35, 48, 49, 53, 55, 57, 58, 61, 66, 67, 68, 69, 70, 71, 72, 75, 76, 78, 139, 140, 143, 145, 152, 233, 236, 237, 241, 246, 255, 278, 279, 291, 294, 300, 301, 310], "minimum": [0, 6, 40, 49, 53, 55, 76, 206, 294], "distanc": [0, 7, 15, 17, 18, 66, 76, 152, 187, 226, 230, 234, 235, 236, 237, 238, 256, 268, 310], "ani": [0, 2, 4, 17, 19, 20, 22, 24, 27, 32, 34, 35, 36, 47, 48, 50, 51, 53, 54, 55, 65, 68, 69, 72, 74, 75, 77, 85, 92, 139, 149, 150, 151, 152, 163, 167, 182, 206, 211, 213, 216, 218, 234, 236, 238, 287, 290, 293, 299], "vertex": [0, 2, 3, 4, 6, 9, 12, 14, 15, 16, 17, 18, 19, 22, 29, 32, 39, 47, 50, 53, 54, 56, 57, 58, 61, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 82, 105, 136, 137, 138, 139, 140, 141, 144, 147, 149, 151, 152, 226, 231, 248, 249, 265, 290, 292, 296, 298, 300, 301, 304, 310, 315], "other": [0, 3, 4, 6, 8, 9, 10, 12, 14, 16, 20, 23, 24, 28, 29, 32, 34, 35, 40, 43, 48, 50, 53, 54, 55, 57, 58, 61, 63, 65, 67, 68, 69, 70, 71, 72, 76, 78, 135, 137, 139, 141, 145, 148, 149, 150, 152, 156, 187, 189, 193, 196, 206, 215, 221, 227, 236, 237, 279, 287, 289, 290, 293, 294, 298, 299, 300, 303], "vertic": [0, 6, 7, 9, 12, 14, 15, 16, 17, 18, 19, 22, 24, 39, 44, 47, 48, 50, 51, 53, 58, 61, 65, 66, 68, 69, 70, 75, 76, 77, 78, 107, 136, 137, 138, 139, 140, 141, 144, 147, 149, 210, 221, 231, 233, 248, 249, 260, 262, 273, 274, 280, 293, 294, 296, 298, 299, 300, 301, 310, 314, 315], "all_pairs_shortest_path_length": [0, 32], "refer": [0, 2, 4, 9, 10, 12, 16, 17, 23, 24, 29, 32, 35, 38, 40, 47, 49, 50, 51, 53, 54, 55, 58, 59, 61, 68, 69, 70, 72, 76, 94, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 152, 185, 186, 197, 206, 207, 208, 209, 210, 211, 212, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 286, 287, 300, 304, 318], "tendenc": [0, 20], "similar": [0, 10, 12, 20, 35, 47, 48, 50, 55, 58, 61, 65, 68, 72, 76, 135, 136, 137, 138, 141, 144, 149, 279, 287], "over": [0, 9, 12, 15, 16, 18, 22, 24, 32, 40, 43, 53, 56, 61, 65, 67, 68, 72, 73, 76, 78, 138, 152, 174, 175, 181, 233, 287, 296, 304], "dissimilar": 0, "measur": [0, 6, 20, 48, 68, 70, 76, 136, 152, 230, 231, 264], "extent": [0, 6], "same": [0, 2, 4, 6, 10, 15, 17, 20, 22, 28, 35, 44, 48, 53, 55, 58, 68, 69, 73, 136, 137, 141, 142, 145, 147, 149, 151, 152, 180, 181, 202, 210, 211, 216, 218, 244, 245, 247, 280, 281, 287, 294, 298, 299, 300, 301, 302], "properti": [0, 4, 6, 7, 9, 12, 15, 17, 20, 39, 44, 49, 66, 68, 69, 70, 75, 76, 77, 78, 94, 110, 124, 125, 126, 138, 141, 149, 150, 234, 249, 279, 284, 287, 290, 293, 294, 296, 298, 300, 301, 308, 314, 315, 318], "each": [0, 6, 9, 10, 12, 14, 15, 16, 19, 20, 24, 29, 32, 33, 34, 38, 44, 47, 48, 50, 53, 54, 55, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 125, 135, 136, 137, 138, 139, 140, 141, 145, 146, 147, 149, 152, 161, 163, 181, 182, 187, 191, 193, 198, 204, 206, 208, 209, 210, 212, 213, 215, 216, 218, 219, 221, 226, 229, 231, 234, 235, 236, 237, 238, 241, 242, 244, 246, 247, 252, 255, 267, 272, 277, 281, 283, 284, 285, 287, 293, 294, 296, 298, 299, 300, 301, 304, 308], "attribute_assort": [0, 32], "nearest": [0, 76], "neighbor": [0, 6, 9, 14, 17, 18, 39, 53, 55, 58, 61, 68, 69, 70, 76, 78, 135, 136, 138, 139, 141, 143, 144, 145, 147, 148, 152, 157, 158, 177, 229, 230, 244, 247, 280, 287, 296, 299, 310], "return": [0, 6, 9, 15, 18, 20, 39, 48, 53, 55, 61, 63, 69, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 127, 128, 129, 130, 131, 134, 135, 137, 138, 139, 140, 141, 144, 145, 146, 147, 149, 150, 151, 152, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 293, 294, 296, 299, 310, 319], "success": [0, 22, 79, 137, 221, 252], "0": [0, 9, 10, 14, 15, 16, 17, 18, 20, 22, 23, 24, 27, 28, 29, 30, 33, 40, 43, 47, 49, 51, 53, 55, 58, 60, 61, 63, 64, 66, 73, 75, 76, 77, 78, 91, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 152, 154, 155, 156, 158, 162, 163, 166, 167, 171, 181, 185, 186, 188, 189, 190, 191, 193, 196, 198, 199, 201, 202, 203, 205, 206, 209, 210, 211, 212, 214, 215, 216, 218, 219, 222, 225, 227, 234, 235, 236, 237, 238, 244, 245, 249, 252, 265, 270, 279, 281, 282, 287, 289, 290, 294, 296, 299, 300, 301, 302, 308, 310, 312, 313, 314, 315, 317, 318, 319, 320], "1": [0, 6, 7, 9, 10, 14, 15, 17, 19, 20, 22, 23, 24, 29, 30, 32, 33, 35, 43, 44, 47, 48, 49, 50, 51, 53, 55, 58, 60, 61, 63, 64, 66, 69, 70, 73, 76, 77, 135, 138, 140, 141, 142, 144, 149, 150, 151, 152, 154, 155, 156, 158, 162, 163, 166, 171, 172, 175, 180, 181, 185, 187, 188, 189, 190, 191, 193, 197, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 287, 289, 290, 294, 299, 300, 301, 302, 308, 310, 314, 315, 317, 318, 319, 320], "2": [0, 6, 9, 10, 14, 17, 18, 19, 20, 22, 23, 30, 32, 35, 44, 47, 48, 49, 51, 53, 55, 58, 60, 61, 63, 64, 66, 69, 70, 73, 76, 77, 135, 138, 139, 140, 141, 142, 144, 152, 154, 155, 156, 158, 166, 167, 171, 172, 175, 180, 181, 188, 189, 190, 193, 198, 199, 204, 206, 208, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 249, 254, 256, 258, 259, 260, 264, 265, 267, 269, 270, 272, 279, 280, 281, 282, 287, 289, 290, 294, 299, 300, 301, 302, 310, 311, 312, 314, 315, 317, 318, 319, 320], "average_degree_connect": [0, 76, 310], "source_degree_typ": 0, "target_degree_typ": 0, "paramet": [0, 2, 6, 9, 15, 16, 17, 29, 40, 44, 48, 53, 55, 61, 70, 75, 76, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 126, 129, 134, 136, 137, 139, 141, 144, 147, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 163, 165, 166, 167, 169, 170, 171, 172, 176, 177, 181, 182, 185, 187, 189, 190, 192, 193, 194, 196, 197, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 294, 299, 300], "str": [0, 20, 63, 64, 76, 77, 78, 83, 84, 90, 91, 92, 94, 100, 102, 103, 104, 105, 108, 110, 111, 112, 113, 116, 117, 129, 147, 149, 150, 165, 167, 281, 287, 289, 293, 294, 300, 315, 320], "target": [0, 6, 17, 22, 24, 49, 58, 59, 65, 66, 70, 72, 76, 78, 141, 143, 149, 152, 223, 225, 244, 247, 279, 300, 310], "base": [0, 4, 6, 9, 11, 12, 14, 18, 31, 32, 43, 48, 49, 50, 53, 55, 57, 61, 65, 66, 68, 69, 70, 73, 75, 76, 77, 98, 106, 135, 137, 139, 141, 142, 143, 149, 152, 223, 262, 277, 287, 299, 300, 304, 310, 319], "v": [0, 2, 6, 7, 9, 10, 14, 15, 18, 20, 22, 24, 39, 43, 50, 51, 54, 55, 61, 66, 69, 70, 75, 76, 77, 78, 135, 138, 139, 140, 141, 144, 147, 149, 150, 151, 152, 158, 181, 206, 209, 214, 216, 220, 226, 229, 234, 237, 244, 247, 249, 281, 287, 293, 294, 299, 300, 310, 314, 318, 319], "sum": [0, 20, 50, 68, 76, 78, 152, 206, 211, 214, 216, 217, 218, 227, 234, 237, 238, 245, 246, 285, 287, 318], "fraction": [0, 76, 152, 206], "pass": [0, 2, 6, 9, 10, 14, 15, 16, 18, 20, 24, 27, 35, 48, 53, 55, 61, 69, 70, 76, 78, 82, 141, 145, 147, 196, 234, 236, 279, 287, 291, 300, 310, 315, 320], "through": [0, 2, 4, 6, 12, 14, 15, 16, 19, 22, 24, 27, 31, 32, 35, 46, 47, 48, 51, 53, 54, 55, 58, 61, 66, 68, 69, 70, 72, 77, 79, 136, 137, 139, 140, 141, 146, 147, 149, 152, 182, 196, 213, 252, 287, 299, 300], "betweenness_centr": [0, 32, 152], "normal": [0, 6, 27, 40, 55, 76, 141, 149, 152, 209, 299], "endpoint": [0, 9, 10, 27, 28, 47, 49, 53, 54, 63, 66, 75, 141, 150, 152, 294, 296, 300, 310, 318, 320], "bool": [0, 6, 14, 15, 20, 39, 75, 76, 78, 123, 149, 152, 159, 169, 171, 172, 181, 210, 220, 226, 230, 246, 287, 289, 294, 299, 320], "whether": [0, 35, 47, 48, 53, 55, 65, 69, 75, 76, 136, 137, 141, 149, 209, 211, 214, 234, 245, 246, 287, 299, 300, 301], "should": [0, 6, 9, 16, 19, 20, 22, 23, 27, 35, 47, 48, 50, 51, 53, 55, 65, 70, 75, 76, 83, 86, 99, 110, 145, 146, 149, 151, 152, 182, 206, 234, 235, 236, 237, 287, 289, 296, 299, 300, 301, 302], "includ": [0, 3, 4, 6, 7, 9, 12, 16, 17, 20, 22, 24, 27, 33, 34, 35, 43, 46, 48, 49, 53, 54, 55, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 137, 138, 141, 143, 149, 152, 167, 206, 214, 220, 230, 279, 286, 287, 298, 299, 300, 308], "count": [0, 6, 48, 50, 51, 54, 55, 61, 66, 68, 75, 76, 139, 140, 144, 145, 148, 152, 162, 220, 287, 300, 314, 318], "an": [0, 4, 6, 7, 8, 9, 10, 12, 15, 16, 17, 18, 19, 27, 28, 30, 32, 35, 38, 40, 43, 44, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 79, 83, 86, 87, 88, 89, 90, 91, 93, 94, 96, 99, 100, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 116, 117, 118, 120, 121, 130, 131, 135, 136, 137, 139, 140, 141, 143, 144, 146, 147, 149, 151, 152, 163, 164, 169, 174, 175, 181, 182, 184, 185, 186, 188, 191, 192, 193, 194, 196, 197, 199, 201, 202, 205, 207, 208, 216, 218, 219, 220, 222, 223, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 243, 244, 245, 246, 247, 248, 252, 254, 260, 265, 269, 272, 273, 277, 279, 280, 281, 282, 284, 285, 287, 290, 291, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304], "travers": [0, 6, 15, 17, 48, 54, 58, 65, 66, 67, 68, 135, 138, 141, 143, 147, 150, 281, 287, 296, 299, 300, 301, 310, 318], "It": [0, 2, 4, 6, 9, 10, 11, 12, 15, 16, 24, 27, 28, 32, 35, 38, 40, 43, 47, 48, 50, 51, 53, 55, 57, 58, 64, 66, 67, 68, 70, 71, 72, 75, 76, 79, 127, 135, 136, 137, 141, 143, 145, 149, 150, 152, 156, 211, 215, 239, 240, 244, 247, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 268, 271, 273, 274, 279, 287, 294, 298, 299, 300, 301, 308], "start": [0, 2, 4, 6, 9, 16, 19, 20, 27, 28, 30, 31, 35, 46, 47, 53, 54, 61, 63, 69, 71, 74, 75, 77, 135, 139, 141, 150, 151, 152, 187, 212, 216, 218, 219, 222, 238, 252, 281, 289, 294, 299, 300, 304], "root": [0, 4, 27, 31, 34, 40, 67, 187, 189, 280, 281, 298], "explor": [0, 17, 43, 49, 53, 55, 65, 66, 69, 299], "present": [0, 2, 20, 27, 55, 61, 62, 63, 64, 65, 66, 68, 79, 152, 163, 206, 287, 298, 299], "prior": [0, 12, 32, 55, 57, 65], "move": [0, 4, 6, 67, 141, 244, 247, 294], "next": [0, 6, 9, 12, 14, 16, 24, 28, 29, 32, 54, 55, 58, 61, 62, 65, 70, 135, 136, 139, 141, 143, 145, 146, 147, 213, 281, 293, 296, 299, 300, 302], "level": [0, 6, 12, 36, 43, 48, 65, 66, 67, 70, 76, 143, 197, 244, 245, 284, 299, 300], "int": [0, 14, 15, 16, 17, 18, 19, 20, 23, 24, 39, 54, 63, 75, 76, 77, 78, 111, 136, 137, 138, 139, 140, 141, 144, 147, 148, 149, 151, 152, 180, 185, 187, 189, 192, 194, 196, 197, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 222, 223, 224, 225, 226, 228, 229, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 248, 249, 250, 251, 282, 287, 289, 294, 296, 300, 310, 318, 320], "origin": [0, 4, 6, 9, 12, 22, 48, 53, 54, 58, 63, 64, 70, 75, 77, 105, 135, 137, 149, 150, 206, 228, 234, 273, 281, 285, 287, 293, 294, 300, 301], "reciproc": [0, 152], "n": [0, 19, 20, 29, 36, 48, 53, 55, 57, 61, 70, 73, 76, 77, 139, 141, 144, 146, 152, 162, 166, 167, 169, 173, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 204, 205, 206, 208, 209, 210, 215, 216, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 248, 249, 252, 265, 280, 281, 282, 284, 287], "reachabl": [0, 152], "node": [0, 4, 10, 15, 18, 27, 29, 40, 43, 60, 61, 62, 65, 66, 68, 70, 72, 74, 76, 77, 78, 97, 101, 107, 110, 111, 130, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 173, 175, 177, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 299, 301, 310, 313, 314, 319], "wasserman": 0, "faust": 0, "propos": [0, 3, 6, 12, 14, 24, 32, 57, 65, 67, 68, 70, 72, 139, 145, 296, 299], "improv": [0, 6, 9, 17, 19, 23, 50, 67, 70, 71, 72, 303], "formula": 0, "more": [0, 2, 3, 4, 6, 7, 9, 12, 14, 15, 16, 17, 20, 27, 28, 31, 32, 34, 35, 36, 38, 40, 43, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 79, 135, 136, 139, 140, 141, 145, 146, 149, 152, 185, 226, 233, 234, 248, 249, 281, 287, 289, 294, 298, 299, 300, 303, 304], "than": [0, 15, 18, 23, 24, 28, 35, 40, 44, 47, 48, 53, 55, 56, 61, 65, 68, 69, 71, 72, 76, 137, 139, 141, 148, 152, 162, 196, 204, 206, 208, 213, 215, 226, 228, 237, 294, 299, 300, 303, 304], "one": [0, 2, 6, 9, 10, 12, 14, 15, 19, 20, 22, 24, 28, 29, 34, 35, 38, 40, 43, 46, 47, 48, 53, 54, 55, 58, 61, 66, 69, 70, 72, 75, 76, 78, 83, 84, 100, 126, 135, 136, 137, 138, 139, 141, 145, 149, 152, 161, 185, 186, 189, 190, 193, 202, 203, 206, 215, 216, 221, 223, 224, 225, 226, 227, 229, 244, 247, 255, 258, 262, 265, 271, 272, 273, 279, 281, 283, 287, 293, 294, 296, 298, 299, 300, 303, 314, 318], "compon": [0, 4, 6, 12, 19, 28, 31, 32, 36, 38, 40, 51, 65, 67, 68, 75, 76, 152, 220, 234, 293, 299, 300], "ratio": [0, 55, 279], "actor": [0, 55, 65, 264], "group": [0, 2, 40, 48, 66, 68, 69, 75, 143, 149, 210, 211, 212, 214, 231, 259, 277, 298, 300, 318, 320], "who": [0, 11, 28, 55, 65, 69, 142, 147, 300], "closeness_centr": [0, 32], "wf": 0, "quantifi": 0, "how": [0, 2, 4, 8, 9, 12, 14, 16, 20, 27, 29, 32, 34, 36, 40, 42, 43, 46, 47, 49, 51, 52, 53, 54, 55, 56, 62, 63, 64, 65, 66, 68, 69, 70, 72, 74, 77, 79, 87, 136, 137, 141, 143, 294, 295, 299, 301, 303, 304, 314], "its": [0, 4, 6, 7, 9, 10, 12, 14, 18, 24, 29, 30, 32, 43, 50, 53, 55, 58, 60, 61, 64, 65, 66, 68, 70, 76, 77, 78, 126, 135, 137, 141, 145, 147, 149, 152, 194, 197, 204, 206, 226, 231, 244, 247, 255, 274, 284, 294, 299, 300, 302], "being": [0, 54, 61, 69, 149, 186, 216, 296, 299, 300, 301], "cliqu": [0, 6, 55, 65, 68, 207, 208, 212, 213, 215, 229], "complet": [0, 14, 30, 32, 44, 48, 54, 55, 135, 137, 141, 162, 187, 188, 190, 192, 193, 199, 204, 213, 244, 247, 271, 287, 300], "have": [0, 2, 4, 6, 8, 9, 11, 12, 15, 19, 20, 23, 24, 27, 28, 29, 30, 34, 35, 38, 40, 43, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 61, 65, 66, 68, 69, 70, 72, 76, 77, 79, 83, 135, 136, 137, 138, 139, 141, 142, 144, 145, 147, 149, 152, 162, 166, 169, 181, 187, 192, 197, 206, 216, 217, 218, 220, 226, 229, 244, 245, 247, 263, 267, 281, 287, 293, 294, 298, 299, 300, 302, 304, 308, 314], "edg": [0, 6, 7, 9, 12, 15, 17, 18, 19, 22, 24, 29, 35, 39, 44, 47, 48, 50, 53, 54, 58, 60, 61, 63, 64, 65, 66, 68, 69, 70, 72, 75, 76, 77, 78, 88, 89, 92, 97, 106, 110, 111, 130, 135, 136, 137, 138, 139, 140, 141, 143, 144, 147, 148, 149, 150, 151, 152, 154, 155, 156, 159, 162, 163, 165, 166, 167, 169, 171, 172, 175, 176, 178, 180, 181, 182, 186, 188, 189, 190, 191, 192, 193, 196, 198, 199, 200, 203, 204, 206, 208, 211, 212, 214, 216, 217, 218, 220, 222, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 277, 281, 284, 285, 286, 287, 288, 290, 293, 294, 296, 298, 300, 301, 302, 310, 314, 315, 319], "u": [0, 6, 14, 16, 18, 20, 35, 39, 40, 50, 55, 66, 76, 141, 145, 147, 149, 152, 158, 181, 193, 206, 220, 226, 229, 234, 237, 249, 287, 299, 310, 320], "equal": [0, 10, 40, 53, 55, 60, 64, 66, 152, 204, 206, 237, 242, 280, 314], "degree_assortativity_coeffici": [0, 76, 310], "hold": [0, 10, 20, 53, 75, 76, 77, 78, 100, 104, 105, 113, 137, 149, 150, 152, 287, 293], "numer": [0, 20, 65, 67, 68, 76, 77, 152, 287, 293, 299], "valu": [0, 6, 9, 15, 18, 20, 24, 28, 34, 39, 40, 47, 48, 58, 63, 68, 70, 75, 76, 77, 78, 112, 121, 129, 134, 135, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 151, 152, 161, 181, 196, 206, 234, 235, 236, 237, 244, 246, 247, 279, 280, 281, 287, 289, 290, 293, 294, 296, 299, 300, 301, 310, 318, 319, 320], "If": [0, 2, 4, 6, 7, 8, 14, 15, 17, 20, 23, 27, 28, 29, 31, 34, 35, 40, 47, 49, 51, 53, 55, 60, 66, 72, 76, 77, 79, 129, 134, 136, 137, 141, 142, 145, 146, 148, 149, 150, 151, 152, 157, 158, 160, 167, 171, 172, 181, 182, 187, 188, 189, 190, 192, 193, 194, 196, 197, 199, 201, 202, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 279, 282, 283, 285, 287, 289, 290, 293, 294, 296, 299, 300, 301, 308], "fals": [0, 15, 17, 18, 19, 20, 44, 47, 75, 76, 78, 127, 135, 136, 137, 141, 147, 149, 151, 152, 165, 169, 171, 172, 181, 183, 184, 209, 210, 211, 214, 220, 230, 245, 287, 290, 294, 300, 310, 319], "ha": [0, 2, 4, 6, 8, 9, 10, 12, 14, 15, 17, 23, 28, 30, 32, 35, 38, 40, 43, 48, 49, 50, 51, 52, 54, 55, 58, 61, 62, 63, 65, 66, 69, 70, 71, 72, 75, 76, 77, 78, 79, 126, 135, 136, 137, 138, 139, 141, 144, 145, 146, 147, 149, 150, 152, 169, 171, 172, 175, 180, 181, 187, 202, 204, 206, 217, 221, 226, 234, 235, 236, 237, 238, 244, 247, 253, 254, 258, 259, 263, 269, 271, 274, 277, 279, 281, 285, 287, 291, 293, 294, 302, 304, 314, 315, 318], "adjac": [0, 10, 16, 20, 24, 53, 55, 70, 76, 138, 143, 152, 175, 208, 232, 250, 265, 279, 280, 287, 288, 299], "direct": [0, 9, 10, 15, 44, 47, 55, 58, 61, 64, 66, 70, 75, 76, 95, 127, 135, 137, 141, 144, 147, 149, 152, 157, 162, 168, 183, 194, 207, 208, 209, 210, 211, 214, 218, 219, 221, 230, 231, 232, 233, 244, 245, 254, 281, 285, 287, 288, 290, 298, 299, 301, 315, 319, 320], "three": [0, 6, 10, 12, 14, 18, 29, 32, 38, 55, 65, 67, 72, 73, 79, 136, 139, 140, 141, 144, 145, 146, 147, 152, 181, 186, 193, 269, 274, 283, 287, 300, 304], "separ": [0, 6, 17, 29, 34, 47, 49, 55, 65, 72, 136, 137, 234, 289, 299, 300], "defin": [0, 4, 6, 10, 12, 18, 20, 24, 27, 40, 47, 50, 53, 54, 55, 57, 60, 63, 65, 66, 67, 69, 75, 76, 79, 94, 135, 136, 139, 141, 144, 146, 147, 152, 189, 211, 213, 236, 293, 294, 298, 299, 300, 314], "name": [0, 2, 4, 6, 12, 16, 17, 20, 22, 23, 27, 28, 29, 31, 35, 36, 38, 40, 48, 49, 50, 53, 55, 65, 67, 69, 75, 76, 77, 78, 83, 121, 136, 138, 141, 143, 145, 147, 149, 150, 152, 171, 172, 186, 253, 260, 265, 277, 283, 287, 289, 290, 293, 294, 298, 299, 300, 308, 310, 311, 313, 318, 320], "both": [0, 2, 10, 12, 18, 19, 20, 32, 50, 51, 54, 58, 64, 65, 66, 67, 68, 69, 70, 76, 78, 135, 136, 137, 149, 150, 151, 166, 175, 180, 181, 186, 206, 230, 233, 238, 244, 247, 294, 296, 298, 299, 300, 302, 303, 317, 318], "degree_centr": [0, 32, 43, 76, 152, 288, 310], "centrality_typ": [0, 76], "appli": [0, 6, 9, 10, 12, 24, 27, 47, 48, 53, 56, 58, 65, 66, 68, 72, 229, 236, 252, 279, 296, 299, 300, 302, 304], "far": [0, 65, 136], "possibl": [0, 4, 6, 15, 40, 48, 58, 69, 70, 76, 137, 143, 144, 152, 220, 228, 229, 244, 245, 246, 247, 279, 283, 299], "along": [0, 6, 10, 20, 24, 30, 50, 53, 58, 78, 137, 141, 147, 281, 287, 301], "branch": [0, 55, 141, 187, 197, 318], "befor": [0, 4, 17, 22, 23, 27, 28, 29, 35, 55, 61, 63, 75, 76, 79, 135, 141, 148, 187, 189, 190, 192, 194, 197, 199, 201, 202, 205, 216, 218, 219, 221, 223, 224, 225, 231, 232, 233, 239, 240, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 282, 289, 296, 299, 300, 302], "backtrack": 0, "influenc": [0, 27, 152], "relationship": [0, 40, 48, 55, 58, 61, 65, 68, 70, 136, 137, 147, 299, 300], "high": [0, 6, 9, 43, 44, 48, 55, 66, 67, 68, 70, 71, 72, 73, 143, 221, 252, 294, 296, 300], "score": [0, 55, 70], "contribut": [0, 4, 46, 299], "low": [0, 6, 7, 31, 48, 60, 65, 66, 70, 71, 72, 279, 300], "A": [0, 6, 7, 9, 10, 24, 27, 28, 35, 43, 49, 51, 54, 55, 58, 60, 65, 67, 68, 69, 70, 73, 75, 76, 77, 78, 84, 85, 87, 88, 89, 92, 95, 97, 106, 107, 111, 112, 121, 139, 140, 141, 144, 146, 149, 150, 151, 152, 154, 155, 156, 158, 159, 161, 163, 165, 166, 167, 169, 170, 171, 172, 175, 180, 181, 182, 185, 186, 187, 189, 190, 192, 196, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 222, 226, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 249, 253, 255, 264, 275, 279, 280, 281, 282, 284, 285, 287, 289, 294, 298, 299, 300, 301, 302], "mean": [0, 2, 20, 28, 29, 34, 35, 47, 48, 50, 63, 75, 77, 82, 123, 137, 140, 141, 151, 152, 192, 209, 216, 226, 235, 236, 237, 287, 290, 293, 294, 296, 299, 300, 302], "themselv": [0, 48, 55, 58, 281], "eigenvector_centr": [0, 32, 76, 152, 288, 310], "toler": [0, 76, 152, 206], "max_round": [0, 76, 310], "doubl": [0, 9, 14, 16, 17, 18, 39, 54, 73, 78, 136, 146, 257, 281, 302, 310, 318, 320], "error": [0, 2, 34, 35, 36, 40, 46, 48, 51, 75, 76, 141, 145, 149, 152, 186, 287, 300], "check": [0, 6, 12, 17, 27, 28, 29, 32, 33, 35, 36, 40, 47, 48, 55, 61, 63, 68, 69, 76, 145, 149, 152, 245, 246, 287, 294, 299, 300, 308, 313, 314], "converg": [0, 6, 9, 14, 17, 24, 70, 73, 76, 152], "maximum": [0, 47, 53, 55, 68, 76, 138, 152, 206, 222, 237, 238, 239, 240, 245, 286], "number": [0, 8, 9, 19, 20, 24, 29, 43, 47, 49, 51, 52, 53, 55, 58, 62, 63, 66, 68, 70, 73, 75, 76, 78, 137, 138, 139, 140, 141, 144, 148, 152, 162, 167, 169, 178, 179, 180, 185, 186, 188, 190, 193, 197, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 260, 265, 270, 277, 279, 280, 282, 284, 285, 286, 287, 294, 296, 299, 300, 301, 308, 314, 318], "iter": [0, 6, 9, 14, 16, 17, 19, 20, 24, 53, 58, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 76, 78, 135, 138, 147, 151, 152, 154, 155, 156, 157, 158, 163, 174, 175, 176, 177, 181, 182, 192, 193, 194, 196, 199, 201, 202, 205, 206, 234, 235, 236, 237, 238, 244, 247, 249, 281, 287, 310, 314, 319], "import": [0, 2, 4, 7, 10, 15, 16, 17, 18, 19, 20, 22, 27, 28, 29, 34, 35, 36, 43, 46, 48, 51, 54, 55, 56, 58, 60, 61, 63, 64, 66, 68, 70, 76, 77, 127, 130, 131, 135, 136, 137, 139, 142, 144, 146, 147, 148, 149, 152, 206, 234, 235, 236, 237, 287, 294, 298, 302, 304, 308, 310, 311, 312, 314, 315, 318, 319, 320], "rate": [0, 65, 71, 76, 234, 236, 237], "two": [0, 2, 6, 9, 16, 17, 18, 19, 28, 35, 40, 43, 47, 48, 50, 54, 55, 58, 59, 66, 68, 69, 70, 72, 73, 135, 136, 137, 138, 139, 141, 143, 145, 147, 149, 152, 158, 181, 188, 189, 191, 193, 194, 198, 215, 226, 227, 234, 235, 236, 237, 238, 242, 244, 247, 248, 253, 254, 262, 280, 281, 286, 287, 298, 299, 300, 314], "hub": [0, 28, 76, 77, 152, 205, 293], "author": [0, 27, 64, 66, 76, 152, 206, 294, 314], "estim": [0, 48, 55, 68, 69, 147, 152], "within": [0, 29, 34, 50, 53, 55, 59, 65, 66, 68, 70, 141, 150, 152, 206, 209, 210, 230, 236, 237, 294, 299, 308, 314, 318], "we": [0, 2, 4, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 77, 79, 83, 85, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 190, 204, 206, 216, 218, 244, 265, 287, 290, 293, 294, 299, 300, 302, 304, 314, 320], "need": [0, 2, 4, 6, 7, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 27, 28, 29, 30, 31, 32, 34, 35, 38, 40, 43, 44, 47, 48, 54, 55, 57, 58, 59, 60, 63, 65, 66, 67, 69, 70, 72, 75, 76, 79, 135, 136, 137, 139, 141, 144, 145, 146, 148, 149, 221, 234, 239, 245, 265, 281, 287, 290, 296, 299, 300, 302, 303, 304, 310], "rel": [0, 27, 48, 49, 58, 70, 137, 141, 152, 300], "immedi": [0, 6, 48, 71, 76, 78, 141, 152, 290, 294, 300], "also": [0, 1, 2, 4, 6, 9, 10, 12, 16, 17, 19, 20, 22, 23, 27, 28, 29, 31, 32, 34, 35, 40, 43, 47, 48, 54, 55, 57, 60, 63, 65, 66, 67, 68, 70, 72, 73, 75, 76, 78, 79, 135, 136, 137, 139, 142, 143, 144, 147, 149, 150, 152, 187, 206, 231, 233, 234, 238, 257, 262, 267, 279, 281, 285, 287, 290, 293, 294, 296, 298, 299, 300, 303, 304, 310], "under": [0, 9, 10, 14, 17, 24, 36, 55, 60, 65, 67, 76, 79, 141, 143, 144, 152, 299], "consider": [0, 54, 152, 209], "katz_centr": [0, 32, 76, 152, 288, 310], "alpha": [0, 55, 76, 152, 226, 227, 238, 279], "beta": [0, 76, 152, 227, 238], "attenu": [0, 152], "factor": [0, 49, 55, 76, 152, 187, 197, 219, 221, 299], "neighborhood": [0, 6, 65, 67, 70, 76, 141, 145, 152, 230], "maxim": [0, 6, 152, 240, 286], "subgraph": [0, 6, 9, 17, 55, 57, 66, 67, 68, 76, 97, 105, 135, 141, 143, 149, 150, 152, 163, 166, 188, 199, 230, 287, 314, 318], "contain": [0, 2, 4, 6, 8, 17, 20, 23, 27, 31, 35, 36, 40, 43, 47, 48, 52, 53, 55, 58, 61, 62, 65, 66, 68, 70, 72, 73, 75, 78, 79, 135, 136, 139, 141, 144, 145, 146, 147, 149, 152, 154, 155, 156, 163, 166, 167, 182, 192, 193, 194, 196, 199, 214, 239, 240, 244, 245, 287, 290, 291, 294, 299, 300, 308, 312, 318], "found": [0, 4, 9, 16, 17, 18, 34, 40, 47, 54, 55, 58, 59, 67, 73, 127, 148, 206, 248, 249, 285, 287, 298, 299, 300, 304], "recurs": [0, 6, 141, 189], "prune": 0, "less": [0, 2, 6, 17, 27, 44, 47, 76, 141, 148, 152, 204, 215, 226, 228, 300], "kkore": [0, 32], "order": [0, 6, 32, 48, 57, 67, 69, 70, 76, 77, 136, 141, 147, 152, 154, 155, 161, 185, 186, 189, 194, 201, 214, 215, 218, 250, 251, 254, 279, 280, 287, 293, 296, 300, 318], "That": [0, 27, 76, 146, 204, 247, 290, 302], "kshell": [0, 32], "fast": [0, 9, 20, 48, 76, 145], "where": [0, 2, 6, 12, 14, 18, 24, 35, 38, 40, 50, 57, 58, 65, 66, 69, 70, 72, 76, 121, 136, 137, 139, 141, 145, 152, 162, 169, 187, 216, 220, 222, 231, 234, 235, 236, 237, 265, 287, 294, 298, 299, 300, 314, 318], "assign": [0, 7, 9, 15, 18, 20, 34, 47, 50, 59, 66, 68, 70, 75, 76, 78, 152, 206, 214, 216, 218, 220, 234, 237, 242, 287, 290, 293, 296, 299, 300, 320], "unlabel": 0, "dure": [0, 6, 9, 24, 40, 51, 53, 55, 67, 68, 70, 75, 136, 141, 206, 296, 300, 301, 302, 303], "wai": [0, 1, 4, 6, 10, 14, 20, 28, 34, 35, 40, 43, 47, 48, 54, 57, 67, 69, 70, 139, 141, 143, 145, 152, 206, 272, 279, 281, 287, 294, 298, 299, 301], "exist": [0, 2, 4, 6, 8, 9, 10, 12, 14, 15, 20, 27, 32, 35, 43, 46, 53, 54, 58, 65, 67, 68, 69, 70, 72, 76, 78, 83, 85, 129, 132, 134, 136, 139, 141, 145, 146, 149, 152, 171, 172, 176, 218, 227, 241, 285, 287, 294, 296, 298], "variant": [0, 30, 70, 73], "follow": [0, 4, 6, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 27, 28, 29, 30, 32, 33, 34, 35, 40, 47, 49, 50, 51, 53, 54, 55, 56, 58, 60, 61, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 79, 83, 135, 136, 137, 138, 139, 141, 144, 145, 147, 149, 151, 186, 206, 216, 220, 226, 229, 239, 240, 246, 249, 270, 283, 287, 294, 296, 298, 299, 300, 301, 303, 304, 308], "networkx": [0, 3, 7, 8, 12, 20, 32, 43, 57, 71, 74, 75, 76, 111, 152, 154, 155, 156, 157, 158, 159, 161, 163, 165, 166, 167, 169, 170, 171, 172, 176, 177, 181, 182, 186, 187, 189, 190, 192, 193, 194, 197, 199, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 227, 230, 231, 232, 233, 238, 239, 240, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 280, 282, 287, 289, 290, 292, 316, 321], "damp": 0, "set": [0, 2, 4, 6, 7, 9, 10, 14, 15, 16, 18, 20, 23, 27, 30, 38, 40, 43, 44, 47, 48, 49, 53, 55, 57, 60, 61, 65, 66, 67, 69, 70, 73, 74, 75, 76, 78, 127, 134, 135, 136, 137, 139, 141, 144, 147, 148, 149, 150, 151, 152, 166, 190, 206, 220, 221, 226, 230, 238, 241, 242, 243, 248, 249, 267, 282, 285, 287, 290, 294, 298, 299, 300, 301, 304, 312, 313, 317], "sampling_path": [0, 32], "source_id": [0, 14], "cutoff": 0, "fix": [0, 6, 53, 55, 58, 60, 70, 126, 279, 300, 302], "rank": [0, 6, 65, 75, 76, 77, 279, 293], "vote": [0, 76, 78], "scheme": [0, 6, 9, 47], "With": [0, 4, 12, 19, 24, 32, 34, 38, 49, 50, 53, 55, 57, 62, 63, 65, 67, 225, 298], "top": [0, 9, 12, 22, 32, 53, 54, 55, 72, 139, 261, 300, 318], "highest": [0, 55, 221], "elect": 0, "num_of_nod": [0, 76], "select": [0, 9, 15, 34, 48, 50, 58, 61, 65, 68, 70, 77, 84, 90, 91, 102, 103, 108, 116, 117, 135, 141, 149, 206, 215, 238, 250, 284, 287, 293, 294, 298, 299, 318], "influenti": 0, "extract": [0, 53, 65, 66, 67, 76, 83, 150, 294, 296, 300], "In": [1, 2, 4, 6, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 28, 31, 32, 35, 40, 43, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 61, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 152, 209, 238, 241, 244, 245, 247, 287, 290, 293, 296, 299, 300, 302, 304], "addit": [1, 4, 6, 9, 10, 12, 15, 18, 20, 24, 31, 32, 43, 48, 49, 51, 53, 54, 55, 56, 57, 58, 61, 73, 94, 112, 136, 137, 138, 139, 149, 281, 287, 300, 304], "built": [1, 3, 4, 8, 9, 12, 15, 18, 20, 22, 31, 32, 34, 38, 40, 49, 51, 55, 65, 66, 70, 71, 73, 74, 135, 149, 223, 224, 225, 296, 304], "provid": [1, 2, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 23, 28, 29, 30, 31, 32, 33, 34, 40, 43, 44, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 93, 135, 137, 141, 142, 143, 147, 152, 183, 184, 206, 234, 235, 236, 237, 284, 287, 289, 294, 296, 298, 299, 300, 301, 304, 310], "run": [1, 2, 4, 6, 8, 9, 12, 19, 20, 24, 27, 28, 29, 30, 31, 36, 40, 47, 49, 53, 56, 59, 62, 63, 65, 66, 70, 72, 74, 75, 76, 77, 112, 123, 141, 145, 146, 147, 149, 150, 239, 240, 290, 291, 294, 299, 300, 301, 302, 303, 304, 308, 310, 312, 317], "your": [1, 2, 4, 7, 8, 12, 14, 20, 23, 24, 27, 28, 29, 30, 31, 34, 36, 38, 40, 49, 51, 54, 58, 59, 60, 62, 63, 66, 72, 74, 76, 79, 137, 142, 146, 147, 196, 216, 287, 294, 296, 299, 310, 318], "own": [1, 4, 6, 8, 12, 15, 24, 32, 34, 35, 50, 56, 57, 68, 74, 79, 126, 139, 142, 147, 206, 216, 294, 299, 300, 304], "design": [1, 4, 6, 7, 12, 15, 18, 27, 43, 46, 51, 54, 55, 60, 61, 62, 63, 67, 70, 71, 72, 75, 135, 137, 143, 152, 287, 300], "extens": [1, 4, 6, 27, 34, 48, 61, 65, 136], "henc": [1, 2, 10, 31, 161, 284, 287, 300], "you": [1, 2, 4, 7, 8, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 34, 35, 38, 40, 44, 47, 49, 50, 51, 52, 53, 54, 55, 59, 60, 62, 63, 66, 71, 72, 74, 76, 79, 129, 134, 136, 137, 140, 141, 142, 145, 146, 149, 152, 165, 196, 206, 216, 218, 230, 235, 236, 237, 287, 294, 296, 299, 300, 302, 308, 310, 320], "flash": [1, 3, 8, 12, 65], "java": [1, 4, 8, 12, 14, 32, 46, 49, 57, 67, 68, 72, 76, 79, 83, 299, 310], "c": [1, 6, 8, 12, 14, 17, 18, 30, 32, 53, 55, 57, 58, 65, 67, 68, 75, 76, 77, 79, 82, 94, 108, 137, 141, 145, 147, 152, 185, 186, 196, 216, 227, 240, 241, 244, 245, 279, 281, 283, 284, 287, 299, 302, 308, 310, 312, 318], "python": [1, 7, 8, 11, 12, 14, 16, 17, 20, 22, 23, 27, 28, 29, 31, 32, 40, 43, 46, 47, 51, 55, 58, 60, 63, 65, 66, 68, 69, 71, 72, 75, 76, 82, 135, 138, 142, 145, 147, 150, 151, 287, 289, 290, 298, 299, 308, 310, 311, 313, 314, 316, 317, 318, 320], "alreadi": [2, 8, 20, 23, 24, 27, 28, 29, 34, 35, 38, 43, 49, 55, 61, 135, 285, 287, 320], "deploi": [2, 15, 40, 46, 48, 49, 51, 54, 57, 60, 65, 67, 72, 137, 294, 296, 301], "local": [2, 4, 6, 10, 14, 22, 24, 27, 29, 32, 35, 40, 46, 47, 54, 55, 62, 65, 66, 70, 75, 76, 79, 111, 136, 137, 145, 146, 147, 149, 294, 301, 317, 318], "machin": [2, 4, 6, 7, 11, 14, 20, 24, 27, 29, 31, 34, 35, 36, 40, 47, 49, 51, 54, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 76, 135, 147, 294, 299], "take": [2, 4, 6, 9, 14, 15, 18, 24, 27, 28, 29, 34, 38, 40, 48, 55, 57, 58, 66, 67, 70, 79, 96, 136, 139, 140, 141, 145, 147, 149, 152, 215, 236, 267, 285, 287, 291, 293, 299, 300, 301, 302], "advantag": [2, 48, 57, 71, 72, 303], "3": [2, 6, 9, 10, 14, 17, 19, 20, 22, 23, 27, 29, 30, 31, 32, 38, 40, 43, 47, 48, 49, 50, 51, 53, 54, 55, 58, 61, 66, 70, 73, 76, 77, 138, 139, 140, 141, 144, 149, 150, 152, 154, 155, 156, 158, 163, 167, 171, 172, 188, 190, 193, 196, 202, 206, 207, 208, 210, 211, 212, 214, 218, 221, 222, 226, 227, 231, 233, 244, 245, 247, 249, 252, 255, 260, 264, 265, 268, 271, 274, 276, 279, 280, 281, 282, 287, 289, 290, 299, 300, 302, 311, 314, 317, 318], "gie": [2, 31, 44, 46, 51, 54, 55, 57, 65, 69, 72, 73, 74, 104, 105, 311, 312, 321], "gle": [2, 31, 46, 57, 60, 61, 62, 65, 70, 72, 74, 311, 312, 319], "address": [2, 9, 14, 17, 23, 30, 40, 50, 65, 70, 300, 318], "differ": [2, 6, 9, 10, 12, 15, 17, 18, 20, 23, 27, 29, 32, 33, 34, 35, 38, 43, 48, 53, 55, 57, 58, 61, 65, 66, 67, 68, 69, 70, 72, 73, 76, 94, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 206, 210, 211, 212, 234, 237, 244, 264, 279, 287, 292, 296, 298, 299, 301, 302, 303, 304], "complex": [2, 4, 6, 12, 22, 32, 35, 43, 48, 49, 50, 51, 52, 53, 54, 57, 58, 65, 67, 68, 69, 70, 71, 72, 76, 138, 152, 216, 220, 235, 236, 237, 299], "relat": [2, 4, 23, 24, 27, 36, 40, 46, 48, 53, 58, 61, 64, 65, 66, 67, 69, 70, 75, 137, 141, 147, 243, 279, 284, 299, 300], "show": [2, 14, 19, 20, 27, 28, 36, 40, 48, 49, 55, 57, 62, 63, 66, 68, 69, 70, 138, 139, 147, 290, 294, 296, 299], "kubernet": [2, 28, 40, 43, 47, 57, 62, 66, 71, 294, 300, 311, 313, 314, 316, 320, 321], "cluster": [2, 6, 7, 10, 14, 15, 17, 18, 19, 20, 22, 23, 28, 32, 40, 43, 46, 49, 54, 55, 57, 60, 62, 65, 66, 67, 68, 69, 70, 71, 76, 137, 147, 152, 209, 288, 294, 300, 301, 308, 310, 317], "howev": [2, 6, 9, 11, 15, 20, 24, 29, 35, 40, 43, 47, 48, 51, 54, 55, 58, 65, 70, 72, 136, 137, 138, 143, 152, 216, 287, 299, 300], "scenario": [2, 4, 6, 8, 12, 38, 44, 48, 53, 55, 58, 61, 65, 69, 70, 72, 136, 137, 139], "quit": [2, 206], "common": [2, 6, 12, 15, 48, 55, 58, 61, 65, 67, 68, 69, 70, 72, 135, 136, 143, 144, 158, 279, 281, 287, 299, 308], "intend": [2, 34, 279, 293], "analysi": [2, 7, 8, 11, 48, 55, 57, 70, 71, 73, 74, 76, 240], "offlin": [2, 46, 57, 58, 67, 70, 71, 296], "everi": [2, 6, 23, 55, 61, 70, 75, 141, 152, 154, 155, 156, 171, 172, 190, 204, 267, 274, 287, 293, 299], "dai": [2, 20, 55, 287, 290], "export": [2, 4, 23, 28, 30, 40, 49, 59, 298, 313], "warehous": 2, "without": [2, 4, 6, 9, 14, 22, 27, 28, 29, 32, 35, 50, 53, 65, 67, 72, 79, 92, 136, 138, 139, 140, 141, 162, 199, 213, 220, 226, 227, 234, 235, 236, 237, 238, 287, 290, 294, 299, 302, 318], "real": [2, 6, 9, 12, 32, 43, 47, 53, 54, 57, 65, 66, 68, 70, 279, 300], "time": [2, 6, 9, 12, 14, 17, 19, 20, 23, 27, 28, 32, 35, 40, 48, 53, 54, 55, 57, 61, 66, 69, 70, 73, 76, 136, 137, 141, 152, 185, 186, 222, 223, 224, 225, 235, 236, 237, 239, 240, 249, 252, 287, 299, 300, 302, 314, 318], "queri": [2, 7, 9, 14, 19, 22, 28, 32, 40, 43, 47, 49, 51, 52, 53, 54, 56, 57, 58, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 84, 90, 91, 100, 104, 105, 108, 112, 116, 117, 121, 131, 135, 137, 139, 141, 143, 147, 149, 151, 171, 172, 292, 294, 299, 302, 304, 308, 314], "sampl": [2, 28, 29, 30, 46, 47, 57, 58, 65, 66, 72, 79, 136, 137, 138, 140, 143, 145, 148, 151, 226, 246, 279, 300, 319], "case": [2, 4, 6, 8, 10, 14, 15, 18, 27, 35, 38, 40, 43, 44, 47, 48, 50, 51, 55, 61, 69, 73, 78, 136, 137, 141, 143, 145, 148, 152, 206, 214, 220, 244, 255, 271, 293, 294, 299, 300, 304], "unnecessari": [2, 6, 9, 55, 299], "capabl": [2, 6, 11, 16, 20, 53, 65, 72, 287], "independ": [2, 6, 65, 72, 136, 150, 163, 166, 214, 241, 287], "document": [2, 10, 27, 28, 33, 34, 36, 40, 49, 53, 57, 59, 70, 76, 135, 136, 142, 295, 300], "walk": [2, 4, 31, 47, 51, 55, 65, 66, 69, 141, 188, 199], "process": [2, 3, 4, 6, 9, 11, 12, 14, 15, 16, 19, 22, 23, 24, 27, 28, 29, 31, 32, 33, 35, 43, 46, 47, 49, 51, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 75, 85, 136, 137, 139, 141, 145, 147, 216, 218, 221, 249, 255, 287, 294, 296, 298, 299, 302, 304], "standalon": [2, 23, 27, 31, 40, 46, 49, 55, 65, 301, 320], "self": [2, 47, 55, 121, 135, 138, 141, 152, 162, 175, 214, 216, 218, 220, 226, 234, 235, 236, 237, 238, 287, 288, 290, 294, 300, 315, 319, 320], "manag": [2, 4, 10, 12, 14, 16, 27, 28, 29, 40, 43, 47, 55, 57, 61, 62, 63, 65, 67, 68, 70, 71, 72, 73, 75, 294, 300, 301, 310], "k8": [2, 4, 7, 17, 22, 36, 38, 40, 43, 46, 47, 54, 57, 60, 62, 72, 74, 294, 300, 310, 311, 312, 314, 317, 320], "7": [2, 10, 20, 23, 27, 29, 30, 31, 40, 51, 55, 73, 136, 142, 147, 154, 155, 167, 190, 252, 258, 260, 264, 265, 268, 270, 282, 287, 302, 313, 317, 318], "To": [2, 6, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 27, 28, 29, 31, 32, 34, 35, 40, 43, 47, 48, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 70, 72, 73, 76, 79, 135, 136, 137, 139, 141, 142, 143, 145, 147, 152, 165, 216, 218, 223, 225, 234, 237, 277, 281, 287, 289, 293, 294, 296, 298, 299, 300, 303, 304, 308], "get": [2, 4, 6, 12, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 32, 36, 38, 40, 46, 47, 48, 49, 53, 55, 58, 61, 69, 71, 74, 76, 77, 78, 95, 129, 131, 135, 138, 139, 140, 141, 144, 149, 150, 151, 152, 185, 206, 277, 287, 293, 294, 296, 299, 300, 304, 308, 310, 313, 314], "instal": [2, 4, 15, 16, 19, 23, 33, 38, 40, 47, 49, 66, 76, 79, 145, 287, 290, 294, 311, 312, 313, 314, 317], "client": [2, 17, 22, 23, 28, 38, 39, 48, 57, 63, 75, 76, 147, 294, 296, 298, 299, 300, 301, 310, 312, 317], "prepar": [2, 4, 34, 47, 51, 58, 59, 60, 61, 63, 64, 66, 70, 74, 299, 314, 317], "continu": [2, 6, 15, 16, 20, 27, 47, 48, 55, 57, 58, 65, 66, 70, 73, 135, 206, 244, 247, 299, 300, 301], "incas": [2, 47], "doesn": [2, 28, 31, 35, 38, 47, 55, 79, 141, 149, 216, 218, 220, 287, 293, 302], "t": [2, 6, 8, 17, 23, 28, 29, 31, 34, 35, 38, 39, 40, 47, 53, 54, 55, 67, 73, 75, 76, 78, 79, 85, 135, 140, 141, 147, 149, 151, 152, 165, 181, 216, 218, 220, 240, 244, 245, 279, 281, 284, 287, 293, 300, 302, 319], "could": [2, 4, 6, 9, 15, 22, 27, 28, 30, 31, 34, 36, 38, 44, 47, 49, 53, 57, 74, 76, 130, 137, 139, 140, 149, 215, 298, 299, 300, 301], "creat": [2, 9, 10, 12, 16, 17, 19, 23, 27, 28, 29, 30, 32, 40, 47, 49, 51, 53, 55, 65, 66, 70, 75, 76, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 105, 106, 107, 111, 114, 115, 121, 127, 128, 130, 131, 139, 141, 144, 146, 149, 150, 165, 187, 189, 190, 192, 193, 194, 196, 197, 199, 201, 202, 204, 205, 206, 208, 209, 211, 214, 216, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 235, 236, 237, 239, 240, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 281, 282, 287, 289, 290, 291, 294, 300, 301, 302, 303, 308, 310, 313], "distinct": [2, 53, 65, 192, 254, 280, 299], "method": [2, 15, 16, 17, 18, 20, 22, 23, 28, 55, 61, 63, 68, 70, 75, 76, 78, 98, 111, 126, 135, 139, 143, 144, 149, 150, 152, 215, 223, 225, 234, 236, 287, 290, 292, 294, 299, 300, 304, 310], "entir": [2, 9, 32, 48, 55, 66, 70, 141, 152, 287], "discret": [2, 58, 70, 135, 206, 219, 221, 227, 231, 242], "util": [2, 4, 6, 9, 15, 31, 34, 38, 55, 57, 59, 64, 65, 66, 67, 68, 71, 75, 76, 78, 151, 252, 298, 299, 300, 303], "either": [2, 29, 32, 40, 50, 54, 55, 61, 76, 137, 141, 149, 150, 190, 193, 206, 233, 244, 277, 287, 301], "aforement": [2, 68, 70, 136, 141, 300], "per": [2, 47, 299], "prefer": [2, 27, 34, 299], "session": [2, 7, 8, 16, 17, 22, 27, 28, 40, 43, 51, 52, 54, 55, 57, 60, 62, 74, 76, 77, 94, 127, 128, 129, 130, 131, 132, 134, 149, 150, 287, 291, 292, 300, 302, 308, 310, 311, 312, 314, 315, 318, 320], "class": [2, 4, 9, 15, 17, 18, 20, 22, 23, 55, 61, 64, 66, 70, 75, 76, 77, 78, 82, 135, 136, 149, 150, 151, 152, 196, 265, 287, 291, 294, 299, 300, 301, 310, 319], "option": [2, 4, 6, 15, 27, 28, 30, 31, 38, 47, 49, 50, 53, 54, 55, 57, 59, 69, 72, 76, 77, 79, 82, 104, 105, 111, 112, 113, 123, 129, 134, 136, 139, 141, 149, 150, 152, 154, 155, 156, 171, 172, 181, 187, 189, 190, 192, 194, 196, 197, 199, 201, 202, 205, 209, 210, 211, 214, 216, 218, 219, 221, 222, 223, 224, 225, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 279, 282, 285, 287, 289, 290, 293, 294, 300, 301], "control": [2, 6, 27, 65, 67, 75, 152, 287, 299], "subset": [2, 6, 20, 50, 53, 64, 66, 193, 204, 293, 294], "upon": [2, 9, 14, 72, 149, 300, 301], "launch": [2, 8, 9, 17, 22, 28, 34, 38, 40, 43, 47, 52, 60, 62, 63, 66, 74, 127, 146, 291, 294, 300, 301, 314], "For": [2, 4, 6, 9, 10, 12, 15, 16, 17, 20, 22, 28, 33, 35, 38, 40, 43, 44, 47, 48, 50, 53, 55, 57, 58, 61, 63, 65, 66, 68, 69, 70, 76, 78, 83, 135, 136, 137, 138, 141, 143, 145, 147, 152, 164, 185, 188, 190, 193, 216, 218, 220, 221, 226, 229, 230, 234, 235, 236, 237, 238, 249, 252, 281, 287, 291, 293, 294, 300, 302, 303, 308], "exampl": [2, 7, 10, 15, 16, 18, 19, 20, 27, 30, 38, 43, 46, 47, 50, 51, 53, 55, 57, 58, 60, 61, 63, 64, 65, 66, 68, 69, 70, 76, 77, 82, 83, 127, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 152, 154, 155, 156, 158, 163, 165, 166, 171, 172, 175, 180, 181, 186, 188, 190, 192, 193, 196, 199, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 222, 223, 225, 227, 230, 234, 235, 236, 237, 238, 244, 247, 252, 277, 279, 280, 281, 282, 285, 287, 289, 290, 291, 293, 294, 298, 299, 300, 301, 302, 308, 310, 314, 319], "set_opt": [2, 7, 15, 17, 19, 28, 36, 40, 51, 60, 63, 64, 66, 294, 308, 313], "show_log": [2, 7, 15, 17, 19, 28, 36, 40, 51, 60, 63, 64, 66, 129, 134, 294, 308, 313], "true": [2, 6, 7, 9, 15, 16, 17, 18, 19, 20, 28, 29, 36, 40, 47, 51, 53, 54, 55, 60, 61, 63, 64, 66, 75, 76, 78, 79, 123, 127, 132, 135, 136, 137, 141, 144, 147, 149, 152, 159, 168, 169, 170, 171, 172, 181, 183, 184, 190, 192, 210, 214, 216, 220, 226, 230, 233, 245, 285, 287, 289, 290, 294, 300, 301, 308, 310, 313, 318, 319, 320], "sess": [2, 16, 17, 22, 27, 28, 29, 43, 44, 63, 64, 76, 77, 123, 127, 149, 150, 294, 302, 308, 310, 311, 312, 314, 315, 318, 320], "enabled_engin": [2, 129, 134, 294], "g": [2, 4, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 28, 31, 32, 34, 38, 40, 43, 44, 46, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 83, 130, 131, 135, 137, 138, 139, 140, 141, 142, 144, 145, 147, 149, 150, 152, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 186, 187, 189, 190, 192, 193, 196, 197, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 225, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 243, 244, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 284, 285, 287, 289, 290, 293, 294, 296, 298, 299, 300, 301, 303, 304, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320], "custom": [2, 3, 4, 7, 8, 22, 28, 33, 34, 48, 57, 61, 65, 68, 70, 71, 135, 136, 139, 141, 143, 144, 145, 234, 236, 237, 284, 304], "command": [2, 4, 7, 16, 23, 27, 28, 30, 31, 33, 34, 38, 40, 46, 49, 59, 60, 75, 136, 300, 301, 308], "line": [2, 4, 6, 7, 17, 34, 36, 38, 46, 48, 59, 60, 67, 72, 135, 136, 287, 289, 300, 301, 308, 319], "releas": [2, 27, 30, 31, 33, 40, 54, 63, 73, 244, 247, 293, 294, 300, 313, 317], "replac": [2, 17, 19, 22, 23, 28, 48, 49, 53, 67, 73, 138, 139, 140, 149, 287, 294], "my": [2, 18, 28, 287, 290, 294, 300], "illustr": [2, 4, 28, 55, 58, 64, 68, 70, 138, 264], "Then": [2, 9, 14, 15, 16, 17, 19, 22, 23, 27, 28, 29, 43, 47, 48, 55, 61, 63, 65, 66, 135, 141, 281, 296, 302], "connect": [2, 6, 15, 17, 19, 20, 27, 35, 38, 40, 47, 48, 55, 57, 61, 63, 65, 66, 67, 68, 70, 76, 77, 78, 136, 137, 139, 141, 144, 150, 152, 156, 173, 188, 190, 192, 194, 198, 199, 201, 202, 204, 205, 206, 208, 209, 210, 211, 213, 215, 220, 221, 226, 227, 229, 234, 236, 237, 238, 239, 240, 241, 243, 252, 262, 263, 265, 267, 269, 286, 287, 294, 301, 302, 310, 318], "servic": [2, 27, 28, 36, 54, 57, 63, 65, 68, 70, 75, 294, 300, 301], "see": [2, 4, 19, 20, 27, 28, 29, 34, 35, 36, 40, 47, 51, 54, 55, 57, 71, 76, 77, 79, 127, 130, 131, 136, 137, 139, 144, 147, 149, 185, 195, 200, 206, 209, 210, 211, 212, 214, 216, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 234, 235, 236, 237, 238, 241, 242, 243, 244, 247, 252, 279, 282, 284, 287, 289, 293, 294, 298, 299, 300, 303], "detail": [2, 4, 6, 7, 9, 12, 14, 17, 20, 27, 28, 29, 32, 36, 40, 42, 47, 51, 55, 57, 60, 61, 68, 70, 72, 75, 76, 77, 127, 129, 130, 131, 134, 136, 137, 139, 140, 143, 144, 145, 147, 244, 287, 294, 298, 300, 303, 304], "addr": [2, 28, 78, 294], "ip": [2, 28, 47, 49, 294, 300, 318], "port": [2, 23, 28, 36, 40, 47, 49, 54, 75, 294, 300, 318, 320], "mai": [2, 4, 6, 7, 8, 14, 15, 18, 20, 22, 24, 27, 28, 29, 30, 31, 34, 35, 36, 40, 43, 44, 47, 48, 50, 51, 53, 55, 58, 60, 63, 65, 66, 69, 70, 71, 72, 85, 136, 141, 143, 144, 145, 146, 149, 186, 209, 216, 218, 226, 287, 290, 293, 294, 299, 300, 302, 304], "would": [2, 4, 20, 28, 30, 34, 35, 38, 40, 49, 55, 65, 75, 76, 141, 147, 290, 293, 294, 300], "previou": [2, 9, 15, 19, 27, 28, 30, 38, 55, 66, 76, 84, 135, 139, 141, 225, 300], "wcc_result": 2, "wcc": [2, 73, 76, 310, 315], "print": [2, 7, 16, 20, 28, 29, 40, 43, 47, 51, 55, 60, 61, 63, 64, 66, 76, 77, 138, 140, 141, 144, 147, 149, 150, 152, 165, 214, 282, 287, 290, 300, 308, 315, 318, 320], "to_datafram": [2, 7, 15, 43, 66, 77, 149, 293, 310], "id": [2, 4, 7, 9, 15, 17, 18, 29, 39, 40, 43, 44, 47, 48, 49, 58, 61, 66, 69, 70, 73, 75, 76, 77, 78, 105, 111, 113, 135, 136, 137, 138, 139, 140, 141, 144, 145, 147, 148, 149, 151, 244, 245, 284, 287, 290, 293, 294, 300, 301, 308, 310, 311, 313, 314, 318, 319, 320], "r": [2, 6, 7, 15, 16, 17, 22, 30, 33, 43, 47, 66, 67, 70, 76, 77, 187, 197, 204, 210, 214, 226, 234, 243, 275, 280, 293, 294, 300, 310, 314, 315], "tip": [2, 272], "encount": [2, 35, 40, 68, 85], "fail": [2, 35, 40, 48, 53, 70, 152, 287, 300], "project": [2, 4, 7, 15, 17, 23, 35, 48, 66, 67, 69, 75, 76, 77, 110, 142, 149, 294, 300, 310, 314, 315, 318], "simpl": [2, 7, 9, 15, 16, 17, 20, 27, 29, 31, 40, 46, 48, 50, 51, 53, 55, 60, 65, 66, 69, 76, 77, 110, 135, 137, 150, 152, 216, 218, 221, 222, 244, 245, 246, 247, 249, 261, 279, 287, 293, 300, 310, 313, 314, 318], "empti": [2, 19, 28, 38, 39, 53, 55, 76, 78, 169, 193, 196, 226, 227, 265, 281, 287, 290, 300], "load": [2, 4, 7, 10, 12, 15, 16, 17, 18, 19, 20, 22, 23, 28, 40, 43, 47, 48, 49, 51, 54, 60, 66, 67, 68, 70, 73, 74, 75, 76, 83, 85, 87, 118, 135, 137, 146, 147, 149, 294, 299], "dataset": [2, 4, 7, 15, 16, 17, 18, 19, 20, 22, 23, 27, 40, 43, 51, 55, 60, 63, 64, 66, 70, 73, 76, 77, 135, 141, 147, 294, 310, 312, 314, 318, 320], "load_modern_graph": [2, 7, 29, 51, 66, 76, 150], "modern": [2, 6, 7, 47, 49, 51, 55, 57, 66, 67, 68, 296, 300, 301], "current": [2, 7, 11, 12, 16, 17, 22, 27, 28, 31, 35, 43, 47, 48, 50, 53, 54, 55, 57, 61, 63, 66, 68, 69, 71, 76, 78, 128, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 149, 279, 282, 287, 294, 299, 300, 310, 317], "e": [2, 4, 6, 9, 10, 12, 14, 17, 18, 19, 20, 22, 23, 31, 32, 39, 43, 49, 50, 55, 56, 57, 60, 61, 63, 65, 66, 67, 68, 69, 70, 72, 73, 76, 77, 85, 137, 138, 139, 140, 141, 144, 147, 149, 150, 151, 152, 188, 206, 216, 218, 220, 221, 223, 224, 225, 228, 233, 234, 241, 242, 243, 244, 247, 249, 265, 270, 276, 278, 287, 289, 290, 293, 294, 296, 298, 299, 301, 303, 304, 310, 314, 317, 318, 320], "path": [2, 4, 6, 7, 9, 17, 19, 22, 23, 24, 27, 29, 30, 47, 48, 49, 57, 58, 61, 66, 68, 69, 72, 76, 83, 136, 137, 139, 141, 146, 147, 149, 152, 155, 188, 194, 198, 199, 201, 218, 281, 287, 289, 291, 293, 294, 298, 300, 302, 310, 311, 314, 315, 318], "store": [2, 10, 12, 16, 17, 32, 40, 44, 46, 47, 53, 54, 55, 57, 65, 67, 68, 71, 72, 77, 78, 90, 91, 108, 116, 117, 137, 143, 149, 150, 206, 211, 234, 235, 236, 237, 238, 287, 289, 296, 298, 299, 301, 308, 310, 313], "pod": [2, 27, 28, 29, 36, 38, 40, 43, 47, 63, 294, 300, 308, 311, 313, 314, 320], "elimin": [2, 6, 14, 137], "extran": 2, "resourc": [2, 27, 28, 36, 40, 43, 63, 65, 72, 76, 83, 206, 239, 294, 300, 303, 313], "fewer": 2, "inconveni": 2, "requir": [2, 4, 6, 15, 17, 20, 30, 31, 33, 35, 40, 43, 44, 48, 50, 51, 53, 55, 58, 61, 63, 65, 66, 70, 72, 76, 79, 93, 135, 136, 137, 139, 140, 144, 145, 146, 147, 148, 185, 233, 234, 238, 287, 294, 299, 300, 303, 317], "equival": [2, 20, 40, 50, 53, 55, 141, 206, 243, 287], "function": [2, 4, 6, 9, 12, 14, 16, 17, 19, 20, 24, 32, 40, 51, 53, 54, 55, 58, 65, 67, 70, 72, 75, 141, 145, 152, 185, 186, 193, 196, 216, 218, 223, 234, 235, 236, 237, 238, 246, 282, 285, 286, 287, 288, 289, 292, 298, 299, 304, 310], "when": [2, 4, 6, 9, 10, 20, 23, 24, 27, 28, 30, 35, 40, 43, 44, 47, 48, 53, 54, 55, 58, 61, 63, 65, 67, 68, 70, 72, 73, 76, 77, 78, 85, 121, 127, 136, 137, 138, 139, 140, 141, 144, 145, 146, 148, 149, 151, 152, 196, 206, 226, 234, 235, 236, 237, 243, 287, 289, 290, 294, 296, 298, 299, 300, 302, 308], "close": [2, 6, 27, 28, 29, 61, 63, 65, 76, 137, 147, 150, 289, 294, 300, 314], "free": [2, 9, 35, 40, 61, 72, 227, 234, 244, 247, 249, 280, 286, 294], "delet": [2, 9, 27, 28, 29, 40, 106, 146, 294, 296, 300, 313], "handl": [3, 6, 8, 9, 11, 12, 20, 27, 32, 35, 47, 48, 51, 54, 55, 57, 65, 68, 69, 70, 77, 108, 136, 148, 151, 287, 289, 299], "variou": [3, 4, 8, 12, 14, 15, 20, 24, 29, 32, 36, 38, 48, 50, 55, 57, 58, 65, 66, 67, 68, 70, 71, 96, 149, 252, 299, 304], "algorithm": [3, 4, 7, 8, 12, 14, 20, 24, 29, 40, 43, 44, 48, 56, 58, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 137, 140, 141, 143, 149, 197, 206, 209, 210, 218, 219, 220, 221, 222, 226, 227, 228, 229, 234, 239, 240, 243, 244, 246, 247, 270, 279, 284, 287, 288, 290, 292, 293, 303], "deriv": [3, 12, 32, 66, 69, 75, 77, 149, 152, 296], "grape": [3, 4, 15, 16, 22, 23, 32, 46, 56, 65, 71, 75, 83, 296, 299, 301, 302, 303, 304, 310, 316], "system": [3, 6, 8, 9, 12, 24, 29, 30, 32, 34, 40, 43, 47, 48, 50, 51, 54, 55, 56, 57, 60, 65, 67, 68, 70, 71, 73, 136, 137, 142, 145, 284, 286, 296, 298, 299, 300, 302, 304, 310, 318], "sigmod": [3, 12, 14, 24, 32, 65, 310, 316], "2017": [3, 12, 14, 32, 65, 244, 245, 310], "further": [3, 6, 10, 14, 20, 27, 29, 32, 43, 49, 50, 53, 54, 55, 66, 67, 77, 137, 149, 150, 165, 296, 299], "enhanc": [3, 4, 9], "introduc": [3, 6, 10, 19, 20, 24, 46, 48, 53, 54, 55, 56, 58, 65, 69, 72, 135, 138, 139, 141, 143, 152, 264, 286, 299, 304], "lot": [3, 35, 43, 51, 55, 56, 304], "new": [3, 4, 6, 9, 12, 14, 17, 20, 23, 29, 32, 35, 48, 51, 55, 59, 65, 66, 67, 75, 78, 84, 85, 128, 146, 149, 150, 152, 159, 165, 206, 218, 227, 229, 249, 278, 285, 287, 294, 296, 298, 299, 300, 302, 314], "featur": [3, 6, 9, 12, 23, 31, 32, 56, 58, 60, 63, 64, 65, 66, 69, 70, 71, 72, 75, 79, 135, 136, 143, 147, 149, 287, 294, 299, 304, 314, 319], "type": [3, 4, 6, 9, 12, 15, 16, 18, 19, 20, 27, 28, 29, 32, 34, 35, 36, 43, 44, 47, 48, 49, 50, 53, 54, 55, 58, 61, 63, 64, 65, 66, 68, 69, 70, 73, 75, 76, 77, 82, 83, 85, 86, 90, 91, 94, 95, 98, 99, 102, 103, 105, 106, 107, 108, 110, 111, 113, 116, 117, 121, 127, 130, 131, 135, 137, 138, 139, 140, 141, 144, 145, 146, 147, 149, 150, 151, 152, 157, 158, 161, 163, 166, 167, 169, 171, 172, 175, 176, 177, 180, 181, 182, 185, 186, 187, 189, 190, 192, 193, 194, 196, 197, 199, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 247, 248, 249, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 279, 280, 281, 282, 283, 284, 288, 289, 291, 292, 294, 296, 298, 299, 300, 302, 311, 314, 319], "storag": [3, 9, 40, 48, 49, 50, 55, 67, 70, 72, 113, 137, 149, 298, 300, 301], "languag": [3, 12, 16, 33, 43, 48, 51, 53, 54, 55, 57, 58, 61, 65, 66, 67, 68, 69, 72, 79, 104, 150, 299, 300, 304], "pattern": [3, 6, 12, 23, 48, 49, 50, 53, 57, 61, 65, 68, 72, 76, 140, 145, 300], "better": [3, 8, 12, 20, 24, 28, 32, 47, 48, 55, 56, 70, 72, 294, 300, 304], "integr": [3, 4, 9, 12, 23, 32, 48, 56, 65, 67, 71, 72, 280, 299, 300, 302, 304], "big": [3, 6, 12, 35, 56, 67, 304, 317], "overview": [3, 23, 32, 55, 66, 296], "architectur": [3, 9, 51, 65, 70, 76], "kei": [3, 4, 20, 27, 47, 53, 54, 55, 70, 71, 76, 77, 78, 110, 111, 112, 121, 129, 138, 141, 147, 149, 152, 181, 230, 234, 235, 236, 237, 285, 287, 289, 290, 293, 299, 300, 310, 320], "concept": [3, 70, 135, 136], "centric": [3, 6, 9, 12, 14, 15, 17, 18, 32, 56, 57, 65, 67, 68, 304], "ingress": [3, 12], "increment": [3, 14, 16, 18, 20, 32, 58, 67, 75, 304], "compat": [3, 7, 12, 15, 19, 20, 23, 32, 40, 43, 57, 58, 60, 61, 63, 64, 66, 70, 71, 74, 76, 143, 293, 296, 298, 314], "tune": [3, 43, 44, 65], "guid": [4, 7, 9, 16, 27, 28, 31, 35, 38, 46, 47, 51, 53, 60, 63, 64, 66, 79, 314], "code": [4, 6, 8, 14, 15, 16, 18, 28, 30, 31, 32, 34, 46, 48, 49, 55, 59, 65, 66, 67, 72, 73, 75, 76, 78, 82, 135, 136, 137, 138, 141, 142, 147, 206, 248, 291, 299, 300, 302], "organ": [4, 53, 55, 57, 58, 70, 74, 135, 137, 139, 143, 144, 223, 225, 264], "identifi": [4, 9, 24, 50, 53, 54, 55, 65, 66, 68, 76, 126, 214, 281, 284, 287, 294, 300, 320], "simplic": [4, 9], "suggest": [4, 48, 55, 67, 206], "prebuilt": [4, 38, 49], "docker": [4, 27, 31, 34, 36, 38, 40, 49, 57, 300, 311, 314, 316, 317], "imag": [4, 28, 34, 36, 40, 49, 57, 59, 73, 138, 294], "necessari": [4, 6, 23, 27, 35, 38, 44, 49, 86, 94, 99, 136, 137, 139, 141, 149, 299, 300, 308], "depend": [4, 17, 22, 27, 29, 33, 34, 38, 40, 49, 55, 59, 60, 67, 70, 76, 141, 209, 214, 300, 310], "shm": [4, 31, 38, 49, 59, 312], "size": [4, 6, 10, 16, 17, 23, 24, 31, 38, 39, 40, 44, 49, 58, 59, 61, 70, 73, 78, 136, 138, 139, 141, 146, 148, 192, 193, 204, 206, 207, 208, 209, 211, 212, 213, 214, 215, 218, 229, 238, 242, 244, 287, 294, 299, 300, 301, 312], "4096m": [4, 31, 38, 49, 59], "registri": [4, 27, 31, 38, 49, 59, 142, 294, 300, 312], "cn": [4, 23, 27, 28, 30, 31, 38, 49, 59, 142, 294, 300, 311, 312, 320], "hongkong": [4, 27, 31, 38, 49, 59, 294, 300, 312], "aliyunc": [4, 23, 27, 28, 30, 31, 38, 49, 59, 142, 294, 300, 311, 312, 320], "com": [4, 7, 17, 19, 22, 23, 27, 28, 29, 30, 31, 33, 38, 49, 51, 59, 60, 67, 68, 73, 76, 79, 142, 145, 152, 239, 248, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 267, 272, 294, 299, 300, 310, 311, 312, 313, 320], "latest": [4, 14, 31, 35, 38, 49, 59, 60, 294, 299, 300, 312, 317], "altern": [4, 215, 234, 238, 287, 299, 300], "manual": [4, 9, 27, 40, 65, 72, 149, 300], "all": [4, 6, 9, 10, 12, 15, 16, 17, 20, 22, 23, 24, 27, 28, 29, 33, 35, 40, 47, 48, 50, 51, 53, 54, 55, 59, 61, 63, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 78, 100, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 156, 157, 159, 160, 164, 166, 181, 182, 186, 187, 190, 192, 193, 197, 206, 215, 224, 230, 244, 245, 247, 249, 273, 281, 282, 285, 287, 294, 298, 299, 300, 303, 308], "pleas": [4, 9, 12, 14, 16, 17, 23, 24, 27, 29, 32, 35, 38, 40, 49, 50, 51, 61, 63, 66, 135, 136, 137, 139, 140, 141, 142, 145, 147, 298, 300, 304, 314], "environ": [4, 11, 19, 20, 23, 24, 27, 28, 35, 40, 43, 46, 51, 57, 63, 66, 74, 76, 79, 142, 146, 152, 294, 299, 300, 301, 308, 313, 317], "after": [4, 6, 9, 14, 15, 17, 18, 20, 22, 24, 28, 31, 32, 43, 50, 53, 58, 67, 68, 70, 76, 77, 78, 87, 135, 136, 137, 138, 145, 146, 147, 152, 249, 260, 279, 287, 291, 293, 294, 296, 299, 300, 301, 308, 310], "clone": [4, 22, 28, 29, 30, 31, 34, 35, 49, 79, 142, 300, 312], "repositori": [4, 17, 28, 34, 35, 47, 79, 294, 300], "enter": [4, 48, 54], "analatical_engin": 4, "directori": [4, 22, 27, 29, 30, 31, 34, 40, 54, 57, 75, 80, 135, 146, 294, 298, 308, 311, 313, 314], "git": [4, 22, 28, 29, 30, 31, 33, 35, 49, 79, 145, 299, 312], "http": [4, 7, 19, 22, 23, 27, 28, 29, 30, 31, 33, 40, 49, 51, 54, 60, 63, 64, 66, 67, 68, 76, 79, 142, 145, 152, 206, 210, 211, 212, 226, 229, 236, 237, 239, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 271, 272, 273, 274, 279, 294, 299, 300, 310, 311, 312, 313, 314, 318, 320], "github": [4, 22, 28, 29, 30, 31, 33, 49, 67, 68, 76, 79, 142, 145, 237, 299, 300, 310, 312, 320], "alibaba": [4, 17, 22, 23, 28, 30, 31, 49, 57, 65, 67, 70, 71, 79, 142, 145, 300, 310, 312, 320], "cd": [4, 22, 28, 30, 31, 33, 49, 54, 79, 142, 145, 147, 300, 308, 310, 312, 318], "sinc": [4, 6, 23, 24, 28, 29, 48, 55, 59, 63, 65, 73, 85, 137, 141, 149, 185, 186, 216, 218, 265, 282, 289, 293, 299, 300], "inherit": [4, 6, 9, 16, 48, 67, 75, 135, 145], "libgrap": [4, 16, 30, 32, 67, 79], "lite": [4, 16, 30, 32, 67, 79], "note": [4, 14, 20, 27, 28, 48, 55, 58, 63, 64, 66, 68, 76, 77, 78, 85, 126, 128, 137, 141, 149, 152, 161, 162, 165, 169, 182, 183, 184, 185, 186, 187, 193, 194, 199, 202, 204, 206, 207, 208, 209, 211, 213, 215, 216, 218, 219, 220, 221, 222, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 264, 279, 280, 281, 282, 284, 287, 289, 290, 293, 294, 298, 300, 314, 320], "core": [4, 6, 12, 32, 40, 48, 51, 65, 66, 67, 76, 79, 147, 152, 294, 314], "structur": [4, 6, 9, 12, 15, 16, 17, 20, 24, 43, 48, 54, 55, 64, 66, 67, 68, 69, 70, 76, 136, 137, 138, 149, 197, 216, 264, 279, 281, 287, 288, 298, 299, 300, 303], "partition": [4, 39, 145], "worker": [4, 9, 14, 23, 32, 49, 61, 63, 137, 140, 147, 149, 294], "between": [4, 6, 9, 10, 12, 18, 19, 40, 46, 48, 55, 58, 68, 70, 75, 76, 136, 137, 139, 141, 147, 152, 209, 210, 211, 214, 220, 226, 227, 229, 233, 234, 235, 236, 238, 241, 243, 244, 245, 247, 252, 282, 284, 287, 299, 300], "heavili": 4, "reus": [4, 29, 58, 61, 67, 76, 147, 149, 294, 296], "want": [4, 6, 7, 18, 20, 22, 27, 28, 29, 31, 50, 51, 55, 60, 71, 79, 85, 129, 134, 145, 149, 196, 230, 287, 293, 296, 300], "fulli": [4, 58, 61, 76, 85, 229, 299], "analytci": 4, "recomman": 4, "locat": [4, 23, 27, 34, 47, 49, 55, 69, 80, 137, 138, 149, 300, 301], "analytical_engin": [4, 15, 30, 34, 79, 310], "like": [4, 14, 15, 18, 19, 20, 23, 24, 27, 34, 35, 38, 40, 43, 47, 48, 51, 55, 57, 59, 65, 66, 70, 71, 72, 74, 75, 76, 136, 141, 145, 147, 149, 206, 216, 218, 226, 287, 293, 294, 296, 299, 300, 301, 320], "therebi": [4, 50], "fledg": [4, 12, 65], "coordin": [4, 15, 27, 28, 33, 38, 51, 63, 75, 100, 149, 199, 294, 300, 308, 311, 312, 314], "while": [4, 6, 12, 19, 20, 28, 32, 43, 47, 50, 53, 54, 55, 58, 65, 68, 69, 71, 72, 136, 141, 147, 183, 184, 244, 247, 249, 281, 287, 296, 299, 300, 308], "": [4, 6, 9, 14, 15, 17, 18, 19, 20, 23, 24, 27, 28, 33, 35, 38, 40, 47, 49, 53, 54, 55, 57, 58, 61, 63, 64, 65, 66, 68, 69, 70, 73, 76, 85, 102, 103, 121, 135, 137, 139, 141, 144, 146, 148, 149, 152, 188, 199, 206, 209, 211, 214, 218, 221, 223, 224, 225, 241, 249, 250, 251, 274, 277, 279, 287, 293, 294, 296, 298, 299, 300, 301, 318, 319], "onli": [4, 6, 9, 12, 14, 15, 17, 18, 20, 22, 23, 27, 28, 29, 32, 34, 43, 47, 48, 50, 51, 53, 55, 57, 58, 60, 61, 65, 66, 67, 68, 69, 70, 72, 75, 76, 77, 78, 79, 83, 135, 136, 137, 139, 140, 141, 142, 149, 152, 171, 172, 181, 207, 208, 233, 234, 238, 246, 259, 280, 281, 287, 293, 294, 299, 300, 301, 304], "ship": 4, "6": [4, 10, 17, 18, 22, 30, 43, 51, 53, 54, 55, 73, 76, 136, 141, 147, 152, 171, 190, 219, 220, 221, 238, 252, 254, 260, 261, 264, 267, 271, 272, 280, 282, 287, 300, 302, 310, 313, 314, 318], "ldbc": [4, 32, 47, 49, 50, 51, 52, 57, 68, 72, 73, 315, 320], "graphalyt": [4, 72], "benchmark": [4, 32, 50, 55, 57, 68, 70, 72, 206], "flatten": 4, "thu": [4, 6, 12, 16, 20, 27, 32, 34, 40, 43, 55, 63, 70, 76, 140, 182, 190, 287, 299], "execut": [4, 6, 9, 12, 14, 15, 17, 23, 24, 27, 28, 38, 43, 47, 48, 49, 51, 53, 55, 57, 66, 67, 69, 70, 75, 76, 77, 104, 105, 131, 141, 145, 149, 150, 152, 247, 291, 294, 296, 300, 302, 308, 310, 314, 318], "written": [4, 12, 20, 55, 65, 67, 104, 150, 265, 296, 299, 302, 310], "giraph": [4, 7, 8, 12, 17, 23, 24, 56, 72, 304], "graphx": [4, 7, 8, 12, 17, 24, 56, 72, 304], "app": [4, 15, 16, 17, 18, 77, 78, 79, 84, 87, 112, 118, 121, 136, 149, 292, 293, 299, 310], "librari": [4, 6, 12, 15, 16, 30, 31, 48, 49, 65, 75, 76, 79, 300], "specif": [4, 6, 9, 12, 14, 15, 16, 20, 24, 32, 35, 36, 38, 40, 43, 47, 48, 50, 51, 55, 57, 64, 65, 66, 67, 68, 70, 72, 73, 75, 76, 77, 78, 139, 140, 141, 144, 147, 149, 206, 234, 238, 287, 293, 296, 298, 299], "serv": [4, 27, 40, 57, 67, 70, 137, 300], "layer": [4, 6, 48, 58, 61, 67, 70, 72, 135, 136, 139, 143, 147, 319], "cuda": [4, 73], "suit": [4, 34, 43, 49, 58, 70], "gpu": [4, 67, 142], "acceler": [4, 27, 299], "fragment": [4, 10, 12, 14, 16, 17, 18, 39, 48, 68, 70, 78, 111, 149, 150, 296, 301, 304, 310], "extend": [4, 9, 17, 23, 50, 53, 55, 72, 77, 136, 144, 145, 233, 299, 310], "loader": [4, 22, 49, 75, 85, 96, 292, 301, 315, 316], "mutabl": 4, "io": [4, 27, 38, 67, 68, 76, 146, 149, 237, 300, 303], "io_adaptor": 4, "parallel": [4, 6, 12, 14, 15, 16, 24, 32, 43, 57, 65, 69, 75, 78, 137, 216, 218, 255, 287, 290, 300, 310], "sub": [4, 12, 14, 18, 55, 57, 77, 139, 141, 299, 304], "helper": 4, "thread": [4, 6, 30, 47, 49, 58, 73, 148], "messag": [4, 6, 10, 14, 15, 16, 17, 18, 24, 32, 34, 35, 36, 40, 48, 55, 61, 70, 75, 78, 148, 299, 310], "buffer": [4, 146], "sync": [4, 78, 146, 299], "serial": [4, 53, 54, 75, 149, 299, 318], "vertex_map": [4, 127, 149], "some": [4, 6, 10, 12, 17, 20, 23, 28, 30, 32, 34, 35, 47, 48, 50, 51, 53, 54, 58, 65, 68, 70, 76, 135, 136, 137, 143, 145, 147, 148, 149, 150, 197, 206, 216, 218, 221, 240, 281, 286, 287, 299, 300, 301], "map": [4, 6, 50, 53, 54, 55, 68, 75, 136, 145, 149, 279, 300, 301, 315, 318], "intern": [4, 50, 68, 187, 310, 312], "frame": [4, 70], "wrap": [4, 75, 79], "becaus": [4, 35, 48, 54, 55, 70, 135, 138, 152, 282, 299, 300], "reli": [4, 9, 19, 142, 294, 299], "templat": [4, 9, 15, 39, 75, 299], "inadequ": 4, "usual": [4, 9, 19, 27, 36, 40, 43, 48, 53, 55, 58, 61, 62, 63, 70, 141, 145, 148, 215, 238, 281, 287, 299, 301, 302], "multipl": [4, 6, 12, 14, 17, 28, 29, 38, 47, 48, 53, 54, 57, 58, 65, 66, 67, 68, 70, 71, 72, 76, 77, 78, 136, 137, 141, 152, 249, 287, 293, 298, 299, 302, 308], "label": [4, 6, 7, 15, 20, 39, 47, 50, 54, 60, 64, 65, 66, 68, 70, 75, 76, 77, 78, 85, 135, 138, 141, 147, 149, 152, 187, 191, 198, 202, 203, 205, 215, 216, 218, 219, 220, 221, 222, 264, 265, 287, 289, 290, 293, 294, 298, 300, 301, 314, 315, 318, 319], "cannot": [4, 27, 40, 53, 55, 58, 70, 72, 75, 76, 137, 149, 206, 245, 246, 294, 300, 302, 313], "determin": [4, 35, 48, 53, 55, 58, 61, 68, 69, 75, 76, 137, 141, 232, 235, 236, 237, 294], "reason": [4, 40, 50, 53, 58, 136, 137, 267], "jit": 4, "technologi": [4, 46, 48, 71], "compil": [4, 15, 30, 31, 32, 40, 48, 49, 65, 76, 87, 299, 300, 302, 308], "associ": [4, 6, 9, 28, 53, 70, 221, 233, 279, 281, 287, 294, 299, 300], "runtim": [4, 6, 17, 23, 30, 40, 48, 65, 67, 68, 69, 75, 76, 79, 299, 312, 313], "These": [4, 9, 15, 20, 24, 47, 58, 65, 66, 68, 69, 70, 71, 141, 147, 299], "wrapper": [4, 54, 57, 69, 75, 87, 93, 149, 150, 299], "facilit": [4, 20, 49, 57, 58, 61, 70, 136, 299, 300], "task": [4, 6, 7, 14, 32, 38, 48, 51, 55, 57, 58, 60, 62, 63, 64, 65, 67, 68, 70, 136, 147, 299], "pregel": [4, 8, 12, 17, 22, 32, 57, 65, 68, 292, 304, 314, 316], "api": [4, 8, 15, 16, 18, 22, 24, 29, 32, 43, 46, 57, 65, 71, 74, 79, 85, 135, 137, 139, 140, 141, 145, 151, 287, 299, 301, 310, 321], "jar": [4, 8, 22, 23, 33, 76, 300, 310], "read": [4, 8, 20, 24, 35, 43, 51, 52, 62, 65, 67, 135, 136, 141, 146, 147, 149, 185, 186, 285, 287, 288, 292, 294, 296, 298, 300, 318], "about": [4, 7, 12, 14, 17, 32, 35, 36, 47, 49, 51, 55, 59, 60, 65, 70, 71, 75, 76, 141, 145, 146, 293, 294, 298, 303, 310], "cmake": [4, 30, 31, 34, 40, 142], "script": [4, 31, 72, 73, 104, 105, 135, 136, 147, 150, 311, 317], "configur": [4, 15, 16, 17, 23, 27, 30, 33, 35, 36, 40, 49, 53, 55, 63, 65, 75, 76, 86, 87, 93, 94, 99, 126, 146, 147, 149, 206, 216, 218, 294, 296, 301], "figur": [4, 6, 9, 12, 24, 27, 32, 48, 55, 58, 61, 66, 68, 69, 70, 137, 139, 270, 296], "abov": [4, 6, 7, 9, 14, 15, 16, 19, 22, 27, 29, 31, 43, 47, 50, 51, 55, 56, 60, 68, 69, 135, 136, 137, 141, 145, 190, 206, 226, 249, 283, 293, 300, 302, 304, 308], "well": [4, 6, 8, 9, 12, 18, 20, 27, 28, 32, 48, 54, 57, 58, 66, 68, 70, 74, 141, 149, 157, 190, 238, 287, 296, 300, 303, 304, 308], "thei": [4, 6, 20, 24, 27, 30, 43, 48, 55, 57, 63, 65, 68, 70, 72, 135, 136, 144, 149, 193, 201, 206, 234, 236, 237, 280, 281, 287, 293, 294, 296, 299, 300], "work": [4, 8, 11, 14, 18, 20, 31, 32, 34, 35, 38, 43, 47, 48, 51, 53, 57, 61, 65, 66, 67, 68, 70, 75, 77, 139, 141, 149, 286, 287, 293, 302], "partit": [4, 6, 9, 10, 12, 14, 15, 18, 24, 47, 48, 54, 61, 65, 68, 70, 76, 140, 145, 204, 209, 210, 211, 214, 245, 304], "object": [4, 15, 49, 51, 53, 54, 55, 58, 61, 65, 68, 70, 73, 75, 86, 99, 113, 127, 136, 138, 139, 140, 141, 144, 147, 150, 151, 165, 185, 186, 244, 284, 287, 289, 290, 292, 293, 298, 300, 310, 320], "messagemessag": 4, "strategi": [4, 9, 10, 12, 16, 24, 53, 54, 55, 61, 70, 73, 78, 139, 140, 141, 144, 145, 290, 303, 318], "respons": [4, 9, 12, 16, 27, 32, 34, 35, 40, 48, 65, 75, 145, 148, 294, 296], "state": [4, 6, 9, 10, 12, 24, 27, 32, 48, 57, 68, 69, 71, 73, 146, 149, 206, 209, 210, 211, 212, 214, 216, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 234, 235, 236, 237, 238, 241, 242, 243, 247, 279, 282, 284], "synchron": [4, 6, 10, 12, 14, 15, 65, 299], "explicitli": [4, 75, 137, 206, 294, 300], "implicitli": [4, 85], "main": [4, 6, 32, 35, 48, 50, 55, 72, 135, 144, 147, 152, 300, 319, 320], "logic": [4, 6, 9, 14, 16, 17, 48, 53, 55, 57, 67, 73, 138, 298, 299, 300, 308, 310], "access": [4, 6, 12, 14, 27, 28, 29, 30, 36, 40, 47, 49, 54, 55, 58, 61, 65, 67, 68, 69, 70, 136, 137, 138, 139, 140, 141, 146, 147, 149, 287, 290, 294, 296, 298, 299, 300, 301, 308, 320], "send": [4, 6, 10, 18, 24, 49, 68, 78, 299, 310], "receiv": [4, 6, 9, 14, 16, 17, 24, 35, 65, 68, 70, 78, 141, 145, 296, 310], "messagemanag": [4, 17, 310], "call": [4, 6, 12, 16, 17, 19, 24, 40, 50, 53, 54, 55, 61, 75, 78, 135, 137, 141, 144, 145, 149, 150, 182, 196, 197, 227, 238, 267, 279, 287, 290, 294, 298, 299, 300], "encourag": [4, 6, 15, 24, 35], "fork": 4, "repo": [4, 28, 49, 67, 300, 311, 312], "much": [4, 6, 19, 22, 40, 48, 51, 53, 55, 137, 141, 299], "easier": [4, 31, 34, 35, 53, 67, 68, 141, 294], "begin": [4, 15, 16, 29, 39, 43, 52, 55, 66, 77, 78, 226, 293, 299], "small": [4, 9, 11, 20, 43, 55, 68, 69, 72, 152, 207, 208, 234, 277, 288, 294, 300], "chang": [4, 9, 11, 12, 14, 20, 23, 32, 34, 55, 65, 69, 70, 72, 73, 76, 92, 126, 136, 149, 152, 165, 287, 294, 300], "revis": [4, 14, 73], "ad": [4, 6, 9, 15, 17, 19, 28, 35, 57, 58, 70, 72, 73, 83, 84, 137, 149, 154, 155, 165, 223, 224, 225, 227, 281, 287, 296, 318, 320], "gradual": 4, "avoid": [4, 50, 299], "larg": [4, 6, 7, 9, 11, 12, 14, 18, 20, 23, 27, 32, 35, 40, 43, 44, 47, 48, 51, 55, 57, 58, 61, 62, 63, 65, 71, 72, 76, 121, 136, 137, 139, 141, 143, 147, 148, 161, 185, 186, 206, 241, 299, 310], "singl": [4, 6, 7, 11, 14, 15, 20, 24, 27, 34, 38, 40, 47, 50, 53, 55, 59, 60, 62, 63, 65, 66, 68, 76, 77, 135, 149, 160, 167, 189, 193, 198, 208, 213, 230, 236, 281, 283, 287, 294, 298, 302], "commit": [4, 73, 296, 300], "cmakelist": 4, "txt": [4, 30, 33, 310], "artifact": [4, 17, 23, 28, 34, 49, 59], "grape_engin": [4, 111, 308], "togeth": [4, 9, 10, 20, 38, 48, 51, 55, 63, 65, 73, 141, 145, 188], "share": [4, 6, 30, 35, 55, 59, 65, 67, 68, 294, 299, 301, 312], "bunch": [4, 38, 72, 75], "binari": [4, 15, 27, 30, 70], "choos": [4, 6, 12, 22, 32, 38, 48, 53, 55, 57, 58, 65, 70, 135, 136, 226, 227, 265], "prefix": [4, 30, 34, 35, 40, 49, 149, 281, 299, 318], "usr": [4, 300], "look": [4, 15, 18, 20, 27, 47, 51, 55, 79, 148, 293, 296, 300, 301], "file": [4, 15, 17, 22, 23, 28, 33, 35, 40, 46, 47, 49, 75, 76, 83, 108, 135, 136, 142, 147, 149, 185, 186, 237, 287, 289, 294, 296, 300, 301, 308, 310, 320], "investig": [4, 6], "ensur": [4, 6, 9, 33, 34, 35, 48, 50, 72, 294], "correct": [4, 6, 14, 36, 48, 141, 149, 152, 299], "unit": [4, 48, 55, 69, 145, 235, 236, 237, 300], "easili": [4, 12, 20, 22, 23, 24, 27, 28, 29, 32, 40, 47, 51, 55, 57, 65, 66, 69, 70, 72, 141, 143, 299], "graphscope_hom": [4, 23, 312], "pwd": [4, 29, 147], "download": [4, 7, 17, 19, 22, 23, 27, 28, 29, 31, 33, 34, 51, 54, 59, 60, 73, 142, 147, 312], "tmp": [4, 18, 19, 40, 47, 49, 108, 113, 147, 294, 300, 308, 310, 313], "gstest": [4, 19, 22, 23, 29, 310, 312], "against": [4, 14, 35, 49, 76, 269], "compar": [4, 19, 48, 50, 53, 55, 68, 73, 75, 76, 138, 206, 293], "ground": [4, 70], "truth": [4, 70], "distribut": [6, 10, 11, 12, 14, 15, 18, 20, 22, 23, 24, 27, 31, 32, 40, 46, 47, 48, 51, 53, 54, 57, 58, 61, 62, 63, 65, 67, 68, 70, 71, 72, 76, 79, 135, 138, 140, 144, 146, 147, 151, 206, 209, 216, 218, 227, 234, 235, 236, 237, 238, 246, 300, 301], "broad": [6, 67], "spectrum": [6, 67, 152, 279], "central": [6, 15, 43, 57, 58, 66, 67, 70, 71, 76, 141, 152, 264], "match": [6, 15, 48, 49, 65, 67, 76, 186, 206, 214, 216, 218, 245, 281, 318], "mine": [6, 15, 65, 67, 68], "philosophi": [6, 24, 67], "step": [6, 9, 14, 15, 27, 28, 29, 30, 31, 34, 35, 46, 47, 48, 49, 51, 54, 57, 58, 65, 66, 67, 69, 78, 135, 136, 137, 139, 141, 144, 147, 206, 214, 226, 279, 300, 308, 320], "stronger": [6, 67], "flexibl": [6, 12, 23, 55, 57, 65, 66, 67, 294, 298], "flow": [6, 67, 68, 135, 277], "oper": [6, 9, 12, 15, 29, 30, 34, 40, 43, 44, 46, 48, 50, 51, 53, 57, 58, 61, 65, 67, 68, 69, 70, 71, 76, 78, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 106, 107, 108, 110, 111, 114, 115, 116, 117, 136, 137, 138, 139, 140, 141, 143, 144, 146, 148, 149, 169, 248, 249, 287, 290, 292, 294, 296, 299, 300], "arbitrari": [6, 53, 55, 67, 139, 214, 218, 234, 235, 236, 237, 287, 290, 300, 318], "beyond": [6, 24, 67, 71, 247], "make": [6, 9, 14, 15, 16, 23, 27, 28, 29, 30, 31, 33, 34, 35, 38, 46, 47, 48, 49, 54, 55, 57, 59, 67, 68, 70, 73, 141, 142, 145, 147, 149, 165, 217, 281, 287, 294, 299, 300, 311, 312], "divers": [6, 10, 12, 32, 46, 48, 67, 68, 136, 296], "easi": [6, 7, 12, 43, 47, 48, 51, 54, 55, 57, 60, 61, 65, 67, 71, 136, 141, 145], "write": [6, 8, 9, 12, 15, 17, 22, 24, 32, 35, 40, 43, 54, 55, 57, 65, 66, 67, 68, 74, 78, 79, 135, 141, 149, 150, 289, 290, 296, 299, 300, 304, 310, 314], "few": [6, 28, 40, 47, 67, 299], "satisfactori": [6, 67, 70], "major": [6, 12, 14, 68, 75], "recent": [6, 139, 300], "framework": [6, 9, 15, 16, 17, 18, 22, 23, 24, 40, 48, 54, 58, 61, 65, 67, 68, 69, 70, 71, 72, 76, 77, 127, 139, 141, 143, 145, 149, 150, 291, 294, 296, 298, 310, 315, 320], "focu": [6, 38, 65, 69, 72, 145], "hand": [6, 29, 48, 50, 53, 267], "point": [6, 14, 22, 35, 48, 53, 61, 68, 135, 190, 215, 244, 247, 287, 300, 301, 302], "breadth": [6, 76, 152], "first": [6, 14, 15, 16, 17, 19, 20, 24, 28, 33, 35, 40, 43, 48, 49, 51, 53, 55, 58, 62, 63, 66, 67, 69, 70, 76, 77, 135, 136, 141, 143, 145, 149, 152, 156, 186, 202, 205, 214, 227, 230, 241, 242, 243, 244, 245, 248, 281, 286, 287, 290, 293, 296, 299, 300, 301, 302], "search": [6, 35, 46, 58, 65, 68, 70, 72, 76, 152, 316], "pagerank": [6, 8, 9, 17, 22, 32, 43, 65, 68, 71, 73, 76, 77, 152, 290, 293, 310], "shortest": [6, 7, 19, 24, 48, 66, 68, 76, 152, 302], "leav": [6, 55, 149, 187, 197], "varieti": [6, 12, 32, 43, 65, 72], "suffer": [6, 43], "effici": [6, 9, 12, 16, 18, 23, 32, 40, 43, 46, 50, 55, 57, 58, 61, 65, 66, 67, 68, 69, 70, 71, 72, 79, 139, 141, 143, 220, 241, 298, 299, 301, 303], "limit": [6, 9, 22, 40, 50, 54, 58, 68, 69, 70, 72, 73, 294, 313, 318], "known": [6, 8, 9, 24, 55, 68, 76, 169, 187, 190, 239, 240, 257, 281, 302], "phase": [6, 16, 23, 24, 136, 141], "propag": [6, 7, 9, 14, 34, 65, 66, 68, 70, 76, 141, 159, 249], "short": [6, 67, 72, 73, 167, 299, 300], "isvp": 6, "until": [6, 9, 14, 17, 24, 27, 29, 53, 55, 70, 146, 206, 229, 300, 318], "updat": [6, 9, 12, 14, 15, 17, 20, 24, 27, 28, 31, 32, 57, 58, 65, 68, 70, 72, 142, 145, 287, 294, 296, 300, 310, 311], "Such": [6, 69, 72, 108, 113, 246, 255], "abstract": [6, 43, 57, 61, 64, 65, 66, 67, 135, 136, 143, 145, 146, 301], "bring": [6, 38], "product": [6, 12, 31, 40, 61, 65, 69, 72, 78, 136, 137, 141, 318], "sacrific": 6, "almost": [6, 22, 55, 222, 299], "infeas": 6, "kind": [6, 9, 12, 15, 27, 32, 40, 55, 66, 67, 72, 75, 77, 139, 141, 145, 146, 284, 293, 298, 300, 302, 303, 311, 313, 317], "At": [6, 12, 14, 15, 20, 32, 35, 48, 54, 55, 136, 146, 300, 302], "advanc": [6, 7, 15, 48, 60, 61, 233], "pose": 6, "challeng": [6, 9, 42, 65, 299], "repres": [6, 9, 12, 15, 43, 48, 50, 55, 58, 60, 61, 64, 65, 66, 67, 68, 70, 73, 75, 76, 77, 83, 112, 136, 137, 138, 139, 141, 145, 147, 149, 193, 226, 234, 235, 236, 237, 238, 246, 253, 256, 260, 268, 277, 279, 281, 282, 287, 291, 294, 299, 300], "non": [6, 9, 27, 53, 72, 75, 78, 138, 176, 177, 197, 216, 218, 221, 245, 249, 256, 274, 287, 288], "ones": [6, 9, 71, 76, 143], "distil": 6, "critic": [6, 58, 76], "context": [6, 15, 17, 18, 20, 27, 30, 50, 69, 76, 78, 82, 83, 84, 90, 91, 108, 113, 116, 117, 119, 128, 132, 145, 149, 150, 152, 277, 292, 294, 299, 310], "fall": 6, "meet": [6, 15, 18, 35, 43, 48, 51, 61, 65, 70, 139, 140, 206, 235, 236, 237, 302, 304], "therefor": [6, 12, 15, 43, 48, 50, 51, 53, 55, 58, 66, 135, 136, 141, 233, 299, 308], "fulfil": [6, 15, 18, 67], "ligra": 6, "By": [6, 17, 20, 29, 34, 40, 43, 50, 53, 54, 55, 60, 68, 70, 71, 136, 137, 152, 287, 296, 299, 308], "must": [6, 24, 27, 29, 35, 40, 47, 53, 55, 65, 75, 77, 85, 136, 137, 139, 140, 141, 149, 151, 152, 165, 204, 206, 214, 217, 227, 229, 231, 234, 236, 238, 246, 249, 285, 287, 289, 293, 299, 300], "race": 6, "schedul": [6, 23, 34, 65, 294], "do": [6, 15, 16, 18, 20, 28, 29, 30, 33, 38, 40, 44, 47, 48, 49, 50, 51, 54, 55, 75, 76, 77, 93, 111, 137, 149, 206, 218, 230, 234, 244, 247, 265, 281, 287, 290, 293, 294, 299, 304], "so": [6, 12, 35, 38, 40, 47, 48, 51, 54, 55, 58, 61, 63, 65, 67, 76, 79, 135, 141, 143, 162, 197, 202, 215, 216, 217, 220, 235, 236, 237, 248, 281, 287, 299, 300, 314], "middlewar": 6, "flashwar": 6, "hide": [6, 43], "automat": [6, 9, 12, 14, 32, 47, 48, 54, 57, 65, 68, 69, 70, 72, 77, 147, 149, 287, 300, 302, 303, 320], "adapt": [6, 22, 48, 70, 72, 73, 302, 303], "70": [6, 15, 318], "40": [6, 15, 73, 137, 138, 140, 214, 280], "commonli": [6, 53, 57, 61], "now": [6, 7, 20, 23, 27, 47, 49, 54, 55, 60, 76, 145, 218, 300, 302, 315], "succinct": [6, 54], "interfac": [6, 9, 11, 12, 17, 18, 19, 22, 23, 32, 40, 43, 46, 48, 51, 54, 55, 56, 58, 61, 65, 68, 69, 70, 71, 72, 75, 79, 137, 138, 139, 141, 142, 143, 144, 287, 294, 304], "help": [6, 9, 12, 16, 17, 31, 35, 36, 53, 55, 68, 145, 149, 299, 301, 311], "evalu": [6, 14, 15, 16, 18, 35, 57, 66, 67, 70, 73, 75, 76, 77, 87, 112, 121, 123, 127, 130, 131, 149, 150, 294, 304, 318], "demonstr": [6, 16, 47, 48, 57, 62, 64, 65, 66, 68, 70, 72, 77, 135, 147, 149, 294, 299], "up": [6, 20, 23, 35, 53, 55, 57, 59, 61, 71, 78, 145, 148, 186, 190, 214, 281, 299, 300, 317], "92": [6, 152], "bulk": [6, 15], "bsp": [6, 15], "paradigm": [6, 15, 57, 61, 65, 135, 141], "primari": [6, 15, 50, 54, 65, 72, 300], "constitut": [6, 64], "superstep": [6, 16, 17, 24, 78], "vertexsubset": [6, 15], "indic": [6, 24, 36, 47, 55, 67, 68, 69, 73, 83, 136, 138, 141, 149, 193, 196, 206, 209, 210, 211, 212, 214, 216, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231, 234, 235, 236, 237, 238, 241, 242, 243, 247, 277, 279, 282, 284, 289, 299], "maintain": [6, 10, 14, 33, 34, 50, 53, 65, 68, 69, 300], "onc": [6, 12, 15, 17, 20, 24, 27, 28, 29, 32, 34, 48, 49, 58, 76, 78, 137, 138, 141, 147, 149, 150, 152, 182, 287, 294, 300], "describ": [6, 27, 34, 35, 36, 40, 47, 49, 55, 58, 59, 65, 69, 70, 77, 136, 139, 141, 146, 147, 186, 190, 206, 207, 208, 211, 216, 218, 219, 244, 245, 258, 265, 267, 281, 283, 284, 298, 299, 300, 308, 313], "vsize": [6, 15], "size_t": [6, 39, 75, 78, 146, 296, 299], "vertexmap": [6, 15, 39], "condit": [6, 9, 14, 24, 27, 36, 48, 55, 61, 73, 206, 235, 236, 237, 245, 246, 299], "f": [6, 20, 47, 49, 60, 66, 141, 152, 239, 240, 286, 300, 308, 314], "output": [6, 14, 17, 24, 27, 28, 29, 32, 36, 43, 49, 50, 53, 55, 58, 60, 61, 64, 65, 66, 70, 73, 75, 105, 113, 121, 135, 141, 143, 147, 149, 150, 234, 236, 238, 279, 291, 293, 300, 310, 311, 314, 319], "form": [6, 20, 48, 50, 53, 55, 58, 61, 69, 70, 76, 135, 137, 138, 141, 188, 208, 238, 253, 255, 258, 261, 265, 287, 293], "special": [6, 20, 55, 65, 136, 255, 271, 281, 304], "m": [6, 7, 9, 18, 20, 23, 27, 29, 30, 31, 33, 47, 48, 51, 55, 60, 66, 76, 77, 152, 162, 193, 197, 199, 210, 216, 218, 220, 222, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 266, 275, 279, 280, 284, 287, 310], "omit": [6, 77, 160, 301, 320], "filter": [6, 15, 23, 44, 48, 54, 69, 76, 77, 279, 293, 299, 318], "semant": [6, 48, 61, 140, 299], "unchang": 6, "edgemap": [6, 15], "sourc": [6, 7, 8, 9, 14, 15, 18, 22, 23, 24, 28, 34, 35, 36, 39, 40, 47, 49, 51, 55, 58, 59, 61, 66, 68, 69, 70, 72, 75, 76, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 147, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 291, 293, 294, 296, 298, 299, 300, 302, 310, 311, 312, 318, 320], "satisfi": [6, 9, 24, 51, 55, 69, 72, 76, 79, 146, 152, 204, 234, 238, 245, 246, 304], "h": [6, 9, 15, 16, 20, 34, 38, 58, 59, 73, 83, 152, 163, 166, 187, 214, 218, 234, 279, 286, 287, 299, 311, 316], "conduct": [6, 15, 55, 73, 141], "allow": [6, 11, 12, 20, 22, 24, 27, 29, 34, 43, 44, 47, 48, 50, 53, 54, 55, 56, 57, 61, 65, 66, 68, 69, 70, 71, 72, 136, 141, 211, 216, 218, 221, 226, 229, 234, 279, 287, 296, 299, 304], "dynam": [6, 12, 32, 48, 57, 65, 67, 68, 70, 76, 86, 99, 207, 208, 290, 296, 300], "even": [6, 8, 20, 48, 55, 68, 143, 149, 152, 216, 226, 244, 246, 247, 287, 299], "virtual": [6, 9, 23, 51, 66, 75, 145, 146], "gener": [6, 9, 14, 17, 27, 32, 38, 43, 48, 54, 55, 58, 61, 65, 66, 67, 68, 70, 76, 84, 135, 136, 137, 141, 147, 149, 151, 152, 287, 288, 292, 294, 296, 298, 299, 300, 301, 302, 308], "index": [6, 12, 30, 39, 46, 54, 58, 61, 70, 75, 76, 77, 137, 138, 146, 149, 151, 152, 161, 185, 186, 216, 218, 219, 220, 222, 299, 316, 320], "pre": [6, 27, 28, 31, 40, 48, 55, 60, 64, 66, 69, 294, 313], "conveni": [6, 28, 40, 47, 55, 58, 67, 141, 285, 287], "revers": [6, 20, 55, 92, 95, 151, 152, 230, 238, 287], "exchang": [6, 14], "chosen": [6, 216, 223, 224, 225, 226, 227, 238, 242, 282], "temporari": 6, "sequenti": [6, 12, 14, 18, 32, 34, 65, 185, 186, 222, 299, 304, 310], "pull": [6, 12, 14, 27, 28, 31, 32, 36, 40, 47, 68, 142, 145, 294, 300, 312], "mode": [6, 15, 27, 31, 34, 40, 54, 62, 75, 76, 77, 127, 131, 135, 139, 145, 147, 149, 150, 289, 294, 304, 308, 320], "push": [6, 12, 32, 35, 48, 68, 145], "anoth": [6, 9, 10, 20, 34, 48, 53, 55, 65, 66, 70, 78, 216, 249, 287, 299, 302, 303], "final": [6, 9, 14, 17, 19, 24, 48, 55, 58, 63, 65, 69, 75, 135, 141, 143, 229, 249, 287, 301], "reduc": [6, 9, 14, 15, 17, 48, 61, 136, 139, 235, 236, 237, 287, 300], "commut": 6, "alwai": [6, 55, 63, 77, 183, 184, 223, 225, 244, 247, 281, 299], "default": [6, 15, 20, 23, 28, 29, 31, 34, 38, 40, 43, 47, 49, 50, 53, 55, 60, 63, 73, 75, 76, 77, 78, 94, 100, 105, 127, 128, 132, 136, 137, 141, 148, 149, 151, 152, 154, 155, 156, 159, 181, 183, 184, 187, 189, 190, 192, 194, 196, 197, 199, 201, 202, 205, 206, 209, 210, 211, 212, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 279, 280, 282, 284, 285, 287, 289, 290, 294, 296, 300, 308, 320], "ctrue": 6, "doe": [6, 11, 12, 20, 32, 35, 44, 53, 61, 67, 69, 72, 138, 141, 146, 152, 171, 172, 214, 216, 218, 233, 244, 287, 289, 294, 299], "sometim": [6, 27, 55, 197, 257], "similarli": [6, 19, 20, 55, 68, 152, 190, 216, 218, 234, 237, 244, 287, 308], "suppli": [6, 40, 54, 236], "edgeset": 6, "d": [6, 9, 15, 17, 19, 20, 47, 55, 76, 139, 141, 144, 147, 152, 162, 207, 208, 216, 218, 219, 221, 222, 223, 225, 230, 234, 235, 236, 237, 238, 241, 278, 287, 289], "auxiliari": [6, 15, 16, 55], "union": [6, 149, 215, 315], "minu": [6, 190], "intersect": [6, 69, 288], "add": [6, 15, 19, 20, 23, 28, 35, 40, 55, 66, 67, 75, 78, 84, 85, 94, 136, 147, 149, 154, 155, 156, 206, 213, 226, 244, 247, 249, 265, 287, 290, 294, 299, 300, 311, 314, 315, 320], "getv": [6, 48], "besid": [6, 10, 146, 147], "combin": [6, 14, 18, 32, 46, 48, 55, 57, 65, 66, 135, 136, 137, 141, 287, 294, 303, 310], "primit": 6, "natur": [6, 12, 24, 43, 54, 55], "multi": [6, 30, 46, 50, 55, 57, 58, 61, 65, 67, 69, 70, 71, 72, 76, 139, 141, 143, 296, 300], "tradit": [6, 48, 50, 70, 264], "awkward": 6, "supplement": 6, "perspect": [6, 24, 67], "whole": [6, 9, 12, 24, 32, 47, 48, 55, 58, 65, 67, 69, 70, 143, 300, 303], "pick": [6, 55, 73, 229, 244, 247], "transfer": [6, 43, 46, 57, 69, 71, 318], "intuit": [6, 48, 50, 57, 294], "sever": [6, 9, 15, 17, 20, 23, 29, 34, 35, 46, 48, 55, 57, 58, 61, 65, 68, 70, 71, 73, 77, 135, 141, 143, 145, 146, 152, 193, 287, 293, 294, 299, 300], "shown": [6, 7, 9, 10, 12, 15, 16, 18, 24, 27, 32, 48, 51, 55, 60, 61, 68, 70, 73, 136, 137, 138, 141, 147], "input": [6, 9, 12, 15, 17, 22, 24, 43, 58, 60, 61, 64, 65, 66, 69, 70, 76, 94, 98, 121, 135, 136, 137, 138, 139, 141, 144, 147, 150, 152, 220, 234, 236, 238, 244, 245, 279, 287, 290, 291, 294, 299, 300, 314, 319], "second": [6, 27, 43, 55, 58, 69, 72, 73, 77, 143, 232, 233, 241, 242, 243, 244, 248, 286, 287, 294, 300, 301], "fundament": [6, 9, 48, 67], "modul": [6, 8, 9, 15, 19, 20, 23, 46, 48, 53, 57, 65, 66, 67, 69, 70, 148, 286, 316], "produc": [6, 36, 38, 48, 73, 76, 84, 135, 147, 149, 150, 152, 206, 220, 222, 230, 291, 300], "abil": [6, 12, 32, 50, 55, 61, 65], "activ": [6, 9, 23, 24, 51, 63, 66, 70, 147, 294], "dens": [6, 58, 68, 70, 138, 147], "spars": [6, 58, 70, 135, 138, 214, 287, 290], "dispatch": [6, 32, 65, 75], "kernel": [6, 223], "auto": [6, 14, 16, 32, 39, 55, 78, 296, 299, 301], "switch": [6, 12, 23, 32, 54, 68, 244, 247, 299], "prove": [6, 24, 279], "world": [6, 9, 43, 53, 55, 65, 66, 68, 75, 152, 207, 208, 234], "dual": 6, "edgemapdens": 6, "edgemapspars": 6, "instead": [6, 16, 20, 23, 35, 44, 53, 55, 67, 137, 138, 139, 145, 146, 149, 213, 220, 225, 233, 234, 238, 244, 287, 293, 296, 299], "co": [6, 23, 43, 66, 136, 314], "lead": [6, 17, 24, 40, 55, 70, 216, 218], "master": [6, 19, 22, 23, 24, 30, 310], "broadcast": [6, 75, 299], "mirror": [6, 7, 10, 24, 27, 31, 51, 59, 60], "On": [6, 27, 29, 35, 48, 50, 53, 76, 221, 284, 299], "contrari": 6, "total": [6, 8, 12, 32, 43, 47, 48, 49, 55, 78, 162, 206, 229, 246, 252, 287, 294, 301, 314], "4": [6, 9, 10, 17, 19, 20, 22, 27, 30, 40, 48, 49, 50, 53, 54, 55, 66, 73, 83, 135, 137, 138, 140, 141, 142, 152, 158, 163, 165, 166, 171, 172, 190, 192, 193, 202, 210, 213, 215, 222, 231, 233, 238, 247, 254, 257, 258, 264, 265, 271, 273, 280, 281, 282, 287, 289, 290, 294, 299, 300, 301, 302, 303, 310, 313, 314, 318], "redund": 6, "programm": [6, 17, 65, 79], "scope": [6, 23, 149], "disabl": [6, 30, 49, 73, 294], "develop": [6, 8, 9, 11, 12, 14, 24, 28, 32, 35, 43, 48, 49, 54, 55, 56, 57, 58, 59, 65, 68, 69, 70, 72, 79, 139, 141, 142, 143, 145, 206, 299], "katz": [6, 76, 152], "eigenvector": [6, 76, 152, 279], "harmon": 6, "coeffici": [6, 19, 76, 152], "fluid": 6, "version": [6, 15, 17, 18, 20, 23, 27, 28, 35, 40, 51, 54, 60, 65, 67, 72, 73, 76, 142, 149, 207, 208, 223, 225, 238, 244, 265, 287, 296, 298, 299, 300, 310, 313], "color": [6, 19, 20, 55, 287], "biconnect": 6, "bridg": [6, 46, 67], "seven": [6, 147, 186], "strongli": [6, 34, 51, 55, 141, 226, 294], "cut": [6, 12, 24, 272], "k": [6, 20, 39, 49, 55, 58, 65, 66, 67, 69, 76, 77, 139, 152, 189, 197, 207, 208, 209, 210, 212, 214, 215, 216, 223, 226, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 252, 287, 293, 299, 314, 318], "decomposit": [6, 66, 152], "degeneraci": 6, "onion": 6, "minim": [6, 11, 68, 147, 238, 239, 260, 286], "domin": [6, 152, 299], "cycl": [6, 69, 72, 75, 154, 190, 191, 194, 205, 227, 231, 252, 254, 270, 274], "triangl": [6, 55, 66, 69, 76, 152, 249, 253, 257, 261, 273, 288, 310, 314], "acycl": [6, 281], "cyclic": [6, 65, 69, 194], "diamond": [6, 257], "rectangl": 6, "tail": [6, 53, 55, 67, 308], "approxim": [6, 206, 279], "densest": 6, "articlerank": 6, "hyperlink": [6, 76, 152], "induc": [6, 50, 53, 76, 97, 163, 166, 182, 230, 287], "topic": [6, 7, 51, 60, 66, 76], "person": [6, 7, 29, 47, 50, 51, 53, 55, 66, 149, 267, 276, 287, 290, 293, 299, 300, 301, 315, 320], "standard": [6, 33, 46, 48, 51, 55, 67, 150, 220, 235, 236, 237, 299], "diamet": 6, "span": [6, 20], "forest": 6, "center": [6, 55, 202, 205, 230], "four": [6, 9, 12, 20, 64, 66, 67, 75, 135, 138, 147, 234, 238, 299], "random": [6, 30, 61, 63, 65, 73, 139, 140, 141, 144, 147, 188, 199, 206, 209, 210, 211, 212, 214, 216, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 247, 279, 282, 284, 286, 294], "give": [7, 12, 30, 32, 51, 55, 60, 73, 141, 149, 214, 234, 254, 286, 287], "quick": [7, 51, 60, 300], "ll": [7, 20, 28, 60], "python3": [7, 23, 27, 29, 30, 31, 33, 40, 51, 60, 66, 310, 312, 313], "pip": [7, 27, 29, 30, 31, 40, 47, 51, 60, 66, 145, 300, 313, 317], "upgrad": [7, 23, 31, 51, 60, 317], "occur": [7, 9, 14, 31, 40, 53, 60, 300], "veri": [7, 31, 43, 44, 48, 51, 55, 57, 60, 66, 70, 137, 139, 310], "speed": [7, 31, 55, 59, 60, 67, 148, 214, 287], "try": [7, 17, 23, 31, 34, 38, 40, 43, 51, 54, 59, 60, 63, 64, 66, 74, 76, 165, 206, 290, 294, 314], "site": [7, 31, 51, 60], "aliyun": [7, 27, 31, 51, 59, 60, 73, 294, 311], "pypi": [7, 27, 31, 40, 51, 60, 313], "trust": [7, 27, 31, 51, 60], "host": [7, 15, 17, 22, 23, 27, 31, 43, 49, 51, 54, 60, 73, 75, 76, 77, 290, 294, 300, 310, 318, 320], "packag": [7, 8, 11, 17, 18, 20, 22, 23, 27, 28, 29, 34, 40, 47, 51, 60, 66, 145, 234, 236, 287, 290, 300, 312], "everyth": [7, 60, 66, 299], "job": [7, 23, 43, 48, 60, 65, 66, 71, 75, 111, 136, 300], "modern_graph": [7, 29, 47, 51, 66, 301], "gremlin": [7, 28, 40, 43, 46, 47, 48, 49, 51, 52, 58, 61, 65, 66, 67, 71, 72, 74, 100, 104, 105, 141, 150, 294, 300, 308, 313, 314, 316, 321], "apach": [7, 17, 22, 23, 30, 46, 56, 57, 65, 66, 69, 298, 300, 304, 310, 312, 316], "tinkerpop": [7, 43, 46, 47, 49, 51, 57, 66, 150, 300, 316], "org": [7, 17, 23, 40, 54, 60, 63, 64, 66, 68, 76, 152, 210, 211, 212, 226, 229, 236, 249, 253, 254, 255, 256, 258, 259, 260, 266, 267, 268, 269, 271, 272, 273, 274, 279, 300, 310, 313, 314, 318], "doc": [7, 16, 17, 29, 54, 66, 67, 75, 80, 149, 236], "tutori": [7, 8, 12, 14, 24, 47, 49, 51, 52, 57, 62, 66, 68, 70, 147, 236, 304], "trigger": [7, 14, 15, 18, 35, 61, 66, 85, 302], "ret": [7, 18, 66, 310, 315], "selector": [7, 15, 36, 66, 75, 77, 84, 90, 91, 102, 103, 108, 116, 117, 149, 292, 294, 310, 315], "homogen": [7, 58, 66, 70, 137], "pg": [7, 66, 76, 294, 299], "none": [7, 9, 20, 27, 30, 63, 66, 76, 77, 83, 90, 91, 94, 97, 102, 103, 104, 105, 106, 108, 111, 113, 116, 117, 121, 127, 130, 134, 135, 136, 141, 149, 150, 151, 152, 160, 164, 166, 167, 171, 172, 181, 182, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 279, 281, 282, 284, 287, 289, 290, 291, 294, 299, 300, 315, 319, 320], "know": [7, 8, 29, 47, 52, 53, 55, 62, 66, 69, 136, 137, 145, 149, 300, 301, 315, 318, 320], "src": [7, 15, 16, 17, 18, 29, 32, 39, 43, 50, 60, 61, 64, 66, 76, 77, 83, 135, 137, 149, 293, 296, 299, 300, 302, 310, 314, 319, 320], "our": [7, 12, 17, 31, 32, 34, 35, 38, 43, 48, 54, 59, 66, 68, 70, 72, 73, 74, 142, 143, 152, 300, 302, 310], "learn": [7, 27, 31, 34, 35, 38, 43, 48, 51, 57, 61, 62, 63, 67, 68, 71, 74, 130, 136, 139, 140, 141, 142, 145, 147, 292, 294, 314, 316], "technic": [7, 60, 143, 281, 287], "disaggreg": [7, 34], "deploy": [7, 28, 29, 40, 43, 49, 55, 65, 71, 137, 147, 294, 300], "scale": [7, 11, 12, 20, 23, 27, 32, 35, 43, 47, 49, 55, 57, 58, 65, 66, 68, 70, 71, 72, 137, 139, 141, 143, 148, 216, 227, 234, 286, 299], "usag": [7, 17, 30, 31, 34, 35, 46, 51, 53, 55, 59, 60, 61, 77, 138, 139, 140, 144, 149, 206, 287, 294, 300, 301], "section": [8, 27, 28, 52, 55, 58, 62, 65, 141, 142, 149, 186, 299, 300], "assum": [8, 23, 27, 29, 47, 52, 55, 62, 66, 136, 149, 185, 246, 285, 287, 294, 299, 314], "getting_start": [8, 52, 62], "most": [8, 9, 15, 22, 40, 44, 48, 51, 53, 55, 58, 66, 68, 70, 72, 73, 77, 135, 137, 141, 143, 145, 149, 207, 208, 232, 235, 236, 237, 300], "suffici": [8, 17, 40, 65, 136], "louvain": [8, 68, 76, 310], "social": [8, 43, 49, 55, 65, 68, 70, 73, 214, 264, 279, 288], "scientist": [8, 57, 72], "familiar": [8, 14, 16, 28, 48], "manipul": [8, 11, 19, 20, 53, 55, 57, 72, 74, 75, 287], "invok": [8, 9, 12, 14, 15, 17, 24, 32, 75, 139, 140, 144, 294, 310], "pydata": [8, 71], "eco": 8, "still": [8, 24, 27, 32, 43, 55, 68, 165, 294, 299, 300], "directli": [8, 12, 20, 24, 29, 31, 32, 34, 35, 36, 43, 50, 55, 56, 58, 61, 70, 75, 136, 139, 141, 142, 143, 144, 279, 287, 290, 294, 300, 304], "migrat": [8, 48, 60, 63, 64, 66, 67, 72, 296, 314], "transpar": [8, 65], "don": [8, 17, 23, 29, 34, 35, 40, 47, 55, 85, 181, 287, 300], "autom": [9, 28, 67], "abl": [9, 24, 27, 47, 67, 140, 244, 299, 300], "batch": [9, 12, 19, 49, 58, 61, 67, 70, 135, 138, 140, 141, 143, 145, 147, 151, 300, 319], "counterpart": [9, 57, 67], "redesign": [9, 67], "underli": [9, 43, 48, 55, 67, 143, 299], "equip": [9, 56, 57, 67, 73, 304], "polici": [9, 40, 67, 75, 294], "memori": [9, 12, 23, 24, 27, 32, 40, 43, 46, 54, 57, 59, 62, 63, 65, 67, 68, 70, 71, 72, 73, 135, 136, 137, 143, 147, 149, 287, 294, 300, 303, 312, 313], "todai": 9, "static": [9, 16, 30, 54, 75, 300, 302], "recomput": 9, "costli": 9, "consum": [9, 40, 70, 143, 146], "especi": [9, 44], "trillion": 9, "commerc": [9, 65, 68], "constantli": 9, "issu": [9, 17, 35, 40, 43, 67, 68, 72, 210, 211, 212, 276, 313], "involv": [9, 35, 38, 43, 48, 55, 58, 61, 65, 68, 69, 70, 71, 72], "adjust": [9, 12, 40], "old": [9, 12, 14, 32], "typic": [9, 24, 43, 50, 53, 55, 65, 68, 69, 72, 136, 141, 216, 287, 293, 299], "often": [9, 35, 43, 47, 65, 68, 69, 70, 72, 137, 138, 141, 287, 300, 308], "overlap": [9, 294], "intervent": 9, "burden": [9, 15, 137], "expert": 9, "light": 9, "overal": [9, 70], "verifi": [9, 27, 36, 43, 47, 49, 73, 141], "characterist": [9, 50, 61, 65, 70, 135, 140], "deduc": [9, 149, 320], "appropri": [9, 27, 38, 48, 58, 65, 70, 135], "record": [9, 47, 55, 146, 296, 300], "part": [9, 35, 43, 48, 53, 58, 61, 67, 141, 142, 145, 147, 270, 287, 299, 300], "intermedi": [9, 12, 17, 48, 55, 57, 65], "deliv": [9, 318], "There": [9, 10, 12, 32, 35, 40, 47, 48, 55, 66, 68, 69, 70, 76, 137, 140, 141, 143, 287, 293, 294, 299, 300], "reshap": [9, 147], "eas": [9, 12, 32, 70, 72, 73], "achiev": [9, 12, 20, 24, 27, 32, 55, 65, 68, 73, 296], "decid": [9, 137, 234], "round": [9, 14, 17, 24, 76, 78, 204, 214], "due": [9, 40, 65, 72, 141], "among": [9, 48, 55, 65, 72, 75, 146, 152, 281, 300], "fetch": [9, 15, 17, 100, 294, 300, 310], "suffic": 9, "replai": [9, 61, 67, 296], "affect": [9, 34, 35, 287], "area": [9, 15, 238, 284], "readili": 9, "obtain": [9, 14, 17, 28, 29, 48, 49, 54, 57, 58, 61, 64, 66, 70, 136, 140, 141, 143, 262, 265, 281, 287, 294, 300], "simpli": [9, 17, 20, 47, 55, 141, 209, 213, 287], "coincid": 9, "idea": [9, 35, 58, 70, 79, 143], "invalid": [9, 149, 294], "miss": [9, 139, 149, 197, 294], "comparison": [9, 19, 53, 55, 57, 72, 73], "those": [9, 28, 47, 49, 50, 55, 74, 139, 149, 152, 163, 192, 194, 196, 287, 289, 293], "although": [9, 12, 14, 22, 32, 43, 66, 79, 186, 299, 300], "solut": [9, 30, 40, 69, 70, 72, 152, 313], "enough": [9, 61, 136, 139, 206, 298], "caus": [9, 14, 22, 31, 35, 40, 60, 70, 137, 143, 149, 186], "overwhelm": 9, "overhead": [9, 72, 136, 137], "mf": 9, "delta": [9, 12, 76, 149], "php": 9, "mp": 9, "cc": [9, 299, 315], "sswp": 9, "mv": 9, "track": 9, "gcn": [9, 57, 61, 66, 70, 74, 135, 139, 143, 147, 314, 316, 319, 321], "commnet": 9, "me": 9, "keep": [9, 55, 61, 78, 141, 149, 244, 247, 300], "graphsag": [9, 57, 61, 70, 74, 135, 139, 141, 143, 147, 316, 319, 321], "gin": [9, 70], "vldb": [9, 310, 316], "paper": [9, 14, 24, 58, 60, 63, 64, 65, 66, 67, 73, 147, 152, 284, 294, 310, 314], "publish": [9, 14, 24, 28, 65, 66], "2021": 9, "denot": [9, 53, 55, 140, 215, 300], "w": [9, 54, 76, 152, 214, 220, 234, 237, 239, 244, 247, 249, 277, 287, 289, 300, 318], "respect": [9, 16, 46, 48, 53, 65, 66, 69, 70, 76, 94, 113, 121, 138, 141, 152, 193, 206, 253, 287, 293, 299, 300], "initi": [9, 16, 18, 19, 49, 55, 68, 70, 75, 136, 137, 147, 149, 151, 152, 226, 228, 229, 287, 290, 300, 304, 310], "init_v": 9, "init_m": 9, "aggreg": [9, 48, 70, 78, 135, 141, 143, 147, 299, 318], "vector": [9, 39, 58, 64, 66, 70, 75, 78, 135, 143, 145, 152, 234, 238], "element": [9, 53, 55, 68, 75, 136, 139, 141, 149, 152, 182, 214, 259, 281, 293, 294, 299], "specifi": [9, 16, 20, 23, 24, 29, 34, 44, 47, 50, 53, 57, 61, 66, 68, 76, 78, 83, 90, 91, 102, 103, 108, 112, 116, 117, 129, 134, 135, 136, 138, 141, 144, 149, 151, 152, 163, 171, 172, 193, 206, 216, 218, 219, 222, 223, 230, 234, 235, 236, 237, 238, 244, 247, 249, 252, 265, 284, 287, 289, 293, 294, 300, 301], "addition": [9, 12, 14, 34, 58, 64, 65, 67, 72, 143, 152, 299, 308], "correspond": [9, 10, 15, 17, 18, 38, 48, 50, 53, 55, 57, 61, 69, 72, 76, 111, 135, 136, 137, 138, 140, 141, 145, 149, 152, 185, 186, 216, 218, 219, 220, 221, 222, 234, 280, 281, 283, 287, 289, 290, 296, 300, 308], "iteratorkernel": 9, "void": [9, 14, 15, 16, 17, 24, 39, 75, 296, 299, 300, 301, 310], "m1": [9, 40, 51, 188, 313, 317], "m2": [9, 188], "below": [9, 10, 12, 20, 32, 33, 34, 35, 61, 65, 66, 68, 69, 70, 73, 136, 139, 141, 144, 147, 186, 216, 218, 252, 287, 294, 300], "ssspkernel": 9, "public": [9, 15, 16, 17, 27, 66, 73, 75, 145, 300, 310, 314], "dbl_max": 9, "backend": [9, 27, 28, 57, 60, 65, 70, 149, 287, 294, 301, 314], "seamless": [9, 43, 71, 300], "block": [9, 40, 48, 138, 214, 300], "spawn": 9, "adopt": [9, 72, 139, 300], "csc": [9, 298], "csr": [9, 39, 149, 298, 301], "sent": [9, 10, 14, 16, 24, 54], "mainten": [9, 299], "preserv": [9, 77, 149, 249, 279], "effect": [9, 34, 35, 43, 53, 61, 65, 70, 139, 218, 287, 300], "readi": [9, 29, 31, 35, 40, 43, 49, 54, 65, 137, 139, 294, 300, 308], "accept": [9, 152, 234, 238, 300, 301], "insert": [9, 14, 48, 106, 300], "newli": [9, 38], "particular": [9, 35, 53, 76, 138, 141, 216], "incid": [9, 20, 50, 53, 55, 163, 164, 206, 228, 277, 287], "encod": [9, 54, 76, 136, 141, 147, 149, 151, 289, 300, 319], "dummi": 9, "furthermor": [9, 55, 57, 65, 72], "proprieti": 9, "deduct": 9, "techniqu": [9, 32, 51, 61, 68, 141], "cancel": 9, "compens": 9, "whose": [9, 24, 55, 139, 141, 152, 157, 177, 259, 263, 279, 281, 282, 298, 299], "proce": [9, 206, 300], "inner": [10, 16, 39, 55, 78, 149, 299], "outer": [10, 14, 39, 78, 202, 299], "cross": [10, 50, 79, 262], "f_": 10, "instanc": [10, 15, 23, 27, 28, 29, 40, 47, 50, 55, 63, 65, 68, 69, 73, 75, 76, 77, 83, 85, 87, 100, 104, 105, 112, 130, 138, 149, 187, 189, 190, 192, 194, 196, 197, 199, 201, 202, 205, 216, 218, 219, 221, 223, 224, 225, 227, 231, 232, 233, 239, 240, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 282, 289, 294, 299, 300, 308], "5": [10, 19, 20, 30, 40, 49, 53, 55, 60, 61, 63, 64, 66, 69, 73, 135, 138, 140, 141, 142, 144, 147, 152, 158, 163, 165, 171, 190, 193, 206, 210, 211, 212, 214, 215, 223, 225, 232, 233, 234, 235, 237, 238, 252, 253, 255, 256, 257, 258, 260, 261, 264, 266, 268, 270, 271, 277, 282, 287, 293, 294, 300, 302, 308, 313, 314, 318], "9": [10, 30, 47, 51, 55, 66, 136, 152, 190, 192, 238, 256, 264, 277, 282, 317], "12": [10, 20, 31, 40, 51, 55, 73, 76, 136, 137, 138, 140, 142, 154, 155, 156, 192, 254, 255, 259, 263, 267, 273, 311, 313, 318], "split": [10, 53, 55, 63, 64, 136, 137, 294, 300], "roughli": 10, "across": [10, 14, 32, 33, 34, 54, 65, 68, 72, 299, 301], "divid": [10, 55, 58, 65, 76, 136, 139, 143, 144, 152, 298], "place": [10, 18, 19, 34, 47, 55, 145, 146, 149, 214, 234, 235, 236, 237, 238, 267, 285], "itself": [10, 20, 22, 35, 53, 55, 58, 65, 78, 135, 137, 293, 294, 299], "replic": [10, 49, 228], "resid": [10, 14], "j": [10, 30, 39, 76, 147, 152, 185, 186, 207, 208, 216, 218, 219, 221, 227, 238, 241, 242, 243, 265, 299], "outcom": 10, "outgo": [10, 16, 24, 53, 55, 69, 78, 141, 152, 287, 299], "incom": [10, 14, 16, 32, 53, 55, 75, 78, 152], "consid": [10, 15, 18, 27, 35, 55, 61, 68, 76, 77, 136, 137, 152, 216, 279, 296, 299], "vice": [10, 234], "versa": [10, 234], "compani": [10, 299], "syncstateonoutervertexastarget": 10, "certain": [10, 24, 43, 44, 72, 136, 137, 141, 144, 299, 300], "regardless": [10, 67, 136, 232, 299], "friendli": [11, 12, 35, 46, 57, 68, 70, 71, 72], "research": [11, 61, 70, 277, 294], "particularli": [11, 70, 279], "field": [11, 27, 29, 36, 47, 61, 63, 64, 66, 139, 143, 147, 149, 233, 294, 300, 311, 314], "scienc": [11, 241, 264], "solv": [11, 24, 35, 40, 42, 55, 68], "recast": [12, 14, 32], "ga": 12, "plug": [12, 32, 65], "minor": [12, 14, 32, 57, 65, 70, 73, 302], "cope": [12, 32], "life": [12, 31, 32, 47, 65], "extrem": [12, 27, 65, 143, 188, 199, 299], "fashion": [12, 20], "consist": [12, 20, 24, 29, 32, 33, 34, 48, 50, 53, 54, 55, 57, 58, 61, 68, 70, 72, 73, 75, 76, 78, 138, 139, 141, 143, 189, 190, 191, 202, 205, 213, 259, 281, 296, 298, 299, 300, 301], "format": [12, 20, 22, 32, 33, 43, 46, 55, 58, 70, 71, 73, 76, 104, 105, 112, 135, 138, 141, 143, 146, 147, 149, 150, 287, 289, 294, 296, 312], "unifi": [12, 32, 43, 46, 48, 136, 296], "care": [12, 32, 55, 145, 146, 299], "foreign": [12, 299], "ecosystem": [12, 46, 56, 57, 69, 72, 304], "freedom": 12, "accord": [12, 19, 34, 40, 44, 47, 48, 53, 55, 58, 65, 69, 70, 75, 139, 141, 145, 206, 214, 226, 227, 296, 300], "demand": [12, 48, 68, 299, 300, 304], "sdk": [12, 18, 40, 47, 54, 56, 57, 68, 72, 79, 292, 300, 304, 310], "domain": [12, 65, 70, 234, 235, 236, 237, 238], "dedic": 12, "treat": [12, 14, 20, 32, 55, 149, 287, 289, 294], "immut": [12, 32, 46, 54, 67], "persist": [12, 15, 32, 40, 46, 47, 65, 67, 72, 298], "fortun": [12, 20, 43], "grin": [12, 46], "awar": [12, 35, 40, 47, 67], "introduct": [12, 32, 68, 140, 141, 144, 152, 197, 279, 299], "foundat": [12, 65], "visit": [12, 28, 55, 69, 136], "meanwhil": [12, 43, 57, 70, 299], "compress": [12, 66, 76, 136, 252], "pipelin": [12, 32, 57, 65, 68, 72, 303], "balanc": [12, 137, 187], "link": [12, 30, 35, 40, 42, 48, 50, 58, 70, 73, 76, 149, 152, 189, 210, 212, 213, 223, 224, 225, 284, 287, 294], "popular": [12, 22, 28, 43, 70, 135, 147, 300], "freeli": [12, 24], "background": [12, 42], "interoper": [12, 299], "panda": [12, 43, 75, 77, 90, 102, 149, 287, 316], "mar": [12, 27, 43, 53, 67, 294], "fastffi": [12, 79], "via": [12, 14, 17, 18, 20, 22, 23, 24, 27, 31, 40, 47, 53, 54, 56, 57, 65, 69, 72, 75, 188, 199, 206, 282, 285, 287, 294, 304, 310], "emploi": [12, 24, 32, 64, 67, 68], "captur": [12, 70], "20": [12, 27, 28, 31, 32, 47, 53, 55, 57, 73, 76, 77, 137, 138, 140, 149, 206, 234, 235, 256, 258, 287, 310, 311, 317, 318], "100": [12, 32, 55, 60, 63, 64, 66, 76, 147, 152, 209, 216, 220, 227, 236, 287, 294, 314, 318], "build": [12, 15, 30, 32, 33, 35, 40, 48, 57, 58, 67, 75, 76, 85, 87, 137, 141, 143, 145, 146, 149, 235, 236, 237, 279, 294, 296, 312, 319], "been": [12, 17, 23, 24, 28, 35, 40, 48, 49, 51, 53, 55, 56, 58, 65, 68, 69, 70, 72, 76, 126, 139, 141, 149, 150, 152, 206, 229, 279, 291, 294, 304], "misc": 13, "express": [14, 15, 24, 48, 50, 54, 61, 67, 69, 77, 136, 138, 141, 238, 287, 318], "modifi": [14, 20, 24, 47, 54, 88, 89, 106, 107, 142, 165, 218, 285, 298, 299], "adher": [14, 33, 299], "think": [14, 24], "principl": [14, 145], "privileg": 14, "experienc": 14, "inform": [14, 15, 16, 19, 27, 28, 36, 40, 48, 49, 54, 64, 66, 68, 70, 71, 79, 93, 135, 136, 137, 138, 141, 143, 145, 149, 152, 167, 185, 226, 248, 249, 277, 287, 294, 296, 300], "hop": [14, 48, 50, 53, 55, 57, 58, 61, 65, 69, 70, 135, 139, 141, 143, 144, 145, 147], "slow": [14, 51], "consequ": [14, 65, 68], "piec": [14, 46, 146, 294], "destin": [14, 47, 55, 58, 66, 75, 77, 92, 136, 137, 138, 140, 141, 147, 149, 151, 293, 298, 299, 300, 320], "abovement": 14, "peval": [14, 16, 17, 18, 32, 68, 75, 82, 304, 310], "incev": [14, 16, 17, 18, 32, 68, 75, 82, 304, 310], "assembl": [14, 32, 48, 67, 68, 75, 149], "unlik": [14, 17, 58, 61, 65, 287], "modif": [14, 22, 57, 65, 70, 149, 290], "convent": [14, 35, 40, 220, 246, 308], "taught": [14, 55], "colleg": 14, "textbook": 14, "answer": [14, 32, 35, 40, 65, 300], "collect": [14, 32, 53, 55, 69, 70, 71, 147, 287], "partial": [14, 16, 18, 32, 53, 75, 77, 136, 229, 304], "intricaci": 14, "fixpoint": 14, "monoton": 14, "guarante": [14, 47, 61, 72, 136, 144, 152, 222, 287], "accur": 14, "long": [14, 17, 29, 54, 55, 67, 72, 76, 141, 299, 300, 310, 318], "const": [14, 15, 16, 39, 75, 78, 145, 146, 299, 300, 301], "fragment_t": [14, 15, 16, 75], "frag": [14, 17, 18, 39, 82, 296, 301, 310], "context_t": [14, 15, 16, 75], "ctx": [14, 17, 22, 75, 310], "message_manager_t": [14, 16, 75], "vertex_t": [14, 16, 39, 75], "native_sourc": [14, 18, 310], "getinnervertex": [14, 75], "partial_result": 14, "getoutgoingadjlist": [14, 16, 17, 39, 75, 296, 310], "get_neighbor": 14, "std": [14, 15, 39, 75, 296, 301], "min": [14, 18, 24, 78, 310, 318], "static_cast": [14, 16, 39, 296], "get_data": [14, 39], "isoutervertex": [14, 75], "put": [14, 16, 17, 22, 145, 294], "channel": [14, 16, 35], "syncstateonoutervertex": 14, "els": [14, 16, 18, 39, 55, 137, 147, 149, 245, 299, 300, 310], "next_modifi": 14, "inner_vertic": [14, 16], "innervertic": [14, 16, 17, 39, 75, 296, 310], "parallelprocess": [14, 16], "thread_num": [14, 16], "tid": [14, 16], "msg": [14, 16, 24, 55, 78, 299], "atomic_min": 14, "curr_modifi": 14, "foreach": [14, 16], "distv": [14, 18, 310], "ndistu": 14, "outer_vertic": 14, "outervertic": [14, 39, 75], "dijkstra": [14, 18, 68, 152, 310], "checkout": [14, 35, 142], "seri": [15, 55, 70, 75, 141, 299], "strong": [15, 48, 68], "typenam": [15, 16, 39, 75], "frag_t": [15, 16, 75], "yourapp": 15, "flashappbas": 15, "v_type": 15, "install_flash_work": 15, "flashvertexdatacontext": 15, "v_res_typ": 15, "sync_all_": 15, "re": [15, 35, 47, 54, 55, 69, 138, 141, 145, 147, 293, 302], "shared_ptr": [15, 39, 75, 296, 301], "fw_t": 15, "fw": 15, "Or": [15, 17, 19, 22, 28, 34, 38, 55, 294, 310, 320], "global": [15, 24, 48, 50, 53, 55, 70, 127, 149, 279, 294, 301, 318], "flashglobaldatacontext": 15, "g_res_typ": 15, "let": [15, 18, 19, 38, 47, 48, 55, 70, 249, 293], "bfsflash": 15, "bfs_type": 15, "value_t": 15, "di": 15, "oid_t": [15, 16, 39, 75], "o_sourc": 15, "vid_t": [15, 16, 39, 75], "oid2flashid": 15, "definemapv": 15, "init": [15, 16, 17, 18, 39, 63, 75, 76, 78, 82, 135, 137, 138, 142, 145, 147, 287, 290, 294, 296, 304, 310, 319, 320], "vset_t": 15, "ctruev": 15, "definefv": 15, "definemap": 15, "cond": [15, 195], "len": [15, 55, 63, 137, 152, 161, 192, 209, 211, 214, 216, 217, 221, 287], "ed": [15, 23, 220, 234, 241, 264, 270], "ctruee": 15, "rather": [15, 18, 55, 69, 71, 72, 152, 206, 248, 299], "py": [15, 135, 142, 147, 310, 311, 312, 319], "project_to_simpl": 15, "not_compatible_for": 15, "arrow_properti": [15, 29, 86, 290], "dynamic_properti": [15, 99, 290], "def": [15, 18, 23, 60, 63, 64, 66, 82, 135, 137, 138, 139, 140, 141, 144, 147, 193, 300, 310, 314, 315, 319, 320], "arg": [15, 63, 75, 76, 77, 78, 112, 138, 139, 140, 141, 144, 147, 151, 294, 300], "appasset": [15, 18, 82, 83, 87, 292, 310], "algo": [15, 16, 17, 22, 23, 76, 83], "flash_bf": 15, "vertex_data": [15, 16, 76, 83], "gscoordin": [15, 34], "builtin": [15, 19, 20, 288, 290, 292], "gs_conf": [15, 16, 83], "yaml": [15, 16, 28, 36, 47, 54, 76, 83, 298, 300, 318], "cpp_flash": 15, "class_nam": [15, 16, 83], "compatible_graph": [15, 16, 83], "immutableedgecutfrag": 15, "arrowprojectedfrag": [15, 16, 75, 83], "log": [15, 17, 36, 40, 46, 63, 64, 65, 67, 299, 301, 313], "p2p": [15, 17, 22, 23], "network": [15, 27, 40, 43, 46, 49, 55, 58, 62, 64, 65, 66, 68, 71, 72, 73, 74, 76, 135, 136, 137, 139, 141, 143, 147, 152, 207, 208, 214, 216, 220, 223, 224, 225, 228, 240, 264, 275, 276, 278, 279, 284, 288, 302, 313], "load_p2p_network": [15, 16, 17, 18, 43, 76, 77, 310], "attribut": [15, 19, 50, 61, 64, 66, 68, 70, 75, 76, 110, 121, 137, 138, 140, 143, 147, 148, 151, 152, 154, 155, 156, 171, 172, 181, 193, 206, 211, 230, 234, 235, 236, 237, 238, 241, 242, 243, 277, 279, 281, 284, 285, 287, 288, 290, 296], "convert": [15, 20, 23, 58, 76, 90, 91, 102, 103, 116, 117, 135, 136, 143, 147, 207, 208, 265, 282, 287, 289, 290, 296], "simple_graph": [15, 16], "dist": [15, 17, 76, 77, 142, 145, 234, 236, 238, 294, 310, 318], "codegen": [15, 48], "bit": [15, 51, 53, 55], "longer": [15, 63, 78, 294], "vineyard": [15, 16, 23, 30, 39, 40, 46, 47, 54, 57, 62, 63, 65, 71, 72, 75, 77, 108, 113, 116, 117, 149, 150, 294, 299, 300, 308, 310, 313, 314, 315, 318, 320], "retriev": [15, 46, 50, 53, 66, 67, 77, 90, 91, 102, 103, 108, 112, 116, 117, 138, 139, 141, 147, 152, 293, 300, 301], "displai": [15, 136], "vertex_rang": [15, 77, 90, 91, 102, 103, 108, 116, 117, 149, 293], "end": [15, 16, 39, 43, 53, 55, 61, 62, 63, 64, 65, 66, 69, 72, 77, 78, 141, 146, 152, 166, 175, 180, 181, 194, 206, 289, 293, 299, 304], "10": [15, 16, 17, 20, 27, 30, 40, 42, 43, 48, 50, 53, 55, 60, 61, 63, 64, 66, 73, 76, 136, 137, 138, 140, 141, 147, 149, 152, 154, 155, 156, 190, 196, 206, 209, 211, 220, 221, 222, 223, 225, 229, 234, 238, 242, 258, 264, 269, 282, 287, 294, 300, 308, 310, 313, 314, 318], "sort_valu": 15, "pip3": [16, 19, 23, 33, 35, 40, 311, 313, 317], "degre": [16, 19, 20, 39, 43, 55, 61, 76, 78, 138, 139, 144, 152, 161, 186, 187, 206, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 232, 244, 245, 246, 247, 281, 287, 288, 300], "vertexdatacontext": [16, 17, 75, 152, 310], "myappcontext": 16, "uint64_t": [16, 296], "explicit": [16, 75, 231, 287, 294], "parallelmessagemanag": [16, 17, 310], "param1": 16, "setvalu": [16, 17, 310], "vertex_array_t": [16, 75], "member": [16, 55, 75, 277], "variabl": [16, 28, 38, 40, 49, 53, 82, 206, 300, 301, 313], "And": [16, 18, 23, 28, 30, 34, 43, 48, 51, 53, 55, 73, 76, 77, 140, 145, 290, 293, 294], "zero": [16, 67, 76, 136, 141, 152, 169, 187, 196, 229, 281, 282, 301], "myapp": 16, "parallelappbas": [16, 17, 310], "parallelengin": [16, 17, 310], "install_parallel_work": 16, "constexpr": [16, 75], "messagestrategi": [16, 18, 75, 78, 310], "message_strategi": [16, 75], "ksynconoutervertex": [16, 18, 75, 78, 310], "loadstrategi": [16, 75], "load_strategi": [16, 75], "kbothoutin": [16, 75], "initchannel": 16, "noth": [16, 78, 93, 149, 151, 287], "forc": [16, 35], "forcecontinu": [16, 17, 310], "getincomingadjlist": [16, 39, 75], "basic": [16, 20, 51, 53, 69, 135, 138, 143, 145, 146, 147, 206, 216, 221, 293], "counter": [16, 55], "runnabl": [16, 17, 23], "content": [16, 43, 55, 64, 66, 152, 284, 298, 320], "my_app": [16, 18, 310], "cpp_pie": [16, 76, 83], "context_typ": [16, 75, 76, 83], "dynamicprojectedfrag": 16, "arrowfrag": [16, 75, 301], "codebas": [16, 33], "my_app_context": 16, "zip": [16, 54, 83, 234, 238, 287, 318], "jr": 16, "load_app": [16, 17, 18, 22, 310], "_project_to_simpl": [16, 17, 22], "path_to_your_gar_resourc": 16, "to_numpi": [16, 17, 22, 76, 77, 149, 293, 310], "practic": [16, 48, 54, 58, 61, 65, 70, 136, 137, 139, 300], "demo": [17, 22, 23, 51, 79, 294, 298, 300, 308, 310], "turn": [17, 40, 73, 79, 281, 308], "verbos": [17, 23, 36, 40, 308], "lauch": [17, 22, 310], "cluster_typ": [17, 22, 76, 77, 294, 310, 320], "add_lib": [17, 22, 294], "home": [17, 22, 23, 43, 75, 142, 143, 145, 146, 148, 149, 152, 196, 308, 310, 312, 320], "19": [17, 22, 23, 40, 55, 73, 137, 138, 140, 308, 313, 317], "shade": [17, 22, 23, 310], "java_pi": [17, 76], "threadnum": [17, 310], "info": [17, 40, 51, 55, 78, 149, 287, 290, 294, 298, 299, 300, 301, 308], "maven": [17, 23, 79, 300, 310], "groupid": [17, 23, 300, 310], "artifactid": [17, 23, 300, 310], "shall": [17, 23], "fat": 17, "plugin": [17, 23, 300, 310], "spark": [17, 298], "drastic": 17, "great": [17, 23, 35, 300], "suppos": [17, 55, 149, 281, 299], "traversecontext": [17, 310], "overrid": [17, 75, 135, 145, 310], "ifrag": [17, 310], "parallelcontextbas": [17, 310], "adjlist": [17, 75, 78, 298, 310], "nbr": [17, 20, 39, 75, 78, 287, 310], "dst": [17, 18, 29, 43, 50, 61, 77, 135, 138, 149, 151, 293, 296, 299, 310, 319, 320], "largest": [17, 55, 152, 232, 310], "vertexarrai": [17, 75, 78, 310], "math": [17, 60, 64, 66, 152, 236, 237, 314, 316], "max": [17, 78, 148, 152, 310, 318], "pars": [17, 48, 76, 136, 296, 300], "maxiter": [17, 310], "jsonobject": [17, 310], "gsvertexarrai": [17, 310], "createfficontext": [17, 310], "arrai": [17, 39, 58, 70, 75, 76, 77, 138, 139, 141, 144, 147, 287, 290, 302, 310], "avail": [17, 23, 28, 29, 38, 43, 54, 61, 67, 73, 76, 129, 134, 147, 235, 236, 237, 287, 294, 296, 299, 300, 310], "containskei": [17, 310], "getinteg": [17, 310], "javadoc": [17, 33], "mvn": [17, 22, 79, 300], "proper": [17, 35], "javaapp": [17, 292, 310], "But": [17, 47, 55, 72, 79, 287, 293], "rememb": [17, 22, 23, 29], "singel": 17, "full_jar_path": [17, 76, 310], "pack": [17, 23, 310], "java_app_class": [17, 76, 310], "fullli": [17, 310], "qualifi": [17, 76, 310], "b": [17, 18, 22, 35, 53, 55, 141, 196, 214, 227, 233, 234, 238, 243, 244, 245, 247, 275, 283, 287, 310, 318], "param": [17, 23, 28, 40, 76, 95, 96, 112, 127, 129, 130, 131, 134, 141, 147, 149, 294, 300, 310], "string": [17, 23, 47, 54, 75, 76, 78, 82, 121, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 151, 152, 167, 171, 172, 181, 279, 281, 283, 287, 289, 296, 299, 300, 301, 310, 318, 320], "bother": 17, "click": [17, 34, 35, 61, 137, 138, 141, 311], "pure": [18, 75, 304], "just": [18, 19, 23, 27, 40, 43, 47, 53, 55, 72, 79, 145, 149, 287, 290, 294, 302], "udf": [18, 82, 293, 310], "decor": [18, 310], "vd_type": [18, 78, 82, 310], "md_type": [18, 78, 82, 310], "youralgorithm": [18, 310], "staticmethod": [18, 82, 310], "statu": [18, 27, 28, 29, 36, 40, 63, 145, 146, 152, 300, 304, 308], "cython": [18, 32, 40, 112, 292, 310], "sssp_pie": [18, 310], "v_label_num": [18, 301, 310], "vertex_label_num": [18, 78, 296, 301, 310], "v_label_id": [18, 78, 310], "init_valu": [18, 78, 310], "1000000000": [18, 76, 310], "pieaggregatetyp": [18, 78, 310], "kminaggreg": [18, 78, 310], "register_sync_buff": [18, 78, 310], "get_config": [18, 78, 294, 310], "declar": [18, 48, 53, 55, 57, 69, 72, 137, 310], "get_inner_nod": [18, 78, 310], "break": [18, 147, 310], "set_node_valu": [18, 78, 310], "e_label_num": [18, 39, 301, 310], "edge_label_num": [18, 78, 296, 301, 310], "e_label_id": [18, 310], "get_outgoing_edg": [18, 78, 310], "third": [18, 65, 69, 149, 272, 273], "column": [18, 39, 43, 44, 48, 50, 58, 66, 70, 75, 77, 78, 84, 136, 146, 149, 280, 296, 300, 301, 310, 314, 320], "get_int": [18, 78, 310], "get_node_valu": [18, 78, 310], "iv": [18, 310], "inner_nod": [18, 78, 310], "v_dist": [18, 310], "u_dist": [18, 39, 310], "classic": [18, 61, 140, 288], "yourpregelalgorithm": [18, 310], "sssp_pregel": [18, 310], "set_valu": [18, 78, 310], "src_id": [18, 39, 61, 136, 137, 138, 140, 141, 144, 147, 151, 310], "cur_dist": [18, 310], "new_dist": [18, 310], "outgoing_edg": [18, 78, 310], "vote_to_halt": [18, 78, 310], "sin": [18, 310], "m_pi": [18, 310], "translat": [18, 35, 65], "generate_eid": [18, 44, 47, 75, 127, 149, 301, 310, 320], "test": [18, 23, 28, 40, 46, 47, 51, 55, 57, 60, 63, 64, 66, 70, 135, 145, 147, 151, 171, 172, 206, 287, 289, 294, 299, 300, 311, 312, 314, 319], "save": [18, 28, 47, 137, 152, 300], "futur": [18, 53, 55], "to_gar": [18, 310], "my_sssp_pregel": [18, 310], "gar": [18, 76, 83, 149, 294, 298, 310], "later": [18, 20, 31, 51, 55, 69, 149, 294, 299, 300, 317], "construct": [19, 55, 58, 61, 65, 66, 75, 127, 135, 136, 137, 138, 139, 149, 150, 154, 155, 195, 216, 218, 219, 221, 227, 231, 232, 233, 241, 244, 245, 246, 247, 249, 265, 269, 273, 279, 281, 294, 298, 301], "expand": [19, 48, 55, 139, 141, 288], "add_edges_from": [19, 20, 171, 287], "add_nod": [19, 20, 287, 290], "number_of_nod": [19, 20, 152, 196, 280, 287], "number_of_edg": [19, 20, 161, 196, 280, 287], "sort": [19, 20, 39, 48, 55, 152, 158, 186, 190, 193, 196, 221, 222, 280, 281, 287, 299], "connected_compon": [19, 152], "nx": [19, 20, 43, 86, 88, 89, 92, 95, 97, 99, 106, 107, 111, 114, 115, 149, 152, 287, 289, 290], "add_nodes_from": [19, 20, 287], "red": [19, 20, 35, 136, 287], "green": [19, 20, 34, 35], "add_edg": [19, 20, 43, 149, 165, 171, 172, 175, 180, 181, 287, 290, 314, 315, 320], "1415": [19, 20], "all_pairs_shortest_path": 19, "sp": 19, "dict": [19, 20, 27, 76, 77, 104, 105, 113, 134, 137, 138, 141, 149, 150, 234, 235, 236, 237, 244, 245, 265, 287, 293, 294, 300], "draw": [19, 55, 234, 237], "matplotlib": [19, 55], "with_label": 19, "font_weight": 19, "bold": [19, 73], "twitter": [19, 73], "wget": [19, 22, 23, 28, 33, 142, 318], "raw": [19, 22, 23, 47, 48, 58, 102, 103, 137, 143, 145, 146, 151], "githubusercont": [19, 22, 23], "p": [19, 20, 30, 34, 53, 55, 67, 76, 137, 147, 152, 210, 211, 212, 214, 223, 224, 225, 228, 229, 231, 233, 235, 236, 237, 238, 241, 243, 318], "netwrokx": 19, "o": [19, 22, 23, 27, 29, 36, 75, 147, 152, 169, 220, 222, 227, 235, 236, 237, 239, 240, 241, 287, 300, 311, 314], "gs_nx": 19, "g1": [19, 149, 291, 302, 303], "read_edgelist": [19, 289], "expandvar": [19, 22], "nodetyp": [19, 289], "create_us": [19, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 216, 217, 218, 219, 221, 223, 224, 225, 227, 231, 232, 233, 239, 240, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 282, 289], "g2": [19, 149, 287, 291, 302, 303], "ret_g": 19, "ret_nx": 19, "lack": [20, 31, 71, 152], "hashabl": [20, 167, 182, 244, 287, 289], "float": [20, 54, 63, 73, 76, 135, 136, 137, 138, 146, 147, 148, 152, 206, 209, 210, 211, 212, 214, 225, 226, 227, 228, 229, 234, 235, 236, 237, 238, 241, 242, 243, 279, 287, 289, 294, 302, 318, 319, 320], "tupl": [20, 55, 136, 137, 138, 147, 149, 152, 171, 172, 181, 193, 234, 238, 244, 283, 287, 289, 294], "though": [20, 206, 287, 300], "yield": [20, 141, 147, 234, 238, 287], "node_attribute_dict": 20, "discuss": [20, 40, 55, 152, 299, 313], "incorpor": 20, "path_graph": [20, 152, 163, 165, 166, 172, 287, 289], "grown": [20, 196, 229, 287], "unpack": [20, 54, 75, 287], "ebunch": [20, 287], "dictionari": [20, 76, 121, 152, 234, 235, 236, 237, 244, 245, 246, 247, 287, 289], "11": [20, 27, 29, 30, 31, 51, 55, 60, 73, 76, 136, 137, 138, 140, 154, 155, 156, 192, 287, 300, 308, 311, 317], "complaint": 20, "clear": [20, 35, 53, 55, 88, 89, 187, 189, 190, 192, 194, 196, 197, 199, 201, 202, 205, 216, 218, 219, 221, 223, 224, 225, 227, 231, 232, 233, 239, 240, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 282, 287, 289], "quietli": [20, 182, 287], "ignor": [20, 152, 163, 182, 287, 294], "spam": 20, "stage": [20, 40, 46, 58, 71, 72, 141, 299], "8": [20, 30, 31, 33, 40, 55, 57, 60, 73, 76, 136, 190, 213, 232, 255, 264, 266, 272, 276, 282, 284, 287, 289, 300, 302, 313, 318], "seen": [20, 48, 65, 299], "report": [20, 40, 73, 111, 210, 211, 212, 287, 290], "adj": [20, 78, 152, 287], "view": [20, 24, 65, 95, 160, 164, 183, 184, 287, 290, 296, 308], "item": [20, 28, 65, 136, 137, 138, 141, 147, 152, 287, 300], "One": [20, 48, 65, 70, 71, 72, 76, 139, 141, 218, 227, 281, 300], "nbunch": [20, 160, 164, 166, 182, 287], "remove_nod": [20, 287], "remove_nodes_from": [20, 287], "remove_edg": [20, 287], "remove_edges_from": [20, 216, 218, 287], "instanti": [20, 76, 147, 302], "digraph": [20, 149, 154, 164, 166, 171, 172, 175, 180, 181, 192, 209, 210, 211, 214, 218, 219, 221, 223, 224, 225, 226, 230, 281, 282, 283, 285, 288, 289, 290], "edgelist": [20, 265, 289], "subscript": [20, 287], "notat": [20, 252, 254, 256, 258, 260, 266, 268, 287], "yellow": [20, 136], "blue": [20, 136, 287], "pair": [20, 50, 55, 75, 76, 78, 134, 147, 186, 191, 192, 198, 214, 232, 238, 287, 290, 293, 299, 301], "undirect": [20, 44, 70, 76, 95, 137, 141, 149, 152, 158, 162, 184, 207, 208, 214, 216, 223, 225, 228, 230, 231, 232, 234, 235, 236, 237, 238, 244, 249, 253, 254, 257, 260, 261, 263, 269, 282, 284, 287, 301], "twice": [20, 265, 287], "fg": [20, 301], "add_weighted_edges_from": [20, 171, 287], "125": [20, 136, 220, 231], "75": [20, 55, 60, 63, 64, 66, 73, 152, 210, 211, 212, 214, 294, 314], "375": 20, "eattr": [20, 287], "wt": 20, "attach": [20, 75, 136, 223, 226], "fridai": [20, 287, 290], "mondai": 20, "5pm": [20, 287], "2pm": [20, 287], "room": [20, 287], "714": [20, 287], "to_direct": [20, 149, 207, 208, 223, 225, 287], "representaion": 20, "dg": [20, 57, 70], "represent": [20, 48, 65, 70, 149, 285, 287, 298], "dgv": 20, "as_view": [20, 183, 184, 287], "shallow": 20, "out_edg": [20, 164, 287], "in_degre": [20, 61, 63, 139, 141, 144, 147, 218, 244, 245, 287], "predecessor": [20, 157, 230, 281, 287], "successor": [20, 123, 157, 224, 225, 230, 287], "out_degre": [20, 218, 244, 245, 287], "feel": [20, 35, 40], "inconsist": [20, 73], "inde": [20, 22], "lump": 20, "danger": 20, "probabl": [20, 35, 53, 61, 70, 76, 139, 144, 209, 210, 211, 212, 214, 216, 220, 223, 225, 226, 227, 228, 229, 234, 235, 236, 237, 238, 241, 243], "to_undirect": [20, 149, 223, 225, 287], "theoret": 20, "load_ldbc": [20, 55, 318], "foo": [20, 287], "famou": [22, 23, 286], "hadoop": [22, 300], "cetric": 22, "aim": [22, 55, 64, 67, 68, 69, 70, 72], "stop": [22, 27, 29, 71, 75, 152], "intergr": 22, "open": [22, 34, 35, 49, 54, 61, 69, 72, 147, 289, 299], "actual": [22, 23, 49, 50, 53, 55, 61, 80, 140, 238, 287, 290, 298, 308], "vertexinputformat": 22, "edgeinputformat": 22, "load_from": [22, 29, 149, 294], "vformat": [22, 149], "p2pvertexinputformat": 22, "eformat": [22, 149], "p2pedgeinputformat": 22, "gs_test_dir": 22, "graphscope_sess": [22, 149], "31": [22, 23, 43, 44, 137, 138, 140, 320], "v_prop": [22, 75, 110], "vdata": 22, "e_prop": [22, 75, 110], "giraph_sssp": 22, "sourceid": 22, "faster": [22, 152], "toward": [22, 300], "offici": [22, 47, 49, 51, 69], "pl": 22, "snapshot": [22, 54, 72, 296, 300], "writabl": 22, "degrad": [22, 72], "procedur": [22, 28, 47, 48, 55, 85, 229], "except": [22, 40, 60, 63, 64, 66, 71, 140, 147, 165, 182, 186, 197, 206, 216, 218, 267, 287, 294, 299, 314], "right": [22, 145, 188, 197, 199, 220, 285], "inputformat": 22, "sparksess": 23, "gssparksess": 23, "experi": [23, 31, 35, 43, 48, 57, 68, 70, 72, 73, 209], "proceed": [23, 27, 209, 227], "side": [23, 35, 48, 53, 76, 94, 137, 190, 299], "venv": [23, 51, 66], "virtualenv": 23, "pyspark_venv": 23, "bin": [23, 30, 49, 51, 54, 55, 65, 66, 161, 300, 308, 312, 318], "pyspark_venv_g": 23, "tar": [23, 28, 30, 300], "gz": [23, 30, 289, 300], "upload": [23, 47], "pyspark_driver_python": 23, "pyspark_python": 23, "archiv": [23, 65, 149, 318], "oss": [23, 28, 30, 75, 142, 149, 300, 310, 311, 320], "beij": [23, 28, 30, 58, 70, 136, 300, 311], "fixm": 23, "yuansi": 23, "env": [23, 40, 51, 66, 142], "var": [23, 147, 300, 308, 320], "gs_jar": 23, "l": [23, 28, 33, 61, 70, 139, 207, 208, 210, 211, 212, 219, 220, 221, 223, 224, 225, 228, 235, 236, 237, 238, 240, 244, 245, 246, 247, 276, 279, 287, 308], "lib": [23, 30, 49, 83, 300], "7077": 23, "master_url": 23, "conf": [23, 49, 54, 75, 300, 318], "executor": [23, 33, 47, 49, 65, 308], "driver": [23, 27, 54, 113, 149, 300, 318], "2g": 23, "10g": [23, 312], "minregisteredresourcesratio": 23, "bfstest": 23, "placehold": 23, "url": [23, 149, 150, 300, 318], "rdd": 23, "pom": [23, 300], "xml": [23, 75, 300], "classifi": [23, 58, 60, 64, 66, 70, 147, 310], "sure": [23, 27, 29, 38, 49, 55, 141, 145, 147, 300], "conflict": [23, 51, 55, 60, 149, 277], "correctli": [23, 35, 40, 57, 152, 300], "resolv": [23, 40, 149, 301], "goal": [23, 48, 58, 67, 70, 299], "reloc": 23, "shadedpattern": 23, "vineyardmemori": 23, "memorystr": 23, "builder": [23, 39, 48, 193, 300], "config": [23, 27, 30, 47, 49, 54, 111, 121, 129, 134, 135, 148, 151, 291, 294, 296, 300, 301, 318, 319], "socket": [23, 49, 75, 301], "bound": [23, 53, 55, 69, 112, 206, 299, 302], "vineyardsock": 23, "filepath": 23, "sock": [23, 49], "gssubmitjar": 23, "grapegraph": 23, "togsgraph": 23, "vd": 23, "classtag": 23, "grapegraphimpl": 23, "loadgraphtog": 23, "vfilepath": 23, "efilepath": 23, "numpartit": 23, "observ": [23, 40], "argument": [23, 53, 55, 61, 152, 154, 155, 156, 185, 193, 223, 230, 234, 235, 236, 237, 238, 265, 287, 290, 293, 294, 300, 301, 310], "shell": [23, 33, 76], "grow": [24, 43, 57, 65, 206, 216, 223, 224, 225, 286, 299], "capac": [24, 49, 287], "indivis": 24, "succinctli": 24, "oppos": [24, 61], "orient": [24, 61, 72, 144, 300], "googl": [24, 33, 68, 312], "powergraph": [24, 72, 73], "wa": [24, 28, 29, 35, 53, 55, 67, 73, 141, 152, 206, 221, 234, 235, 236, 237, 286, 300], "2010": [24, 73, 76, 152, 212, 279, 284], "sequenc": [24, 53, 55, 76, 149, 186, 206, 216, 217, 218, 219, 220, 221, 222, 238, 244, 245, 248, 281, 282, 287, 288, 301], "conceptu": 24, "behavior": [24, 53, 55, 78, 294], "becom": [24, 43, 55, 61, 287, 299, 300], "inact": 24, "again": [24, 40, 302], "termin": [24, 34], "halt": [24, 69, 78, 226], "individu": [24, 47, 49, 64, 66], "messageiter": [24, 78], "mindist": 24, "issourc": 24, "vertex_id": [24, 43, 320], "inf": 24, "done": [24, 58, 61, 136, 147, 152, 249, 301], "getvalu": [24, 39], "mutablevalu": 24, "outedgeiter": 24, "getoutedgeiter": 24, "sendmessageto": 24, "votetohalt": 24, "drop": [24, 40, 300], "dramat": 24, "face": [24, 30, 48, 55, 68, 272, 273], "power": [24, 55, 57, 76, 152, 206, 216, 264, 287], "law": [24, 206, 216], "gather": [24, 294], "scatter": [24, 137], "accumul": [24, 61, 281], "workload": [27, 34, 43, 46, 48, 49, 51, 52, 55, 57, 65, 67, 73, 300, 302, 303], "grpc": [27, 30, 40, 75, 311, 313], "interact": [27, 28, 34, 38, 43, 44, 47, 48, 49, 52, 54, 55, 57, 65, 67, 68, 71, 72, 74, 100, 104, 105, 131, 149, 228, 277, 292, 294, 314, 318], "linux": [27, 29, 30, 34, 47, 60, 73, 79, 317], "maco": [27, 29, 34, 40, 51, 311, 313, 314, 317], "skip": [27, 30, 33, 69, 79, 300], "recommend": [27, 29, 34, 35, 40, 47, 51, 55, 58, 65, 66, 70, 141], "minikub": [27, 29, 300], "instruct": [27, 28, 29, 47, 49, 51, 54, 66, 69, 75, 87, 141], "platform": [27, 31, 35, 46, 47, 48, 60, 71, 72, 73, 79, 136, 278, 294], "desktop": [27, 300, 314], "server": [27, 28, 48, 49, 54, 57, 61, 65, 67, 69, 74, 140, 145, 146, 147, 299, 300, 312, 318], "kubectl": [27, 28, 29, 36, 40, 47, 300, 308, 313], "kube": [27, 294], "apivers": 27, "v1": [27, 33, 40, 53, 55, 60, 63, 64, 66, 69, 135, 252, 265, 290, 313, 314, 319], "certif": 27, "ca": 27, "crt": 27, "last": [27, 29, 55, 141, 146, 149, 209, 281, 308], "16": [27, 30, 49, 55, 73, 135, 137, 138, 140, 142, 243, 266, 280, 319], "2023": [27, 308], "44": [27, 73, 137, 138, 140, 280], "05": [27, 214, 227], "cst": 27, "sig": [27, 310], "28": [27, 55, 58, 70, 73, 137, 138, 140, 284], "cluster_info": 27, "172": [27, 73], "21": [27, 30, 43, 55, 73, 76, 137, 138, 140, 260, 300], "67": [27, 73, 76], "111": 27, "8443": 27, "context_info": 27, "namespac": [27, 28, 29, 36, 294], "profil": [27, 318], "encapsul": [27, 57, 58, 135, 141, 294], "entranc": [27, 141], "tag": [27, 38, 53, 55, 73, 214, 294, 300, 312], "intranet": 27, "internet": [27, 28, 30, 55, 68, 284, 286], "might": [27, 40, 152, 244, 287, 303], "k8s_image_registri": [27, 294], "k8s_image_repositori": [27, 294], "k8s_image_tag": [27, 294], "fit": [27, 43, 47, 62, 63, 79], "increas": [27, 36, 40, 43, 137, 185, 186, 194, 216, 218, 226, 244, 247, 249, 299], "cpu": [27, 40, 47, 142, 294, 303, 313], "num_work": [27, 129, 134, 294, 318], "k8s_engine_cpu": [27, 129, 134, 294], "32": [27, 53, 73, 137, 138, 140, 148, 152], "k8s_engine_mem": [27, 40, 129, 134, 294, 313], "256gi": 27, "vineyard_shared_mem": [27, 40, 129, 134, 294, 313], "k8s_client_config": [27, 294], "disk": [27, 40, 47, 65, 300], "test_data": [27, 60, 64, 66, 311, 314], "testingdata": [27, 29, 311, 314], "k8s_volum": [27, 29, 129, 134, 294, 311, 314], "constructor": [27, 44, 187, 189, 190, 192, 194, 196, 197, 199, 201, 202, 205, 216, 218, 219, 221, 223, 224, 225, 227, 231, 232, 233, 239, 240, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 282, 289], "vm": [27, 29, 75], "copi": [27, 28, 29, 47, 65, 67, 72, 92, 152, 159, 163, 165, 166, 224, 230, 285, 287, 290, 298, 299, 300, 301, 302], "hostpath": [27, 29, 47, 294, 311, 314], "expandus": [27, 311, 314], "mountpath": [27, 29, 294, 311, 314], "expect": [27, 32, 35, 40, 79, 216, 218, 220, 290, 294], "monitor": [27, 28, 57], "wait": [27, 40, 294], "finish": [27, 39, 54, 63, 78, 137, 140], "remov": [27, 28, 53, 55, 76, 79, 142, 159, 165, 167, 213, 216, 218, 220, 262, 265, 281, 287, 300], "remain": [27, 53, 68, 136, 141, 221, 248], "statefulset": [27, 300], "svc": [27, 47], "left": [27, 34, 76, 149, 152, 188, 220], "ideal": [28, 35, 72], "deploy_graphscope_on_self_managed_k8": 28, "chart": [28, 40, 47, 49, 55, 300, 311, 313], "minut": [28, 40, 48], "succe": 28, "past": [28, 48, 302], "noteport": 28, "node_ip": [28, 300], "ojsonpath": 28, "hostip": 28, "node_port": 28, "spec": [28, 75, 147], "nodeport": [28, 294, 300, 314], "echo": [28, 30], "listen": [28, 49, 75], "statement": [28, 141, 300], "ident": [28, 77, 92, 149, 183, 184, 188, 259, 279, 281, 287], "reconnect": [28, 294], "disconnect": [28, 152, 228, 229, 244, 247, 294], "sess2": 28, "comment": [28, 35, 43, 55, 136, 287, 289, 290, 315, 320], "homepag": 28, "remot": [28, 34, 54, 79, 150, 294, 318], "cater": [28, 65], "tgz": 28, "unzip": [28, 54, 318], "zxvf": 28, "simplifi": [29, 47, 65, 66, 67, 69, 71, 136, 141, 299], "etcd": [29, 40, 47, 294, 296, 311], "vineyard_replica": 29, "vineyard_etcd_replica": 29, "vineyardctl": 29, "vineyard_deploy": 29, "create_namespac": 29, "restart": [29, 308], "ag": [29, 48, 50, 53, 55, 58, 70, 135, 136, 149, 293, 308, 318, 319], "etcd0": 29, "73m": 29, "vineyardd": [29, 49, 294], "5db59987f": 29, "vr2fg": 29, "mount": [29, 40, 48, 146, 294, 311, 313, 314], "onto": 29, "stai": 29, "aliv": 29, "k8s_namespac": [29, 129, 134, 294], "k8s_vineyard_deploy": [29, 129, 134, 294], "reload": [29, 300], "vineyard_id": [29, 149, 308], "new_sess": 29, "22731319746904674": 29, "softwar": [29, 47, 53, 57, 65, 149, 301], "successfulli": [29, 49, 58, 63, 206, 300], "folder": [30, 299], "cento": [30, 31, 40, 51, 73, 313, 317], "82": [30, 73], "boost": [30, 57, 65, 75], "perl": 30, "v3": [30, 69, 73], "24": [30, 47, 55, 73, 137, 138, 140, 254, 272, 280], "openmpi": [30, 73], "gflag": 30, "glog": 30, "arrow": [30, 39, 75, 86, 99, 149, 290], "74": [30, 73, 278], "openssl": [30, 40, 313], "zlib": 30, "protobuf": 30, "49": [30, 55, 73, 137, 138, 140], "13": [30, 33, 55, 73, 136, 137, 138, 140, 192, 233], "libclang": 30, "curl": [30, 54], "lo": [30, 54], "czf": 30, "mkdir": [30, 40, 147, 313], "workdir": 30, "xzf": 30, "yum": 30, "scl": 30, "rh": [30, 39], "y": [30, 31, 55, 76, 233, 234, 238], "devtoolset": 30, "python38": 30, "opt": [30, 34, 48, 49, 147], "bash": [30, 308, 312], "euxo": 30, "pipefail": 30, "dir": [30, 300], "ld_library_path": 30, "lib64": 30, "py2": 30, "py3": [30, 312], "manylinux2010_x86_64": 30, "whl": [30, 142, 145], "x86_64": 30, "sh": [30, 33, 54, 142, 300, 317, 318], "licens": [30, 312], "dbuild_shared_lib": 30, "ON": 30, "dcmake_prefix_path": 30, "dcmake_install_prefix": 30, "boost_1_74_0": 30, "bootstrap": 30, "filesystem": [30, 136], "program_opt": 30, "regex": 30, "chrono": 30, "atom": [30, 300], "date_tim": 30, "b2": 30, "openssl_1_1_1h": 30, "fpic": 30, "cpp": 30, "darrow_comput": 30, "darrow_with_utf8proc": 30, "off": [30, 48, 65, 272, 300], "darrow_csv": 30, "darrow_filesystem": 30, "darrow_ipc": 30, "darrow_build_benchmark": 30, "darrow_build_exampl": 30, "darrow_build_integr": 30, "darrow_build_util": 30, "darrow_build_test": 30, "darrow_enable_timing_test": 30, "darrow_fuzz": 30, "darrow_jemalloc": 30, "darrow_build_shar": 30, "darrow_build_stat": 30, "mpi": [30, 75], "cxx": 30, "dlopen": 30, "nproc": 30, "dgrpc_instal": 30, "dgrpc_build_test": 30, "dgrpc_build_csharp_ext": 30, "dgrpc_build_grpc_csharp_plugin": 30, "dgrpc_build_grpc_node_plugin": 30, "dgrpc_build_grpc_objective_c_plugin": 30, "dgrpc_build_grpc_php_plugin": 30, "dgrpc_build_grpc_python_plugin": 30, "dgrpc_build_grpc_ruby_plugin": 30, "dgrpc_backwards_compatibility_mod": 30, "dgrpc_protobuf_provid": 30, "dgrpc_zlib_provid": 30, "dgrpc_ssl_provid": 30, "dopenssl_root_dir": 30, "dcmake_cxx_flag": 30, "fpermiss": 30, "v6d": [30, 47], "dbuild_vineyard_test": 30, "dbuild_vineyard_python_bind": 30, "j4": 30, "dnetworkx": 30, "denable_java_sdk": 30, "dbuild_test": 30, "ubuntu": [31, 40, 47, 51, 142, 311, 313, 317], "04": [31, 40, 47, 51, 55, 73, 142, 311, 313, 317], "intel": [31, 51, 311, 317], "appl": [31, 40, 51, 287, 311, 313, 317], "silicon": [31, 51, 311], "openjdk": 31, "wheel": [31, 40, 205, 271, 313, 316], "wish": [31, 35], "nightli": [31, 40, 313], "clean": [31, 43, 51, 66, 79, 145, 299], "tidi": 31, "quickli": [31, 34, 57, 66, 70, 72, 147, 294], "insid": [31, 36, 40, 53, 55, 76, 83, 136, 148, 149, 262, 293, 294, 318], "apt": [31, 142], "jdk": [31, 56, 304, 310], "ipython": 31, "tensorflow": [31, 57, 58, 60, 63, 64, 65, 66, 70, 71, 135, 136, 137, 140, 141, 143, 147, 314], "tool": [31, 33, 34, 43, 47, 54, 57, 59, 65, 234, 236, 296, 299, 300, 301, 317], "dep": [31, 33, 311, 312], "fly": [31, 66], "clang": [31, 33, 51, 312], "essenti": [31, 53, 57, 71], "arm": 31, "preliminari": 31, "yet": [31, 53, 77, 244, 247, 287, 293, 300], "nativ": [32, 48, 65, 71, 72], "behind": [32, 63, 299, 302, 308], "scene": [32, 48, 63, 144], "lower": [32, 48, 53, 55, 69, 206, 213, 226], "cost": [32, 48, 55, 65, 69, 152, 300], "ownership": 32, "cach": [32, 58, 68, 72, 287], "layout": [32, 68, 300], "were": [32, 35, 55, 73, 238, 300], "outperform": [32, 57, 68, 70, 71, 72], "art": [32, 57, 68, 71, 73], "voderank": 32, "average_degree_assort": 32, "degree_assort": 32, "guidelin": [33, 35], "promot": 33, "readabl": [33, 287], "qualiti": [33, 35, 70], "black": [33, 312], "lang": 33, "enforc": 33, "rule": [33, 48, 55, 61, 68, 139, 145, 149, 186, 296], "cpplint": 33, "flake8": 33, "fmt": 33, "lint": [33, 35], "makefil": 33, "graphscope_clformat": 33, "graphscope_cpplint": 33, "dev": [33, 46, 311, 312], "pushd": 33, "isort": 33, "diff": 33, "popd": 33, "interactive_engin": [33, 34, 49], "check_format": 33, "files_to_format": 33, "aosp": 33, "toolchain": [34, 59], "devcontain": 34, "json": [34, 47, 49, 294, 296, 300, 301], "setup": [34, 35, 40, 149, 294, 312], "visual": [34, 35, 65], "studio": 34, "collabor": [34, 65, 299], "stabl": [34, 76, 149, 296, 300, 317], "haven": [34, 55], "navig": [34, 299], "icon": 34, "bottom": [34, 197], "corner": 34, "window": [34, 55, 317], "reopen": 34, "marketplac": 34, "prompt": [34, 54], "shift": [34, 55, 152, 252], "ctrl": 34, "made": [34, 35, 47, 61, 73, 136, 139, 145, 152, 247, 299], "rebuild": 34, "subcommand": [34, 59], "assembli": [34, 49], "learning_engin": 34, "graphlearn": [34, 58, 60, 63, 64, 66, 135, 136, 137, 141, 142, 147, 148, 151, 294, 308, 314, 319], "compos": [34, 58, 61, 66, 68, 72], "alon": [34, 48, 50], "circul": [34, 190], "edit": [34, 35, 233, 270], "entrypoint": [34, 314], "plai": [34, 48, 56, 74, 146, 151, 304], "thank": [35, 43, 65], "interest": [35, 55, 57, 68, 300], "focus": [35, 55, 65, 71, 73, 141, 279, 300], "eager": [35, 76, 77, 127, 130, 131, 149, 150, 294], "contributor": [35, 280], "welcom": 35, "engag": [35, 65], "good": 35, "particip": 35, "join": [35, 55, 137, 147, 188, 191, 199, 206, 215, 216, 229, 231, 234, 235, 236, 237, 238, 246, 247, 287, 299], "ask": [35, 46], "question": [35, 46, 55, 313], "ve": [35, 47, 54, 65], "hasn": [35, 55], "confirm": 35, "concis": [35, 50, 150], "descript": [35, 48, 61, 136, 139, 144, 145, 244, 252, 300], "relev": [35, 142, 181, 287, 298], "reproduc": [35, 287], "yourself": 35, "why": [35, 40, 55, 76], "saw": 35, "incomplet": 35, "inaccur": 35, "knowledg": [35, 43, 58, 70, 143], "gain": 35, "submiss": 35, "fact": [35, 48, 244, 247], "page": [35, 46, 67, 76, 80, 197, 212, 276, 316], "button": 35, "tbf": [35, 45, 73, 295, 306, 309], "isn": [35, 54, 140], "someon": 35, "approach": [35, 50, 57, 58, 65, 67, 70, 140, 216, 229, 284, 299], "spend": 35, "_": [35, 76, 149, 152, 287, 290, 310, 313, 315, 320], "secret": [35, 294, 311, 320], "accident": 35, "hook": 35, "titl": [35, 55, 64, 66], "grammar": 35, "spell": 35, "500": [35, 206], "word": [35, 55, 64, 66, 69, 70, 147, 149, 287], "42": [35, 55, 73, 137, 138, 140, 210, 212, 222, 280], "ticket": 35, "chines": 35, "everyon": 35, "beginn": 35, "patch": 35, "rest": [35, 287, 300], "attain": 35, "feedback": [35, 43], "discourag": 35, "rebas": 35, "workflow": [35, 43, 65, 70, 71, 75], "upstream": [35, 141], "leas": 35, "ping": [35, 310], "await": 35, "unfamiliar": 35, "acronym": 35, "glossari": [35, 46, 280], "ci": 35, "approv": 35, "extra": [35, 40, 47, 49, 152, 248, 313], "date": [35, 55, 299, 300], "todo": [35, 66, 67, 145], "dongz": 35, "potenti": [35, 58, 65, 299], "concern": [35, 65, 72, 299], "reach": [35, 40, 50, 55, 69, 141, 146, 149, 152, 229, 244, 247, 299], "action": 35, "realiti": [35, 141], "uncommon": 35, "infrastructur": 35, "vital": 35, "inspect": [35, 294], "failur": [35, 72], "event": [36, 206], "involvedobject": 36, "warn": [36, 287], "pinpoint": 36, "log_level": [36, 129, 134, 294], "exec": [36, 300, 308], "diagnost": 36, "forward": [36, 58, 60, 61, 63, 64, 66, 70, 141, 314], "browser": [36, 55], "explain": [36, 55, 136, 294, 299, 318], "compris": [38, 54, 64, 65, 140], "busi": [38, 44, 48, 51, 55, 58, 65, 66, 72], "e2": [38, 266], "coupl": [38, 67, 72, 267, 296], "sai": 38, "\u6807\u7b7e": 39, "\u8868\u793a\u67d0\u4e00\u7c7b\u9876\u70b9\u6216\u8005\u8fb9": 39, "\u5c5e\u6027": [39, 318, 320], "\u8868\u793a\u9876\u70b9\u6216\u8fb9\u6240\u5173\u8054\u7684\u6570\u636e": 39, "\u539f\u59cbid": 39, "oid": [39, 75, 77, 78], "\u539f\u59cb\u6570\u636e\u96c6\u4e2d\u7684id": 39, "\u4e0d\u540c\u6807\u7b7e\u7684\u9876\u70b9\u5141\u8bb8\u6709\u76f8\u540c\u7684oid": 39, "\u5b50\u56feid": 39, "fid": [39, 75, 78, 111, 296], "\u5b50\u56fe\u7684\u552f\u4e00\u7f16\u53f7": 39, "\u5206\u533a\u5668": 39, "\u80fd\u591f\u786e\u5b9a\u9876\u70b9oid\u5230\u5206\u533aid": 39, "\u7684\u6620\u5c04": 39, "\u5b50\u56fe": 39, "\u901a\u8fc7\u5207\u8fb9\u5f97\u5230\u7684\u5b50\u56fe": 39, "\u5b58\u50a8\u4e86\u9876\u70b9": 39, "\u8fb9": [39, 310], "\u9876\u70b9\u6570\u636e": 39, "\u8fb9\u6570\u636e\u7b49\u4fe1\u606f": 39, "\u5185\u90e8\u70b9": 39, "\u5c5e\u4e8e\u672cfragment\u7684\u9876\u70b9": 39, "\u5916\u90e8\u70b9": 39, "\u4e0d\u5c5e\u4e8e\u672cfragment\u7684\u9876\u70b9": 39, "\u672c\u5730id": 39, "lid": [39, 75, 111], "\u53ea\u5728\u67d0\u4e2afragment\u5185\u90e8\u6709\u610f\u4e49": 39, "\u5168\u5c40id": 39, "gid": [39, 75, 111], "\u80fd\u591f\u8868\u793a\u4efb\u610f\u4e00\u4e2a\u9876\u70b9": 39, "\u88abfragment\u5171\u8bc6": 39, "\u7528\u4e8e\u5b58\u50a8gid": 39, "oid\u7684\u6620\u5c04\u5173\u7cfb": 39, "\u7684\u8282\u70b9": 39, "\u5b58\u5728\u4ee5\u4e0b\u7f16\u7801\u65b9\u5f0f": 39, "gid\u7f16\u7801": 39, "offset": [39, 75, 138, 146, 190], "\u5176\u4e2d": [39, 310, 315], "\u548c": [39, 141, 310, 312, 313, 314, 315, 317, 318, 319, 320], "\u5171\u540c\u7ec4\u6210": 39, "\u67d0\u4e00\u7c7b\u9876\u70b9\u5728\u67d0\u4e2a": 39, "\u7684\u9876\u70b9": 39, "\u5e8f\u53f7": 39, "lid\u7f16\u7801": 39, "\u586b\u5145": 39, "\u603b\u662f": 39, "\u6309\u7167\u6267\u884c\u6d41\u7a0b\u7f16\u53f7": 39, "\u63cf\u8ff0\u4e86\u8f7d\u56fe\u7684\u4e3b\u8981\u903b\u8f91": 39, "\u5206\u4e3ahashpartitioner\u548csegmentedpartiton": 39, "\u521d\u59cb\u5316\u4ed6\u4eec\u9700\u8981\u7ed9\u51fafragment\u7684\u6570\u91cf": 39, "segmentedpartitioner\u8fd8\u9700\u7ed9\u51fa\u5168\u90e8\u7684oid": 39, "\u6bcf\u4e2a\u8fdb\u7a0b\u8bfb\u53d6\u4e00\u90e8\u5206\u70b9": 39, "\u8fb9\u6587\u4ef6": 39, "\u5f97\u5230\u591a\u4e2avertex": 39, "\u548cedg": 39, "etabl": 39, "\u5176\u4e2dvtable\u6309\u7167\u9876\u70b9\u6807\u7b7e": 39, "\u5206\u7ec4": 39, "etable\u5148\u6309\u7167\u8fb9\u6807\u7b7e": 39, "\u540c\u4e00\u4e2a\u8fb9\u6807\u7b7e\u4e0b\u9762\u53c8\u6309\u7167src\u548cdst\u7684\u9876\u70b9\u6807\u7b7e\u5206\u7ec4": 39, "\u539f\u59cb\u7684\u9876\u70b9\u8868": 39, "\u8fb9\u8868": 39, "\u6bcf\u4e2a\u8fdb\u7a0b\u6301\u6709\u90e8\u5206\u7684\u6570\u636e": 39, "partial_v_t": 39, "partial_e_t": 39, "num": [39, 49, 53, 55, 148, 299], "table\u5305\u542boid": 39, "table\u5305\u62ecsrc\u548cdst\u7684oid": 39, "\u8bbf\u95eevtable\u7684oid\u5217": 39, "\u6839\u636eoid\u67e5\u8be2partit": 39, "\u5c06\u8868\u4e2d\u7684\u8bb0\u5f55\u5206\u53d1\u7ed9\u9876\u70b9\u7684\u62e5\u6709\u8005": 39, "\u4eceshuffle\u540e\u7684vtable\u53d6\u51faoid\u6267\u884cal": 39, "gather\u64cd\u4f5c": 39, "\u4f7f\u5f97\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u80fd\u591f\u83b7\u53d6\u7684\u6240\u6709oid": 39, "\u6839\u636efrag\u6570\u91cf": 39, "label\u6570\u91cf\u548c\u5168\u90e8oid": 39, "\u6bcf\u4e2a\u8fdb\u7a0b\u6784\u5efavertex": 39, "fid_t": [39, 75], "fnum_": 39, "label_id_t": [39, 75], "label_num_": 39, "hashmapbuild": 39, "oid_arrays_": 39, "cur_gid": 39, "id_parser_": 39, "generateid": 39, "\u8d77\u59cbgid": 39, "int64_t": [39, 47, 75, 76, 149, 302, 320], "vnum": 39, "length": [39, 43, 53, 55, 69, 76, 139, 152, 191, 193, 198, 220, 241, 245, 251, 273, 282, 287, 320], "\u904d\u5386\u5168\u90e8\u5185\u90e8\u70b9": 39, "\u751f\u6210gid": 39, "emplac": 39, "getview": 39, "\u6309\u7167elabel\u904d\u5386\u6bcf\u4e00\u5f20edg": 39, "\u83b7\u53d6\u5230src\u548cdst\u7684label": 39, "\u8bbf\u95ee\u6bcf\u4e2asrc\u7684oid": 39, "\u6839\u636epartitioner\u83b7\u53d6fid": 39, "\u6839\u636efid": 39, "id\u548coid\u67e5\u8be2gid": 39, "\u751f\u6210gid\u6570\u7ec4": 39, "\u5904\u7406dst\u7684\u903b\u8f91\u540c\u7406": 39, "\u5f97\u5230src\u548cdst\u4e24\u4e2agid\u6570\u7ec4\u540e": 39, "\u66ff\u6362\u6389\u539fetable\u7684oid\u6570\u7ec4": 39, "\u5bf9etable\u6267\u884cshuffl": 39, "\u5c06\u76f8\u5e94\u7684\u884c\u4f20\u8f93\u7ed9\u6b63\u786e\u7684\u8fdb\u7a0b": 39, "\u5c06shuffle\u8fc7\u7684vtable\u548cetable\u9001\u7ed9basicarrowfragmentbuilder\u6784\u5efacsr": 39, "\u5904\u7406\u9876\u70b9": 39, "\u521d\u59cb\u5316id": 39, "parser": [39, 48], "\u521d\u59cb\u5316ivnum": 39, "ovnum\u548ctvnum\u6570\u7ec4": 39, "\u6309\u7167vertex": 39, "label\u5206\u7ec4": 39, "\u904d\u5386\u6bcf\u4e00\u79cd\u9876\u70b9": 39, "\u5411vertex": 39, "map\u67e5\u8be2\u672cfragment\u7684\u5185\u90e8\u70b9\u6570\u91cf": 39, "\u5e76\u8bbe\u7f6e\u5bf9\u5e94\u7684ivnum": 39, "\u5c06vertex": 39, "table\u5408\u5e76\u6210\u4e00\u4e2achunk\u4fbf\u4e8e\u540e\u7eed\u8bbf\u95ee": 39, "vid_parser_": 39, "vertex_label_num_": 39, "vertex_tables_": 39, "resiz": 39, "ivnums_": 39, "ovnums_": 39, "tvnums_": 39, "combinechunk": 39, "default_memory_pool": 39, "vm_ptr_": 39, "getinnervertexs": [39, 75], "fid_": 39, "\u5904\u7406\u8fb9\u5305\u62ec\u4ee5\u4e0b5\u4e2a\u6b65\u9aa4": 39, "\u904d\u5386\u6bcf\u4e00\u79cd\u8fb9": 39, "\u901a\u8fc7src": 39, "gid\u5217\u548cdst": 39, "gid\u5217\u67e5\u8be2\u51fa\u672cfragment\u6240\u6709\u7684\u5916\u90e8\u70b9": 39, "\u5e76\u6309\u7167vertex": 39, "edge_t": [39, 136, 147], "table\u5408\u5e76\u6210\u4e00\u4e2achunk": 39, "\u627e\u51fa\u672cfragment\u5168\u90e8\u5916\u90e8\u70b9\u7684gid": 39, "collect_outer_vertic": 39, "dynamic_pointer_cast": [39, 301], "converttoarrowtyp": [39, 75], "arraytyp": [39, 75], "chunk": [39, 121], "\u6839\u636e\u5916\u90e8\u70b9\u7684gid": 39, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u6784\u5efagid\u5230lid\u7684\u6620\u5c04\u4e0e\u53bb\u91cd\u7684gid\u6570\u7ec4": 39, "\u5916\u90e8\u70b9\u7684lid\u7531label": 39, "id\u548c\u9876\u70b9\u5e8f\u53f7\u7ec4\u6210": 39, "\u9876\u70b9\u5e8f\u53f7\u4eceivnum\u5f00\u59cb\u8ba1\u6570": 39, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u586b\u5145ovnum\u548ctvnum": 39, "ovg2l_maps_": 39, "ovgid_lists_": 39, "cur_list": 39, "collected_ovgids_": 39, "\u6392\u5e8fgid": 39, "cur_map": 39, "buildertyp": 39, "vec_build": 39, "\u751f\u6210\u5916\u90e8\u70b9\u7684lid": 39, "\u5176\u4e2dfid\u4e3a0": 39, "offset\u4eceivnum\u5f00\u59cb\u7f16\u53f7": 39, "cur_id": 39, "\u5904\u7406\u7b2c\u4e00\u4e2a\u5143\u7d20": 39, "append": [39, 55, 63, 64, 66, 78, 135, 146, 147, 218, 281, 314, 319], "cur_list_length": 39, "\u627e\u5230\u4e0d\u91cd\u590d\u7684\u4e24\u4e2agid": 39, "\u6839\u636e\u4e0a\u4e00\u6b65\u6784\u6210\u7684gid\u5230lid\u7684\u6620\u5c04": 39, "\u5c06src\u548cdst\u7684gid\u90fd\u8f6c\u6362\u6210lid": 39, "\u5220\u9664edg": 39, "table\u7684src\u5217\u548cdst\u5217": 39, "gid\u5230lid\u8f6c\u6362\u51fd\u6570": 39, "generate_local_id_list": 39, "gid_list": 39, "lid_list": 39, "vec": 39, "getfid": 39, "\u751f\u6210\u5185\u90e8\u70b9lid": 39, "getlabelid": 39, "getoffset": 39, "\u67e5\u8be2g2l": 39, "\u901a\u8fc7gid\u627e\u5230\u5916\u90e8\u70b9lid": 39, "\u6839\u636esrc\u548cdst\u5217\u7684gid\u751f\u6210lid": 39, "edge_src_": 39, "edge_dst_": 39, "table\u7684src\u5217\u548cgid\u5217": 39, "\u53ea\u4fdd\u7559\u5c5e\u6027": 39, "tmp_table0": 39, "removecolumn": 39, "edge_tables_": 39, "\u6784\u5efacsr": 39, "\u5bf9\u4e8e\u6709\u5411\u56fe": 39, "\u6784\u5efa\u51fa\u8fb9\u548c\u5165\u8fb9\u4e24\u4e2acsr": 39, "\u9996\u5148\u6784\u5efa\u51fa\u8fb9csr": 39, "\u7edf\u8ba1\u6bcf\u79cd\u6e90\u9876\u70b9\u7684\u51fa\u5ea6": 39, "\u6784\u5efarow": 39, "offset\u6570\u7ec4": 39, "\u8bbf\u95ee\u6bcf\u6761\u8fb9": 39, "\u4f7f\u7528row": 39, "offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u76ee\u7684\u9876\u70b9nbr\u7684\u5730\u5740": 39, "\u586b\u5145dst": 39, "lid\u548ceid\u5230nbr": 39, "\u6309\u7167\u76ee\u7684\u9876\u70b9\u7684lid": 39, "\u5c06\u6bcf\u4e00\u4e2a\u6e90\u9876\u70b9\u7684\u76ee\u7684\u9876\u70b9\u6392\u5e8f": 39, "generate_directed_csr": 39, "vid_array_t": [39, 75], "src_list": 39, "dst_list": 39, "fixedsizebinaryarrai": 39, "int64arrai": 39, "edge_offset": 39, "actual_edge_num": 39, "v_label": [39, 75, 296], "edge_num": [39, 111, 314, 318], "src_list_ptr": 39, "raw_valu": 39, "dst_list_ptr": 39, "\u8ba1\u7b97\u6e90\u9876\u70b9\u7684\u5ea6": 39, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u6784\u5efarow": 39, "tvnum": 39, "offset_vec": 39, "degree_vec": 39, "int64build": 39, "podarraybuild": 39, "nbr_unit_t": [39, 75], "edge_build": 39, "v_offset": 39, "\u83b7\u53d6\u76ee\u7684\u9876\u70b9\u6307\u9488": 39, "ptr": 39, "mutablepoint": 39, "\u586b\u5145\u76ee\u7684\u9876\u70b9lid": 39, "eid": [39, 149, 300], "\u5176\u4e2deid\u7528\u4e8e\u4e4b\u540e\u83b7\u53d6\u8fb9\u4e0a\u7684\u5c5e\u6027": 39, "vid": [39, 75, 149], "eid_t": [39, 75], "\u66f4\u65b0offset": 39, "\u6307\u5411\u6e90\u9876\u70b9\u7684\u4e0b\u4e00\u6761\u51fa\u8fb9": 39, "\u5bf9\u4e34\u63a5\u70b9\u6309\u7167lid\u6392\u5e8f": 39, "offsets_ptr": 39, "lh": 39, "\u6784\u5efa\u5165\u8fb9csr\u548c\u51fa\u8fb9\u540c\u7406": 39, "\u5bf9\u4e8e\u65e0\u5411\u56fe": 39, "\u51fa\u8fb9\u548c\u5165\u8fb9\u5171\u7528\u4e00\u4e2acsr": 39, "\u903b\u8f91\u548c\u6709\u5411\u56fe\u7c7b\u4f3c": 39, "\u4f46\u662f\u8981\u540c\u65f6\u7edf\u8ba1\u6e90\u9876\u70b9\u548c\u76ee\u7684\u9876\u70b9\u7684\u5ea6\u6765\u6784\u5efarow": 39, "offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u6e90\u9876\u70b9\u7684nbr\u586b\u5145\u5165\u8fb9\u7684src": 39, "lid\u548ceid": 39, "\u540c\u65f6\u8fd8\u8981\u4f7f\u7528offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u76ee\u7684\u9876\u70b9\u7684nbr\u586b\u5145dst": 39, "\u5c01\u88c5": 39, "seal": [39, 57, 70], "\u51c6\u5907\u597d\u9876\u70b9\u6570\u91cf": 39, "ovgid\u548cg2l_map\u540e": 39, "\u5c06\u4ed6\u4eec\u5c01\u88c5\u6210\u5404\u79cdvineyardobject": 39, "\u6839\u636emetadata\u4ecevineyard\u67e5\u8be2\u548c\u6784\u5efa\u4ee5\u4e0b\u6570\u636e\u7ed3\u6784\u4f5c\u4e3aarrowfragment\u7684\u6210\u5458": 39, "\u4e5f\u5c31\u662f\u8bf4": [39, 311], "\u4ee5\u4e0b\u6570\u636e\u90fd\u662f\u5b58\u50a8\u5728vineyard\u4e2d\u7684": 39, "\u5f53\u524dfragment": 39, "fragment\u603b\u6570": 39, "directed_": 39, "\u662f\u5426\u4e3a\u6709\u5411\u56fe": 39, "\u9876\u70b9\u79cd\u7c7b\u6570\u91cf": 39, "edge_label_num_": 39, "\u8fb9\u79cd\u7c7b\u6570\u91cf": 39, "propertygraphschema": 39, "schema_": 39, "shcema": 39, "\u5185\u90e8\u548c\u5916\u90e8\u70b9\u603b\u6570": 39, "\u9876\u70b9\u5c5e\u6027\u8868": 39, "\u4e0d\u5305\u542bid\u5217": 39, "\u5916\u90e8\u70b9gid": 39, "hashmap": 39, "gid\u5230lid\u6620\u5c04": 39, "\u8fb9\u5c5e\u6027": 39, "ie_lists_": 39, "oe_lists_": 39, "csr\u7ed3\u6784\u7684column": 39, "\u5bf9\u4e8e\u65e0\u5411\u56fe\u53ea\u6709oe_lists_\u88ab\u4f7f\u7528": 39, "ie_offsets_lists_": 39, "oe_offsets_lists_": 39, "csr\u7ed3\u6784\u7684row": 39, "vertex_map_t": [39, 75], "\u5269\u4e0b\u7684\u6210\u5458\u5c06\u6839\u636e\u4ee5\u4e0a\u4fe1\u606f\u6765\u6784\u5efa": 39, "edge_tables_columns_": 39, "\u6bcf\u4e00\u79cd\u8fb9\u7684\u5c5e\u6027\u5217\u5730\u5740": 39, "flatten_edge_tables_columns_": 39, "\u540c\u4e0a": 39, "vertex_tables_columns_": 39, "\u6bcf\u4e00\u79cd\u9876\u70b9\u7684\u5c5e\u6027\u5217\u5730\u5740": 39, "ie_ptr_lists_": 39, "oe_ptr_lists_": 39, "\u6bcf\u4e00\u79cd\u9876\u70b9\u7684\u6bcf\u4e00\u79cd\u5165": 39, "\u51fa\u8fb9\u7684\u8d77\u59cb\u5730\u5740": 39, "\u4e5f\u5c31\u662fcolumn": 39, "index\u7684\u8d77\u59cb\u5730\u5740": 39, "ie_offsets_ptr_lists_": 39, "oe_offsets_ptr_lists_": 39, "\u51fa\u8fb9\u7684row": 39, "offset\u8d77\u59cb\u5730\u5740": 39, "offset\u7684\u8d77\u59cb\u5730\u5740": 39, "\u4ee5\u4e0b\u662f\u6bcf\u4e00\u79cd\u9876\u70b9": 39, "\u6bcf\u4e00\u79cd\u8fb9\u7684\u6e90\u9876\u70b9fid": 39, "\u76ee\u7684\u9876\u70b9fid": 39, "\u6e90\u9876\u70b9\u548c\u76ee\u7684\u9876\u70b9fid\u6784\u6210\u7684csr\u7ed3\u6784": 39, "idst_": 39, "odst_": 39, "iodst_": 39, "idoffset_": 39, "odoffset_": 39, "iodoffset_": 39, "\u4ee5\u4e0b\u5185\u5bb9\u63cf\u8ff0\u4e86\u8bbf\u95ee\u9876\u70b9": 39, "\u9876\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e\u7684api\u548c\u5b9e\u73b0": 39, "\u5185\u90e8\u70b9\u8303\u56f4\u7531\u8d77\u59cblid\u548c\u7ec8\u6b62lid\u6784\u6210": 39, "lid\u7684\u7f16\u7801\u5305\u542b\u4e86\u9876\u70b9label": 39, "id\u548c\u9876\u70b9\u5e8f\u53f7": 39, "\u5185\u90e8\u70b9\u7684\u9876\u70b9\u5e8f\u53f7\u8303\u56f4\u4e3a": 39, "ivnum": 39, "\u5916\u90e8\u70b9\u5e8f\u53f7\u8303\u56f4\u4e3a": 39, "\u5168\u90e8\u9876\u70b9\u5e8f\u53f7\u4e3a": 39, "vertex_range_t": [39, 75], "label_id": [39, 77, 78, 111], "\u751f\u6210lid\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u8303\u56f4": 39, "\u7ed3\u675f\u8303\u56f4\u662f\u5f00\u533a\u95f4": 39, "\u6839\u636e\u9876\u70b9lid\u83b7\u53d6\u9876\u70b9\u7c7b\u578b": 39, "\u5c5e\u6027id": 39, "\u5217\u53f7": 39, "\u83b7\u53d6\u5230\u5217\u6307\u9488": 39, "\u7136\u540e\u4ecelid\u83b7\u53d6\u5230\u9876\u70b9\u5e8f\u53f7": 39, "\u884c\u53f7": 39, "\u5373\u53ef\u8bbf\u95ee\u5230\u9876\u70b9\u7684\u67d0\u4e2a\u5c5e\u6027": 39, "getdata": [39, 75], "prop_id_t": [39, 75], "prop_id": 39, "property_graph_util": [39, 75], "valuegett": 39, "\u8bbf\u95ee\u51fa\u8fb9\u9700\u8981\u7ed9\u51fa\u6e90\u9876\u70b9lid\u548c\u67d0\u4e00\u79cd\u8fb9\u7684\u7c7b\u578b": 39, "\u800c\u6e90\u9876\u70b9\u7684\u7c7b\u578b\u5df2\u7ecf\u88ablid\u7f16\u7801\u6240\u5305\u542b": 39, "\u6240\u4ee5\u4e0d\u7528\u7ed9\u51fa": 39, "adj_list_t": [39, 75], "e_label": [39, 75], "\u83b7\u53d6\u6e90\u9876\u70b9lid": 39, "\u83b7\u53d6\u6e90\u9876\u70b9\u7c7b\u578b": 39, "\u83b7\u53d6\u6e90\u9876\u70b9\u5e8f\u53f7": 39, "offset_arrai": 39, "\u8bbf\u95eerow": 39, "oe": 39, "\u83b7\u53d6\u51fa\u8fb9\u8d77\u59cb\u5730\u5740": 39, "\u751f\u6210adjlist\u5bf9\u8c61": 39, "\u5206\u522b\u4e3a\u51fa\u8fb9\u8d77\u59cb\u5730\u5740": 39, "\u7ed3\u675f\u5730\u5740": 39, "\u8fb9\u5c5e\u6027\u5217\u5730\u5740": 39, "\u548c\u51fa\u8fb9\u540c\u7406": 39, "\u53ea\u9700\u8981\u628aoe\u76f8\u5173\u53d8\u91cf\u540d\u6362\u6210ie\u5373\u53ef": 39, "ie": 39, "\u56e0\u4e3a\u5728adjlist\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u51fa\u8fb9\u5c5e\u6027\u8868\u7684\u8d77\u59cb\u5730\u5740": 39, "\u6bcf\u6761\u51fa\u8fb9\u8fd8\u5305\u542b\u4e86\u8fb9id": 39, "\u5bf9\u5e94\u5230\u884c\u53f7": 39, "\u56e0\u6b64\u518d\u7ed9\u51fa\u5c5e\u6027\u7684\u5217\u53f7\u5c31\u80fd\u591f\u53bb\u5f97\u5230\u5177\u4f53\u7684\u6570\u636e": 39, "\u4f8b\u5982": [39, 310, 314, 318, 320], "\u83b7\u53d6edg": 39, "struct": [39, 75, 210, 243], "\u83b7\u53d6\u5c5e\u6027\u5217\u7684\u5730\u5740": 39, "\u548ceid\u5c31\u80fd\u591f\u83b7\u53d6\u5230\u5177\u4f53\u7684\u5c5e\u6027": 39, "edata_arrays_": 39, "nbr_": 39, "post": [40, 55, 141, 206, 320], "what": [40, 47, 55, 69, 146, 233, 287, 293, 299], "mininum": 40, "8g": 40, "18": [40, 51, 55, 73, 137, 138, 140, 152, 210, 259, 264, 268, 270, 273, 279, 310, 313, 317], "15": [40, 55, 63, 64, 73, 137, 138, 140, 141, 247, 269, 280, 287, 294, 313], "depoly": 40, "enssenti": 40, "No": [40, 53, 287], "debug": [40, 136, 141, 294, 300, 308], "silent": [40, 287, 308], "helm": [40, 46, 47, 300, 311, 313], "did": [40, 147], "role": [40, 48, 56, 67, 137, 146, 152, 238, 276, 284, 300, 304, 308, 313], "rolebind": [40, 313], "uninstal": [40, 47, 313], "recycl": 40, "alloc": [40, 59, 63], "databas": [40, 48, 55, 65, 67, 71, 73, 300, 310], "seem": [40, 55], "stuck": 40, "consumpt": 40, "poor": [40, 143], "acquir": [40, 54], "request": [40, 75, 104, 105, 137, 145, 148, 150, 181, 287, 294, 313], "mostli": [40, 49, 112], "visibl": [40, 78], "engnin": 40, "volum": [40, 47, 210, 211, 212, 222, 231, 276, 294, 299], "cloud": [40, 71, 72, 300], "k8s_vineyard_mem": [40, 129, 134, 294, 313], "metadata": [40, 75, 149, 287, 296, 300], "blob": [40, 310], "shape": [40, 60, 61, 64, 66, 75, 77, 138, 139, 140, 141, 144, 147, 151, 209, 314], "forth": 40, "smaller": [40, 55, 73, 150, 152, 208, 209, 213], "Its": [40, 67, 266, 299], "shared_mem": [40, 313], "grpcio": [40, 313], "grpc_python_build_system_openssl": [40, 313], "scipi": [40, 234, 235, 236, 237, 287, 290, 313], "anaconda": [40, 313], "workaround": 40, "openbla": 40, "tri": [40, 43, 63, 69, 216, 222], "pkgconfig": 40, "cmake_prefix_path": 40, "brew": 40, "permiss": [40, 83, 313], "deni": [40, 83, 313], "pv": [40, 47, 300, 313], "nf": [40, 146, 313], "appear": [40, 48, 55, 76, 192, 194, 196, 199, 201, 228, 229, 287, 313], "kafka": [40, 296, 313], "zookeep": [40, 313], "crashloopbackoff": [40, 313], "bitnami": [40, 313], "755": 40, "1001": [40, 300], "brutal": 40, "chmod": [40, 54, 313], "777": [40, 73, 313], "eleg": [40, 43], "grant": [40, 284], "timeout": [40, 49], "rais": [40, 48, 76, 83, 85, 121, 129, 134, 141, 149, 150, 152, 158, 167, 171, 172, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 222, 226, 228, 231, 232, 233, 244, 247, 279, 282, 283, 287, 290, 294], "timeout_second": [40, 129, 134, 294, 313], "600": [40, 73, 294, 313], "enterpris": 40, "proxi": [40, 313], "properli": [40, 50], "wrong": 40, "resolut": [40, 300], "occup": 40, "hostnam": [40, 313], "no_proxi": [40, 313], "suffix": 40, "flush": 40, "stream": [40, 53, 55, 58, 141, 146, 149], "forcibli": 40, "contact": 40, "slack": [40, 313], "dingtalk": [40, 313], "happi": 40, "90": [42, 73], "brief": 42, "traffic": 43, "web": [43, 76, 152, 220, 234, 239, 280], "ever": [43, 61], "amount": [43, 59, 70, 139, 141, 143], "insight": [43, 68, 70], "hidden": [43, 68, 70, 135, 319], "attract": 43, "attent": [43, 70, 141], "compuatit": 43, "difficult": [43, 136, 146, 300], "obstacl": 43, "attempt": [43, 47, 68, 69, 72, 287], "curv": [43, 68], "hard": [43, 53, 62, 63, 248, 299], "complic": [43, 48, 55, 77], "sql": [43, 48, 55], "deep": [43, 61, 65, 135, 140, 141, 143, 163, 166, 275, 287], "gnn": [43, 46, 58, 60, 61, 64, 65, 66, 71, 72, 135, 139, 140, 141, 143, 144, 294, 316, 319], "train": [43, 58, 60, 61, 62, 65, 66, 71, 72, 74, 137, 140, 141, 143, 144, 147, 151, 294, 314, 319], "seamlessli": [43, 47, 51, 54, 57, 65, 71, 72], "fist": 43, "establish": [43, 300], "interpret": [43, 65, 152], "mount_dataset": 43, "ran": [43, 63], "p2p_network": 43, "haslabel": [43, 50, 51, 55, 318], "embed": [43, 58, 64, 66, 70, 136, 143], "inter": [43, 148, 206, 209], "wherea": [43, 206, 299], "numpi": [43, 55, 58, 75, 77, 91, 103, 113, 138, 139, 141, 142, 143, 144, 147, 149, 151, 152, 279, 287, 290, 316], "datafram": [43, 77, 90, 102, 113, 116, 149, 287, 310, 320], "head": [43, 53, 55], "csv": [43, 47, 149, 287, 290, 298, 300, 301, 314, 315, 320], "creationd": [43, 55, 315, 320], "locationip": [43, 320], "browserus": [43, 55, 320], "618475290625": 43, "2011": [43, 55, 220], "08": [43, 73, 152], "17t14": 43, "26": [43, 55, 73, 137, 138, 140, 236], "59": [43, 73], "961": 43, "0000": [43, 55], "210": [43, 73, 283], "17": [43, 55, 73, 137, 138, 140, 310], "48": [43, 73, 137, 138, 140, 239, 240, 286], "chrome": [43, 55], "ye": [43, 287], "618475290626": 43, "17t11": 43, "570": 43, "comment_replyof_com": 43, "274877907301": 43, "274877907299": 43, "274877907302": 43, "pd": [43, 320], "df_v": [43, 310, 320], "read_csv": [43, 320], "sep": [43, 320], "df_e": [43, 320], "add_vertic": [43, 149, 287, 290, 291, 314, 315, 320], "direction": 44, "retain_oid": [44, 47, 75, 127, 149, 301, 320], "oid_typ": [44, 75, 76, 105, 127, 149, 320], "int32_t": [44, 149, 320], "exce": [44, 245, 246], "infer": [44, 47, 70, 71], "benefit": [44, 68, 299], "super": [44, 76, 137, 141], "precis": [44, 70, 279], "deal": [44, 68, 139], "graphcomput": [46, 318], "gl": [46, 61, 71, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 148], "neural": [46, 58, 65, 66, 71, 72, 74, 135, 136, 139, 141, 143, 147], "posit": [46, 55, 70, 71, 76, 135, 141, 152, 197, 216, 218, 219, 221, 222, 226, 234, 235, 236, 237, 238, 282, 285, 299, 302], "frequent": [46, 65, 68, 300], "depoli": 46, "faq": 46, "groot": [46, 54, 65, 72], "graphar": 46, "gart": 46, "gap": 46, "oltp": [46, 65, 67], "style": [46, 57, 65, 292], "too": [47, 55, 72, 137, 206, 287], "wonder": 47, "throughout": [47, 48, 53], "smoothli": 47, "easiest": 47, "websit": [47, 68, 206], "untar": 47, "cp": [47, 49, 284, 299], "tree": [47, 67, 187, 189, 197, 217, 223, 225, 235, 236, 237, 250, 251, 288, 300, 320], "claim": [47, 269, 299, 300], "pvc": [47, 294, 300], "your_release_nam": 47, "frontend": [47, 49, 51, 54, 300, 308], "grep": 47, "awk": 47, "gremlinport": 47, "consol": [47, 49, 57, 69, 150, 300, 316], "subsequ": [47, 48, 49, 54, 76, 136, 137], "pertain": 47, "littl": [47, 53, 55], "v6d_modern_load": [47, 49], "data_path": [47, 301], "store_data_path": [47, 49], "header_row": [47, 149, 301], "delimit": [47, 149, 289, 301, 315], "src_label": [47, 149, 290, 294, 300, 301, 314, 315], "dst_label": [47, 149, 290, 294, 300, 301, 314, 315], "thing": [47, 141], "notic": [47, 54, 55, 65, 141, 149, 280, 287, 302], "key1": 47, "value1": [47, 320], "key2": 47, "value2": 47, "header": [47, 149, 299, 300], "token": [47, 53, 294], "row": [47, 58, 70, 136, 149, 280, 300], "column_typ": 47, "filed1": 47, "filed2": 47, "unexpect": 47, "troubl": 47, "correspondingli": [47, 61, 244, 247], "v6d_ldbc_loader": 47, "physic": [47, 48, 65, 76, 152, 210, 211, 212, 234, 298], "scalabl": [47, 68, 69, 70, 71, 72, 284], "replicacount": [47, 300], "replica": 47, "hdf": [47, 113, 146, 149, 300, 310, 320], "8182": [47, 49, 300], "pegasusworkernum": 47, "obvious": 47, "x": [47, 54, 55, 73, 76, 135, 141, 147, 152, 190, 223, 231, 233, 234, 238, 262, 319], "pegasustimeout": 47, "durat": [47, 53], "000": [47, 55, 73], "inher": 48, "massiv": [48, 69], "cypher": [48, 65, 67, 71, 72], "manufactur": 48, "upcom": 48, "gql": [48, 65, 72], "entri": [48, 53, 55, 61, 63, 151, 152, 199, 216, 218, 219, 244, 246, 247, 265], "sticki": 48, "peopl": [48, 55, 287, 300], "shelv": 48, "intellig": [48, 51, 55, 65, 72, 244, 247], "throughput": [48, 65, 71, 72, 300], "hybrid": [48, 299, 300], "dedupl": 48, "higher": [48, 71, 152, 162, 226, 300], "latenc": [48, 65, 71, 72], "hope": [48, 55, 300], "trade": [48, 65, 300], "inevit": 48, "realist": [48, 279], "valid": [48, 63, 64, 70, 82, 135, 182, 206, 228, 234, 283, 294, 296], "lengthi": 48, "ir": [48, 49, 65], "verif": [48, 65], "repeatedli": [48, 68], "account": [48, 69, 285, 318], "80": [48, 73, 266], "decoupl": [48, 65, 72], "upper": [48, 53, 55, 58, 69, 206, 299], "briefli": [48, 70], "submit": [48, 54, 55, 66, 136, 137, 150, 296, 300, 314], "regist": [48, 75, 78, 108, 294], "plan": [48, 65, 67, 68, 69, 79, 300, 308], "algebra": [48, 276], "edgeexpans": 48, "pathexpans": 48, "legal": 48, "predic": [48, 55], "schema": [48, 49, 50, 54, 55, 63, 64, 76, 136, 137, 146, 149, 287, 296, 298, 299, 300, 301, 315, 318, 320], "arithmet": [48, 53, 55], "aspect": [48, 55, 72], "firstli": [48, 50, 55, 72], "rbo": 48, "down": [48, 204], "slice": [48, 77, 149, 293], "cbo": 48, "statist": [48, 55, 138], "glogu": 48, "calcul": [48, 53, 55, 76, 78, 138, 152, 206, 238], "shuffl": [48, 53, 141, 147, 151], "align": [48, 61, 135, 138, 139, 238, 299], "transform": [48, 55, 75, 86, 99, 279, 287, 288, 292, 298], "mainli": [48, 55, 72, 143], "uniqu": [48, 50, 54, 65, 66, 76, 125, 126, 136, 140, 145, 146, 149, 152, 254, 260, 293, 300, 301], "plu": [48, 55, 190, 262], "unaccept": 48, "come": [48, 55, 57, 66, 70, 71, 73, 138, 253, 290], "kubenet": 49, "end2end": 49, "sf": [49, 55], "outlin": 49, "depth": [49, 66, 135, 147, 152, 319], "v6d_object_id": 49, "unsur": 49, "assist": [49, 68], "vineyard_ipc_socket": [49, 301], "meta": [49, 58, 75, 138, 139, 149, 298, 300], "gie_test_hom": 49, "graph_nam": 49, "rpc": [49, 75, 148, 294, 300], "1234": 49, "127": [49, 73, 300], "11234": 49, "pegasu": [49, 65], "gaia_executor": 49, "log4r": [49, 300], "yml": [49, 298, 300], "240000": 49, "1024": 49, "localhost": [49, 294, 320], "authent": [49, 71, 300], "usernam": [49, 300], "password": [49, 300], "auth": [49, 152, 300], "djna": 49, "kill": [49, 294], "pkill": 49, "entiti": [50, 55, 64, 66, 70, 136], "council": [50, 73], "birthdai": [50, 320], "differenti": 50, "123456": [50, 58, 70, 300], "hasid": 50, "expos": [50, 56, 139, 150, 294, 304], "secondli": [50, 72], "triplet": 50, "path_expand": 50, "desir": [50, 149, 206, 228, 248, 250, 251], "concret": [50, 76, 77, 149], "endv": [50, 55, 69, 318], "repeat": [50, 69, 70, 141, 147, 221, 226, 229, 249, 252, 318], "path_opt": [50, 53, 55, 69, 318], "pathexpand": 50, "expr": [50, 53, 54, 55, 318], "marko": [50, 53, 55], "27": [50, 53, 55, 73, 137, 138, 140, 268], "OR": [50, 78, 287], "hasstep": 50, "shortcom": [50, 55], "groupcount": [50, 318], "BY": 50, "age_cnt": 50, "age_sum": 50, "AS": [50, 284, 288], "significantli": [50, 68, 71], "scan": [50, 299], "propertyidvalu": 50, "tabl": [50, 55, 58, 73, 135, 137, 149, 296, 298, 299, 301], "larger": [50, 55, 64, 234], "inE": [50, 141, 318], "sub_graph": [50, 66, 314, 315], "gcc": [51, 73, 317], "64": [51, 61, 140, 141, 218, 318], "chip": [51, 317], "fairli": 51, "straightforward": 51, "hereaft": [51, 55], "q1": [51, 55], "q2": [51, 55], "someth": [51, 287], "453": 51, "xxx": [51, 145, 294, 310], "pppp": 51, "op_executor": 51, "455": 51, "entr": 51, "ee": 51, "syntact": [51, 54, 69], "sugar": [51, 54, 69], "conquer": 52, "retain": [53, 228, 301], "syntax": [53, 61, 77, 141, 287, 293], "situat": [53, 55, 57, 136, 137, 300], "meant": [53, 55], "moreov": [53, 65, 71, 299], "vertexid": 53, "inject": 53, "integ": [53, 152, 187, 190, 191, 192, 193, 194, 196, 198, 199, 201, 202, 205, 206, 209, 210, 211, 212, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 265, 279, 280, 281, 282, 284, 287, 300], "edgeid": 53, "edgelabel": [53, 96], "histori": [53, 55, 69], "elementid": 53, "propertykei": 53, "accessor": 53, "eq": [53, 55, 69, 76, 318], "neq": [53, 318], "gt": [53, 55, 318], "lt": [53, 55, 318], "gte": [53, 55, 66, 314, 318], "lte": [53, 66, 314, 318], "outsid": [53, 318], "textp": [53, 318], "startingwith": [53, 318], "endingwith": [53, 318], "rko": 53, "ark": 53, "notstartingwith": [53, 318], "notendingwith": [53, 318], "notcontain": [53, 318], "unequ": 53, "nest": 53, "wheretravers": 53, "act": [53, 135, 284, 287, 319], "startkei": 53, "alter": [53, 287], "opposit": [53, 141, 215, 262], "nottravers": 53, "duplic": [53, 55, 214, 216, 218, 287, 288], "deduplabel": 53, "composit": [53, 55], "de": [53, 63], "impli": 53, "flat": 53, "selectkei": 53, "roll": [53, 55, 57], "averag": [53, 64, 66, 76, 152, 206], "accompani": 53, "aggregatefunc": 53, "emit": [53, 55, 135, 138, 141, 147, 319], "ascend": [53, 55], "asc": [53, 55], "desc": [53, 55], "bias": 53, "toss": 53, "merg": [53, 141], "uniontravers": 53, "sentenc": [53, 55], "matchsent": 53, "binder": 53, "__": [53, 54, 55, 66, 141, 314, 318], "graphnam": 53, "lengthrang": 53, "keyvaluepair": 53, "kept": [53, 55, 75], "result_opt": [53, 55, 318], "end_v": [53, 55, 318], "all_v": [53, 55, 318], "connector": [53, 55], "exponenti": [53, 55, 70, 234, 236, 237], "vada": 53, "lop": 53, "josh": 53, "rippl": 53, "peter": 53, "alias": 53, "k1": 53, "k2": 53, "v2": [53, 55, 60, 69, 135, 265, 319], "35": [53, 55, 73, 137, 138, 140, 147, 214, 264, 280], "29": [53, 55, 137, 138, 140], "unsupport": [53, 54], "unrol": 53, "linear": [53, 221, 223, 279, 299], "simplepath": [53, 318], "imper": [53, 69], "reflect": [53, 299], "latter": [53, 55, 68], "mix": [53, 76, 299], "sack": [53, 318], "sy": [54, 147], "gremlin_python": [54, 300], "graph_travers": 54, "driver_remote_connect": 54, "driverremoteconnect": [54, 300], "gremlin_endpoint": [54, 300], "remoteconn": [54, 300], "withremot": [54, 300], "assert": [54, 76, 299], "simpler": [54, 55, 287], "encompass": [54, 64], "dlcdn": 54, "your_endpoint_address": 54, "your_endpoint_port": 54, "classnam": [54, 318], "ser": [54, 318], "gryomessageserializerv1d0": [54, 318], "serializeresulttostr": [54, 318], "exit": [54, 76, 318], "websocket": [54, 318], "worth": [54, 64, 141, 149, 287], "mutat": 54, "lambda": [54, 55, 135, 141, 147, 152, 223, 234, 236, 237, 238, 319], "groovi": 54, "currenttimemilli": [54, 318], "transact": [54, 65, 71, 72, 73, 296, 300, 310], "secondari": 54, "leverag": [54, 56, 57, 67, 79, 279, 296, 304], "rocksdb": [54, 300], "isol": [54, 152, 248, 300], "therein": 54, "regard": [55, 64, 299], "realm": 55, "audit": 55, "toolsuit": 55, "primarili": [55, 69, 299], "snb": [55, 315, 320], "qp": [55, 71], "simul": [55, 111, 147], "conclus": 55, "confid": 55, "profici": 55, "intric": 55, "permit": [55, 287], "3k": 55, "gremlin_queri": 55, "190376": 55, "787074": 55, "sf1": 55, "432345564227583365": 55, "504403158265495622": 55, "576460752303435306": 55, "432345564227579434": 55, "hastyp": 55, "504403158265495612": 55, "144115188075855941": 55, "issubclassof": 55, "504403158265495553": 55, "confus": [55, 235, 236, 237], "mechan": [55, 67, 70, 72, 296, 304], "belong": [55, 70, 76, 77, 78, 149, 277, 280, 287, 293, 300], "distinguish": [55, 65, 135, 136, 137, 299], "worri": 55, "portion": [55, 68, 69, 77, 149], "havelabel": 55, "veritc": 55, "216172782113783808": 55, "216172782113784710": 55, "label1": 55, "label2": 55, "forum": 55, "72057594037936036": 55, "mention": [55, 298, 299, 308], "360287970189718653": 55, "360287970189718655": 55, "joseph": 55, "joeseph": 55, "firstnam": [55, 315, 320], "yacin": 55, "year": [55, 66, 68, 314], "q3": 55, "01": [55, 60, 64, 66, 76, 136, 152, 211, 314], "01t00": 55, "00": 55, "curiou": 55, "property_nam": [55, 77, 78, 293], "38416": 55, "mayb": 55, "pyplot": 55, "plt": 55, "comment_cont": 55, "comment_length": 55, "histogram": 55, "hist": [55, 161], "50": [55, 73, 234, 236, 237], "607c8e": 55, "grid": [55, 280], "axi": [55, 75, 76, 77, 91, 117, 147, 293], "xlabel": 55, "ylabel": 55, "gender": [55, 320], "person_gend": 55, "male": 55, "femal": 55, "male_count": 55, "female_count": 55, "constraint": [55, 69], "216172782113784483": 55, "around": [55, 150], "432345564227569033": 55, "288230376151712472": 55, "144115188075856168": 55, "144115188075860911": 55, "72057594037934114": 55, "hasmoder": 55, "studyat": 55, "workat": 55, "islocatedin": 55, "432345564227582847": 55, "hasinterest": 55, "504403158265496227": 55, "864691128455136658": 55, "1008806316530991636": 55, "360287970189645858": 55, "en": [55, 68, 76, 249, 253, 254, 255, 256, 258, 259, 260, 266, 267, 268, 269, 271, 272, 273, 274], "e1": 55, "summar": [55, 58], "citi": [55, 58, 68, 70], "ispartof": 55, "countri": 55, "288230376151711797": 55, "understand": [55, 61, 135, 141, 149, 299], "216172782113784555": 55, "14": [55, 73, 137, 138, 140, 192, 252, 260, 272, 287], "exactli": [55, 58, 69, 76, 152, 197, 206, 220, 265, 293, 300], "432345564227569357": 55, "432345564227570524": 55, "288230376151712984": 55, "144115188075861043": 55, "replyof": [55, 315], "vertiv": 55, "54336": 55, "33411": 55, "360287970189700805": 55, "59465": 55, "33403": 55, "awai": 55, "ineffect": 55, "otherwis": [55, 68, 76, 136, 140, 141, 142, 152, 169, 206, 226, 236, 285, 287, 294, 299, 300], "illeg": 55, "simple_path": 55, "unfold": [55, 76], "hascreat": 55, "nation": 55, "china": 55, "np": [55, 138, 141, 147, 151, 302], "market": 55, "japan": 55, "browsers_us": 55, "browser_list": 55, "firefox": 55, "safari": 55, "browser_count": 55, "autopct": 55, "1f": 55, "univers": [55, 65, 152, 185, 186, 233, 243, 275, 279], "previous": [55, 83, 223, 224, 225, 298, 299], "purpos": [55, 65, 299], "person1": 55, "person2": 55, "university1": 55, "university2": 55, "studi": [55, 64, 66, 72, 233, 235], "216172782113784481": 55, "216172782113784279": 55, "144115188075858884": 55, "216172782113784361": 55, "216172782113784291": 55, "144115188075858879": 55, "216172782113784642": 55, "216172782113784473": 55, "216172782113784328": 55, "144115188075858700": 55, "216172782113784700": 55, "216172782113784331": 55, "144115188075860619": 55, "216172782113784375": 55, "216172782113784333": 55, "144115188075858813": 55, "216172782113784593": 55, "216172782113784688": 55, "144115188075860870": 55, "216172782113784047": 55, "216172782113784692": 55, "144115188075862429": 55, "isomorph": [55, 70, 137, 141, 266, 288], "22": [55, 73, 137, 138, 140, 280, 294], "23": [55, 137, 138, 140], "216172782113784192": 55, "216172782113784107": 55, "216172782113784171": 55, "regular": [55, 226, 231, 232, 233, 255, 260, 263, 268, 271, 272, 273, 274], "squar": [55, 214, 233, 261, 262, 265, 280], "butterfli": 55, "notion": 55, "matchanalyticsalgorithm": 55, "matchoptimizationalgorithm": 55, "216172782113784587": 55, "216172782113784363": 55, "144115188075860919": 55, "216172782113784532": 55, "216172782113784400": 55, "144115188075861858": 55, "216172782113784491": 55, "216172782113784401": 55, "144115188075858086": 55, "216172782113784598": 55, "216172782113784629": 55, "144115188075858881": 55, "216172782113783931": 55, "216172782113784657": 55, "144115188075858708": 55, "repli": 55, "pa": 55, "pb": 55, "216172782113783809": 55, "216172782113784011": 55, "360287970189640007": 55, "360287970189640008": 55, "360287970189640009": 55, "34": [55, 73, 137, 138, 140, 280], "2012": [55, 246], "216172782113783812": 55, "216172782113783882": 55, "36": [55, 73, 137, 138, 140, 192, 272, 280, 312], "360287970189640010": 55, "37": [55, 73, 137, 138, 140, 152, 280, 312], "216172782113784105": 55, "38": [55, 73, 137, 138, 140, 280, 312], "41": [55, 73, 137, 138, 140, 227, 280], "43": [55, 137, 138, 140, 152, 254, 280, 310], "216172782113783814": 55, "216172782113783962": 55, "360287970189640135": 55, "52": [55, 280], "216172782113784199": 55, "54": [55, 73, 227, 280], "216172782113784038": 55, "56": [55, 73, 186, 280], "216172782113783816": 55, "216172782113784144": 55, "175": 55, "360287970189640462": 55, "72057594037927936": 55, "144115188075855872": 55, "288230376151711744": 55, "432345564227567616": 55, "504403158265495555": 55, "india": 55, "hasmemb": 55, "8248": 55, "8101": 55, "imposs": 55, "back": [55, 57, 63, 145, 299], "2822": 55, "tag1": 55, "tag2": 55, "37164": 55, "432": 55, "vertinc": 55, "property1": 55, "properti2": 55, "lastnam": [55, 315, 320], "donati": 55, "luigi": 55, "hall": 55, "costa": 55, "carlo": 55, "khan": 55, "meera": 55, "mahinda": 55, "eli": 55, "94": 55, "228": [55, 73], "emb": [55, 135, 319], "th": [55, 139, 152, 265], "dom": 55, "pedro": 55, "ii": 55, "condariuc": 55, "bonomi": 55, "anyth": 55, "david": [55, 188, 199, 264], "silva": 55, "guliyev": 55, "tagclass": 55, "504403158265495552": 55, "504403158265495554": 55, "504403158265495556": 55, "504403158265495557": 55, "504403158265495558": 55, "504403158265495559": 55, "504403158265495560": 55, "504403158265495561": 55, "504403158265495562": 55, "504403158265495563": 55, "504403158265495564": 55, "504403158265495565": 55, "504403158265495566": 55, "504403158265495567": 55, "504403158265495568": 55, "504403158265495569": 55, "504403158265495570": 55, "504403158265495571": 55, "504403158265495572": 55, "504403158265495573": 55, "504403158265495574": 55, "504403158265495575": 55, "504403158265495576": 55, "504403158265495577": 55, "504403158265495578": 55, "504403158265495579": 55, "504403158265495580": 55, "504403158265495581": 55, "504403158265495582": 55, "504403158265495583": 55, "504403158265495584": 55, "504403158265495585": 55, "504403158265495586": 55, "504403158265495587": 55, "504403158265495588": 55, "504403158265495589": 55, "504403158265495590": 55, "504403158265495591": 55, "504403158265495592": 55, "504403158265495593": 55, "504403158265495594": 55, "504403158265495595": 55, "504403158265495596": 55, "504403158265495597": 55, "504403158265495598": 55, "504403158265495599": 55, "504403158265495600": 55, "504403158265495601": 55, "504403158265495602": 55, "504403158265495603": 55, "504403158265495604": 55, "504403158265495605": 55, "504403158265495606": 55, "504403158265495607": 55, "504403158265495608": 55, "504403158265495609": 55, "504403158265495610": 55, "504403158265495611": 55, "504403158265495613": 55, "504403158265495614": 55, "504403158265495615": 55, "504403158265495616": 55, "504403158265495617": 55, "504403158265495618": 55, "504403158265495619": 55, "504403158265495620": 55, "504403158265495621": 55, "q4": 55, "690": 55, "134313148716225": 55, "216172782113783811": 55, "216172782113783813": 55, "216172782113784707": 55, "216172782113784708": 55, "216172782113784709": 55, "216172782113783910": 55, "216172782113784104": 55, "216172782113784207": 55, "216172782113784318": 55, "216172782113784305": 55, "216172782113784597": 55, "216172782113784693": 55, "216172782113784018": 55, "216172782113784092": 55, "216172782113784108": 55, "216172782113784161": 55, "216172782113784162": 55, "73": [55, 73, 233], "216172782113783875": 55, "216172782113783932": 55, "216172782113784057": 55, "216172782113784068": 55, "216172782113784065": 55, "216172782113784235": 55, "216172782113784247": 55, "meaning": [55, 77, 149], "449": 55, "454": [55, 73], "216172782113783810": 55, "acsend": 55, "descend": [55, 281], "216172782113784082": 55, "216172782113784169": 55, "216172782113784267": 55, "216172782113784368": 55, "216172782113784376": 55, "216172782113783938": 55, "216172782113784405": 55, "216172782113783980": 55, "216172782113783844": 55, "216172782113783901": 55, "216172782113783935": 55, "216172782113784439": 55, "216172782113784315": 55, "216172782113784374": 55, "216172782113784601": 55, "216172782113784431": 55, "216172782113783815": 55, "216172782113783817": 55, "216172782113783971": 55, "216172782113784154": 55, "216172782113784381": 55, "216172782113783933": 55, "earlier": [55, 238, 300], "216172782113783819": 55, "216172782113783826": 55, "216172782113783836": 55, "bi": [55, 68, 71], "25": [55, 60, 64, 66, 73, 137, 138, 140, 209, 211, 214, 233, 280, 314], "query2": 55, "09": [55, 73], "200": [55, 135, 293, 303, 319], "07": [55, 63, 73, 206, 214], "hastag": 55, "count1": 55, "count2": 55, "jet_li": 55, "zhang_yim": 55, "faye_wong": 55, "tsui_hark": 55, "bruce_le": 55, "johnny_depp": 55, "tom_cruis": 55, "jackie_chan": 55, "query3": 55, "moder": 55, "infinit": [55, 248], "seriou": 55, "song": 55, "containerof": 55, "message_count": 55, "824633725780": 55, "08t02": 55, "334": [55, 73], "album": 55, "hao": 55, "wang": [55, 219, 221], "19791209300479": 55, "755914248304": 55, "02t20": 55, "03": [55, 73, 308], "344": 55, "wall": 55, "lin": 55, "lei": 55, "24189255811275": 55, "824633725045": 55, "02": [55, 214], "03t18": 55, "633": 55, "893353201782": 55, "28t23": 55, "53": [55, 73, 280], "251": 55, "1030792152809": 55, "03t09": 55, "47": [55, 73, 137, 138, 140], "414": 55, "chen": 55, "32985348833887": 55, "07t07": 55, "30": [55, 73, 137, 138, 140, 211, 256, 258, 263, 300, 318], "038": 55, "zhang": [55, 310], "yang": [55, 310], "15393162789707": 55, "query4": 55, "membercount": 55, "country_count": 55, "counri": 55, "personcount": 55, "72057594037932503": 55, "72057594037932473": 55, "72057594037932489": 55, "72057594037932494": 55, "72057594037932501": 55, "72057594037934803": 55, "72057594037934804": 55, "72057594037935005": 55, "72057594037928132": 55, "72057594037935879": 55, "288230376151711799": 55, "country_top100_forums_dict": 55, "personcountforum": 55, "72057594037935702": 55, "72057594037930685": 55, "72057594037932114": 55, "72057594037934231": 55, "72057594037935703": 55, "72057594037935730": 55, "72057594037935734": 55, "72057594037932509": 55, "72057594037935707": 55, "72057594037935708": 55, "72057594037935711": 55, "72057594037935714": 55, "72057594037935719": 55, "72057594037935729": 55, "72057594037935731": 55, "72057594037935724": 55, "72057594037929560": 55, "72057594037931546": 55, "72057594037931545": 55, "72057594037932479": 55, "72057594037932485": 55, "72057594037932505": 55, "72057594037932511": 55, "72057594037935710": 55, "72057594037935722": 55, "72057594037929246": 55, "72057594037928266": 55, "72057594037935713": 55, "72057594037934308": 55, "72057594037934313": 55, "72057594037934302": 55, "72057594037930430": 55, "72057594037934303": 55, "72057594037932482": 55, "72057594037935147": 55, "72057594037935148": 55, "72057594037935157": 55, "72057594037927973": 55, "72057594037929386": 55, "72057594037934315": 55, "72057594037935720": 55, "72057594037935015": 55, "72057594037934300": 55, "72057594037930861": 55, "72057594037934319": 55, "72057594037931542": 55, "72057594037929583": 55, "72057594037933324": 55, "72057594037929182": 55, "72057594037929739": 55, "72057594037934829": 55, "72057594037935658": 55, "72057594037935660": 55, "72057594037935674": 55, "72057594037935682": 55, "72057594037935683": 55, "72057594037935672": 55, "72057594037927978": 55, "72057594037935163": 55, "72057594037935014": 55, "72057594037931544": 55, "72057594037934297": 55, "72057594037927979": 55, "72057594037932474": 55, "72057594037934384": 55, "72057594037932639": 55, "72057594037934380": 55, "72057594037935146": 55, "72057594037935152": 55, "72057594037928134": 55, "72057594037928674": 55, "72057594037929248": 55, "72057594037931240": 55, "72057594037931247": 55, "72057594037931256": 55, "72057594037930958": 55, "72057594037930963": 55, "72057594037931259": 55, "72057594037931260": 55, "72057594037931262": 55, "72057594037929365": 55, "72057594037929419": 55, "72057594037929421": 55, "72057594037929431": 55, "72057594037929434": 55, "72057594037929437": 55, "72057594037929446": 55, "72057594037929447": 55, "72057594037929449": 55, "72057594037929450": 55, "72057594037935166": 55, "72057594037929519": 55, "72057594037929451": 55, "72057594037929452": 55, "72057594037935046": 55, "72057594037932339": 55, "72057594037932481": 55, "72057594037934294": 55, "72057594037932389": 55, "72057594037932976": 55, "72057594037930870": 55, "72057594037931266": 55, "72057594037928092": 55, "72057594037928495": 55, "72057594037929510": 55, "72057594037929517": 55, "72057594037929961": 55, "72057594037929965": 55, "72057594037930242": 55, "72057594037930248": 55, "72057594037930250": 55, "72057594037930313": 55, "72057594037931547": 55, "72057594037935686": 55, "72057594037929052": 55, "72057594037929053": 55, "72057594037929055": 55, "72057594037929057": 55, "72057594037929060": 55, "72057594037934811": 55, "72057594037934813": 55, "72057594037934816": 55, "72057594037934821": 55, "72057594037934822": 55, "72057594037934823": 55, "72057594037934828": 55, "72057594037934835": 55, "72057594037934837": 55, "72057594037934975": 55, "72057594037934976": 55, "72057594037935032": 55, "72057594037935038": 55, "72057594037935045": 55, "72057594037935664": 55, "72057594037935673": 55, "72057594037935678": 55, "72057594037935685": 55, "72057594037931549": 55, "72057594037931550": 55, "72057594037931552": 55, "72057594037931554": 55, "72057594037931557": 55, "72057594037931560": 55, "72057594037931566": 55, "72057594037935671": 55, "72057594037935670": 55, "72057594037934977": 55, "72057594037931543": 55, "72057594037929518": 55, "72057594037935679": 55, "72057594037931575": 55, "72057594037932438": 55, "72057594037932878": 55, "72057594037932886": 55, "72057594037932888": 55, "72057594037927982": 55, "72057594037930526": 55, "72057594037930535": 55, "72057594037930546": 55, "72057594037930976": 55, "72057594037930536": 55, "72057594037931358": 55, "72057594037930366": 55, "72057594037931574": 55, "72057594037932435": 55, "72057594037935020": 55, "72057594037935864": 55, "72057594037933861": 55, "72057594037932440": 55, "72057594037927981": 55, "72057594037931349": 55, "72057594037931366": 55, "72057594037932885": 55, "72057594037927980": 55, "72057594037930529": 55, "72057594037930532": 55, "72057594037931304": 55, "72057594037932433": 55, "72057594037932441": 55, "72057594037934547": 55, "query11": 55, "live": 55, "startdat": 55, "enddat": 55, "216172782113784091": 55, "216172782113784250": 55, "216172782113784403": 55, "216172782113784537": 55, "216172782113784122": 55, "query14": 55, "country1": 55, "country2": 55, "subscor": 55, "award": [55, 310], "chile": 55, "p1": 55, "p2": 55, "case1": 55, "case2": 55, "case3": 55, "case4": 55, "216172782113784153": 55, "216172782113784100": 55, "216172782113783956": 55, "216172782113784673": 55, "216172782113784252": 55, "216172782113784263": 55, "216172782113784193": 55, "216172782113784242": 55, "216172782113784623": 55, "216172782113784498": 55, "216172782113784251": 55, "216172782113784538": 55, "216172782113784167": 55, "216172782113783864": 55, "216172782113784613": 55, "216172782113784116": 55, "jave": [56, 304], "javasdk": [56, 304], "creation": [57, 137, 211], "transit": [57, 256, 284], "magnitud": [57, 67], "superior": [57, 66, 68, 72], "rich": [57, 65, 68, 70, 137, 139], "neg": [57, 58, 135, 139, 141, 143, 147, 152, 171, 249], "gsl": [57, 58, 65, 137, 138, 139, 140, 144, 151], "gat": [57, 70, 135, 143, 319], "deepwalk": [57, 135, 319], "trans": [57, 135, 319], "pyg": [57, 58, 61, 70, 71, 72], "flexibli": [57, 65, 70, 72], "pytorch": [57, 58, 65, 70, 141, 143], "onlin": [57, 67, 70, 71, 296, 300], "fed": [57, 66, 70], "dockerfil": [57, 142], "ek": 57, "aw": [57, 73, 311], "ack": 57, "failov": [57, 72], "concentr": [57, 72, 191], "secur": [58, 70, 71], "industri": [58, 65, 70, 72, 73], "feasibl": [58, 70], "preprocess": [58, 147], "uniformli": [58, 224, 225, 226, 234, 235, 236, 237, 238, 282], "lookup": [58, 70, 147, 287], "topolog": [58, 137], "nn": [58, 60, 63, 64, 66, 70, 76, 135, 147, 314, 319], "ego": [58, 70, 143, 288, 319], "dimension": [58, 64, 66, 70, 136, 138, 139], "conv": [58, 61, 70], "edge_index": [58, 61], "carri": 58, "topologi": [58, 61, 67, 138, 143, 284, 296, 298, 299], "predict": [58, 64, 65, 66, 70], "asynchron": 58, "tensor": [58, 61, 75, 76, 77, 117, 135, 139, 143, 145, 291, 293], "plaintext": 58, "clearli": [58, 70], "space": [58, 70, 136, 137, 141, 152, 186, 234, 235, 236, 237, 238], "dimens": [58, 60, 63, 64, 66, 70, 136, 234, 235, 236, 237, 279, 314], "term": 58, "batchgraph": 58, "mini": [58, 70], "loss": [58, 60, 63, 64, 66, 70, 147, 314, 319], "mind": 58, "categori": [58, 60, 61, 66, 70, 147], "classif": [58, 62, 66, 70, 74, 135, 136, 147], "trainer": [58, 60, 63, 64, 66, 135, 314, 319], "dependic": 59, "hk": 59, "rm": [59, 147], "go": [59, 147, 214, 267, 300], "4g": 59, "aarch64": 60, "processor": 60, "verion": 60, "egographsag": [60, 63, 66, 314], "349": [60, 64, 66, 314], "venu": [60, 66], "confer": [60, 66, 139, 310], "www": [60, 63, 64, 66, 152, 206, 260, 269, 272, 300, 314], "tf": [60, 61, 63, 64, 66, 135, 136, 141, 142, 147, 314, 319], "disable_v2_behavior": [60, 63, 64, 66, 314], "importerror": [60, 63, 64, 66, 314], "load_ogbn_mag": [60, 63, 64, 66, 314, 320], "egosagesuperviseddataload": [60, 64, 66, 314], "localtrain": [60, 63, 64, 66, 314], "node_typ": [60, 63, 64, 66, 135, 137, 138, 141, 144, 147, 151, 314, 319], "edge_typ": [60, 63, 64, 66, 135, 137, 138, 139, 140, 141, 144, 147, 151, 299, 314, 319], "class_num": [60, 64, 66, 135, 314, 319], "features_num": [60, 63, 64, 66, 135, 314, 319], "hops_num": [60, 64, 66, 135, 314, 319], "nbrs_num": [60, 63, 64, 66, 314], "epoch": [60, 61, 63, 64, 66, 135, 140, 314, 319], "hidden_dim": [60, 63, 64, 66, 135, 147, 314, 319], "256": [60, 64, 66, 73, 216, 276, 300, 314], "in_drop_r": [60, 64, 66, 314], "learning_r": [60, 63, 64, 66, 147, 314], "reset_default_tf_graph": [60, 64, 66, 314], "act_func": [60, 64, 66, 314], "relu": [60, 64, 66, 314], "dropout": [60, 63, 64, 66, 147, 314], "train_data": [60, 63, 64, 66, 314], "mask": [60, 64, 66, 151, 314], "train_embed": [60, 64, 66, 314], "src_ego": [60, 63, 64, 66, 314], "train_label": [60, 64, 66, 314], "reduce_mean": [60, 64, 66, 135, 147, 314, 319], "sparse_softmax_cross_entropy_with_logit": [60, 64, 66, 135, 147, 314, 319], "logit": [60, 64, 66, 147, 314], "adamoptim": [60, 63, 64, 66, 147, 314], "test_embed": [60, 64, 66, 314], "test_label": [60, 64, 66, 314], "test_indic": [60, 64, 66, 314], "argmax": [60, 64, 66, 314], "output_typ": [60, 64, 66, 121, 291, 314], "int32": [60, 64, 66, 136, 138, 146, 147, 314], "test_acc": [60, 64, 66, 314], "div": [60, 64, 66, 314], "reduce_sum": [60, 64, 66, 314], "cast": [60, 64, 66, 147, 299, 314], "float32": [60, 64, 66, 138, 147, 314], "obgn": [60, 64], "mag": [60, 64, 66, 314], "paper_featur": [60, 66, 314], "feat_": [60, 63, 64, 66, 314], "128": [60, 63, 64, 66, 147, 314], "lg": [60, 63, 64, 66, 130, 294, 308, 314], "cite": [60, 63, 64, 66, 314], "gen_label": [60, 63, 64, 66, 130, 294, 314], "val": [60, 63, 64, 66, 135, 151, 294, 314, 319], "85": [60, 63, 64, 66, 73, 76, 294, 314], "seed": [61, 76, 135, 143, 147, 206, 209, 210, 211, 212, 214, 216, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 234, 235, 236, 237, 238, 241, 242, 243, 244, 247, 279, 282, 284], "sampler": [61, 63, 140, 143, 145], "categor": 61, "perceptu": 61, "theori": [61, 139, 147], "extern": [61, 65, 294, 300], "unsupervis": [61, 63, 74, 135, 141, 143, 144, 294], "mainstream": [61, 139, 140], "putback": 61, "outofrangeerror": [61, 140, 141, 147], "evolv": [61, 65, 300], "neighborsampl": [61, 139], "edge_weight": [61, 139, 141], "random_with_replac": 61, "topk": [61, 139, 141], "pad": [61, 139], "expand_factor": [61, 139, 144], "sparsenod": [61, 138, 139, 141], "sparseedg": [61, 138, 139, 141], "layer1": [61, 139], "layer2": [61, 139], "neighbor_sampl": [61, 139], "bui": [61, 65, 138, 139, 140, 141, 144, 147], "i2i": [61, 139, 141], "batch_siz": [61, 63, 135, 139, 140, 141, 144, 147, 303, 319], "layer_nod": [61, 139], "int_attr": [61, 138, 139, 140, 144, 147], "layer_edg": [61, 139], "float_attr": [61, 138, 139, 140, 144, 147], "egograph": [61, 70, 135, 143, 319], "negativesampl": [61, 144], "node_weight": [61, 141, 144], "edge_sampl": [61, 140, 144], "negative_sampl": [61, 135, 144, 319], "neg_nod": [61, 144], "heterogen": [61, 64, 66, 68, 70, 136, 137, 138, 139, 141], "randomli": [61, 141, 206, 212, 216, 218, 227, 229, 234, 237, 242, 284], "outv": [61, 135, 139, 141, 147, 318, 319], "overs": 61, "citat": [62, 64, 66, 74, 147, 314], "revisit": [62, 63, 74], "with_dataset": [63, 129, 134, 294, 320], "k8s_service_typ": [63, 129, 134, 294, 314], "loadbalanc": [63, 294, 314], "k8s_image_pull_polici": [63, 129, 134, 294], "cell": [63, 280], "metainfo": 63, "obgn_mag": 63, "ogbn_mag_smal": [63, 314, 320], "chose": [63, 64], "i_featur": [63, 64], "argpars": 63, "tfg": 63, "egosageunsuperviseddataload": 63, "parse_arg": 63, "argumentpars": 63, "egosag": 63, "add_argu": 63, "output_dim": [63, 135, 319], "neg_num": 63, "0001": 63, "agg_typ": 63, "drop_out": 63, "neg_sampl": 63, "temperatur": 63, "dim": [63, 234, 235, 236, 237], "src_emb": [63, 135, 319], "dst_emb": 63, "dst_ego": 63, "neg_dst_emb": 63, "neg_dst_ego": 63, "unsupervised_softmax_cross_entropy_loss": 63, "ogbn": [64, 66, 314], "academ": [64, 66, 314], "microsoft": [64, 66, 314], "institut": [64, 66, 314], "accomplish": [64, 66, 206], "word2vec": [64, 66, 314], "highlight": [65, 69], "modular": [65, 279], "rapidli": [65, 139], "seller": 65, "buyer": [65, 69], "fraudul": 65, "review": [65, 76, 152, 216, 234], "sell": 65, "suspici": 65, "anti": [65, 69, 72], "fraud": [65, 72], "feed": [65, 130, 135, 138, 141, 147, 151, 294, 319], "webui": 65, "necessit": 65, "comprehens": [65, 71, 73, 74], "diversifi": 65, "ingest": [65, 300], "rapid": 65, "hous": [65, 261, 262], "parti": [65, 267], "analyst": 65, "concurr": [65, 137], "crucial": 65, "gaia": [65, 318], "resembl": [65, 279, 284, 286], "olap": 65, "gen": [65, 141], "dataflow": 65, "arriv": 65, "suitabl": [65, 72, 137, 141, 147, 206, 300, 303], "hiactor": 65, "financi": 65, "risk": 65, "billion": [65, 68, 72], "preval": 65, "definit": [65, 152, 233, 234, 236], "miniconda": 66, "scientif": 66, "field_of_studi": [66, 314], "subject": 66, "examin": 66, "4307": [66, 314], "proven": 66, "2014": [66, 152, 314], "2020": [66, 314], "simple_g": [66, 310, 314], "ret1": [66, 314], "k_core": [66, 76, 152, 288, 310, 314], "ret2": [66, 314], "add_column": [66, 75, 149, 310, 314, 315], "kcore": [66, 314], "tc": [66, 314], "downstream": [66, 141], "convolut": [66, 70, 143], "supervis": [66, 74, 136, 139, 147, 294, 314], "train_gcn": [66, 314], "130": [66, 314], "robin": [66, 67, 185, 186], "lisu": 66, "icde2023": 67, "indroduc": 67, "sigmod2017": [67, 310, 316], "gra": 67, "ph": 67, "arallel": 67, "ngine": 67, "opensourc": 67, "raph": 67, "nalysi": 67, "elat": 67, "ransact": 67, "loos": [67, 72, 296], "mysql": [67, 296], "nutshel": [67, 296], "exploit": [67, 296], "ahead": [67, 296], "wal": [67, 296], "etriev": 67, "IN": 67, "terfac": 67, "portabl": [67, 299], "rust": [67, 299, 300], "handler": [67, 131, 294], "chive": 67, "movi": [67, 137], "guardian": 67, "galaxi": 67, "steal": 67, "tackl": [67, 68], "imbal": 67, "nvlink": 67, "acut": 67, "asymmetr": 67, "holist": 67, "innov": 67, "signific": [67, 72], "speedup": 67, "mangement": 67, "cncf": 67, "sandbox": 67, "memoiz": 67, "vldb2021": 67, "artial": 67, "ncrement": 67, "transport": 68, "protein": [68, 228], "uncov": 68, "vari": [68, 136], "former": 68, "unless": [68, 139, 287], "discov": 68, "discoveri": [68, 70, 294], "rough": 68, "accordingli": [68, 126], "snap": 68, "stanford": [68, 278], "cs224w": 68, "constitu": 68, "bellman": [68, 152], "ford": [68, 152], "wikipedia": [68, 76, 249, 253, 254, 255, 256, 258, 259, 260, 266, 267, 268, 269, 271, 272, 273, 274, 280], "wiki": [68, 76, 249, 253, 254, 255, 256, 258, 259, 260, 266, 267, 268, 269, 271, 272, 273, 274], "s_algorithm": 68, "towardsdatasci": 68, "9bd8951e7da": 68, "interconnect": [68, 137], "road": [68, 302], "logist": 68, "deliveri": 68, "media": 68, "ten": [68, 72, 139], "nontrivi": [68, 259], "steep": 68, "sought": 68, "occurr": 69, "monei": [69, 72], "launder": [69, 72], "exact": [69, 216, 218, 314], "exclud": 69, "expans": [69, 70, 144, 318], "heurist": [69, 214], "purchas": 69, "bolder": 69, "border": 69, "sens": [69, 279, 294], "worst": 69, "drug": 70, "accuraci": 70, "likelihood": 70, "biologi": 70, "valuabl": 70, "bioinformat": 70, "chemic": 70, "promis": 70, "driven": [70, 279, 299], "carefulli": 70, "rewind": 70, "stack": 70, "weigh": 70, "choic": [70, 299, 300], "matrix": [70, 76, 143, 152, 214, 232, 247, 250, 279, 287, 290], "huge": [70, 302], "unseen": [70, 302], "plain": 70, "text": [70, 78, 188], "backward": [70, 141, 238], "gradient": 70, "metric": [70, 234, 235, 236, 237, 238], "recal": 70, "f1": [70, 149], "assess": [70, 147, 264], "irregular": 70, "unstructur": 70, "pool": 70, "hardwar": [70, 303], "undergo": 70, "perceiv": 70, "maxgraph": [71, 316], "2x": 71, "soon": [71, 72, 73, 138], "excel": 71, "elast": [71, 300], "versatil": [71, 299], "acid": 71, "encrypt": 71, "stand": [72, 139, 140, 299], "summari": [72, 167], "simultan": [72, 296], "elabor": 72, "geminigraph": [72, 73], "plato": [72, 73], "empir": 72, "enjoi": 72, "neo4j": [72, 73, 298], "janusgraph": 72, "nebula": 72, "dbm": 72, "relaunch": [72, 300], "recoveri": 72, "protocol": [72, 294], "coars": 72, "grain": 72, "emphas": 72, "invest": 72, "trace": [72, 76], "dgl": 72, "accommod": 72, "nebular": 72, "movement": [72, 141], "trivial": [72, 203], "grade": 73, "r6": 73, "8xlarg": 73, "alibabacloud": 73, "ec": 73, "xl": 73, "a038f97": 73, "170e7d3": 73, "21009d6": 73, "v4": 73, "mpich": 73, "fair": 73, "huge_pag": 73, "jemalloc": 73, "o3": 73, "stub": [73, 80, 216, 244, 247], "determinist": [73, 78, 294, 300], "cdlp": [73, 76, 310], "load_direct": 73, "load_undirected_from_direct": 73, "reformat": 73, "mark": [73, 152], "datagen": 73, "9_0": 73, "fb": 73, "62": 73, "9_1": 73, "78": [73, 206, 280], "9_2": 73, "zf": 73, "88": [73, 219, 221], "60": [73, 152, 280], "61": 73, "176": [73, 243], "87": [73, 278], "graph500": 73, "71": [73, 152, 224, 228, 234], "79": [73, 219, 221], "friendster": 73, "97": 73, "39": [73, 137, 138, 140, 152, 280, 310, 312], "86": 73, "57": 73, "126": [73, 220], "98": 73, "83": 73, "66": 73, "1695": 73, "2742": 73, "3600": 73, "425": 73, "55": [73, 186], "lcc": 73, "521": 73, "51": [73, 280], "296": 73, "1859": 73, "201": [73, 283], "842": 73, "68": 73, "competitor": 73, "didn": 73, "pagerank_loc": 73, "65": 73, "72": 73, "84": 73, "63": [73, 223, 225], "gunrock": 73, "0c9a96": 73, "v0": [73, 142, 290], "grout": 73, "5ce160": 73, "v7": 73, "v10": 73, "gn6v": 73, "c8g1": 73, "16xlarg": 73, "8x": 73, "16gb": 73, "nvidia": 73, "v100": 73, "gb": 73, "devic": 73, "millisecond": 73, "soc": [73, 207, 208], "livejournal1": 73, "89": 73, "9345": 73, "215": [73, 276], "560": 73, "3029": 73, "129": [73, 242], "389": 73, "155": 73, "0549": 73, "sinaweibo": 73, "168": 73, "1649": 73, "647": 73, "orkut": 73, "105": [73, 207, 208], "121": 73, "193": 73, "658": 73, "3201": 73, "7677": 73, "137": [73, 214], "2139": 73, "319": 73, "261": 73, "69": [73, 274, 280], "235": 73, "567": 73, "283": 73, "073": 73, "6619": 73, "45": [73, 137, 138, 140, 216], "150": 73, "87299": 73, "162": 73, "60403": 73, "9676": 73, "141": 73, "347": 73, "7772": 73, "0118": 73, "306": 73, "8618": 73, "9134": 73, "467": 73, "60801": 73, "8666": 73, "3501": 73, "870": 73, "6451": 73, "198": 73, "829": 73, "5036": 73, "229": 73, "024": 73, "483": 73, "178": 73, "5593": 73, "807": 73, "367": 73, "6946": 73, "2339": 73, "jupyt": [74, 294], "notebook": [74, 294], "jupyterlab": 74, "playground": [74, 321], "bipartit": [74, 135, 137, 193, 241, 242, 243, 275, 319], "grapeengin": 75, "vineyardserv": 75, "grapeinst": 75, "graphscopeserv": 75, "inlin": 75, "dag_fil": 75, "dagfil": 75, "rundagfil": 75, "subscrib": 75, "charg": 75, "commspec": [75, 296, 299, 301], "comm_spec": [75, 296, 299, 301], "vineyard_socket": 75, "bl": 75, "dispatchresult": 75, "onrec": 75, "commanddetail": 75, "cmd": 75, "gsobject": 75, "objectmanag": 75, "subclass": [75, 287], "appentri": 75, "icontextwrapp": 75, "ifragmentwrapp": 75, "projector": 75, "propertygraphutil": 75, "objecttyp": 75, "tostr": [75, 301], "putobject": 75, "obj": 75, "removeobject": 75, "getobject": [75, 300, 301], "hasobject": 75, "analyticalserv": 75, "startserv": 75, "stopserv": 75, "engineconfig": 75, "tojsonstr": 75, "vineyard_rpc_endpoint": 75, "enable_java_sdk": 75, "setcommand": 75, "enum": 75, "aggregatepolici": 75, "enumer": 75, "kpickfirst": 75, "kpickfirstnonempti": 75, "krequireconsist": 75, "kconcat": 75, "kpickfirstnonemptygraphdef": 75, "kmergegraphdef": 75, "worker_id": [75, 149], "error_cod": 75, "ok": 75, "set_error": 75, "has_large_data": 75, "set_graph_def": 75, "graphdefpb": 75, "graph_def": 75, "set_data": 75, "large_data": 75, "inarch": 75, "arc": 75, "aggregate_polici": 75, "fragmentwrapp": 75, "addcolumn": 75, "vdata_t": 75, "edata_t": 75, "arrowvertexmap": 75, "internaltyp": 75, "compact": [75, 149], "arrowprojectedfragmentbas": 75, "bareregist": 75, "internal_oid_t": 75, "property_graph_typ": 75, "eid_typ": 75, "vertexrang": [75, 78], "inner_vertices_t": 75, "outer_vertices_t": 75, "vertices_t": 75, "sub_vertices_t": 75, "nbr_t": 75, "arrow_projected_fragment_impl": 75, "compact_nbr_t": 75, "compactnbr": 75, "nbrunit": 75, "compact_adj_list_t": 75, "compactadjlist": 75, "const_adj_list_t": 75, "const_compact_adj_list_t": 75, "property_vertex_map_t": 75, "arrowprojectedvertexmap": 75, "label_id_typ": 75, "prop_id_typ": 75, "property_graph_t": 75, "eid_array_t": 75, "data_t": 75, "inner_vertex_array_t": 75, "outer_vertex_array_t": 75, "objectmeta": 75, "preparetorunapp": 75, "prepareconf": 75, "fnum": [75, 78], "vertex_label": [75, 78], "edge_label": [75, 78, 294], "vertex_prop_id": 75, "edge_prop_id": 75, "mirrorvertic": 75, "getvertex": 75, "getid": 75, "getinternalid": 75, "getfragid": 75, "typedarrai": 75, "value_typ": 75, "gid2vertex": 75, "vertex2gid": 75, "getinnerverticesnum": 75, "getouterverticesnum": 75, "getverticesnum": 75, "getedgenum": [75, 301], "getinedgenum": [75, 301], "getoutedgenum": [75, 301], "getoutgoingedgenum": 75, "getincomingedgenum": 75, "gettotalverticesnum": 75, "isinnervertex": 75, "getoutervertex": 75, "getinnervertexid": 75, "getinnervertexinternalid": 75, "getoutervertexid": 75, "getoutervertexinternalid": 75, "gid2oid": 75, "oid2gid": 75, "innervertexgid2vertex": 75, "outervertexgid2vertex": 75, "getoutervertexgid": 75, "getinnervertexgid": 75, "compact_": 75, "enable_if": 75, "getincominginnervertexadjlist": 75, "getoutgoinginnervertexadjlist": 75, "getincomingoutervertexadjlist": 75, "getoutgoingoutervertexadjlist": 75, "src_fid": 75, "dst_fid": 75, "getlocaloutdegre": 75, "getlocalindegre": 75, "destlist": 75, "iedest": 75, "oedest": 75, "ioedest": 75, "getvertexmap": 75, "get_out_edges_ptr": 75, "get_in_edges_ptr": 75, "get_oe_offsets_begin_ptr": 75, "get_oe_offsets_end_ptr": 75, "get_ie_offsets_begin_ptr": 75, "get_ie_offsets_end_ptr": 75, "get_edata_array_accessor": 75, "get_vdata_array_accessor": 75, "get_arrow_frag": 75, "objectid": [75, 149, 299, 301], "vertex_map_id": 75, "local_vertex_map": [75, 301], "compact_edg": [75, 127, 149], "getoid": 75, "getgid": 75, "offset2lid": 75, "getoffsetfromlid": 75, "getlidfromgid": 75, "getfidfromgid": 75, "vid_typ": 75, "oid_t_": 75, "vid_t_": 75, "arrowfragmentload": 75, "efil": [75, 301], "vfile": [75, 301], "graph_info": 75, "leaf": [75, 77, 123, 152, 197, 281], "table_vec_t": 75, "loadvertexedget": 75, "loadvertext": 75, "loadedget": 75, "loadfrag": 75, "loadfragmentasfragmentgroup": 75, "addlabelstofrag": 75, "frag_id": [75, 296, 301], "addlabelstofragmentasfragmentgroup": 75, "initpartition": 75, "doxygenclass": 75, "arrowfragmentappend": 75, "doxygen": 75, "runner": [75, 310], "_build": 75, "appbas": 75, "defaultmessagemanag": 75, "need_split_edg": 75, "konlyout": 75, "propertyappbas": 75, "propertymessagemanag": 75, "propertyautoappbas": 75, "propertyautomessagemanag": 75, "app_t": 75, "defaultwork": 75, "parallelenginespec": 75, "pe_spec": 75, "defaultparallelenginespec": 75, "getcontext": 75, "ostream": 75, "parallelpropertywork": 75, "parallelpropertymessagemanag": 75, "propertyautowork": 75, "pointer": 75, "appfram": 75, "creatework": 75, "deletework": 75, "lib_path": 75, "worker_handl": 75, "queryarg": 75, "query_arg": [75, 121, 291], "context_kei": 75, "frag_wrapp": 75, "functiontyp": 75, "argsnum": 75, "argsunpack": 75, "proto": [75, 94, 121], "datatyp": 75, "argtypeat": 75, "defaultpropertywork": 75, "ctx_t": 75, "ctxwrapperbuild": 75, "contextwrapp": 75, "vertexpropertycontext": [75, 310], "contextbas": 75, "labeledvertexdatacontext": 75, "contextdatatyp": 75, "icolumn": 75, "get_column": 75, "get_typed_column": 75, "vertex_properti": [75, 76, 78], "properties_map": 75, "vertexdatacontextwrapp": 75, "ivertexdatacontextwrapp": 75, "fragment_wrapp": 75, "unique_ptr": 75, "tondarrai": 75, "todatafram": 75, "tovineyardtensor": 75, "tovineyarddatafram": 75, "toarrowarrai": 75, "tensorcontext": [75, 77], "set_shap": 75, "tensor_t": 75, "tensorcontextwrapp": 75, "itensorcontextwrapp": 75, "uint32_t": 75, "cmake_extra_opt": 76, "asset": 76, "dag": [76, 77, 94, 149, 287, 291, 294], "byte": [76, 83, 146], "labeled_vertex_data": 76, "dynamic_vertex_data": 76, "labeled_vertex_properti": 76, "cpp_pregel": 76, "cython_pi": 76, "cython_pregel": 76, "appdagnod": [76, 112, 118], "__init__": [76, 135, 142, 149, 150, 151, 287, 288, 290, 294, 300, 319], "bytesio": [76, 83], "is_compat": 76, "graphdagnod": [76, 87, 102, 103, 120, 127, 130, 149, 150, 294], "invalidargumenterror": [76, 294], "scannererror": 76, "incorrect": 76, "signatur": [76, 141, 287], "neccessari": 76, "resouc": 76, "__call__": 76, "kwarg": [76, 77, 83, 94, 108, 112, 113, 134, 144, 149, 151, 294], "app_asset": [76, 87, 93], "bind": [76, 299], "app_nod": 76, "__del__": 76, "unload": [76, 98, 118, 120], "attribute_assortativity_coeffici": [76, 310], "assort": 76, "ref": [76, 299], "joint": [76, 244, 245, 246, 247, 288], "newman": [76, 152, 216, 218, 279], "026126": 76, "2003": [76, 152, 209, 216, 227, 235], "numeric_assortativity_coeffici": [76, 310], "analog": 76, "k_": [76, 188, 252], "rac": 76, "s_i": 76, "sum_": [76, 152, 220], "w_": [76, 152, 220], "ij": [76, 152], "k_j": 76, "valueerror": [76, 129, 134, 149, 152, 226, 283, 294], "barrat": 76, "barth\u00e9lemi": 76, "pastor": 76, "satorra": 76, "vespignani": 76, "pna": 76, "101": [76, 316], "3747": 76, "3752": 76, "2004": [76, 241], "average_shortest_path_length": [76, 152, 288, 310], "frac": [76, 152, 162, 220], "vertexdatacontextdagnod": [76, 77], "avg_clust": [76, 310], "degree_threshold": 76, "greater": [76, 137, 152, 206, 237, 294, 299], "threshold": [76, 234, 235, 236, 237], "1e9": 76, "unweight": [76, 152], "foster": 76, "grassberg": 76, "paczuski": 76, "107": [76, 240], "10815": 76, "1e": [76, 147, 152, 206], "06": [76, 152], "html": [76, 152, 236, 239, 248, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 267, 269], "gv": 76, "hits_algorithm": 76, "vertexpropertycontextdagnod": [76, 77], "is_simple_path": [76, 310], "nonempti": 76, "explan": [76, 139], "biject": [76, 282], "smallest": [76, 239, 259, 269], "pairwis": 76, "boolean": [76, 78, 137, 141, 152, 171, 172, 209, 211, 214, 245, 285], "k_shell": [76, 310], "katz_centrality_numpi": [76, 152], "auttenu": 76, "maximun": 76, "min_progress": 76, "1000": [76, 137, 152, 284, 287, 300], "progress_tri": 76, "progress": [76, 231], "met": 76, "blondel": 76, "et": [76, 284], "al": [76, 284], "stat": [76, 234, 236], "mech": 76, "10008": 76, "2008": [76, 206, 229], "sotera": 76, "lpa_u2i": [76, 310], "labeledvertexpropertycontextdagnod": [76, 77], "evalut": 76, "dump": [76, 113, 149], "pagerank_nx": [76, 310], "max_it": [76, 152, 206], "tol": [76, 152, 206], "solver": 76, "voterank": [76, 310], "unsign": [76, 300], "weakli": [76, 152, 226], "basecontextdagnod": [77, 149], "bound_app": [77, 93], "contextdagnod": 77, "ndarrai": [77, 91, 103, 138, 139, 141, 144, 149, 151, 287, 320], "to_vineyard_tensor": [77, 293, 310], "to_vineyard_datafram": [77, 293, 310], "lazi": [77, 149, 294], "sg": 77, "r1": [77, 302, 303], "ramework": 77, "resultdagnod": [77, 113, 150], "r2": [77, 302, 303], "r3": [77, 302], "r4": [77, 302], "62586": 77, "comparis": 77, "alphabet": [77, 293], "tensorcontextdagnod": 77, "quer": [77, 104, 150, 293], "labeledvertexdatacontextdagnod": 77, "label_nam": [77, 293], "column_nam": [77, 293], "labeld": [77, 136], "context_nod": 77, "result_schema": 77, "referenc": 77, "dynamicvertexdatacontext": 77, "dag_nod": 77, "op": [77, 86, 88, 89, 90, 91, 93, 94, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 116, 117, 118, 120, 121, 145, 287, 291, 294], "get_str": 78, "property_id": 78, "get_doubl": 78, "edge_label_id": 78, "edge_label_nam": 78, "incoming_edg": 78, "register_aggreg": 78, "pregelaggregatortyp": 78, "aggr_typ": 78, "get_aggregated_valu": 78, "get_total_vertices_num": 78, "vertex_property_num": 78, "vertex_label_nam": 78, "vertex_label_id": 78, "edge_property_num": 78, "get_vertex_label_by_id": 78, "get_vertex_label_id_by_nam": 78, "get_edge_label_by_id": 78, "get_edge_label_id_by_nam": 78, "edge_properti": 78, "get_vertex_property_id_by_nam": 78, "vertex_property_nam": [78, 299], "get_vertex_property_by_id": 78, "vertex_property_id": 78, "get_edge_property_id_by_nam": 78, "edge_property_nam": 78, "get_edge_property_by_id": 78, "edge_property_id": 78, "queue": 78, "kboolandaggreg": 78, "AND": 78, "kbooloraggreg": 78, "kbooloverwriteaggreg": 78, "overwritten": 78, "kdoubleminaggreg": 78, "kdoublemaxaggreg": 78, "kdoublesumaggreg": 78, "kdoubleproductaggreg": 78, "kdoubleoverwriteaggreg": 78, "kint64minaggreg": 78, "int64": [78, 105, 127, 136, 138, 139, 144, 146, 147, 149, 320], "kint64maxaggreg": 78, "kint64sumaggreg": 78, "kint64productaggreg": 78, "kint64overwriteaggreg": 78, "ktextappendaggreg": 78, "kalongoutgoingedgetooutervertex": 78, "kalongincomingedgetooutervertex": 78, "kalongedgetooutervertex": 78, "nerghbor": 78, "get_total_nodes_num": 78, "get_nodes_num": 78, "get_inner_nodes_num": 78, "get_outer_nodes_num": 78, "outer_nod": 78, "get_node_fid": 78, "is_inner_nod": 78, "is_outer_nod": 78, "get_nod": [78, 138], "get_outer_nod": 78, "get_node_id": 78, "get_incoming_edg": 78, "has_child": 78, "child": [78, 189, 281], "has_par": 78, "parent": [78, 79, 121, 126, 281], "get_indegre": 78, "get_outdegre": 78, "kmaxaggreg": 78, "ksumaggreg": 78, "kproductaggreg": 78, "koverwriteaggreg": 78, "subproject": 79, "scratch": 79, "readm": 79, "never": [79, 287], "hopefulli": 79, "inspir": [79, 287], "dskiptest": 79, "dmaven": 79, "antrun": 79, "moment": [79, 300], "jni": 79, "mac": [79, 312, 314], "gae_java": 80, "graphscope_typ": 82, "graphscopetyp": 82, "myalgorithm": 82, "filenotfounderror": 83, "permissionerror": 83, "typeerror": [83, 121, 294], "arrowproperti": 84, "subrang": 84, "loader_op": 85, "notimplementederror": 85, "run_app": [90, 91, 108, 116, 117], "copy_typ": 92, "session_id": [94, 98, 121, 149, 150, 287, 291], "graph_typ": [94, 287], "graphtyp": [94, 287, 296, 301], "view_typ": 95, "vertex_or_edge_label_list": 96, "graph_util": 96, "vertexlabel": 96, "op_typ": [98, 121, 291], "uiliti": 98, "result_set": 100, "fetch_typ": 100, "raphscop": 100, "resultsetdagnod": 100, "resultset": [100, 300], "interactive_queri": [104, 105, 131, 294], "request_opt": [104, 105, 150], "interactivequerydagnod": [104, 105, 131], "gremlin_script": [105, 150], "modify_typ": [106, 107], "attr": [106, 107, 121, 141, 154, 155, 156, 287, 290], "type_pb2": [106, 107, 111], "nx_add_edg": 106, "nx_del_edg": 106, "nx_update_edg": 106, "nx_add_nod": 107, "nx_del_nod": 107, "nx_update_nod": 107, "fd": [108, 113, 310], "storage_opt": [108, 113], "write_opt": [108, 113], "adaptor": 108, "result_path": [108, 113], "vertex_collect": 109, "edge_collect": 109, "report_typ": 111, "variati": 111, "node_num": [111, 314, 318], "has_nod": [111, 287], "has_edg": [111, 287], "node_data": 111, "edge_data": [111, 302], "neighbors_by_nod": 111, "succs_by_nod": 111, "preds_by_nod": 111, "neighbors_by_loc": 111, "succs_by_loc": 111, "preds_by_loc": 111, "deg_by_nod": 111, "in_deg_by_nod": 111, "out_deg_by_nod": 111, "deg_by_loc": 111, "in_deg_by_loc": 111, "out_deg_by_loc": 111, "nodes_by_loc": 111, "loc": 111, "multigraph": [111, 152, 154, 162, 166, 175, 180, 181, 207, 208, 216, 218, 231, 232, 233, 287, 290], "multidigraph": [111, 154, 166, 175, 180, 181, 218, 226, 227, 285, 287], "large_attr": [121, 291], "types_pb2": [121, 287], "operationtyp": 121, "opdef": [121, 125], "attrvalu": [121, 149, 318], "largeattrvalu": 121, "op_def_pb2": 125, "incoming_data": [127, 149], "as_default": [127, 294], "k8s_gs_imag": [129, 134, 294, 312], "k8s_etcd_imag": [129, 134], "k8s_image_pull_secret": [129, 134, 294], "k8s_coordinator_cpu": [129, 134, 294], "k8s_coordinator_mem": [129, 134, 294], "k8s_vineyard_cpu": [129, 134, 294], "k8s_mars_worker_cpu": [129, 134, 294], "k8s_mars_worker_mem": [129, 134, 294], "k8s_mars_scheduler_cpu": [129, 134, 294], "k8s_mars_scheduler_mem": [129, 134, 294], "with_mar": [129, 134, 294], "k8s_waiting_for_delet": [129, 134, 294], "dataset_download_retri": [129, 134], "k8s_deploy_mod": [129, 134, 294], "interactivequeri": [131, 150, 292, 294, 318], "alia": [133, 135, 141, 287, 294, 319], "kv": 134, "cooper": [135, 149], "\u02bbegograph": 135, "\u02bbegotensor": 135, "sample_se": [135, 319], "positive_sampl": [135, 319], "receptive_fn": [135, 319], "egotensor": [135, 143, 319], "egoflow": [135, 143, 319], "cora": [135, 147, 319], "convers": [135, 136, 296], "node_t": [135, 136, 147, 319], "edge_table_with_self_loop": [135, 319], "train_tabl": [135, 319], "val_tabl": [135, 319], "test_tabl": [135, 319], "dataset_fold": [135, 319], "decod": [135, 136, 137, 147, 319], "attr_typ": [135, 136, 137, 147, 319], "1433": [135, 147, 319], "attr_delimit": [135, 136, 137, 319], "learningbasedmodel": [135, 319], "categorical_attrs_desc": [135, 319], "_sample_se": [135, 319], "_positive_sampl": [135, 319], "_receptive_fn": [135, 319], "ego_flow": [135, 319], "src_ego_spec": [135, 319], "pos_src_ego_tensor": [135, 319], "identityencod": [135, 319], "widendeepencod": [135, 319], "feature_encod": [135, 319], "gcnconv": [135, 319], "sparseegographencod": [135, 319], "_encod": [135, 319], "conv_lay": [135, 319], "_supervised_loss": [135, 319], "full_graph_mod": [135, 319], "localtftrain": [135, 319], "model_fn": [135, 147, 319], "batch_szi": [135, 319], "load_graph": [135, 319], "server_id": [135, 319], "server_count": [135, 137, 147, 319], "tracker": [135, 147, 319], "conclud": 135, "bought": 136, "saturdai": 136, "morn": 136, "bigint": 136, "dst_id": [136, 137, 138, 140, 141, 147, 151], "shanghai": 136, "mandatori": 136, "localfilesystem": 136, "pai": [136, 141, 142], "tab": 136, "s2": [136, 252], "hangzhou": [136, 320], "215340": 136, "933091": 136, "grei": 136, "362519": 136, "097545": 136, "chapter": [136, 137, 139, 233, 270], "comma": 136, "dscript": 136, "dentryfil": 136, "dtabl": 136, "odp": 136, "prj": 136, "flag": [136, 137], "define_str": 136, "node_sourc": 136, "edge_sourc": 136, "hash": 136, "bucket_s": 136, "greatli": [136, 137, 299], "your_attr_typ": 136, "you_delimit": 136, "weightd": 136, "scr_id": 136, "10001": [136, 137, 138, 140], "feature1": 136, "10002": [136, 137, 138, 140], "feature2": 136, "10003": [136, 137, 138, 140], "feature3": 136, "123": 136, "124": 136, "\u02bbitem_node_decod": 136, "\u02bbuser_node_decod": 136, "\u02bbedge_decod": 136, "item_node_decod": 136, "user_node_decod": 136, "edge_decod": [136, 147], "graph_object": 136, "commod": 137, "swing": [137, 138], "30001": [137, 138, 140], "30002": [137, 138, 140], "30003": [137, 138, 140], "table_1": 137, "table_2": 137, "dest": 137, "10004": [137, 138], "20001": [137, 138, 140], "20003": [137, 138, 140], "33": [137, 138, 140, 277, 280], "20004": [137, 138, 140], "46": [137, 138, 140, 152, 274], "ui_decod": 137, "uv_decod": 137, "table_3": 137, "table_4": 137, "click_v": 137, "task_index": [137, 147], "task_count": 137, "atyp": 137, "job_nam": [137, 147], "worker_host": 137, "respond": 137, "distributedli": [137, 143, 145, 146, 147], "necessarili": [137, 249], "serious": 137, "decreas": [137, 216, 218], "speak": 137, "client_count": [137, 147], "wait_for_clos": [137, 147], "matter": [137, 293], "infom": 138, "get_topologi": 138, "src_type": 138, "dst_type": 138, "figure1": 138, "topo": 138, "print_al": 138, "egde_typ": 138, "ravers": 138, "string_attr": 138, "src_node": 138, "dst_node": 138, "diment": 138, "dense_shap": 138, "arra": 138, "__next__": 138, "dimenti": 138, "table1": 138, "u_nod": 138, "traves": 138, "get_edg": 138, "inferfac": 138, "table2": 138, "table3": 138, "click_edg": 138, "table4": 138, "conduc": 139, "character": 139, "recept": [139, 143], "ai": 139, "meta_path": 139, "layer_id": 139, "famili": [139, 152, 190, 248, 276], "random_without_replac": 139, "q": [139, 141, 147, 229, 233], "ueri": 139, "default_neighbor_id": 139, "set_default_neighbor_id": [139, 148], "xx": 139, "set_padding_mod": 139, "circular": [139, 141, 191], "alogrithm": 140, "throw": 140, "nodesampl": 140, "node_sampl": 140, "by_ord": 140, "node_from": [140, 151], "edge_src": [140, 151], "edge_dst": [140, 151], "edgesampl": 140, "matur": 141, "dl": 141, "sheer": 141, "sink": 141, "generatortyp": [141, 151], "won": [141, 302], "cursor": 141, "inv": [141, 147, 318], "ingo": 141, "query\u5bf9\u8c61": 141, "outneg": [141, 144], "inneg": [141, 144, 147], "candid": [141, 144], "u2i": 141, "ouv": 141, "func": 141, "512": 141, "edeg": 141, "src_1hop": 141, "dst_1hop": 141, "neg_i": 141, "neg_i_1hop": 141, "parmas_list": 141, "bodi": [141, 145, 253], "params_list": 141, "compli": 141, "arrang": 141, "anonym": [141, 279], "src_attr": 141, "neg_attr": 141, "encode_fn": [141, 147], "src_atr": 141, "outnegv": 141, "gen1": 141, "gen2": 141, "circumst": 141, "sour": 141, "foewa": 141, "from_gener": [141, 147], "make_one_shot_iter": [141, 147], "get_next": [141, 147], "slightli": [142, 206, 293], "zhangjiak": 142, "cp27": 142, "cp27mu": 142, "linux_x86_64": 142, "sudo": [142, 311, 312], "autoconf": 142, "automak": 142, "libtool": 142, "submodul": [142, 145, 299], "your_wheel_nam": [142, 145], "test_cpp_ut": 142, "test_python_ut": 142, "fastgcn": [143, 319], "graphsaint": 143, "amd": 143, "oprat": 144, "object_typ": 144, "oprequest": 145, "req": 145, "oprespons": 145, "params_": 145, "scalar": [145, 152], "tensors_": 145, "redirect": [145, 225], "rewrit": 145, "till": [145, 294], "happen": [145, 299, 302], "stitch": 145, "myoper": 145, "register_oper": 145, "opnam": 145, "randomsampl": 145, "writ": 145, "xxxsampler": 145, "kubeflow": 146, "reader": 146, "seek": 146, "litestr": 146, "char": [146, 149, 299], "getfiles": 146, "getrecordcount": 146, "register_file_system": 146, "myfilesystem": 146, "registr": 146, "ppi": 147, "train_supervis": 147, "gen_test_data": 147, "getopt": 147, "argv": 147, "cur_path": 147, "elif": 147, "102": [147, 283], "__name__": 147, "__main__": 147, "dirnam": 147, "rf": 147, "\u4f60\u9700\u8981\u628agen_test_data": 147, "py\u653e\u5230shell\u811a\u672c\u540c\u4e00\u76ee\u5f55\u4e0b": 147, "fi": 147, "sleep": 147, "case_bas": 147, "genetic_algorithm": 147, "neural_network": 147, "probabilistic_method": 147, "reinforcement_learn": 147, "rule_learn": 147, "bag": 147, "1033": 147, "103482": 147, "103515": 147, "31336": 147, "1061127": 147, "05882353": 147, "1106406": 147, "n_featur": 147, "node_decod": 147, "n_class": 147, "140": [147, 210], "n_hop": 147, "n_epoch": 147, "tripl": 147, "graph_object_cn": 147, "md": 147, "sample_gen": 147, "input_fn": 147, "sample_input_fn": 147, "float64": 147, "tensorshap": 147, "layer_featur": 147, "aggregate_fn": 147, "self_vec": 147, "neigh_vec": 147, "raw_feat_layer_index": 147, "layer_index": 147, "variable_scop": 147, "_layer": 147, "auto_reus": 147, "neigh_weight": 147, "get_vari": 147, "self_weight": 147, "output_shap": 147, "get_shap": 147, "neigh_mean": 147, "from_neigh": 147, "matmul": 147, "from_self": 147, "add_n": 147, "leaky_relu": 147, "depth_to_encod": 147, "h_self_vec": 147, "h_neighbor_vec": 147, "features_column": 147, "feature_column": 147, "numeric_column": 147, "loss_fn": 147, "train_op": 147, "global_step": 147, "get_global_step": 147, "estimatorspec": 147, "modekei": 147, "set_xxx": 148, "set_yyi": 148, "other_model": 148, "fill": [148, 188, 199, 209, 243], "nbr_id": 148, "set_default_int_attribut": 148, "set_default_float_attribut": 148, "set_default_string_attribut": 148, "set_inter_threadnum": 148, "intra": [148, 206, 209], "set_intra_threadnum": 148, "16mb": 148, "reset": 148, "enlarg": 148, "set_rpc_message_max_s": 148, "del": [149, 287], "objectnam": 149, "varint": 149, "half": [149, 294], "degener": 149, "_e": [149, 296, 320], "src_field": [149, 315], "dst_field": [149, 315], "unspecifi": [149, 164], "vid_field": [149, 315], "graph_nod": 149, "restor": 149, "deseri": [149, 299], "detach": 149, "varaibl": 149, "lexic": 149, "classmethod": 149, "broken": 149, "save_to": 149, "path_": 149, "s3": [149, 320], "graphschema": [149, 287], "schema_path": 149, "currrent": 149, "object_id": [149, 150, 151], "filetyp": 149, "ordinari": 149, "f0": 149, "orc": [149, 298], "parquet": [149, 298], "graph_build": 149, "deprec": [149, 167, 265, 294], "admin": [149, 300], "group_id": 149, "member_s": 149, "leader_student_id": 149, "student": 149, "member_student_id": 149, "group_for_teacher_stud": 149, "group_nam": 149, "establish_d": 149, "teacher_in_charge_id": 149, "teacher": 149, "lesson_num": 149, "avg_scor": 149, "student_id": 149, "salari": 149, "teacher_id": 149, "both_in_out": 149, "unambigu": 149, "orign": 149, "frontend_endpoint": 150, "graph_url": [150, 300, 318], "lifetim": 150, "traversal_sourc": 150, "graphtraversalsourc": 150, "contruct": 150, "runtimeerror": 150, "modern_graph_data_dir": 150, "tolist": [150, 300], "dtype": 151, "pywrap": 151, "nodefrom": 151, "get_handl": 151, "worker_count": 151, "base64": 151, "nstart": 152, "poweriterationfailedconverg": 152, "langvil": 152, "meyer": 152, "survei": [152, 240], "cites": 152, "ist": 152, "psu": 152, "edu": 152, "713792": 152, "jon": 152, "kleinberg": 152, "authorit": 152, "journal": [152, 221, 229, 246, 277, 280, 284], "acm": [152, 227, 278, 310], "604": 152, "1999": [152, 207, 208], "doi": [152, 222, 229, 264], "1145": 152, "324133": 152, "324140": 152, "cornel": 152, "kleinber": 152, "pdf": [152, 234, 236, 237], "load_centr": 152, "loop": [152, 162, 175, 214, 216, 218, 220, 226, 234, 235, 236, 237, 238, 244, 247, 287, 288, 318], "in_degree_centr": [152, 288], "networkxnotimpl": 152, "out_degree_centr": [152, 288], "equat": 152, "ax": 152, "eigenvalu": [152, 232], "virtu": 152, "perron": 152, "frobeniu": 152, "theorem": [152, 231, 243], "0e": 152, "strength": 152, "2f": 152, "networkxpointlessconcept": [152, 282], "null": [152, 169, 185, 186, 193, 200, 252, 282, 287], "networkxerror": [152, 158, 165, 167, 171, 172, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 222, 228, 231, 232, 233, 244, 247, 279, 287, 290], "eigenvector_centrality_numpi": 152, "discern": 152, "phillip": 152, "bonacich": 152, "american": 152, "sociologi": 152, "1170": 152, "1182": 152, "1986": [152, 276], "leonidzhukov": 152, "net": [152, 206], "hse": 152, "socialnetwork": 152, "oxford": [152, 185, 186, 235, 279], "press": [152, 185, 186, 233, 275, 278, 279], "usa": [152, 239, 240, 286], "pp": [152, 216, 219, 220, 221, 234, 240, 241, 278, 284], "169": 152, "x_i": 152, "a_": 152, "x_j": 152, "lambda_": 152, "distant": 152, "penal": 152, "strictli": [152, 206], "invers": [152, 231], "phi": 152, "sqrt": [152, 232], "adjacency_spectrum": 152, "720": 152, "leo": 152, "sociometr": 152, "psychometrika": 152, "1953": 152, "springer": [152, 241], "1007": [152, 186, 222], "bf02289026": 152, "has_path": [152, 288], "djikstra": 152, "floyd": 152, "warshal": 152, "bfs_edg": [152, 288], "depth_limit": 152, "core_numb": 152, "vladimir": 152, "batagelj": 152, "matjaz": 152, "zaversnik": 152, "arxiv": [152, 195, 210, 211, 212, 226, 279], "ab": [152, 210, 211, 212, 226, 234, 238, 279, 281], "0310049": 152, "c_u": 152, "deg": [152, 206, 220, 287], "geometr": [152, 274, 288], "vw": 152, "hat": 152, "uv": [152, 220], "uw": 152, "tot": 152, "2deg": 152, "leftrightarrow": 152, "complete_graph": [152, 158, 287], "saram\u00e4ki": 152, "kivel\u00e4": 152, "onnela": 152, "kaski": 152, "kert\u00e9sz": 152, "027105": 152, "2007": [152, 234, 280], "jponnela": 152, "web_docu": 152, "a9": 152, "intens": 152, "coher": 152, "motif": 152, "065103": 152, "2005": [152, 228, 234], "sign": 152, "correl": 152, "costantini": 152, "perugini": 152, "plo": 152, "e88669": 152, "fagiolo": 152, "76": 152, "026107": 152, "average_clust": [152, 288], "count_zero": 152, "c_v": 152, "nonzero": [152, 216, 233], "avg": 152, "routin": [152, 287], "marcu": 152, "kaiser": 152, "0802": 152, "2512": 152, "g_to_add_to": [154, 155, 156], "nodes_for_cycl": 154, "keyword": [154, 155, 156, 223, 230, 234, 235, 236, 237, 238, 287, 290, 293, 294], "add_path": [154, 156, 287], "add_star": [154, 155], "nodes_for_path": 155, "add_cycl": [155, 156], "nodes_for_star": 156, "star": [156, 193, 202], "middl": 156, "cnbor": 158, "with_data": 159, "empty_graph": [159, 200], "frequenc": 161, "width": 161, "2m": [162, 240], "prevent": 165, "err": 165, "frozen": [165, 170], "unfreez": 165, "frozen_graph": 165, "unfrozen_graph": 165, "is_frozen": 165, "neighbour": 167, "freez": [170, 288], "signifi": [171, 172], "nodelist": [175, 214], "selfloop_edg": [175, 180, 216, 218], "number_of_selfloop": [175, 181], "selfloop": [180, 181, 214, 220], "nloop": 180, "nodes_with_selfloop": [180, 181], "datadict": [181, 287], "datavalu": 181, "attrnam": [181, 318], "edgeit": 181, "ekei": 181, "graph_atlas_g": 185, "linearli": [185, 201], "ronald": [185, 186, 276], "wilson": [185, 186], "1998": [185, 186], "111223": 186, "112222": 186, "automorph": [186, 259], "graph_atla": 186, "expens": 186, "popul": [186, 187, 189, 190, 192, 194, 197, 199, 201, 202, 205, 216, 218, 219, 221, 223, 224, 225, 231, 232, 233, 239, 240, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 282, 289], "book": 186, "violat": 186, "lexicograph": 186, "nondecreas": 186, "001111": 186, "000112": 186, "1008": 186, "3333444": 186, "3333336": 186, "1012": 186, "1213": 186, "1244555": 186, "1244456": 186, "perfectli": 187, "ari": [187, 197], "height": 187, "children": [187, 197, 281], "barbel": [188, 199], "bell": 188, "p_": [188, 220, 234], "mere": [188, 199], "aldou": [188, 199], "jim": [188, 199], "binomi": 189, "leftmost": 189, "ci_n": 190, "x_1": 190, "x_2": 190, "x_m": 190, "mod": [190, 204, 233, 252], "subfamili": 190, "ladder": [191, 198], "cl_n": 191, "k_n": 192, "is_direct": [192, 287], "subset_s": 193, "multipartit": [193, 204], "tripartit": 193, "bc": 193, "complete_bipartite_graph": 193, "c_n": 194, "hierarch": 195, "dorogovtsev": 195, "goltsev": 195, "mend": 195, "mat": 195, "0112143": 195, "kw": [196, 294], "unknown": [196, 299], "abc": 196, "rightmost": 197, "jame": 197, "andrew": 197, "storer": 197, "birkhaus": 197, "boston": 197, "2001": [197, 210, 218, 223, 225, 233, 242, 300], "225": [197, 287], "lollipop": 199, "k_m": 199, "p_n": [199, 201], "etext": 199, "turan": 204, "disjoint": [204, 215, 253], "2r": 204, "tau1": 206, "tau2": 206, "mu": 206, "average_degre": 206, "min_degre": 206, "max_degre": 206, "min_commun": 206, "max_commun": 206, "lfr": 206, "mathrm": 206, "expon": 206, "reassign": [206, 244], "interv": [206, 238, 294], "affili": [206, 314], "random_st": [206, 209, 210, 211, 212, 214, 216, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 234, 235, 236, 237, 238, 241, 242, 243, 247, 279, 282, 284], "exceededmaxiter": 206, "250": 206, "frozenset": [206, 289], "rewir": [206, 208, 212, 244, 247], "wire": 206, "robust": 206, "somewhat": 206, "narrow": 206, "andrea": 206, "lancichinetti": 206, "santo": [206, 210, 211, 212], "fortunato": [206, 210, 211, 212], "filippo": 206, "radicchi": 206, "phy": [206, 218, 223, 224, 225, 228], "rev": [206, 218, 223, 224, 225, 228], "046110": 206, "santofortunato": 206, "caveman": [207, 208, 212], "unclear": [207, 208], "connected_caveman_graph": [207, 213], "watt": [207, 208, 218], "phenomenon": [207, 208], "amer": [207, 208], "493": [207, 208], "527": [207, 208], "caveman_graph": 208, "p_in": [209, 210, 211], "p_out": [209, 210, 211], "gaussian": [209, 235, 236, 237], "drawn": [209, 237], "varianc": 209, "probabilti": [209, 212], "random_partition_graph": [209, 214], "ulrik": 209, "brand": 209, "marco": 209, "gaertler": 209, "dorothea": 209, "wagner": 209, "11th": 209, "europ": 209, "symp": 209, "plant": [210, 211], "random_partition_model": 210, "condon": 210, "karp": 210, "algor": 210, "116": 210, "486": [210, 211, 212], "174": [210, 211, 212], "0906": [210, 211, 212], "0612": [210, 211, 212], "relax": 212, "februari": 212, "num_cliqu": 213, "clique_s": 213, "ring": 213, "stochast": [214, 288], "densiti": [214, 216, 234, 236], "symmetr": [214, 233, 256, 260, 266, 268, 279], "300": [214, 283], "prob": 214, "450": 214, "quotient_graph": 214, "relabel": 214, "245": 214, "348": 214, "405": 214, "051": 214, "022": 214, "planted_partition_graph": 214, "gaussian_random_partition_graph": 214, "gnp_random_graph": [214, 241, 242, 243], "holland": 214, "laskei": 214, "leinhardt": 214, "blockmodel": 214, "109": 214, "1983": 214, "windmil": 215, "thought": 215, "contract": 215, "wd": 215, "deg_sequ": [216, 217, 218, 219, 221], "pseudograph": [216, 218], "nonneg": [216, 218], "is_graph": [216, 222], "graphic": [216, 218, 221, 222], "realiz": [216, 218, 221, 244, 245, 246, 247, 274, 299], "tend": 216, "poisson": 216, "constant": [216, 318], "siam": [216, 221, 227], "167": 216, "random_sequ": 216, "hundr": [216, 227], "random_powerlaw_tree_sequ": 216, "5000": 216, "actual_degre": 216, "in_degree_sequ": 218, "out_degree_sequ": 218, "directed_random": 218, "configuration_model": [218, 219, 222], "finit": [218, 220, 233], "strogatz": 218, "026118": 218, "din": 218, "dout": 218, "in_deg_sequ": 219, "out_deg_sequ": 219, "kleitman": [219, 221], "valenc": [219, 221], "mathemat": [219, 221, 229, 231, 233, 242], "1973": [219, 221], "w_0": 220, "w_1": 220, "ldot": 220, "w_u": [220, 234, 237], "w_v": [220, 234, 237], "sum_k": 220, "w_k": 220, "z": [220, 233, 234, 238], "mathcal": 220, "ne": 220, "uu": 220, "fan": [220, 234, 310], "chung": [220, 234], "lu": [220, 310], "ann": 220, "combinator": [220, 280], "145": 220, "2002": 220, "joel": 220, "miller": 220, "aric": [220, 234], "hagberg": [220, 234], "waw": [220, 234], "alan": 220, "friez": 220, "paul": 220, "horn": 220, "pawe\u0142": 220, "pra\u0142at": 220, "lnc": 220, "6732": 220, "115": 220, "havel": 221, "hakimi": 221, "networkxexcept": 221, "resort": 221, "496": 221, "506": 221, "1962": [221, 239, 240, 286], "d_m": 222, "uniform": [222, 234, 243], "networkxunfeas": 222, "moshen": 222, "bayati": 222, "jeong": 222, "han": 222, "kim": 222, "amin": 222, "saberi": 222, "algorithmica": 222, "58": 222, "860": 222, "910": 222, "s00453": 222, "009": 222, "9340": 222, "gn": [223, 286], "a_k": 223, "krapivski": [223, 224, 225, 228], "redner": [223, 224, 225], "066123": [223, 225], "gnc": 224, "growth": [224, 284], "036118": 224, "2005k": 224, "gnr": 225, "probabilii": 225, "self_loop": 226, "preferenti": 226, "proport": 226, "peterson": [226, 269], "nichola": 226, "bori": 226, "pittel": 226, "preprint": 226, "1311": 226, "5961": 226, "2013": [226, 246], "gamma": 227, "delta_in": 227, "delta_out": 227, "bia": 227, "bollob\u00e1": 227, "borg": 227, "chay": 227, "riordan": 227, "fourteenth": 227, "annual": 227, "symposium": 227, "132": [227, 242], "139": 227, "diverg": [228, 288], "retent": 228, "disallow": 228, "ispolatov": 228, "yuryev": 228, "061911": 228, "inclus": 229, "knudsen": 229, "michael": 229, "carsten": 229, "wiuf": 229, "markov": 229, "chain": 229, "1155": 229, "190836": 229, "radiu": [230, 235, 236, 237], "chordal": 231, "chord": [231, 245], "modulo": 231, "mildli": 231, "prime": [231, 233], "lubotzki": 231, "invari": 231, "birkh\u00e4us": 231, "verlag": 231, "basel": 231, "1994": 231, "marguli": 232, "gabber": 232, "galil": 232, "palei": 233, "pz": 233, "f_q": 233, "odd": 233, "bolloba": 233, "cambridg": 233, "theta": [234, 237], "po": [234, 235, 236, 237, 238], "p_dist": [234, 236], "geograph": [234, 237], "rectangular": [234, 238], "ge": [234, 238], "prone": 234, "le": [234, 238, 278], "euclidean": [234, 235, 236, 237, 238], "conceiv": 234, "apart": 234, "taxicab": [234, 238], "expovari": [234, 237], "masuda": 234, "miwa": 234, "konno": 234, "036108": 234, "milan": 234, "bradonji\u0107": 234, "allon": 234, "percu": 234, "giant": 234, "antoni": 234, "bonato": 234, "209": 234, "216": 234, "cube": [235, 236, 237, 255, 272], "kdtree": [235, 236, 237], "minkowski": [235, 236, 237], "infin": [235, 236, 237], "erd\u0151": [235, 236, 237], "r\u00e9nyi": [235, 236, 237], "twenti": 235, "2d": [235, 236, 237, 287, 290], "deviat": [235, 236, 237], "gauss": [235, 236, 237], "penros": [235, 236], "mathew": [235, 236], "soft": 236, "exp": [236, 238], "annal": 236, "2016": 236, "986": 236, "1028": 236, "summat": 237, "nodethr": 237, "cole": 237, "maclean": 237, "blog": 237, "thesi": [237, 243], "waxman": 238, "x_min": 238, "y_min": 238, "x_max": 238, "y_max": 238, "Their": 238, "incompat": [238, 299], "rout": 238, "multipoint": 238, "ieee": [238, 246, 247, 279, 284], "1988": 238, "1617": 238, "1622": 238, "harari": [239, 240, 288], "h_": [239, 240], "ceil": 239, "kn": 239, "hnm_harary_graph": 239, "weisstein": 239, "eric": 239, "mathworld": [239, 248, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 267], "wolfram": [239, 248, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 267], "hararygraph": 239, "proc": [239, 240, 244, 245, 286], "nat": [239, 240, 286], "acad": [239, 240, 286], "sci": [239, 240, 286], "1142": [239, 240, 286], "1146": [239, 240, 286], "floor": 240, "hkn_harary_graph": 240, "boesch": 240, "satyanarayana": 240, "suffel": 240, "reliabl": 240, "synthesi": 240, "99": [240, 318], "2009": [240, 280], "uniform_random_intersection_graph": [241, 242], "nikoletsea": 241, "raptopoulo": 241, "spiraki": 241, "icalp": 241, "\u0131az": 241, "karhum": 241, "aki": 241, "lepist": 241, "sannella": 241, "vol": [241, 284], "3142": 241, "lectur": 241, "1029": 241, "1040": 241, "godehardt": 242, "jaworski": 242, "electron": [242, 280], "singer": 243, "cohen": 243, "1995": 243, "phd": 243, "john": [243, 260], "hopkin": 243, "scheinerman": 243, "evolut": 243, "2000": 243, "156": 243, "nkk": [244, 245], "degree_seq": 244, "n_edges_add": 244, "li": [244, 247], "unsatur": 244, "proof": 244, "tillman": [244, 245, 247], "markopoul": [244, 245, 246, 247, 279], "butt": [244, 245, 279], "gjoka": [244, 245, 246, 247], "2k": [244, 245], "kdd": [244, 245], "seconnd": 245, "joint_degre": [246, 247], "diagon": [246, 262], "joint_degree_graph": 246, "kurant": 246, "5k": 246, "infocom": [246, 247, 279], "stanton": 246, "pinar": 246, "prescrib": 246, "experiment": [246, 294], "n_th": 248, "m_1": 248, "singleton": [248, 287], "m_2": 248, "m_i": 248, "mycielskian": 248, "m_": 248, "mycielskigraph": 248, "p_2": 248, "chromat": [249, 280], "2n": 249, "bigcup": 249, "nonisomporph": 250, "adjanc": 250, "matric": [250, 279], "nonisomorph": 251, "shift_list": 252, "cubic": [252, 255, 256, 259, 260, 266, 268, 269, 274], "lcf": [252, 254, 256, 258, 260, 266, 268], "lederberg": 252, "coxet": 252, "frucht": [252, 259], "hamiltonian": [252, 254, 259, 260, 263, 268, 274], "symmetri": [252, 259], "dodecahedral_graph": 252, "desargues_graph": 252, "heawood_graph": 252, "pappus_graph": 252, "s1": 252, "sk": 252, "v_current": 252, "shiftlist": 252, "heawood": [252, 260], "lcfnotat": 252, "bull": 253, "planar": [253, 256, 257, 259], "pendant": 253, "leg": 253, "chv\u00e1tal": 254, "370": 254, "chv": 254, "c3": [254, 266, 267], "a1tal_graph": 254, "chvatalgraph": 254, "platon": [255, 258, 263, 267, 271, 273], "skeleton": [255, 258, 272, 273], "hypercub": 255, "solid": [255, 272, 273], "aris": 255, "desargu": 256, "desarguesgraph": 256, "kite": [257, 264], "diamondgraph": 257, "dodecahedr": 258, "dodecahedron": 258, "regular_dodecahedron": 258, "dodecahedralgraph": 258, "fruchtgraph": 259, "cage": 260, "perci": 260, "nonplanar": 260, "girth": 260, "heawoodgraph": 260, "win": [260, 269], "tue": [260, 269], "nl": [260, 269], "aeb": [260, 269], "housegraph": [261, 262], "pentatop": 262, "icosahedr": 263, "icosahedron": 263, "icosahedralgraph": 263, "krackhardt": 264, "andr": 264, "beverlei": 264, "carol": 264, "dian": 264, "fernando": 264, "garth": 264, "heather": 264, "ik": 264, "jane": 264, "polit": 264, "landscap": 264, "cognit": 264, "administr": 264, "quarterli": 264, "342": [264, 287], "369": 264, "2307": 264, "2393394": 264, "jstor": 264, "june": 264, "1990": 264, "graph_descript": 265, "ltype": 265, "adjacencylist": 265, "from_dict_of_list": 265, "from_edgelist": 265, "xlist": 265, "c_4": 265, "w2": 265, "vk": 265, "wk": 265, "vj": 265, "wj": 265, "moebiu": 266, "kantor": 266, "m\u00f6biu": 266, "petersen": [266, 269], "b6biu": 266, "93kantor_graph": 266, "octahedr": 267, "octahedron": 267, "shake": 267, "hi": [267, 277, 286], "her": 267, "partner": 267, "handshak": 267, "cocktail": 267, "octahedralgraph": 267, "tur": 267, "a1n_graph": 267, "special_cas": 267, "pappu": 268, "juliu": 269, "counterexampl": [269, 274], "bridgeless": 269, "colour": 269, "drg": 269, "maze": 270, "sedgewick": 270, "3rd": 270, "tetrahedr": 271, "k4": 271, "w4": 271, "grpah": 271, "tetrahedron": [271, 273, 274], "truncat": [272, 273, 274, 279], "archimedean": [272, 273], "octagon": 272, "triangular": 272, "truncated_cub": 272, "coolmath": 272, "polyhedra": 272, "hexagon": 273, "equilater": 273, "truncated_tetrahedron": 273, "tutt": 274, "polyhedr": 274, "tait": 274, "conjectur": 274, "polyhedron": 274, "multipli": 274, "davi": 275, "southern": 275, "women": 275, "gardner": 275, "1941": 275, "south": 275, "chicago": 275, "il": 275, "florentin": 276, "breiger": 276, "philippa": 276, "pattison": 276, "cumul": 276, "dualiti": 276, "septemb": 276, "zachari": 277, "karat": 277, "club": 277, "mr": [277, 280], "offic": 277, "wayn": 277, "fission": 277, "anthropolog": 277, "452": 277, "473": 277, "1977": 277, "coappear": 278, "charact": [278, 283, 289], "novel": 278, "miser": 278, "knuth": 278, "1993": 278, "graphbas": 278, "combinatori": 278, "york": 278, "spectral": [279, 288], "forg": 279, "sgf": 279, "eigenstructur": 279, "synthes": 279, "sensit": 279, "percentag": 279, "telecommun": 279, "bernoulli": 279, "baldesi": 279, "1801": 279, "01715": 279, "karate_club_graph": 279, "sud": 280, "81": 280, "810": 280, "herzberg": 280, "murti": 280, "polynomi": 280, "am": 280, "708": 280, "717": 280, "sander": 280, "torsten": 280, "7pp": 280, "2529816": 280, "encyclopedia": 280, "dec": 280, "2019": 280, "letter": 281, "nil": 281, "arboresc": 281, "downward": 281, "synthet": 281, "trie": 281, "recov": [281, 294], "pr\u00fcfer": 282, "from_prufer_sequ": 282, "forest_str": 282, "triad_nam": 283, "003": 283, "012": 283, "021d": 283, "021u": 283, "021c": 283, "111d": 283, "111u": 283, "030t": 283, "030c": 283, "120d": 283, "120u": 283, "120c": 283, "triadic_censu": 283, "10000": 284, "autonom": [284, 286], "elmokashfi": 284, "tier": 284, "mid": 284, "adv": 284, "bidirect": 284, "peer": 284, "commerci": 284, "agreement": 284, "kvalbein": 284, "dovroli": 284, "bgp": 284, "1250": 284, "1261": 284, "octob": 284, "reweight": 285, "mathematician": 286, "frank": 286, "incoming_graph_data": [287, 290], "default_label": [287, 290], "to_networkx_graph": 287, "110": 287, "protect": 287, "bracket": 287, "shortcut": 287, "nbrsdict": 287, "persion": 287, "miscellan": 287, "__contains__": 287, "__getitem__": 287, "adj_dict": 287, "atlasview": 287, "__iter__": 287, "niter": 287, "__len__": 287, "nnode": 287, "u_of_edg": 287, "v_of_edg": 287, "ebunch_to_add": 287, "preced": 287, "wn2898": 287, "node_for_ad": 287, "nodes_for_ad": 287, "hello": 287, "k3": 287, "attrdict": 287, "behav": 287, "idiom": 287, "foovalu": 287, "adj_it": 287, "nbrdict": 287, "adjlist_inner_dict_factori": 287, "neighbordict": 287, "adjlist_outer_dict_factori": 287, "adjlistdict": 287, "clear_edg": 287, "deepcopi": 287, "fresh": [287, 296], "__class__": 287, "degreeview": 287, "nd_view": 287, "edge_attr_dict_factori": 287, "neighborattrdict": 287, "edge_subgraph": 287, "edgeview": 287, "edgedataview": 287, "ddict": 287, "get_edge_data": 287, "edge_dict": 287, "safe": 287, "graph_attr_dict_factori": 287, "graph_cache_factori": 287, "keyerror": 287, "edge_ind": 287, "data_dictionari": 287, "is_multigraph": 287, "corespond": 287, "nbunch_it": 287, "membership": 287, "exhaust": 287, "possibli": 287, "node_attr_dict_factori": 287, "nodeattrdict": 287, "node_dict_factori": 287, "nodedict": 287, "nodeview": 287, "nodedataview": 287, "nodedata": 287, "bar": 287, "Not": [287, 300], "nedg": 287, "Will": 287, "nodes_for_remov": 287, "set_edge_data": 287, "set_node_data": 287, "set_item": 287, "adjedgeattr": 287, "dd": 287, "nodeattr": 287, "netowrkx": 287, "to_undirected_class": 287, "taken": 287, "itertool": 287, "mg": 287, "nd_iter": 287, "outedgeview": 287, "in_edg": 287, "outedgedataview": 287, "has_predecessor": 287, "has_successor": 287, "indegreeview": 287, "inedgeview": 287, "outdegreeview": 287, "pred": 287, "succ": 287, "_convert_arrow_to_dynam": [288, 290], "atla": 288, "triad": 288, "mycielski": 288, "sudoku": 288, "edgetyp": 289, "utf": [289, 300], "filenam": [289, 300], "rb": 289, "bz2": 289, "uncompress": 289, "whitespac": 289, "obsolet": 289, "write_edgelist": 289, "fh": 289, "textlin": 289, "parse_edgelist": 289, "read_adjlist": 289, "marker": 289, "v_0": 290, "v_1": 290, "implicit": 290, "add_label": 291, "eval": 291, "talk": 293, "output_to_cli": [293, 310], "person_id": [293, 300], "400": 293, "preemptiv": 294, "ifnotpres": 294, "512mi": 294, "etcd_addr": 294, "etcd_listening_client_port": 294, "2379": 294, "etcd_listening_peer_port": 294, "2380": 294, "k8s_vineyard_imag": 294, "vineyardcloudn": 294, "1gi": 294, "4mi": 294, "2mi": 294, "k8s_coordinator_pod_node_selector": 294, "k8s_engine_pod_node_selector": 294, "dangling_timeout_second": 294, "deregist": 294, "256mi": 294, "4gi": 294, "5gi": 294, "__enter__": 294, "__exit__": 294, "exc_typ": 294, "exc_valu": 294, "exc_tb": 294, "unregist": 294, "default_config_fil": 294, "gs_config_path": 294, "overwrit": [294, 300], "burstabl": 294, "qo": 294, "preempt": 294, "fallback": 294, "bundl": 294, "etcd01": 294, "etcd02": 294, "etcd03": 294, "2gi": 294, "tinyurl": 294, "3nx6k7ph": 294, "bucket": [294, 310], "path1": 294, "path2": 294, "persistentvolumeclaim": [294, 300], "claimnam": 294, "heartbeat": 294, "dangl": 294, "kube_config": 294, "load_kube_config": 294, "eg": 294, "config_fil": 294, "client_configur": 294, "persist_config": 294, "current_context": 294, "gcp": 294, "refresh": 294, "reject": 294, "lost": 294, "resource_nam": 294, "sigint": 294, "sigterm": 294, "signal": 294, "engine_config": 294, "node_label": 294, "recreat": 294, "load_from_gar": [294, 298], "run_fetch": 294, "lock": 294, "describl": 295, "maxwel": 296, "binlog": 296, "buildgartfrag": 296, "etcd_endpoint": 296, "gartfrag": 296, "etcd_client": 296, "make_shar": 296, "mpi_comm_world": 296, "schema_kei": 296, "gart_schema_p": 296, "to_str": 296, "edge_config_str": 296, "as_str": 296, "gart_blob_m": 296, "_p": 296, "config_str": 296, "edge_config": 296, "inner_vertices_it": 296, "elabel": [296, 301], "edge_it": 296, "hive": 298, "coo": [298, 320], "ordered_by_sourc": 298, "ordered_by_dest": 298, "graph_yaml_path": 298, "broader": 299, "ffi": 299, "agnost": 299, "grin_": 299, "partitioned_graph": 299, "edge_type_nam": 299, "boundari": 299, "sync_properti": 299, "grin_partitioned_graph": 299, "grin_partit": 299, "grin_graph": 299, "grin_get_local_graph_from_partit": 299, "grin_edge_typ": 299, "etyp": 299, "grin_get_edge_type_by_nam": 299, "grin_vertex_type_list": 299, "src_vtype": 299, "grin_get_src_types_from_edge_typ": 299, "dst_vtype": 299, "grin_get_dst_types_from_edge_typ": 299, "src_vtypes_num": 299, "grin_get_vertex_type_list_s": 299, "dst_vtypes_num": 299, "grin_vertex_typ": 299, "grin_get_vertex_type_from_list": 299, "grin_vertex_properti": 299, "dst_vp": 299, "grin_get_vertex_property_by_nam": 299, "grin_null_vertex_properti": 299, "NOT": 299, "grin_vertex_property_t": 299, "dst_vpt": 299, "grin_get_vertex_property_table_by_typ": 299, "grin_datatyp": 299, "dst_vp_dt": 299, "grin_get_vertex_property_data_typ": 299, "grin_vertex_list": 299, "__src_vl": 299, "grin_get_vertex_list": 299, "_src_vl": 299, "grin_select_type_for_vertex_list": 299, "src_vl": 299, "grin_select_master_for_vertex_list": 299, "src_vl_num": 299, "grin_get_vertex_list_s": 299, "grin_vertex": 299, "grin_get_vertex_from_list": 299, "ifdef": 299, "grin_trait_select_edge_type_for_adjacent_list": 299, "grin_adjacent_list": 299, "_adj_list": 299, "grin_get_adjacent_list": 299, "grin_direct": 299, "adj_list": 299, "grin_select_edge_type_for_adjacent_list": 299, "adj_lsit": 299, "endif": 299, "al_sz": 299, "grin_get_adjacent_list_s": 299, "ifndef": 299, "grin_edg": 299, "grin_get_edge_from_adjacent_list": 299, "grin_get_edge_typ": 299, "grin_equal_edge_typ": 299, "grin_get_neighbor_from_adjacent_list": 299, "grin_get_value_from_vertex_property_t": 299, "grin_vertex_ref": 299, "uref": 299, "grin_get_vertex_ref_for_vertex": 299, "recogin": 299, "u_master_partit": 299, "grin_get_master_partition_from_vertex_ref": 299, "send_valu": 299, "fragment_group_id": [299, 301], "get_partitioned_graph_by_object_id": 299, "local_partit": 299, "grin_get_local_partition_list": 299, "pnum": 299, "grin_get_partition_list_s": 299, "grin_get_partition_from_list": 299, "fold": [299, 318], "disclaim": 299, "sacrif": 299, "boilerpl": 299, "ineffici": 299, "enorm": 299, "grin_assume_all_vertex_property_local_complet": 299, "grin_assume_master_vertex_property_local_complet": 299, "grin_assume_by_type_all_vertex_property_local_complet": 299, "grin_assume_by_type_master_vertex_property_local_complet": 299, "assumpt": 299, "wider": 299, "undefin": 299, "tell": 299, "granular": 299, "grin_frag": 299, "storagespecif": 299, "vertexhandl": 299, "goe": 299, "grin_edge_list": 299, "grin_partition_list": 299, "grin_enable_": 299, "_list_arrai": 299, "vertexlist": 299, "grin_enable_vertex_list_arrai": 299, "vl": 299, "idx": 299, "sz": 299, "caller": 299, "_list_iter": 299, "grin_enable_vertex_list_iter": 299, "grin_vertex_list_iter": 299, "grin_get_vertex_list_begin": 299, "grin_get_next_vertex_list_it": 299, "vli": 299, "grin_is_vertex_list_end": 299, "grin_get_vertex_from_it": 299, "grin_get_vertex_type_by_nam": 299, "vtype": 299, "grin_vertex_property_list": 299, "grin_get_vertex_properties_by_nam": 299, "vprop": 299, "vpl": 299, "seperatedli": 299, "with_vertex_label": 299, "with_edge_label": 299, "facili": 299, "recogn": [299, 300], "grin_serialize_vertex_ref": 299, "grin_deserialize_to_vertex_ref": 299, "grin_get_vertex_from_vertex_ref": 299, "vref": 299, "recgon": 299, "reciev": 299, "borrow": 299, "vertexcut": 299, "centur": 299, "edgecut": 299, "repect": 299, "judgement": 299, "columnar": 300, "gear": 300, "compromis": 300, "timestamp": 300, "strict": 300, "foward": 300, "ingestor": [300, 308], "multitud": 300, "exemplifi": 300, "cat": [300, 308], "said": 300, "grpc_port": 300, "gremlin_port": 300, "grpc_endpoint": 300, "conn": 300, "add_vertex_label": 300, "v_label_nam": 300, "add_primary_kei": 300, "pk_name": 300, "prop_name_1": 300, "prop_name_2": 300, "add_edge_label": 300, "e_label_nam": 300, "prop_name_3": 300, "add_properti": 300, "gremlinpython": 300, "xmln": 300, "xsi": 300, "w3": 300, "xmlschema": 300, "schemaloc": 300, "xsd": 300, "modelvers": 300, "gremlinexampl": 300, "codehau": 300, "mojo": 300, "classpath": 300, "mainclass": 300, "compliancelevel": 300, "killaft": 300, "addcontactpoint": 300, "credenti": 300, "valuemap": [300, 318], "println": 300, "javascript": 300, "npm": 300, "catch": 300, "data_load": 300, "load_tool": 300, "xzvf": 300, "alic": 300, "bob": 300, "person_knows_person": 300, "person_id_1": 300, "20210611151923": 300, "seper": 300, "mapreduc": 300, "ldbc_sampl": [300, 318, 320], "data_output": 300, "55555": 300, "person_0_0": [300, 315, 320], "propertiescolmap": 300, "person_knows_person_0_0": [300, 315, 320], "srclabel": 300, "dstlabel": 300, "srcpkcolmap": 300, "dstpkcolmap": 300, "9000": [300, 320], "mb": 300, "columnidx": 300, "propertynam": 300, "_success": 300, "xxxxx": 300, "sst": 300, "00000": 300, "00001": 300, "00002": 300, "load_data": 300, "realtim": 300, "insert_vertex": 300, "vertexrecordkei": 300, "insert_vertic": 300, "update_vertex_properti": 300, "delel": 300, "delete_vertex": 300, "vertex_pk": 300, "delete_vertic": 300, "insert_edg": 300, "edgerecordkei": 300, "update_edge_properti": 300, "delete_edg": 300, "edge_pk": 300, "avaiabl": 300, "remote_flush": 300, "snapshot_id": 300, "primary_kei": 300, "src_vertex_kei": 300, "dst_vertex_kei": 300, "provis": 300, "persistentvolum": 300, "lapp": 300, "reinstal": 300, "pv_name": 300, "pod_nam": [300, 308, 313], "logback": 300, "period": 300, "arrowfragmentgroup": 301, "spread": 301, "ipc": 301, "docket": 301, "string_oid": 301, "ipcclient": 301, "writeout": 301, "nb": 301, "fragmentloc": 301, "instance_id": 301, "gettotalnodesnum": 301, "labeltyp": 301, "vlabel": 301, "vertex_data_t": 301, "edge_data_t": 301, "consolid": [301, 308], "willing": 302, "implic": 302, "polymorph": 302, "instant": 302, "aka": 302, "applciat": 302, "pygrap": [302, 303], "frist": 302, "from_numpi": 302, "bind_sssp1": 302, "delai": 302, "screen": 302, "bind_sssp2": 302, "vertex_bal": 303, "vcut": 303, "ecut": 303, "syoov": 308, "79b44f7b58": 308, "ctmqb": 308, "10m": 308, "9m53": 308, "9m46": 308, "6dd67c65fc": 308, "gn4mb": 308, "15334625083466732": 308, "33d": 308, "kubetl": 308, "\u7684\u56fe\u5206\u6790\u5f15\u64ce\u7ee7\u627f\u4e86": 310, "\u8be5\u7cfb\u7edf\u4e8e": 310, "\u4e0a\u9996\u6b21\u63d0\u51fa\u5e76\u83b7\u5f97\u6700\u4f73\u8bba\u6587\u5956": 310, "\u4e0e\u4ee5\u5f80\u7684\u7cfb\u7edf\u7684\u4e0d\u540c": 310, "\u652f\u6301\u5c06\u4e32\u884c\u56fe\u7b97\u6cd5\u81ea\u52a8\u5e76\u884c\u5316": 310, "\u5728": [310, 311, 312, 313, 314, 317, 318, 319, 320], "\u4e2d": [310, 312, 313, 314, 320], "\u53ea\u9700\u8fdb\u884c\u5f88\u5c0f\u7684\u66f4\u6539\u5373\u53ef\u8f7b\u677e\u5730\u5c06\u4e32\u884c\u7b97\u6cd5\u5373\u63d2\u5373\u7528": 310, "\u4f7f\u5176\u5e76\u884c\u5316\u7684\u8fd0\u884c\u5728\u5206\u5e03\u5f0f\u73af\u5883": 310, "\u5e76\u9ad8\u6548\u5730\u5904\u7406\u5927\u89c4\u6a21\u56fe\u6570\u636e": 310, "\u9664\u4e86\u6613\u4e8e\u7f16\u7a0b\u5916": 310, "\u8fd8\u88ab\u8bbe\u8ba1\u4e3a\u9ad8\u6548\u4e14\u53ef\u62d3\u5c55\u7684\u7cfb\u7edf": 310, "\u53ef\u7075\u6d3b\u5e94\u5bf9\u73b0\u5b9e\u4e2d\u56fe\u5e94\u7528\u591a\u53d8\u7684\u89c4\u6a21": 310, "\u591a\u6837\u6027\u548c\u590d\u6742\u6027": 310, "\u56fe\u5206\u6790\u5f15\u64ce\u5185\u7f6e\u4e86\u8bb8\u591a\u5e38\u7528\u7684\u56fe\u5206\u6790\u7b97\u6cd5": 310, "\u5305\u62ec\u8fde\u901a\u6027\u5206\u6790\u7b97\u6cd5": 310, "\u8def\u5f84\u5206\u6790\u7b97\u6cd5": 310, "\u793e\u533a\u68c0\u6d4b\u548c\u4e2d\u5fc3\u5ea6\u8ba1\u7b97\u7b49\u7c7b\u578b": 310, "\u5185\u7f6e\u7b97\u6cd5\u53ef\u4ee5\u5728\u56fe\u4e0a\u8f7b\u677e\u8c03\u7528": 310, "\u521b\u5efa\u9ed8\u8ba4": 310, "\u5e76\u52a0\u8f7d\u5c5e\u6027\u56fe": 310, "\u5927\u591a\u6570\u5185\u7f6e\u7b97\u6cd5\u53ea\u652f\u6301\u5728\u7b80\u5355\u56fe\u4e0a\u8fdb\u884c\u8ba1\u7b97": 310, "\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5148\u901a\u8fc7\u9876\u70b9\u548c\u8fb9\u7684\u7c7b\u578b\u6765\u751f\u6210\u4e00\u4e2a\u7b80\u5355\u56fe": 310, "result_lpa": 310, "result_sssp": 310, "\u5185\u7f6e\u7b97\u6cd5\u7684\u5b8c\u6574\u5217\u8868\u5982\u4e0b\u6240\u793a": 310, "\u5177\u4f53\u67d0\u4e2a\u7b97\u6cd5\u662f\u5426\u652f\u6301\u5c5e\u6027\u56fe\u4e5f\u5728\u5176\u6587\u6863\u8fdb\u884c\u4e86\u63cf\u8ff0": 310, "\u7b97\u6cd5\u7684\u652f\u6301\u5217\u8868\u4f1a\u968f\u7740\u4e0d\u65ad\u589e\u52a0\u6301\u7eed\u66f4\u65b0\u4e2d": 310, "\u5f53\u5b8c\u6210\u4e00\u6b21\u56fe\u8ba1\u7b97": 310, "\u8ba1\u7b97\u7ed3\u679c\u4f1a\u88ab\u5305\u88c5\u6210": 310, "\u7c7b": [310, 320], "\u4fdd\u5b58\u5728\u5206\u5e03\u5f0f\u96c6\u7fa4\u7684\u5185\u5b58\u4e2d": 310, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u5c06\u7ed3\u679c\u4f20\u5230\u5ba2\u6237\u7aef\u8fdb\u884c\u5904\u7406": 310, "\u6216\u662f\u5199\u5165\u4e91\u4e2d\u67d0\u4f4d\u7f6e\u6216\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf": 310, "\u652f\u6301\u7528\u6237\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u6765\u83b7\u53d6\u7ed3\u679c\u6570\u636e": 310, "\u8f6c\u5316\u4e3a\u76f8\u5e94\u6570\u636e\u7c7b\u578b": 310, "\u6216\u5199\u5165": 310, "\u6216\u672c\u5730\u76ee\u5f55\u4e2d": 310, "pod\u4e2d\u7684\u672c\u5730\u76ee\u5f55": 310, "\u6216\u5199\u5165\u672c\u5730\u7684": 310, "lpa_result": 310, "\u6570\u636e\u7ed3\u6784": 310, "\u6b64\u5916": [310, 314], "\u5982": [310, 313, 316, 318], "\u5feb\u901f\u4e0a\u624b": [310, 316], "\u4e2d\u6240\u793a": 310, "\u7528\u6237\u53ef\u4ee5\u5c06\u8ba1\u7b97\u7ed3\u679c\u52a0\u56de\u5230\u8be5\u56fe\u6570\u636e\u4e2d\u4f5c\u4e3a\u9876\u70b9": 310, "\u7684\u65b0\u5c5e\u6027": 310, "\u5217": 310, "\u5c06\u7ed3\u679c\u4f5c\u4e3a\u65b0\u5217\u6dfb\u52a0\u56de\u5c5e\u6027\u56fe": 310, "\u5217\u540d\u4e3a": 310, "\u5e76\u751f\u6210\u4e00\u5f20\u65b0\u56fe": 310, "new_graph": [310, 315], "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u5668": 310, "\u6765\u5b9a\u4e49\u5c06\u8ba1\u7b97\u7ed3\u679c\u4e2d\u7684\u54ea\u4e9b\u90e8\u5206\u5199\u56de\u56fe\u6570\u636e": 310, "\u9009\u62e9\u5668\u6307\u5b9a\u4e86\u8ba1\u7b97\u7ed3\u679c\u4e2d\u7684\u54ea\u4e00\u90e8\u5206\u4f1a\u88ab\u5904\u7406": 310, "\u7c7b\u4f3c\u7684": 310, "\u56fe\u6570\u636e\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u88ab\u5904\u7406\u6570\u636e\u7684\u4e00\u90e8\u5206": 310, "\u4f8b\u5982\u9876\u70b9id": 310, "\u6211\u4eec\u4e3a\u9009\u62e9\u5668\u4fdd\u7559\u4e86\u4e09\u4e2a\u5173\u952e\u5b57": 310, "\u4ee3\u8868\u7ed3\u679c": 310, "\u5206\u522b\u4ee3\u8868\u9876\u70b9\u548c\u8fb9": 310, "\u4ee5\u4e0b\u662f\u7ed3\u679c\u5904\u7406\u4e2d\u9009\u62e9\u5668\u7684\u4e00\u4e9b\u793a\u4f8b": 310, "\u83b7\u53d6\u9876\u70b9\u4e0a\u7684\u7ed3\u679c": 310, "\u8f6c\u6362\u4e3a": [310, 319], "\u4f7f\u7528\u9876\u70b9\u7684": 310, "\u4f5c\u4e3a\u540d\u4e3a": 310, "\u7684\u5217": 310, "df_vd": 310, "\u4f7f\u7528\u7ed3\u679c\u5217\u4f5c\u4e3a\u540d\u4e3a": 310, "df_result": 310, "property0": 310, "label0": 310, "\u5bf9\u4e8e\u5c5e\u6027\u56fe\u7684\u7ed3\u679c": 310, "\u4f5c\u4e3av\u548ce\u7684\u6807\u7b7e\u9009\u62e9\u5668": 310, "\u5c06": [310, 319], "\u9876\u70b9\u7684": 310, "\u4f5c\u4e3a": [310, 311, 320], "\u4f7f\u7528\u5199\u5728\u5e26\u6709label0\u7684\u9876\u70b9\u4e0a\u7684property0\u4f5c\u4e3a": 310, "gs_data": 310, "\u53ef\u4ee5\u67e5\u770b": 310, "\u83b7\u53d6\u66f4\u591a\u7ec6\u8282": 310, "\u5982\u679c\u5185\u7f6e\u7b97\u6cd5\u65e0\u6cd5\u6ee1\u8db3\u9700\u6c42": 310, "\u7528\u6237\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u7b97\u6cd5": 310, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7": 310, "\u5728\u7eaf": 310, "\u6a21\u5f0f": [310, 318], "\u4e0b\u4f7f\u7528": 310, "\u7f16\u7a0b\u6a21\u578b\u7f16\u5199\u7b97\u6cd5": 310, "\u4e3a\u4e86\u5b9e\u73b0\u81ea\u5df1\u7684\u7b97\u6cd5": 310, "\u7528\u6237\u9700\u8981\u5b9e\u73b0\u6b64\u7c7b": 310, "\u5982\u4ee3\u7801\u6240\u793a": 310, "\u7528\u6237\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u4ee5": 310, "\u88c5\u9970\u7684\u7c7b": 310, "\u5e76\u63d0\u4f9b\u4e09\u4e2a\u4e32\u884c": 310, "\u56fe\u7b97\u6cd5\u51fd\u6570": 310, "\u51fd\u6570\u7528\u4e8e\u8bbe\u7f6e\u7b97\u6cd5\u521d\u59cb\u72b6\u6001": 310, "\u51fd\u6570\u5b9a\u4e49\u7b97\u6cd5\u7684\u5c40\u90e8\u8ba1\u7b97": 310, "\u51fd\u6570\u5b9a\u4e49\u5bf9\u5206\u533a\u6570\u636e\u7684\u589e\u91cf\u8ba1\u7b97": 310, "\u4e0e": 310, "\u76f8\u5173\u7684\u5b8c\u6574": 310, "\u53ef\u4ee5\u53c2\u8003": 310, "\u4ee5\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5": 310, "\u4e3a\u4f8b": [310, 314], "\u7528\u6237\u5728": 310, "\u6a21\u578b\u4e2d\u5b9a\u4e49\u7684": 310, "\u7b97\u6cd5\u53ef\u5982\u4e0b\u6240\u793a": 310, "\u521d\u59cb\u5316\u6bcf\u4e2a\u9876\u70b9\u7684\u8ddd\u79bb": 310, "\u4ececontext\u4e2d\u83b7\u53d6\u6e90\u9876\u70b9": 310, "\u5728\u6e90\u9876\u70b9\u6240\u5728\u5206\u533a\u4e2d": 310, "\u8fd0\u884cdijkstra\u7b97\u6cd5\u4f5c\u4e3a\u90e8\u5206\u8ba1\u7b97": 310, "\u4f7f\u7528\u8fb9\u4e0a\u7b2c\u4e09\u5217\u6570\u636e\u4f5c\u4e3a\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb": 310, "\u589e\u91cf\u8ba1\u7b97": 310, "\u66f4\u65b0\u6700\u77ed\u8ddd\u79bb": 310, "\u7528\u6237\u4ec5\u9700\u8981\u8bbe\u8ba1\u548c\u5b9e\u73b0\u5355\u5206\u533a\u7684\u4e32\u884c\u7b97\u6cd5": 310, "\u800c\u4e0d\u9700\u8981\u8003\u8651\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\u7684\u5206\u533a\u901a\u4fe1\u548c\u6d88\u606f\u4f20\u9012": 310, "\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b": [310, 320], "\u7ecf\u5178\u7684": 310, "\u7b97\u6cd5\u53ca\u5176\u589e\u91cf\u7248\u672c\u5c31\u53ef\u4ee5\u7528\u4e8e\u5728\u96c6\u7fa4\u4e0a\u7684\u5927\u89c4\u6a21\u56fe\u6570\u636e\u8ba1\u7b97": 310, "\u9664\u4e86\u57fa\u4e8e\u5b50\u56fe\u7684": 310, "\u6a21\u578b\u4e4b\u5916": 310, "\u4e5f\u652f\u6301\u4ee5\u9876\u70b9\u4e3a\u4e2d\u5fc3\u7684": 310, "\u7f16\u7a0b\u6a21\u578b": 310, "\u60a8\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u4ee5\u4e0b\u7b97\u6cd5\u7c7b\u6765\u5728": 310, "\u6a21\u578b\u4e2d\u5f00\u53d1\u7b97\u6cd5": 310, "\u6a21\u578b\u4e0d\u540c": 310, "\u7b97\u6cd5\u7c7b\u7684\u88c5\u9970\u5668\u4e3a": 310, "\u8be5\u7c7b\u65b9\u6cd5\u662f": 310, "\u5b9a\u4e49\u5728\u9876\u70b9\u4e0a\u7684": 310, "\u800c\u4e0d\u540c\u4e8e": 310, "\u6a21\u578b\u4e2d\u5b9a\u4e49\u5728\u56fe\u5206\u533a\u4e0a": 310, "\u8fd8\u662f\u4ee5": 310, "\u6a21\u578b\u4e0b\u7684\u7b97\u6cd5\u5982\u4e0b\u6240\u793a": 310, "\u88c5\u9970\u5668": 310, "\u5b9a\u4e49\u9876\u70b9\u6570\u636e\u548c\u6d88\u606f\u6570\u636e\u7684\u7c7b\u578b": 310, "\u652f\u6301\u7528\u6237\u5728\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u901a\u8fc7": 310, "\u4e0a\u7684\u63a5\u53e3\u6765\u4f7f\u7528\u5b9a\u4e49\u5728": 310, "\u4e2d\u7684": [310, 311, 313], "\u51fd\u6570": [310, 318], "\u4e0b\u5217\u4ee3\u7801": 310, "\u4f1a\u88ab\u7ffb\u8bd1\u6210\u5982\u4e0b\u7684": 310, "\u4ee3\u7801\u4ee5\u9ad8\u6548\u5730\u6267\u884c": 310, "\u7528\u6237\u9700\u8981\u5728\u5b9a\u4e49\u7b97\u6cd5\u540e\u8c03\u7528\u7b97\u6cd5": 310, "\u52a0\u8f7d\u81ea\u5df1\u7684\u7b97\u6cd5": 310, "\u5728\u56fe\u4e0a\u8fd0\u884c\u81ea\u5df1\u7684\u7b97\u6cd5": 310, "\u5f97\u5230\u8ba1\u7b97\u7ed3\u679c": 310, "\u8fd9\u91cc": [310, 311, 320], "\u662f\u4e0e": 310, "\u76f8\u5bf9\u5e94\u7684": 310, "\u5728\u5f00\u53d1\u548c\u6d4b\u8bd5\u4e4b\u540e": 310, "\u60a8\u53ef\u4ee5\u901a\u8fc7": 310, "\u65b9\u6cd5\u5c06\u7b97\u6cd5\u4fdd\u5b58\u6210": 310, "\u5305\u4ee5\u5907\u5c06\u6765\u4f7f\u7528": 310, "\u5728\u6b64\u4e4b\u540e": 310, "\u60a8\u53ef\u4ee5\u4ece": 310, "\u5305\u52a0\u8f7d\u81ea\u5b9a\u4e49\u7684\u7b97\u6cd5": 310, "\u4ecegar\u5305\u4e2d\u52a0\u8f7d\u81ea\u5df1\u7684\u7b97\u6cd5": 310, "\u652f\u6301\u7528\u6237\u7f16\u5199java\u7684pi": 310, "\u5e76\u4e14\u8fd0\u884c\u5728\u56fe\u5206\u6790\u5f15\u64ce\u4e0a": 310, "\u6211\u4eec\u9996\u5148\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u6f14\u793a\u5982\u679c\u5728graphscop": 310, "\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8fd0\u884c\u4e00\u4e2ajava\u7684\u56fe\u7b97\u6cd5": 310, "\u7136\u540e\u6211\u4eec\u5c06\u5c55\u793a\u5982\u679c\u5b9e\u73b0\u5e76\u8fd0\u884c\u81ea\u5b9a\u4e49\u7684java\u56fe\u7b97\u6cd5": 310, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7ecf\u5178\u56fe\u5206\u6790\u7b97\u6cd5\u7684\u793a\u4f8b\u5b9e\u73b0": 310, "\u901a\u8fc7\u4e0b\u9762\u5c55\u793a\u7684\u4f8b\u5b50": 310, "\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u5728graphscope\u7684\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8bd5\u7740\u8fd0\u884c\u4ed6\u4eec": 310, "\u9996\u5148\u4f60\u9700\u8981\u4ece\u4e0b\u8f7d\u6211\u4eec\u63d0\u4f9b\u7684\u793a\u4f8bapp\u7684\u5408\u96c6": 310, "\u65e0\u9700\u4efb\u4f55\u66f4\u6539\u4f60\u5c31\u53ef\u4ee5\u5728": 310, "graphscope\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8fd0\u884c\u8fd9\u4e9b\u793a\u4f8b\u7b97\u6cd5": 310, "\u7136\u540e\u4f60\u9700\u8981\u6253\u5f00graphscope\u7684python": 310, "\u5c1d\u8bd5\u8f7d\u56fe\u5e76\u4e14\u8fd0\u884c\u4e00\u4e2a\u7b80\u5355\u7684bfs\u7684\u7b97\u6cd5": 310, "dist_0": 310, "\u4e3a\u4e86\u7f16\u5199java\u5b9e\u73b0\u7684\u56fe\u7b97\u6cd5": 310, "\u7528\u6237\u9700\u8981\u501f\u52a9\u4e8e": 310, "\u8bf7\u53c2\u8003": [310, 318], "\u6765\u5c06": 310, "\u5b89\u88c5\u5230\u4f60\u7684\u672c\u5730\u73af\u5883\u4e0a": 310, "\u5b89\u88c5\u5b8c\u6210\u540e": 310, "\u4f60\u9700\u8981\u5c06": 310, "\u7684\u4f9d\u8d56\u6dfb\u52a0\u5230\u4f60\u7684maven\u9879\u76ee\u4f9d\u8d56\u4e2d": 310, "\u7528\u6237\u5e94\u5f53\u6ce8\u610f\u5728": 310, "\u7684\u4f9d\u8d56\u914d\u7f6e\u4e0a\u5e94\u5f53\u6dfb\u52a0": 310, "\u6765\u786e\u4fdd": 310, "\u6240\u6709\u5fc5\u8981\u7684\u4f9d\u8d56\u90fd\u88ab\u5305\u62ec\u5230": 310, "\u7528\u6237\u5728\u5f00\u53d1\u81ea\u5df1\u7b97\u6cd5\u7684\u8fc7\u7a0b\u4e2d": 310, "\u53ef\u80fd\u4f1a\u7528\u5230\u5176\u4ed6\u7684\u7b2c\u4e09\u65b9jar\u5305": 310, "\u4e3a\u4e86\u89e3\u51b3\u4f9d\u8d56jar\u5305\u7684\u7248\u672c\u95ee\u9898": 310, "\u7528\u6237\u9700\u8981\u4f7f\u7528\u786e\u4fdd\u81ea\u5df1\u751f\u6210\u7684jar\u5305\u5305\u542b\u6240\u6709\u4f9d\u8d56\u7684jar\u5305": 310, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528maven\u63d2\u4ef6": 310, "pluge": 310, "\u7528\u6237\u5728\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5\u65f6": 310, "\u7528\u6237\u9700\u8981\u6309\u7167": 310, "\u6765\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7b97\u6cd5": 310, "\u5e76\u4e14\u9700\u8981\u6839\u636e\u9700\u8981\u7684app\u7c7b\u578b\u6765\u5b9e\u73b0": 310, "\u4e2d\u76f8\u5e94\u7684\u63a5\u53e3\u5e76\u4e14\u5b9e\u73b0\u63a5\u53e3": 310, "\u5982\u679c\u7528\u6237\u671f\u671b\u7b97\u6cd5\u8fd0\u884c\u5728\u5c5e\u6027\u56fe\u4e0a": 310, "\u90a3\u4e48\u5b9a\u4e49\u7684app\u5e94\u8be5\u5b9e\u73b0\u63a5\u53e3": 310, "defaultpropertyappbas": 310, "\u6216": [310, 311, 312, 313, 316, 318], "parallelpropertyappbas": 310, "\u5982\u679c\u7528\u6237\u671f\u671b\u7b97\u6cd5\u8fd0\u884c\u5728\u7b80\u5355\u56fe\u4e0a": 310, "\u90a3\u4e48\u5b9a\u4e49\u7684app\u5e94\u8be5\u5b9e\u73b0\u501f\u53e3": 310, "defaultappbas": 310, "\u540c\u65f6\u7528\u6237\u9700\u8981\u5b9e\u73b0app\u76f8\u5e94\u7684": 310, "\u6765\u4fdd\u5b58\u8de8superstep\u7684\u6570\u636e": 310, "\u5176\u5e94\u8be5\u662f": 310, "defaultpropertycontextbas": 310, "parallelpropertycontextbas": 310, "defaultcontextbas": 310, "\u6216\u8005": [310, 312, 319, 320], "\u7684\u7684\u5b50\u7c7b": 310, "\u901a\u8fc7\u7ee7\u627f": 310, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u5230\u4e0d\u540c\u7c7b\u578b\u7684context\u6240\u62e5\u6709\u7684\u7279\u6027": 310, "\u901a\u8fc7\u8fd9\u4e24\u79cdcontext\u63d0\u4f9b\u7684\u501f\u53e3\u6240\u5b58\u50a8\u7684\u6570\u636e\u5728\u7a0b\u5e8f\u6267\u884c\u5b8c\u4e4b\u540e\u53ef\u4ee5\u88ab\u7528\u6237\u8bbf\u95ee": 310, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5728python": 310, "client\u4e2dquery\u8fd4\u56de\u7684context": 310, "\u5bf9\u8c61\u6765\u8bbf\u95ee\u8fd9\u4e9b\u6570\u636e": 310, "\u8fd9\u91cc\u6211\u4eec\u5c55\u793a\u4e00\u4e2a\u7b80\u5355\u7684app\u7684\u5b9e\u73b0": 310, "\u5b83\u6240\u505a\u7684\u4e8b\u60c5\u53ea\u662f\u5bf9\u4e00\u4e2a\u7b80\u5355\u56fe\u7684\u6240\u6709\u8fb9\u8fdb\u884c\u4e86\u904d\u5386": 310, "\u8be5app\u5bf9\u5e94\u7684context\u7684\u5b9e\u73b0": 310, "\u5728\u5b9e\u73b0\u4e86\u81ea\u5df1\u7684\u7b97\u6cd5\u4e4b\u540e": 310, "\u7528\u6237\u53ef\u80fd\u4f1a\u60f3\u5728\u63d0\u4ea4\u5230graphscope\u7684\u56fe\u5206\u6790\u5f15\u64ce\u8fd0\u884c\u524d": 310, "\u5148\u5728\u672c\u5730\u9a8c\u8bc1\u7b97\u6cd5\u5b9e\u73b0\u7684\u6b63\u786e\u6027": 310, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u811a\u672c\u6765\u6ee1\u8db3\u7528\u6237\u7684": 310, "\u8fd9\u4e2a\u9700\u6c42": 310, "\u4e3a\u4e86\u9a8c\u8bc1\u7b97\u6cd5\u5b9e\u73b0\u7684\u6b63\u786e\u6027": 310, "\u7528\u6237\u53ea\u9700\u8981\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4": 310, "graphscope_repo": 310, "app_class_nam": 310, "java_path": 310, "path_to_your_jar": 310, "param_str": 310, "params_str": 310, "\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u7684java": 310, "app\u7684\u7c7b\u7684\u5168\u540d": 310, "\u6307\u5411\u5305\u542b\u7528\u6237\u60f3\u8981\u8fd0\u884c\u7684\u7b97\u6cd5\u7684jar\u5305": 310, "\u53ef\u4ee5\u901a\u8fc7": 310, "\u6765\u5236\u5b9acontext\u521d\u59cb\u5316\u9700\u8981\u7684\u53c2\u6570": 310, "\u4f8b\u5982\u5bf9\u4e8ebfs\u7b97\u6cd5\u53ef\u4ee5\u4f7f\u7528": 310, "\u6765\u6807\u8bb0\u521d\u59cb\u8282\u70b9\u662f6": 310, "\u5e76\u884c\u7ebf\u7a0b\u6570\u4e3a1": 310, "\u53ef\u4ee5": 310, "\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u6765\u8fd0\u884ctravers": 310, "jar_path": 310, "\u5728\u672c\u5730\u9a8c\u8bc1\u81ea\u5b9a\u4e49\u7b97\u6cd5\u7684\u6b63\u786e\u6027\u4e4b\u540e": 310, "\u4f60\u53ef\u4ee5\u901a\u8fc7graphscope\u7684python": 310, "client\u6765\u63d0\u4ea4\u8fd0\u884cjar\u5305": 310, "\u4e00\u4e2ajar\u5305\u4e2d\u53ef\u4ee5\u5305\u542b\u4e0d\u540c\u7684app\u5b9e\u73b0": 310, "\u7528\u6237\u53ef\u4ee5\u591a\u6b21\u63d0\u4ea4\u76f8\u540c\u7684jar\u5305\u4f46\u662f\u8fd0\u884c\u4e0d\u540c": 310, "\u7684app": 310, "\u8bf7\u8010\u5fc3\u7b49\u5f85\u8ba1\u7b97\u5b8c\u6210": 310, "\u5f53\u8ba1\u7b97\u5b8c\u6210\u540e": 310, "\u4f60\u53ef\u4ee5\u901a\u8fc7": [310, 311, 313], "\u5bf9\u8c61\u6765\u83b7\u53d6\u8ba1\u7b97\u7ed3\u679c": 310, "\u76f8\u5173\u8bba\u6587": 310, "wenfei": 310, "jingbo": 310, "xu": 310, "wenyuan": 310, "yu": 310, "jingren": 310, "zhou": 310, "xiaojian": 310, "luo": 310, "qiang": 310, "yin": 310, "cao": 310, "ruiqi": 310, "tod": [310, 316], "yinghui": 310, "wu": 310, "jiaxin": 310, "jiang": 310, "43rd": 310, "zeyu": 310, "zheng": 310, "bohan": 310, "chao": 310, "tian": 310, "\u4ee5": [311, 314, 315, 317, 320], "\u955c\u50cf\u7684\u65b9\u5f0f\u5206\u53d1\u5f15\u64ce\u7b49\u7ec4\u4ef6": 311, "\u9ed8\u8ba4\u60c5\u51b5\u4e0b": [311, 313], "\u5982\u679c\u8fd0\u884c": 311, "\u7684\u96c6\u7fa4\u673a\u5668\u4e0a\u4e0d\u5b58\u5728\u8be5\u955c\u50cf": 311, "\u5219\u4f1a\u62c9\u53d6\u5bf9\u5e94\u7248\u672c\u7684\u6700\u65b0\u955c\u50cf": 311, "\u56e0\u6b64": [311, 312, 314], "\u8bf7\u786e\u4fdd\u60a8\u7684\u96c6\u7fa4\u53ef\u4ee5\u8bbf\u95ee\u516c\u5171\u955c\u50cf\u4ed3\u5e93": 311, "\u4f1a\u8bdd": [311, 314], "\u5ba2\u6237\u7aef": [311, 312, 316], "\u5b83\u5c01\u88c5": 311, "\u7ba1\u7406\u7740": 311, "\u5f15\u64ce\u7684\u5404\u79cd\u7ec4\u4ef6": 311, "\u5e76": 311, "\u8fde\u63a5": 311, "\u64cd\u4f5c\u7528\u6237\u5728": 311, "\u96c6\u7fa4\u4e0a\u7684": 311, "\u5f15\u64ce": 311, "\u5982\u4e0a\u8ff0\u4ee3\u7801\u6240\u793a": 311, "\u7528\u6237\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u901a\u8fc7\u4f1a\u8bdd\u6765\u62c9\u8d77\u4e00\u4e2a": 311, "\u5b9e\u4f8b": 311, "\u7528\u6237\u6709\u65f6\u9700\u8981\u4f7f\u7528\u5728\u672c\u673a\u78c1\u76d8\u4e0a\u7684\u6570\u636e": 311, "\u6211\u4eec\u63d0\u4f9b\u4e86\u9009\u9879\u4f9b\u7528\u6237\u5c06\u672c\u673a\u7684\u76ee\u5f55\u6302\u8f7d\u5230\u96c6\u7fa4\u4e0a": 311, "\u5047\u5b9a\u6211\u4eec\u8981\u5c06\u672c\u673a\u7684": 311, "\u7684\u8def\u5f84\u6302\u8f7d\u5230": 311, "\u8def\u5f84": [311, 320], "\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5982\u4e0b\u4e00\u4e2a\u5b57\u5178": 311, "\u7136\u540e": [311, 319], "\u5c06\u5176\u901a\u8fc7": 311, "\u7684\u53c2\u6570\u4f20\u7ed9\u4f1a\u8bdd\u7684\u6784\u9020\u51fd\u6570": 311, "\u6ce8\u610f\u8fd9\u91cc\u7684\u672c\u673a\u8def\u5f84\u662f\u76f8\u5bf9\u4e8e": 311, "\u8282\u70b9\u7684\u6982\u5ff5": 311, "\u5982\u679c\u4f60\u662f\u901a\u8fc7": 311, "\u521b\u5efa\u7684\u96c6\u7fa4": 311, "\u90a3\u4e48\u4f60\u9700\u8981\u5c06\u8fd9\u4e2a\u76ee\u5f55\u62f7\u8d1d\u5230": 311, "\u7684\u865a\u62df\u4e3b\u673a\u7684\u76f8\u5e94\u8def\u5f84\u4e0a": 311, "\u6216\u8005\u5728\u914d\u7f6e\u4e2d\u5c06\u8def\u5f84\u63d0\u524d\u6302\u8f7d\u5230\u865a\u62df\u4e3b\u673a\u4e0a\u53bb": 311, "\u67e5\u770b\u66f4\u591a\u7ec6\u8282": 311, "\u4e0a\u7684\u4e00\u4e2a": 311, "\u5b9e\u4f8b\u5305\u542b": 311, "\u4e00\u4e2a\u8fd0\u884c": 311, "\u7684": [311, 312, 313, 316, 321], "\u8d1f\u8d23\u5143\u4fe1\u606f\u7684\u540c\u6b65": 311, "\u8d1f\u8d23\u5bf9": 311, "\u5f15\u64ce\u5bb9\u5668\u7684\u7ba1\u7406": 311, "\u4ee5\u53ca\u4e00\u7ec4\u8fd0\u884c": 311, "\u5f15\u64ce\u5bb9\u5668\u7684": 311, "replicaset": 311, "\u5bf9\u8c61": 311, "\u540e\u7aef\u670d\u52a1\u7684\u5165\u53e3": 311, "\u901a\u8fc7": [311, 314], "\u63a5\u6536\u6765\u81ea": 311, "\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u548c\u547d\u4ee4": 311, "\u5e76\u7ba1\u7406\u7740\u56fe\u5206\u6790\u5f15\u64ce": 311, "\u56fe\u67e5\u8be2\u5f15\u64ce": 311, "\u56fe\u5b66\u4e60\u5f15\u64ce": [311, 316], "\u7684\u751f\u547d\u5468\u671f": 311, "\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u914d\u7f6e\u5f15\u64ce\u955c\u50cf\u5730\u5740\u7b49\u53c2\u6570": 311, "\u8bf7\u5728": 311, "\u4e2d\u53c2\u9605\u66f4\u591a\u7684\u8be6\u7ec6\u4fe1\u606f": 311, "\u83b7\u53d6\u5e76\u6dfb\u52a0\u4ed3\u5e93\u4fe1\u606f": 311, "\u5b89\u88c5": [311, 316], "release_nam": 311, "\u68c0\u6d4bgraphscope\u670d\u52a1\u53ef\u7528\u6027": 311, "\u53c2\u8003": 311, "\u8be5\u94fe\u63a5": 311, "\u4ee5\u901a\u8fc7python\u5ba2\u6237\u7aef\u8fde\u63a5\u5230\u9884\u542f\u52a8\u7684graphscope\u670d\u52a1": 311, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u5728aws\u6216\u963f\u91cc\u4e91\u4e0a\u521b\u5efa": 311, "\u96c6\u7fa4\u7684\u4ea4\u4e92\u5f0f\u811a\u672c": 311, "\u8fd9\u4e00\u811a\u672c\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u4f7f\u7528\u5df2\u6709\u7684\u96c6\u7fa4\u6216\u521b\u5efa\u65b0\u7684": 311, "\u96c6\u7fa4": [311, 313, 317], "\u7136\u540e\u8f93\u51fa\u96c6\u7fa4\u7684\u914d\u7f6e\u6587\u4ef6": 311, "\u7528\u6cd5\u5982\u4e0b": 311, "\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7": 311, "launch_clust": 311, "\u83b7\u5f97\u66f4\u8be6\u7ec6\u7684\u5e2e\u52a9\u4fe1\u606f": 311, "pyyaml": 311, "boto3": 311, "your_access_key_id": 311, "your_access_key_secret": 311, "region": 311, "your_region_nam": 311, "kube_config_path": 311, "alibabacloud_cs20151215": 311, "alibabacloud_ecs20140526": 311, "alibabacloud_vpc20160428": 311, "your_region_id": 311, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u5728\u672c\u5730\u5b89\u88c5graphscope\u76f8\u5173\u4f9d\u8d56\u7684\u811a\u672c": 311, "\u8be5\u811a\u672c\u53ef\u4ee5\u8fd0\u884c\u5728": 311, "\u5e73\u53f0\u4e0a": 311, "\u4e3b\u8981\u7684\u7528\u6cd5\u5982\u4e0b": 311, "\u83b7\u53d6\u66f4\u8be6\u7ec6\u7684\u5e2e\u52a9\u4fe1\u606f": 311, "\u5f00\u53d1\u76f8\u5173\u4f9d\u8d56": 311, "\u672c\u5730\u90e8\u7f72": 311, "graphscope_env": [311, 312], "\u7684\u80cc\u540e\u6709\u4e00\u7fa4\u6d3b\u8dc3\u7684\u5de5\u7a0b\u4eba\u5458\u548c\u7814\u7a76\u4eba\u5458\u56e2\u961f\u6765\u63a8\u8fdb\u65e5\u5e38\u7684\u5f00\u53d1\u548c\u7ef4\u62a4": 312, "\u6211\u4eec\u70ed\u5ff1\u6b22\u8fce\u6765\u81ea\u5f00\u6e90\u793e\u533a\u7684": 312, "\u4e3a\u6539\u5584\u8be5\u9879\u76ee\u6240\u505a\u7684\u4efb\u4f55\u8d21\u732e": 312, "\u9075\u5faa": 312, "\u7684\u5f00\u6e90\u534f\u8bae": 312, "\u9700\u8981\u4e00\u4e9b\u7b2c\u4e09\u65b9\u7684\u5de5\u5177\u548c\u4f9d\u8d56": 312, "\u4e3a\u4e86\u8ba9\u5f00\u53d1\u8005\u66f4\u5bb9\u6613\u4e0a\u624b": 312, "\u6211\u4eec\u63d0\u4f9b\u4e86\u5b89\u88c5\u4e86\u6240\u9700\u4f9d\u8d56\u7684": 312, "\u955c\u50cf": 312, "\u5f00\u53d1\u8005\u9700\u8981\u901a\u8fc7": 312, "\u7684\u547d\u4ee4\u4ece\u6211\u4eec\u7684\u5f00\u6e90\u4ee3\u7801\u5e93": 312, "\u4e2d\u83b7\u5f97\u6700\u65b0\u7248\u7684\u4ee3\u7801": 312, "\u5728\u6b64\u57fa\u7840\u4e0a\u505a\u5f00\u53d1\u6216\u4ee3\u7801\u7684\u66f4\u6539": 312, "\u7136\u540e\u5728\u4ee3\u7801\u7684\u6839\u76ee\u5f55": 312, "\u6267\u884c": 312, "10240m": 312, "minitest": 312, "unittest": 312, "\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u6784\u5efa\u547d\u4ee4\u5f00\u53d1\u5e76\u6d4b\u8bd5\u5176\u4e2d\u67d0\u4e00\u4e2a\u6a21\u5757": 312, "\u6bd4\u5982": [312, 320], "\u56fe\u5206\u6790\u5f15\u64ce": [312, 316], "\u6a21\u5757": 312, "\u7136\u540e\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u6784\u5efa": 312, "\u8be5\u547d\u4ee4\u4f1a\u5f00\u59cb": 312, "\u7684\u6784\u5efa\u8fc7\u7a0b": 312, "\u8be5\u8fc7\u7a0b\u5c06\u5728": 312, "\u7684\u5bb9\u5668\u4e2d\u6784\u5efa\u5f53\u524d\u6e90\u4ee3\u7801": 312, "\u5e76\u5c06\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u590d\u5236\u5230": 312, "\u8fd0\u884c\u65f6\u57fa\u7840\u955c\u50cf": 312, "\u751f\u6210\u7684\u955c\u50cf\u5c06\u88ab\u6807\u8bb0": 312, "\u4e3a": [312, 313, 314], "shortsha": 312, "\u5ba2\u6237\u7aef\u4e0d\u5305\u542b\u5728\u8be5\u955c\u50cf\u4e2d": 312, "\u6784\u5efa\u4e5f\u4e0e\u5f15\u64ce\u6709\u6240\u4e0d\u540c": 312, "\u5982\u679c\u5f00\u53d1\u8005\u6b63\u5728\u5f00\u53d1": 312, "\u5ba2\u6237\u7aef\u5e76\u4e14\u672a\u4fee\u6539\u5f15\u64ce\u76f8\u5173\u7684\u6587\u4ef6": 312, "\u90a3\u4e48": 312, "\u955c\u50cf\u662f\u4e0d\u9700\u8981\u91cd\u5efa\u7684": 312, "\u5f00\u53d1\u8005\u53ea\u9700\u8981\u5728\u672c\u5730\u91cd\u65b0\u5b89\u88c5": 312, "\u5ba2\u6237\u7aef\u5373\u53ef": 312, "\u6d4b\u8bd5\u65b0\u6784\u5efa\u7684\u955c\u50cf": 312, "\u7528\u6237\u53ef\u4ee5\u624b\u52a8\u6253\u5f00\u4e00\u4e2a\u4f1a\u8bdd": 312, "\u6307\u5b9a\u7528\u65b0\u7f16\u8bd1\u7684\u955c\u50cf": 312, "\u4e0b\u7684": 312, "\u5206\u53d1\u5305\u662f\u57fa\u4e8e": 312, "manylinux2014": 312, "\u73af\u5883\u4e0b\u6784\u5efa\u7684": 312, "install_prefix": 312, "\u4e0b\u5206\u522b\u6784\u5efa": 312, "\u7531\u4e8e": 312, "\u4e0b\u7684\u6784\u5efa\u8fc7\u7a0b\u662f\u5728\u672c\u5730": 312, "\u975edocker": 312, "\u4e2d\u8fdb\u884c": 312, "\u56e0\u6b64\u9700\u8981\u672c\u5730\u4e8b\u5148\u5b89\u88c5": 312, "\u7684\u4f9d\u8d56": 312, "\u57fa\u4e8e\u5f53\u524d": 312, "\u73af\u5883\u4e0b\u7684": 312, "\u7248\u672c\u6784\u5efa": 312, "\u9700\u8981\u6ce8\u610f\u7684\u662f": [312, 314], "\u5982\u679c\u4f60\u9700\u8981\u8be5\u5206\u53d1\u5305\u80fd\u652f\u6301\u4e0d\u540c\u7684": 312, "\u7248\u672c": [312, 317], "\u4f60\u53ef\u80fd\u9700\u8981\u901a\u8fc7": 312, "conda": 312, "pyenv": 312, "\u5b89\u88c5\u591a\u4e2a": 312, "\u7684\u7248\u672c": 312, "\u98ce\u683c": 312, "\u5982\u679c\u4f60\u7684\u4ee3\u7801\u6ca1\u6709\u901a\u8fc7ci\u7684\u98ce\u683c\u68c0\u67e5": 312, "\u4f60\u53ef\u4ee5\u4f7f\u7528": 312, "\u683c\u5f0f\u5316\u4f60\u7684\u4ee3\u7801": 312, "\u6211\u4eec\u6536\u96c6\u4e86\u7528\u6237\u4f7f\u7528": 313, "\u8fc7\u7a0b\u4e2d\u7684\u5e38\u89c1\u95ee\u9898": 313, "\u5982\u679c\u5728\u4e0b\u9762\u7684\u5217\u8868\u4e2d\u4ecd\u7136\u65e0\u6cd5\u627e\u5230\u60a8\u9047\u5230\u7684\u95ee\u9898\u7684\u7b54\u6848": 313, "\u53ef\u901a\u8fc7\u63d0\u4ea4": 313, "\u6216\u8005\u5728": 313, "\u4e0e\u6211\u4eec\u8054\u7cfb": 313, "\u8fd0\u884c": 313, "\u7cfb\u7edf\u9700\u8981\u7684\u6700\u5c0f\u8d44\u6e90\u662f\u591a\u5c11": 313, "\u5728\u901a\u8fc7": 313, "\u5ba2\u6237\u7aef\u4f7f\u7528": 313, "\u8fc7\u7a0b\u4e2d": 313, "\u9700\u8981\u7684\u6700\u4f4e": 313, "\u7248\u672c\u662f3": 313, "\u6700\u4f4epip\u7248\u672c\u662f": 313, "\u7cfb\u7edf\u652f\u6301\u4ee5\u5355\u673a\u6216\u5206\u5e03\u5f0f\u7684\u65b9\u5f0f\u90e8\u7f72": 313, "\u5355\u673a\u60c5\u51b5\u4e0b": 313, "\u8d44\u6e90\u9700\u6c42": 313, "\u6838": 313, "\u5185\u5b58": 313, "\u5728\u652f\u6301\u4ee5\u4e0b\u73af\u5883\u4e2d\u8fd0\u884c": 313, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u90e8\u7f72": 313, "\u9700\u8981\u7528\u6237\u62e5\u6709\u4e00\u4e2a": 313, "\u7684\u73af\u5883\u4e0a\u6d4b\u8bd5\u901a\u8fc7": 313, "\u662f\u5426\u5f3a\u4f9d\u8d56": 313, "\u652f\u6301\u5728\u5355\u673a\u6a21\u5f0f\u5b89\u88c5\u8fd0\u884c": 313, "\u7684\u9884\u7f16\u8bd1\u5305\u4ee5": 313, "\u7684\u5f62\u5f0f\u5206\u53d1": 313, "\u53ef\u4ee5\u7528": 313, "\u5feb\u901f\u5b89\u88c5": 313, "\u5982\u4f55\u5982\u67e5\u770b": 313, "\u7684\u8fd0\u884c\u65f6\u4fe1\u606f": 313, "\u8fd0\u884c\u4e0d\u6253\u5370\u65e5\u5fd7\u4fe1\u606f": 313, "\u53c2\u6570\u5f00\u542f\u65e5\u5fd7\u8f93\u51fa": 313, "\u5982\u679c\u60a8\u7684graphscope\u8fd0\u884c\u5728k8s\u96c6\u7fa4\u4e0a": 313, "\u53ef\u4ee5\u4f7f\u7528": [313, 319], "\u6765\u67e5\u770b\u7cfb\u7edf\u7684\u5f53\u524d\u72b6\u6001": 313, "\u540c\u65f6\u5982\u679c\u4f60\u53ef\u4ee5\u8bbf\u95ee": 313, "\u7684\u78c1\u76d8": 313, "\u4e5f\u53ef\u5728": 313, "\u76ee\u5f55\u4e0b\u67e5\u770b\u8fd0\u884c\u65f6\u65e5\u5fd7": 313, "\u4e3a\u4ec0\u4e48\u5728\u4f7f\u7528": 313, "\u547d\u4ee4\u65f6": 313, "\u53d1\u73b0\u4e86\u4e00\u4e9b\u591a\u4f59\u7684": 313, "\u5bf9\u4e8e\u5176\u4e2d\u4e00\u4e9b\u5931\u8d25\u7684": 313, "\u53ea\u80fd\u901a\u8fc7\u624b\u52a8\u6267\u884c\u547d\u4ee4\u5982": 313, "\u8fdb\u884c\u5220\u9664": 313, "\u901a\u5e38\u60c5\u51b5\u4e0b": 313, "\u8be5\u95ee\u9898\u51fa\u73b0\u5728\u4f7f\u7528": 313, "\u90e8\u7f72": [313, 316], "\u65f6": [313, 314], "\u4f9d\u8d56\u4e00\u4e9b\u6743\u9650\u6765\u5220\u9664\u8fd0\u884c\u65f6\u7684\u8d44\u6e90": 313, "\u5982\u679c\u7528\u6237\u6ca1\u6709\u6b63\u786e\u8bbe\u7f6e": 313, "\u7b49\u6743\u9650": 313, "\u53ef\u80fd\u4e0d\u80fd\u6b63\u786e\u56de\u6536\u5206\u914d\u7684\u8d44\u6e90": 313, "\u8be6\u7ec6\u7ec6\u8282\u53ef\u4ee5\u67e5\u770b": 313, "\u662f\u56fe\u6570\u636e\u5e93\u5417": 313, "\u5e76\u4e0d\u662f\u4e00\u4e2a\u56fe\u6570\u636e\u5e93": 313, "\u4f46\u5176\u5305\u542b\u4e00\u4e2a\u6301\u4e45\u56fe\u5b58\u50a8\u7684\u7ec4\u4ef6": 313, "\u53ef\u4ee5\u88ab\u7528\u4f5c\u6570\u636e\u5e93": 313, "\u4e0a\u7684\u517c\u5bb9\u6027\u5982\u4f55": 313, "\u76ee\u524d": [313, 320], "graphscope\u652f\u6301gremlin\u8bed\u8a00\u4e2d\u7684\u5927\u90e8\u5206\u67e5\u8be2\u7b97\u5b50": 313, "\u53ef\u901a\u8fc7": 313, "\u8be5\u6587\u6863": 313, "\u67e5\u770b\u8be6\u7ec6\u7684\u652f\u6301\u4fe1\u606f": 313, "\u770b\u8d77\u6765\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5361\u4f4f\u4e86": 313, "\u5982\u679c": 313, "\u770b\u8d77\u6765\u50cf\u5361\u4f4f": 313, "\u53ef\u80fd\u7684\u539f\u56e0\u6709": 313, "\u5728\u4f1a\u8bdd\u7684\u62c9\u8d77\u9636\u6bb5": 313, "\u5982\u679c\u5f53\u524d\u7f51\u7edc\u4e0b\u8f7d\u955c\u50cf\u8fc7\u6162": 313, "\u6216\u5f53\u524d\u96c6\u7fa4\u8d44\u6e90\u65e0\u6cd5\u6ee1\u8db3\u8bf7\u6c42\u7684\u8d44\u6e90\u65f6": 313, "\u4f1a\u9020\u6210\u5361\u4f4f\u7684\u73b0\u8c61": 313, "\u8f7d\u56fe\u9636\u6bb5": 313, "\u53ef\u80fd\u4f1a\u7531\u4e8e\u6570\u636e\u91cf\u8fc7\u5927\u9020\u6210\u77ed\u6682\u7684\u5361\u4f4f\u73b0\u8c61": 313, "\u5728\u6267\u884c\u56fe\u7b97\u6cd5\u5206\u6790\u9636\u6bb5": 313, "\u6216\u8005\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u7b97\u6cd5": 313, "\u7f16\u8bd1\u6784\u5efa\u5e94\u7528\u7684\u5e93\u65f6\u4f1a\u82b1\u8d39\u4e00\u4e9b\u65f6\u95f4": 313, "\u4e3a\u4ec0\u4e48\u8f7d\u56fe\u65f6\u62a5\u627e\u4e0d\u5230\u6587\u4ef6\u7684\u9519\u8bef": 313, "\u8fd9\u901a\u5e38\u53d1\u751f\u5728\u4ee5\u96c6\u7fa4\u65b9\u5f0f\u90e8\u7f72\u8fd0\u884c": 313, "\u6570\u636e\u6587\u4ef6\u5fc5\u987b\u8981\u5bf9": 313, "\u53ef\u89c1": 313, "\u4f60\u4e5f\u8bb8\u9700\u8981\u6302\u8f7d\u78c1\u76d8\u6216\u8005\u4f7f\u7528\u4e91\u5b58\u50a8\u63d0\u4f9b\u5546\u7684\u670d\u52a1": 313, "\u5982\u679c\u4f60\u7684\u96c6\u7fa4\u662f\u4f7f\u7528": 313, "\u90e8\u7f72\u7684": 313, "\u4f60\u5e94\u8be5\u9700\u8981\u8bbe\u7f6e": 313, "\u6765\u628a\u672c\u673a\u76ee\u5f55\u6302\u8f7d\u5230": 313, "\u865a\u62df\u7684": 313, "\u6709\u4ec0\u4e48\u533a\u522b": 313, "\u5982\u4f55\u8bbe\u7f6e": 313, "\u5bb9\u5668\u5206\u914d\u7684\u5185\u5b58": 313, "\u5b83\u5b58\u50a8\u7531": 313, "\u7ba1\u7406\u7684\u539f\u59cb\u6570\u636e\u7684": 313, "\u7684\u5143\u4fe1\u606f": 313, "\u4f8b\u5982\u5f62\u72b6": 313, "\u540d\u79f0\u7b49": 313, "\u7531\u4e8e\u5143\u6570\u636e\u6bd4\u6570\u636e\u96c6\u5c0f\u5f97\u591a": 313, "\u56e0\u6b64\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u9ed8\u8ba4\u914d\u7f6e\u5c31\u8db3\u591f\u4e86": 313, "\u5b83\u76f8\u5f53\u4e8e": 313, "\u5b58\u50a8\u6570\u636e\u96c6\u7684\u5185\u5b58": 313, "\u6211\u4eec\u53d1\u73b0\u5c06\u5176\u8bbe\u7f6e\u4e3a\u6570\u636e\u96c6\u5728\u78c1\u76d8\u4e0a\u7684\u5927\u5c0f\u7684": 313, "\u500d\u901a\u5e38\u662f\u4e00\u4e2a\u5408\u7406\u7684\u503c": 313, "\u5bb9\u5668\u7684\u5185\u5b58\u5927\u5c0f": 313, "\u4e00\u822c\u5c06\u5176\u8bbe\u7f6e\u4e3a": 313, "\u7684\u540c\u6837\u5927\u5c0f": 313, "\u5bfc\u81f4\u5728": 313, "\u73af\u5883\u4e0b\u5b89\u88c5": 313, "\u5931\u8d25\u7684\u539f\u56e0\u53ef\u80fd\u6709\u54ea\u4e9b": 313, "\u7f16\u8bd1": 313, "\u5931\u8d25": 313, "\u6765\u5c1d\u8bd5\u4f7f\u7528\u7cfb\u7edf\u5b89\u88c5\u7684": 313, "\u8be6\u60c5\u53ef\u53c2\u8003": 313, "\u4f60\u53ef\u4ee5\u6839\u636e": 313, "\u6b64\u6559\u7a0b": 313, "\u6765\u6e90\u7801\u7f16\u8bd1": 313, "\u6216\u5c1d\u8bd5\u901a\u8fc7": 313, "\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898": 313, "\u4e0a\u5206\u914d": 313, "\u65f6\u9047\u5230\u4e86": 313, "\u95ee\u9898": 313, "\u5982\u4f55\u89e3\u51b3": 313, "\u901a\u5e38\u5f53\u4f7f\u7528": 313, "\u7684\u65b9\u5f0f\u5b89\u88c5": 313, "\u4f1a\u62a5": 313, "\u9519\u8bef": [313, 315], "\u6211\u4eec\u901a\u8fc7": 313, "\u6765\u67e5\u770b\u65e5\u5fd7": 313, "\u6b64\u65f6\u65e5\u5fd7\u663e\u793a": 313, "\u901a\u5e38\u6709\u4e24\u79cd\u89e3\u51b3\u65b9\u5f0f": 313, "\u5feb\u901f\u7684\u65b9\u5f0f\u662f\u5728\u6240\u6709\u76f8\u5173\u7684": 313, "\u76ee\u5f55\u4e0a\u4f7f\u7528": 313, "\u4f46\u4e0d\u5efa\u8bae\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528": 313, "\u4f18\u96c5\u7684\u65b9\u6cd5\u662f\u9996\u5148\u521b\u5efa": 313, "\u7528\u6237\u548c\u7528\u6237\u7ec4": 313, "\u7136\u540e\u5c06": 313, "\u4e0a\u7684\u8bbf\u95ee\u6743\u9650\u6388\u4e88\u76f8\u5173nfs\u76ee\u5f55": 313, "\u4e3a\u4ec0\u4e48\u5728": 313, "\u96c6\u7fa4\u4e0a\u62c9\u8d77": 313, "\u5b9e\u4f8b\u65f6": 313, "\u4ea7\u751f\u8d85\u65f6\u5f02\u5e38": 313, "\u5927\u591a\u6570\u60c5\u51b5\u4e0b": 313, "\u8d85\u65f6\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u5728": 313, "\u96c6\u7fa4\u62c9\u8d77": 313, "\u5b9e\u4f8b\u65f6\u9700\u8981\u4e0b\u8f7d\u5bf9\u5e94\u955c\u50cf": 313, "\u8fd9\u4e00\u6b65\u901a\u5e38\u9700\u8981\u51e0\u5206\u949f\u7684\u65f6\u95f4": 313, "\u9002\u5f53\u7684\u589e\u52a0\u8d85\u65f6\u7b49\u5f85\u65f6\u95f4\u6765\u89e3\u51b3\u8be5\u95ee\u9898": 313, "\u542f\u52a8graphscope\u65f6\u7531\u4e8e\u8fde\u63a5v6d": 313, "etcd\u7b49\u7ec4\u4ef6\u5931\u8d25\u800c\u5bfc\u81f4graphscope\u542f\u52a8\u5931\u8d25": 313, "\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u4f60\u6240\u4f7f\u7528\u7684\u673a\u5668": 313, "\u6216\u5bb9\u5668": 313, "\u6240\u5728\u7684\u4f01\u4e1a\u7f51\u7edc\u5185\u8981\u6c42\u76f8\u5e94\u7684\u4ee3\u7406\u8bbe\u7f6e\u65b9\u53ef\u6b63\u5e38\u4f7f\u7528\u7f51\u7edc": 313, "\u8fd9\u4e9b\u4ee3\u7406\u8bbe\u7f6e\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9519\u8bef\u7684\u5730\u5740\u89e3\u6790\u4ee5\u53ca\u7aef\u53e3\u5360\u7528": 313, "\u4e3a\u907f\u514d\u7c7b\u4f3c\u60c5\u51b5": 313, "\u53ef\u5728\u73af\u5883\u53d8\u91cf": 313, "\u4e2d\u52a0\u5165graphscope\u76f8\u5173\u7684\u5730\u5740": 313, "\u4ee5\u53ca": [313, 320], "\u8bf7\u6ce8\u610f": 313, "no_proxy\u7684\u524d\u540e\u7f00\u89c4\u5219": 313, "unix": 313, "stackexchang": 313, "23452": 313, "\u5176\u4ed6\u95ee\u9898": 313, "\u60a8\u53ef\u4ee5\u63d0\u4ea4": 313, "\u63d0\u51fa\u4f60\u7684\u95ee\u9898": 313, "\u540c\u65f6": [313, 318], "\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528": 313, "\u505a\u4e3a\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": 314, "\u53ef\u4ee5\u5904\u7406\u56fe\u7684\u4ea4\u4e92\u5f0f\u67e5\u8be2": 314, "\u56fe\u5206\u6790\u548c\u56fe\u5b66\u4e60\u4efb\u52a1": 314, "\u5e76\u4e14\u5177\u6709\u6613\u4e8e\u4f7f\u7528": 314, "\u9ad8\u6027\u80fd\u548c\u826f\u597d\u7684\u53ef\u6269\u5c55\u6027\u7b49\u7279\u70b9": 314, "\u672c\u7ae0\u8282\u5c06\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u4ecb\u7ecd\u5982\u4f55\u57fa\u4e8e": 314, "\u4f7f\u7528": [314, 316, 319, 320, 321], "\u5e76\u5e2e\u52a9\u6570\u636e\u79d1\u5b66\u5bb6\u6765\u9ad8\u6548\u7684\u5206\u6790\u5927\u56fe": 314, "\u6570\u636e\u96c6": 314, "\u662f\u7531\u5fae\u8f6f\u5b66\u672f\u5173\u7cfb\u56fe": 314, "\u7684\u5b50\u96c6\u7ec4\u6210\u7684\u5f02\u6784\u56fe\u7f51\u7edc": 314, "\u8be5\u56fe\u4e2d\u5305\u542b4\u79cd\u7c7b\u578b\u7684\u5b9e\u4f53": 314, "\u5373\u8bba\u6587": 314, "\u4f5c\u8005": 314, "\u673a\u6784\u548c\u7814\u7a76\u9886\u57df": 314, "\u4ee5\u53ca\u8fde\u63a5\u4e24\u4e2a\u5b9e\u4f53\u7684\u56db\u79cd\u7c7b\u578b\u7684\u6709\u5411\u5173\u7cfb\u8fb9": 314, "\u6211\u4eec\u9700\u8981\u5904\u7406\u7684\u4efb\u52a1\u662f": 314, "\u7ed9\u51fa\u5f02\u6784\u7684": 314, "\u6570\u636e": 314, "\u5728\u8be5\u56fe\u4e0a\u9884\u6d4b\u6bcf\u7bc7\u8bba\u6587\u7684\u7c7b\u522b": 314, "\u8fd9\u662f\u4e00\u4e2a\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 314, "\u8be5\u4efb\u52a1\u53ef\u4ee5\u5f52\u7c7b\u5728\u5404\u4e2a\u9886\u57df": 314, "\u5404\u4e2a\u65b9\u5411\u6216\u7814\u7a76\u5c0f\u7ec4\u7684\u8bba\u6587": 314, "\u901a\u8fc7\u5bf9\u8bba\u6587\u5c5e\u6027\u548c\u5f15\u7528\u56fe\u4e0a\u7684\u7ed3\u6784\u4fe1\u606f\u5bf9\u8bba\u6587\u8fdb\u884c\u5206\u7c7b": 314, "\u5728\u8be5\u6570\u636e\u4e2d": 314, "\u6bcf\u4e2a\u8bba\u6587\u8282\u70b9\u5305\u542b\u4e86\u4e00\u4e2a\u4ece\u8bba\u6587\u6807\u9898": 314, "\u6458\u8981\u62bd\u53d6\u7684": 314, "\u7ef4": 314, "\u5411\u91cf\u4f5c\u4e3a\u8868\u5f81": 314, "\u8be5\u8868\u5f81\u662f\u7ecf\u8fc7": 314, "\u9884\u8bad\u7ec3\u63d0\u524d\u83b7\u53d6\u7684": 314, "\u800c\u7ed3\u6784\u4fe1\u606f\u662f\u5728\u4ee5\u4e0b\u8fc7\u7a0b\u4e2d\u5373\u65f6\u8ba1\u7b97\u7684": 314, "\u4e0a\u56fe\u8868\u793a\u4e86\u7528\u6237\u901a\u8fc7": 314, "\u5ba2\u6237\u7aef\u8c03\u7528": 314, "\u89e3\u51b3\u8be5\u95ee\u9898\u7684\u5de5\u4f5c\u6d41\u7a0b": 314, "\u6b65\u9aa4": 314, "\u5efa\u7acb\u4e00\u4e2a\u4f1a\u8bdd": 314, "\u521b\u5efa\u4e00\u4e2a\u5de5\u4f5c\u7a7a\u95f4": 314, "\u5b9a\u4e49\u548c\u8f7d\u5165\u56fe": 314, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u56fe": 314, "\u6267\u884c\u56fe\u7b97\u6cd5\u505a\u56fe\u5206\u6790": 314, "\u6267\u884c\u57fa\u4e8e\u56fe\u6570\u636e\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1": 314, "\u7684\u7b2c\u4e00\u6b65": 314, "\u6211\u4eec\u9700\u8981\u5728": 314, "\u4e2d\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 314, "\u5bf9\u4e8e": [314, 317], "\u521b\u5efa\u4f1a\u8bdd\u9700\u8981\u4f7f\u7528": 314, "\u670d\u52a1\u7c7b\u578b": 314, "\u9ed8\u8ba4\u662f": 314, "\u53e6\u5916": [314, 320], "\u6ce8\u610f": [314, 317], "\u662f": 314, "\u4e3b\u673a\u4e0a\u7684\u8def\u5f84": 314, "\u5f53\u5728": 314, "\u4e0a\u4f7f\u7528": 314, "\u9700\u8981\u9996\u5148\u5c06\u6b64\u8def\u5f84\u52a0\u5165\u5230": 314, "\u7684\u5171\u4eab\u76ee\u5f55\u4e2d": 314, "\u901a\u5e38\u4e3a": 314, "\u66f4\u8be6\u7ec6\u7684\u6307\u5f15\u8bf7\u53c2\u770b": 314, "\u7684\u5efa\u7acb\u8fc7\u7a0b\u4e2d": 314, "\u9996\u9009\u4f1a\u5728\u80cc\u540e\u5c1d\u8bd5\u62c9\u8d77\u4e00\u4e2a": 314, "\u4f5c\u4e3a\u540e\u7aef\u5f15\u64ce\u7684\u5165\u53e3": 314, "\u8be5": 314, "\u8d1f\u8d23\u7ba1\u7406\u8be5\u6b21\u4f1a\u8bdd\u7684": 314, "\u6240\u6709\u8d44\u6e90": 314, "\u4ee5\u53ca\u4ea4\u4e92\u5f0f\u67e5\u8be2": 314, "\u56fe\u5b66\u4e60\u5f15\u64ce\u7684\u751f\u547d\u5468\u671f": 314, "\u540e\u7eed\u62c9\u8d77\u7684\u5176\u4ed6\u6bcf\u4e2a": 314, "\u90fd\u6709\u4e00\u4e2a": 314, "\u5b9e\u4f8b\u4f5c\u4e3a\u5185\u5b58\u7ba1\u7406\u5c42": 314, "\u5206\u5e03\u5f0f\u7684\u7ba1\u7406\u56fe\u6570\u636e": 314, "\u8f7d\u56fe": [314, 315, 316], "\u4ee5\u5c5e\u6027\u56fe": 314, "\u5efa\u6a21\u56fe\u6570\u636e": [314, 320], "\u5c5e\u6027\u56fe\u4e2d": 314, "\u70b9\u548c\u8fb9\u90fd\u6709\u4e00\u4e2a\u6807\u7b7e": 314, "\u4e0d\u540c\u7684\u6807\u7b7e\u6709\u4e0d\u540c\u7684\u5c5e\u6027": 314, "\u4e0b\u56fe\u5c55\u793a\u4e86\u5c5e\u6027\u56fe\u7684\u6a21\u578b": 314, "\u8be5\u56fe\u5177\u6709\u56db\u79cd\u9876\u70b9": 314, "\u5206\u522b\u6807\u8bb0\u4e3a": 314, "\u8bba\u6587": 314, "\u673a\u6784": 314, "\u7814\u7a76\u9886\u57df": 314, "\u6709\u56db\u79cd\u8fde\u63a5\u5b83\u4eec\u7684\u8fb9": 314, "\u6bcf\u79cd\u8fb9\u90fd\u6709\u4e00\u4e2a\u6807\u7b7e": 314, "\u5e76\u4e14\u8fb9\u7684\u4e24\u7aef\u9876\u70b9\u7684\u6807\u7b7e\u4e5f\u662f\u786e\u5b9a\u7684": 314, "\u5f15\u7528": 314, "\u8fd9\u79cd\u6807\u7b7e\u7684\u8fb9\u8fde\u63a5\u4e24\u4e2a": 314, "\u9876\u70b9": 314, "\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f\u6807\u8bb0\u4e3a": 314, "\u64b0\u5199": 314, "\u7684\u8fb9": [314, 320], "\u5b83\u8981\u6c42\u8be5\u8d77\u59cb\u70b9\u7684\u6807\u8bb0\u4e3a": 314, "\u7ec8\u6b62\u70b9\u7684\u6807\u8bb0\u4e3a": 314, "\u6240\u6709\u7684\u9876\u70b9": 314, "\u548c\u8fb9\u90fd\u53ef\u4ee5\u5177\u6709\u5c5e\u6027": 314, "\u9876\u70b9\u5177\u6709\u8bf8\u5982\u53d1\u5e03\u5e74\u4efd": 314, "\u4e3b\u9898\u6807\u7b7e\u7b49\u5c5e\u6027": 314, "\u8981\u5c06\u6b64\u56fe\u52a0\u8f7d\u5230": 314, "\u53ef\u4ee5\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4e0e": 314, "\u6570\u636e\u6587\u4ef6": 314, "\u7ed3\u5408\u4f7f\u7528": 314, "\u8bf7\u4e0b\u8f7d\u6570\u636e\u5e76\u5c06\u5176\u89e3\u538b\u7f29\u5230\u672c\u5730\u7684\u6302\u8f7d\u76ee\u5f55": 314, "\u5728\u672c\u4f8b\u4e2d\u4e3a": 314, "author_affiliated_with_institut": 314, "paper_has_topic_field_of_studi": 314, "hastop": 314, "paper_cites_pap": 314, "author_writes_pap": 314, "\u4e5f\u53ef\u901a\u8fc7\u6211\u4eec\u63d0\u4f9b\u7684\u5185\u7f6e\u6570\u636e\u96c6\u51fd\u6570\u5e2e\u52a9\u5b8c\u6210\u8f7d\u56fe\u6d41\u7a0b": 314, "\u8fd9\u91cc\u7684": 314, "\u5df2\u7ecf\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u5b58\u50a8\u5728": 314, "\u4e2d\u7684\u56fe": 314, "\u56fe\u6570\u636e\u5206\u5e03\u5728\u8fd9\u4e2a\u4f1a\u8bdd\u80cc\u540e\u62c9\u8d77\u7684": 314, "\u66f4\u591a\u7ec6\u8282\u8bf7\u67e5\u770b": 314, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u5141\u8bb8\u7528\u6237\u4ee5": 314, "\u63a2\u7d22\u6027": 314, "\u65b9\u5f0f\u6765\u63a2\u7d22": 314, "\u67e5\u770b\u548c\u663e\u793a\u56fe\u6570\u636e": 314, "\u4ee5\u65b9\u4fbf\u7684\u5b9a\u4f4d\u548c\u6d1e\u5bdf\u7279\u5b9a\u7684\u6df1\u5165\u4fe1\u606f": 314, "\u91c7\u7528\u79f0\u4e3a": 314, "\u7684\u9ad8\u7ea7\u8bed\u8a00\u8fdb\u884c\u56fe\u904d\u5386": 314, "\u5e76\u63d0\u4f9b\u5927\u89c4\u6a21\u7684\u9ad8\u6548\u6267\u884c": 314, "\u5728\u6b64\u793a\u4f8b\u4e2d": 314, "\u6211\u4eec\u4f7f\u7528\u56fe\u904d\u5386\u6765\u67e5\u770b\u4e24\u4f4d\u7ed9\u5b9a\u4f5c\u8005\u5171\u540c\u64b0\u5199\u7684\u8bba\u6587\u6570\u91cf": 314, "\u4e3a\u4e86\u7b80\u5316\u67e5\u8be2": 314, "\u6211\u4eec\u5047\u8bbe\u4f5c\u8005\u53ef\u4ee5\u5206\u522b\u7531id": 314, "\u552f\u4e00\u6807\u8bc6": 314, "\u56fe\u5206\u6790\u662f\u5728\u771f\u5b9e\u573a\u666f\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u4e00\u7c7b\u56fe\u8ba1\u7b97": 314, "\u4e8b\u5b9e\u8bc1\u660e": 314, "\u8bb8\u591a\u7b97\u6cd5": 314, "\u4f8b\u5982\u793e\u533a\u68c0\u6d4b": 314, "\u8def\u5f84\u548c\u8fde\u63a5\u6027": 314, "\u96c6\u4e2d\u6027": 314, "\u5728\u5404\u79cd\u4e1a\u52a1\u4e2d\u90fd\u975e\u5e38\u6709\u6548": 314, "\u5185\u5efa\u4e86\u4e00\u7ec4\u9884\u7f6e\u5e38\u7528\u7b97\u6cd5": 314, "\u65b9\u4fbf\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u5206\u6790\u56fe\u6570\u636e": 314, "\u4e0b\u9762\u6211\u4eec\u9996\u5148\u901a\u8fc7\u5728\u7279\u5b9a\u5468\u671f\u5185\u4ece\u5168\u56fe\u4e2d\u63d0\u53d6\u8bba\u6587": 314, "\u80cc\u540e\u57fa\u4e8e": 314, "\u6765\u5bfc\u51fa\u4e00\u4e2a\u5b50\u56fe": 314, "\u7136\u540e\u8fd0\u884c": 314, "\u5206\u89e3\u548c\u4e09\u89d2\u5f62\u8ba1\u6570\u4ee5\u751f\u6210\u6bcf\u4e2a\u8bba\u6587\u8282\u70b9\u7684\u7ed3\u6784\u7279\u5f81": 314, "\u7531\u4e8e\u8bb8\u591a\u7b97\u6cd5\u53ef\u80fd\u4ec5\u9002\u7528\u4e8e\u540c\u6784\u56fe": 314, "\u53ea\u6709\u4e00\u7c7b\u70b9\u548c\u4e00\u7c7b\u8fb9\u800c\u4e0d\u533a\u5206\u6807\u7b7e": 314, "\u8981\u5728\u5c5e\u6027\u56fe\u4e0a\u4f7f\u7528\u8fd9\u4e9b\u7b97\u6cd5": 314, "\u6211\u4eec\u9996\u5148\u9700\u8981\u5c06\u5176\u6295\u5f71\u5230\u4e00\u4e2a\u7b80\u5355\u7684\u540c\u6784\u56fe\u4e2d": 314, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5728": 314, "\u4e2d\u7f16\u5199\u81ea\u5df1\u7684\u7b97\u6cd5": 314, "\u5f53\u524d": 314, "\u652f\u6301\u7528\u6237\u4ee5": 314, "\u6a21\u578b\u548c": 314, "\u6a21\u578b\u81ea\u5b9a\u4e49\u56fe\u7b97\u6cd5": 314, "\u7ed3\u5408\u4e86\u56fe\u7ed3\u6784\u548c\u673a\u5668\u5b66\u4e60\u7684\u4f18\u52bf": 314, "\u53ef\u4ee5\u5c06\u56fe\u4e2d\u7684\u7ed3\u6784\u4fe1\u606f\u548c\u5c5e\u6027\u4fe1\u606f\u538b\u7f29\u4e3a\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7684\u4f4e\u7ef4\u5d4c\u5165\u5411\u91cf": 314, "\u8fd9\u4e9b\u5d4c\u5165\u548c\u8868\u5f81\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8f93\u5165\u5230\u4e0b\u6e38\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u4e2d": 314, "\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d": 314, "\u6211\u4eec\u8bad\u7ec3\u4e86": 314, "\u6a21\u578b": 314, "\u5c06\u8282\u70b9": 314, "\u5206\u7c7b\u4e3a349\u4e2a\u7c7b\u522b": 314, "\u6bcf\u4e2a\u7c7b\u522b\u4ee3\u8868\u4e00\u4e2a\u51fa\u5904": 314, "\u4f8b\u5982\u9884\u5370\u672c\u548c\u4f1a\u8bae": 314, "\u4e3a\u6b64": 314, "\u63a5\u7740\u4e0a\u4e00\u6b65": 314, "\u9996\u5148\u9700\u8981\u542f\u52a8\u5b66\u4e60\u5f15\u64ce\u5e76\u6784\u5efa\u4e00\u4e2a\u5177\u6709\u7279\u5f81\u7684\u6570\u636e\u56fe": 314, "\u7136\u540e\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u8bad\u7ec3\u8fc7\u7a0b\u5e76\u6267\u884c": 314, "\u6700\u540e": [314, 315, 318], "\u5f53\u6211\u4eec\u5b8c\u6210\u6240\u6709\u7684\u8ba1\u7b97\u8fc7\u7a0b\u540e": 314, "\u5173\u95ed\u5f53\u524d\u7684\u4f1a\u8bdd": 314, "\u8be5\u6b65\u9aa4\u4f1a\u544a\u77e5\u80cc\u540e\u7684": 314, "\u548c\u5f15\u64ce": 314, "\u91ca\u653e\u5f53\u524d\u6240\u6709\u7684\u8d44\u6e90": 314, "\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e00\u7cfb\u5217\u53ef\u4ee5\u5728\u56fe\u4e0a\u8fdb\u884c\u65b0\u589e": 315, "\u6295\u5f71\u7684\u65b9\u6cd5": 315, "\u4ee5\u53ca\u5982\u4f55\u5c06\u4e00\u4e2a\u590d\u6742\u7684\u56fe\u8f6c\u6362\u4e3a\u53ef\u4ee5\u9002\u914d\u666e\u901a\u7b97\u6cd5\u5e94\u7528\u7684\u65b9\u6cd5": 315, "\u6211\u4eec\u5c55\u793a\u5982\u4f55\u5c06\u7b97\u6cd5\u5f97\u5230\u7684\u7ed3\u679c\u52a0\u56de\u5230\u56fe\u4e2d\u53bb": 315, "\u5177\u4f53\u800c\u8a00": 315, "\u56fe": 315, "\u63d0\u4f9b\u4e86\u4e24\u4e2a\u589e\u52a0\u6807\u7b7e\u7684\u51fd\u6570": 315, "\u548c\u4e00\u4e2a\u6295\u5f71\u7684\u51fd\u6570": 315, "\u6211\u4eec\u5df2\u7ecf\u5728": 315, "\u4e00\u8282\u89c1\u5230\u8fc7": 315, "\u8fd9\u4e24\u4e2a\u51fd\u6570": 315, "\u5f53\u65f6\u6211\u4eec\u7528\u5b83\u6765\u6784\u5efa\u4e00\u5f20\u56fe": 315, "\u8fdb\u4e00\u6b65\u7684": 315, "\u5f53\u56fe\u6784\u5efa\u597d\u5e76\u8f7d\u5165\u4e86": 315, "\u4e2d\u4e4b\u540e": 315, "\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u7528\u5176\u589e\u52a0\u66f4\u591a\u7684\u6807\u7b7e": 315, "\u5f53\u7136\u8fd9\u4e00\u6b65\u5e76\u4e0d\u4f1a\u5728\u539f\u56fe\u4e0a\u4fee\u6539": 315, "\u800c\u662f\u4f1a\u8fd4\u56de\u57fa\u4e8e\u539f\u56fe\u4e4b\u4e0a": 315, "\u589e\u52a0\u4e86\u65b0\u7684\u6807\u7b7e\u7684\u65b0\u56fe": 315, "\u5c5e\u6027\u56fe\u4e3a\u4f8b": 315, "\u6211\u4eec\u73b0\u5728\u8f7d\u5165\u5176\u4e2d\u4e00\u90e8\u5206\u6807\u7b7e": 315, "\u4f5c\u4e3a\u63a5\u4e0b\u6765\u4e00\u7cfb\u5217\u8f6c\u6362\u64cd\u4f5c\u7684\u8d77\u59cb\u56fe": 315, "pathlib": 315, "\u5230\u8fd9\u91cc": 315, "\u6211\u4eec\u5df2\u7ecf\u8f7d\u5165\u4e86\u4e00\u5f20\u56fe": 315, "\u63a5\u4e0b\u6765\u6211\u4eec\u5728\u8fd9\u5f20\u56fe\u4e0a\u518d\u6dfb\u52a0\u51e0\u4e2a\u6807\u7b7e": 315, "graph1": 315, "comment_0_0": [315, 320], "graph2": 315, "comment_replyof_comment_0_0": [315, 320], "\u53ef\u4ee5\u770b\u5230\u6bcf\u6b21": 315, "\u90fd\u4f1a\u4ea7\u751f\u4e00\u5f20\u65b0\u7684\u56fe": 315, "\u5728\u5e95\u5c42": 315, "\u4ed6\u4eec\u5171\u6709\u7684\u90e8\u5206\u4f1a\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58": 315, "\u6240\u4ee5\u5e76\u4e0d\u4f1a\u5c06\u539f\u56fe\u7684\u6570\u636e\u590d\u5236\u4e00\u4efd": 315, "\u5728\u67d0\u4e9b\u573a\u666f\u4e0b": 315, "\u6211\u4eec\u9700\u8981\u5c06\u4ece\u4e00\u5f20\u590d\u6742\u7684\u56fe\u63d0\u53d6\u51fa\u4e00\u4e2a\u5b50\u56fe": 315, "\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u501f\u52a9": 315, "\u6765\u5b8c\u6210": 315, "\u5305\u542b\u4e24\u4e2a\u53c2\u6570": 315, "\u5176\u503c\u4e3a\u4e00\u4e2a\u5b57\u5178": 315, "\u5b57\u5178\u7684\u952e\u662f\u6807\u7b7e\u540d": 315, "\u503c\u662f\u8981\u53d6\u7684\u5c5e\u6027\u7684\u5217\u8868": 315, "\u503c\u53ef\u4ee5\u4e3a": 315, "\u4ee3\u8868\u9009\u62e9\u6240\u6709\u7684\u5c5e\u6027": 315, "\u7684\u8fd4\u56de\u503c\u4e5f\u662f\u4e00\u4e2a\u5c5e\u6027\u56fe": 315, "\u5e76\u4e14\u53ef\u4ee5\u88ab\u8fdb\u4e00\u6b65": 315, "\u4ee5\u4e0b\u662f\u51e0\u4e2a\u4f8b\u5b50": 315, "\u5305\u542b\u4e00\u4e2a\u70b9\u6807\u7b7e": 315, "\u548c\u4e00\u4e2a\u8fb9\u6807\u7b7e": 315, "\u4ee5\u53ca\u6240\u9009\u62e9\u7684\u5c5e\u6027": 315, "sub_graph2": 315, "\u73b0\u5728\u70b9\u4e0a\u6ca1\u6709\u5c5e\u6027": 315, "\u8fb9\u4e0a\u6709\u4e00\u4e2a\u5c5e\u6027": 315, "\u5f53\u6267\u884c\u4e00\u4e2a\u4ec5\u53ef\u4ee5\u8dd1\u5728\u7b80\u5355\u56fe\u4e0a\u7684\u7b97\u6cd5\u65f6": 315, "\u5176\u4f1a\u9ed8\u8ba4\u5c06\u5176\u53c2\u6570\u4e2d\u7684\u5c5e\u6027\u56fe\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 315, "\u5982\u679c\u4e0d\u80fd\u8fdb\u884c\u8fd9\u79cd\u8f6c\u6362": 315, "\u5373\u591a\u4e8e\u4e00\u4e2a\u70b9\u6807\u7b7e\u548c\u4e00\u4e2a\u8fb9\u6807\u7b7e": 315, "\u6216\u591a\u4e8e\u4e00\u4e2a\u5c5e\u6027": 315, "\u90a3\u4e48\u5c31\u4f1a\u62a5\u9519": 315, "\u8f6c\u6362\u4e0d\u5408\u6cd5": 315, "\u591a\u4e8e\u4e00\u4e2a\u70b9": 315, "\u8fb9\u6807\u7b7e": 315, "\u591a\u4e8e\u4e00\u4e2a\u5c5e\u6027": 315, "\u4e0a\u4e00\u6b65\u7b97\u6cd5\u7684\u8fd0\u884c\u7ed3\u679c\u53ef\u4ee5\u88ab\u52a0\u5165\u4e00\u5f20\u56fe\u4e2d": 315, "\u4f5c\u4e3a\u70b9\u7684\u4e00\u4e2a\u5c5e\u6027": 315, "\u4e0d\u4ec5\u53ef\u4ee5\u52a0\u5165\u8fd0\u7b97\u7ed3\u679c\u5230\u76f4\u63a5\u88ab\u67e5\u8be2\u7684\u56fe\u4e0a": 315, "\u8fd8\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u67e5\u8be2\u7ed3\u679c\u52a0\u5230\u88ab": 315, "\u800c\u5f97\u5230\u88ab\u67e5\u8be2\u7684\u56fe\u4e0a": 315, "\u53ea\u8981\u88ab\u52a0\u5165\u5c5e\u6027\u7684\u70b9\u6807\u7b7e\u76f8\u540c": 315, "\u662f\u963f\u91cc\u5df4\u5df4\u8fbe\u6469\u9662\u667a\u80fd\u8ba1\u7b97\u5b9e\u9a8c\u5ba4\u7814\u53d1\u5e76\u5f00\u6e90\u7684\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u5e73\u53f0": 316, "\u4f9d\u6258\u4e8e\u963f\u91cc\u6d77\u91cf\u6570\u636e\u548c\u4e30\u5bcc\u573a\u666f": 316, "\u4e0e\u8fbe\u6469\u9662\u7684\u9ad8\u6c34\u5e73\u7814\u7a76": 316, "\u81f4\u529b\u4e8e\u9488\u5bf9\u5b9e\u9645\u751f\u4ea7\u573a\u666f\u4e2d\u56fe\u8ba1\u7b97\u7684\u6311\u6218": 316, "\u63d0\u4f9b\u4e00\u7ad9\u5f0f\u9ad8\u6548\u7684\u89e3\u51b3\u65b9\u6848": 316, "\u63d0\u4f9b\u4e86": 316, "\u80fd\u5341\u5206\u65b9\u4fbf\u7684\u5bf9\u63a5\u4e0a\u4e0b\u6e38\u5de5\u4f5c\u6d41": 316, "\u5177\u6709\u4e00\u7ad9\u5f0f": 316, "\u5f00\u53d1\u4fbf\u6377": 316, "\u6027\u80fd\u6781\u81f4\u7b49\u7279\u70b9": 316, "\u5b83\u6574\u5408\u4e86\u667a\u80fd\u8ba1\u7b97\u5b9e\u9a8c\u5ba4\u591a\u4e2a\u91cd\u8981\u7684\u521b\u65b0\u6027\u6280\u672f": 316, "\u5305\u62ec": [316, 319], "\u652f\u6301\u4e86\u56fe\u5206\u6790": 316, "\u56fe\u7684\u4ea4\u4e92\u5f0f\u67e5\u8be2\u548c\u56fe\u5b66\u4e60": 316, "\u5176\u4e2d\u6838\u5fc3\u4f18\u52bf\u5305\u62ec\u5728\u4e1a\u754c\u9996\u6b21\u652f\u6301\u4e86": 316, "\u5206\u5e03\u5f0f\u7f16\u8bd1\u4f18\u5316": 316, "\u652f\u6301\u4e86\u7b97\u6cd5\u7684\u81ea\u52a8\u5e76\u884c\u5316": 316, "\u63d0\u4f9b\u4e86\u4f01\u4e1a\u7ea7\u573a\u666f\u4e0b\u7684\u6781\u81f4\u6027\u80fd\u7b49": 316, "\u5728\u963f\u91cc\u5df4\u5df4\u5185\u5916\u90e8\u5e94\u7528\u4e2d": 316, "\u5df2\u7ecf\u8bc1\u660e\u5728\u591a\u4e2a\u5173\u952e\u4e92\u8054\u7f51\u9886\u57df": 316, "\u5982\u98ce\u63a7": 316, "\u7535\u5546\u63a8\u8350": 316, "\u5e7f\u544a": 316, "\u7f51\u7edc\u5b89\u5168": [316, 319], "\u77e5\u8bc6\u56fe\u8c31\u7b49": 316, "\u5b9e\u73b0\u4e86\u91cd\u8981\u7684\u4e1a\u52a1\u65b0\u4ef7\u503c": 316, "\u6574\u5408\u4e86\u8fbe\u6469\u9662\u7684\u591a\u9879\u5b66\u672f\u7814\u7a76\u6210\u679c": 316, "\u5176\u4e2d\u7684\u6838\u5fc3\u6280\u672f\u66fe\u83b7\u5f97\u6570\u636e\u5e93\u9886\u57df\u9876\u7ea7\u5b66\u672f\u4f1a\u8bae": 316, "\u6700\u4f73\u8bba\u6587\u5956": 316, "vldb2017": 316, "\u6700\u4f73\u6f14\u793a\u5956": 316, "vldb2020": 316, "\u6700\u4f73\u8bba\u6587\u5956\u4e9a\u519b": 316, "\u4e16\u754c\u4eba\u5de5\u667a\u80fd\u521b\u65b0\u5927\u8d5bsail\u5956\u7b49": 316, "\u7684\u4ea4\u4e92\u67e5\u8be2\u5f15\u64ce\u7684\u8bba\u6587\u5df2\u88ab": 316, "nsdi": 316, "2021\u5f55\u7528": 316, "\u8fd8\u6709\u5176\u5b83\u56f4\u7ed5": 316, "\u7684\u5341\u591a\u9879\u7814\u7a76\u6210\u679c\u53d1\u8868\u5728\u9886\u57df\u9876\u7ea7\u7684\u5b66\u672f\u4f1a\u8bae\u6216\u671f\u520a\u4e0a": 316, "kdd\u7b49": 316, "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": 316, "\u57fa\u4e8e": [316, 321], "\u793a\u4f8b": 316, "\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 316, "\u521b\u5efa\u4f1a\u8bdd": 316, "\u4ea4\u4e92\u5f0f\u67e5\u8be2": 316, "\u56fe\u5206\u6790": 316, "\u56fe\u795e\u7ecf\u7f51\u7edc": 316, "\u5173\u95ed\u4f1a\u8bdd": 316, "\u4f7f\u7528helm\u90e8\u7f72graphscop": 316, "\u5728aw": 316, "\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": 316, "\u672c\u5730\u90e8\u7f72graphscop": 316, "\u5165\u95e8\u6559\u7a0b": 316, "\u8bba\u6587\u5f15\u7528\u5173\u7cfb\u7f51\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [316, 321], "\u4f7f\u7528\u517c\u5bb9": [316, 321], "\u8fdb\u884c\u56fe\u64cd\u4f5c": [316, 321], "\u7528": [316, 318, 321], "\u50cf": [316, 321], "\u4e00\u6837\u8fdb\u884c\u56fe\u5206\u6790": [316, 321], "\u8f7d\u5165\u56fe\u6570\u636e": [316, 321], "\u5185\u7f6e\u7684\u56fe\u5206\u6790\u7b97\u6cd5": [316, 321], "\u7f16\u5199\u81ea\u5b9a\u4e49\u56fe\u5206\u6790\u7b97\u6cd5": [316, 321], "\u4f7f\u7528\u67e5\u8be2\u8bed\u8a00": [316, 321], "\u8fdb\u884c\u4ea4\u4e92\u5f0f\u67e5\u8be2": [316, 321], "\u8fdb\u884c\u65e0\u76d1\u7763\u56fe\u5b66\u4e60": [316, 321], "bipartitegraphsag": [316, 321], "\u7684\u4e8c\u90e8\u56fe\u65e0\u76d1\u7763\u5b66\u4e60": [316, 321], "\u8fdb\u884c\u6709\u76d1\u7763\u56fe\u5b66\u4e60": [316, 321], "\u73af\u5883\u518d\u63a2\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [316, 321], "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": 316, "\u624b\u52a8\u914d\u7f6e\u56fe": 316, "\u9ad8\u7ea7\u7528\u6cd5": 316, "\u4ece": [316, 318], "\u4e2d\u8f7d\u56fe": 316, "\u7684\u53d8\u79cd": 316, "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": 316, "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": 316, "\u6295\u5f71": 316, "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 316, "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": 316, "\u5185\u7f6e\u7b97\u6cd5": 316, "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": 316, "\u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": 316, "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528": 316, "\u4e2d\u7684\u51fd\u6570": 316, "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": 316, "\u8fd0\u884cjava\u7f16\u5199\u7684\u7b97\u6cd5": 316, "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": 316, "\u5229\u7528python": 316, "\u8fde\u63a5graphscop": 316, "\u5229\u7528java": 316, "\u5f00\u53d1\u63a7\u5236\u53f0": 316, "gremlin\u7f16\u7a0b\u5165\u95e8": 316, "gremlin\u517c\u5bb9\u6027": 316, "\u5bf9\u6bd4tinkerpop": 316, "\u56fe\u5b66\u4e60\u6a21\u578b": 316, "\u81ea\u5b9a\u4e49\u7b97\u6cd5": 316, "\u5e38\u89c1\u95ee\u9898": 316, "\u5f00\u53d1\u8005\u6307\u5357": 316, "\u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5": 316, "\u6784\u5efa": 316, "\u4ee3\u7801\u98ce\u683c": 316, "\u76ee\u524d\u652f\u6301\u7684\u5e73\u53f0\u5982\u4e0b": 317, "sur": 317, "\u7a0b\u5e8f\u5305": 317, "\u7684\u5f62\u5f0f\u53d1\u5e03": 317, "\u53ef\u76f4\u63a5\u901a\u8fc7": 317, "\u9700\u8981\u6ee1\u8db3": 317, "\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u672c\u6587\u6863\u7684\u4ee5\u4e0b\u6b65\u9aa4\u90e8\u7f72\u4e00\u4e2a\u672c\u5730": 317, "\u5e76\u52a0\u8f7d\u9884\u7f16\u8bd1\u597d\u7684\u955c\u50cf": 317, "\u73af\u5883\u4e0b\u8fd0\u884c": 317, "\u9996\u5148\u9700\u8981\u9884\u5148\u5b89\u88c5\u4ee5\u4e0b\u4f9d\u8d56": 317, "\u7684\u7528\u6237": 317, "\u53ef\u901a\u8fc7\u5b98\u65b9\u6587\u6863\u6765\u5b89\u88c5\u4e0a\u8ff0\u4f9d\u8d56": 317, "\u5e76\u5728": 317, "\u4e2d\u5f00\u542f": 317, "\u529f\u80fd": 317, "\u53d1\u884c\u7248\u7528\u6237": 317, "\u6211\u4eec\u63d0\u4f9b\u4e86\u811a\u672c\u6765\u51c6\u5907\u8fd0\u884c\u65f6\u73af\u5883": 317, "\u60a8\u4e5f\u53ef\u4ee5\u5728": 317, "\u4e0a\u5b89\u88c5": 317, "wsl2": 317, "\u4ee5\u4f7f\u7528\u811a\u672c": 317, "install_dep": 317, "\u63a5\u4e0b\u6765": [317, 318, 319], "\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7": 317, "graphscope\u7684\u4ea4\u4e92\u67e5\u8be2\u5f15\u64ce": 318, "\u7b80\u79f0gie": 318, "\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf": 318, "\u5b83\u4e3a\u4e0d\u540c\u7ecf\u9a8c\u7684\u7528\u6237\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6613\u7528\u7684\u4ea4\u4e92\u5f0f\u73af\u5883": 318, "\u652f\u6301\u6d77\u91cf\u590d\u6742\u56fe\u6570\u636e\u4e0a\u7684": 318, "\u5b9e\u65f6\u5206\u6790\u4e0e\u4ea4\u4e92\u63a2\u7d22": 318, "\u8be5\u5f15\u64ce\u652f\u6301": 318, "\u8bed\u8a00\u8868\u8fbe\u7684\u4ea4\u4e92\u56fe\u67e5\u8be2": 318, "\u5e76\u63d0\u4f9b\u4e86\u81ea\u52a8\u5316\u548c\u7528\u6237\u900f\u660e\u7684\u5206\u5e03\u5f0f\u5e76\u884c\u6267\u884c": 318, "\u662f\u57fa\u4e8egremlin\u8bed\u8a00\u5f00\u53d1\u4ea4\u4e92\u5f0f\u56fe\u5e94\u7528\u7684\u4e00\u4e2a\u5f00\u6e90\u6846\u67b6\u548c\u4e8b\u5b9e\u6807\u51c6": 318, "gie\u901a\u8fc7tinkerpop\u63d0\u4f9b\u7684": 318, "\u63a5\u53e3": [318, 319], "\u5b9e\u73b0\u4e86\u4e0etinkerpop\u751f\u6001\u65e0\u7f1d\u96c6\u6210": 318, "\u4ece\u800c\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528\u8bf8\u5982": 318, "\u7684\u5f00\u53d1\u5de5\u5177\u6216\u901a\u8fc7java\u548cpython\u7b49\u591a\u79cd\u8bed\u8a00\u63a5\u53e3\u7f16\u5199\u5e94\u7528\u903b\u8f91": 318, "\u5982\u4e0b\u6240\u793a": 318, "\u7528\u6237\u53ef\u4ee5\u5f88\u7b80\u5355\u7684\u901a\u8fc7python\u8fde\u4e0a\u4e00\u4e2a\u8f7d\u5165graphscope\u7cfb\u7edf\u7684\u56fe\u5e76\u53d1\u8d77gremlin\u67e5\u8be2": 318, "\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4ea4\u4e92\u4f1a\u8bdd": 318, "\u8f7d\u5165ldbc\u793a\u4f8b\u56fe\u6570\u636e": 318, "\u968f\u540e\u8fd4\u56de\u4e00\u4e2agremlin\u67e5\u8be2\u63d0\u4ea4\u5165\u53e3": 318, "\u4e0b\u9762\u4e24\u53e5gremlin\u793a\u4f8b\u67e5\u8be2\u5206\u522b\u8ba1\u7b97\u56fe\u4e2d\u9876\u70b9\u548c\u8fb9\u7684\u603b\u6570": 318, "\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684": 318, "\u5bf9\u8c61\u4e8b\u5b9e\u4e0a\u662fpython\u7c7b": 318, "\u7684\u4e00\u4e2a\u5b9e\u4f8b": 318, "\u800c\u8fd9\u4e00\u7c7b\u5c01\u88c5\u4e86\u7528python\u5b9e\u73b0\u7684\u5b8c\u6574gremlin\u5ba2\u6237\u7aef\u7c7b\u5e93": 318, "\u6bcf\u4e00\u4e2a\u8f7d\u5165graphscope\u7684\u56fe\u90fd\u5305\u542b\u4e00\u4e2agremlin\u67e5\u8be2\u63d0\u4ea4\u5165\u53e3": 318, "\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u6837\u83b7\u5f97\u5177\u4f53\u7684\u8bbf\u95ee\u5730\u5740": 318, "\u4e0a\u9762\u7684\u8bed\u53e5\u4f1a\u4ea7\u751f\u5982\u4e0b": 318, "\u683c\u5f0f": 318, "\u7684\u8f93\u51fa": 318, "\u6709\u4e86\u8fd9\u4e00url\u4fe1\u606f": 318, "\u7528\u6237\u4e5f\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528gremlin": 318, "python\u8bbf\u95ee\u56fe\u6570\u636e": 318, "\u5177\u4f53\u53ef\u4ee5\u53c2\u8003": 318, "\u5b98\u65b9\u6587\u6863": 318, "tinkerpop\u540c\u65f6\u652f\u6301java\u8bed\u8a00\u6309\u7c7b\u4f3c\u65b9\u5f0f\u8bbf\u95ee": 318, "\u8be6\u89c1gremlin": 318, "java\u7684": 318, "\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0egraphscope\u5b58\u50a8\u7684\u56fe\u6570\u636e\u8fdb\u884c\u4ea4\u4e92\u7684\u63a7\u5236\u53f0": 318, "\u4e5f\u53eb\u505arepl\u73af\u5883": 318, "\u4e0b\u9762\u63cf\u8ff0\u5982\u4f55\u5229\u7528\u4e0a\u6587\u83b7\u5f97\u7684url": 318, "\u5b89\u88c5\u548c\u914d\u7f6egremlin": 318, "console\u4ee5\u8fde\u63a5graphscope\u7684\u6b65\u9aa4": 318, "\u5b89\u88c5gremlin": 318, "console\u4f9d\u8d56\u7684java\u8fd0\u884c\u65f6\u73af\u5883": 318, "\u7248\u672c\u9700\u8981\u6ee1\u8db3": 318, "\u4e0b\u8f7d\u9002\u5f53\u7248\u672c\u7684gremlin": 318, "\u89e3\u538b\u7f29\u4e0b\u8f7d\u7684\u6587\u4ef6": 318, "\u8fdb\u5165\u89e3\u538b\u7f29\u7684\u76ee\u5f55": 318, "\u5b50\u76ee\u5f55\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a": 318, "\u7684\u6587\u672c\u6587\u4ef6\u4ee5\u914d\u7f6eurl": 318, "\u5177\u4f53\u5185\u5bb9\u5982\u4e0b\u6240\u793a": 318, "\u5176\u4e2d\u7684": 318, "\u9700\u8981\u5206\u522b\u66ff\u6362\u4e3a\u4ecegraphscope\u4f1a\u8bdd\u5f97\u5230\u7684url\u4e2d\u5bf9\u5e94\u7684\u4e3b\u673a\u540d": 318, "\u6216ip": 318, "\u548c\u7aef\u53e3": 318, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u542f\u52a8gremlin": 318, "\u63d0\u793a\u7b26\u4e0b": 318, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u8fde\u63a5\u5230\u5bf9\u5e94\u7684graphscope\u4f1a\u8bdd": 318, "\u7b2c\u4e8c\u6761\u547d\u4ee4\u5207\u6362\u5230\u8fdc\u7a0b\u6a21\u5f0f": 318, "\u4ece\u800c\u63a5\u4e0b\u6765\u8f93\u5165\u7684\u6240\u6709gremlin\u67e5\u8be2\u90fd\u88ab\u81ea\u52a8\u4f20\u8f93\u5230": 318, "\u8fdc\u7a0b": 318, "graphscope\u6267\u884c": 318, "\u73b0\u5728\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e9b\u7b80\u5355\u7684gremlin\u67e5\u8be2\u4e86": 318, "\u5f53\u4f60\u5b8c\u6210\u4ea4\u4e92": 318, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u53ef\u4ee5\u9000\u51fagremlin": 318, "gie\u4ee5\u5fe0\u5b9e\u4fdd\u7559gremlin\u7f16\u7a0b\u6a21\u578b\u4e3a\u8bbe\u8ba1\u76ee\u6807": 318, "\u4ece\u800c\u8ba9\u5df2\u6709\u7684\u5e94\u7528\u53ea\u9700\u6700\u5c0f\u5316\u7684\u4fee\u6539\u5c31\u53ef\u4ee5\u6269\u5c55\u5230\u5927\u89c4\u6a21\u8ba1\u7b97\u96c6\u7fa4": 318, "\u5728\u6b64\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2agremlin\u7684\u603b\u4f53\u4ecb\u7ecd": 318, "\u7279\u522b\u662f\u5176\u4e2d\u5305\u542b\u7684\u56fe\u6570\u636e\u6a21\u578b\u548c\u67e5\u8be2\u8bed\u8a00\u7b49\u5173\u952e\u6982\u5ff5": 318, "\u66f4\u8be6\u7ec6\u548c\u5b8c\u6574\u7684\u4ecb\u7ecd": 318, "gremlin\u5141\u8bb8\u7528\u6237\u5728\u5c5e\u6027\u56fe\u6a21\u578b\u4e0a\u5b9a\u4e49\u7279\u8bbe": 318, "hoc": 318, "\u904d\u5386\u67e5\u8be2": 318, "\u4e00\u4e2a\u5c5e\u6027\u56fe\u662f\u4e00\u4e2a\u6709\u5411\u56fe": 318, "\u5176\u4e2d\u7684\u9876\u70b9\u548c\u8fb9\u53ef\u4ee5\u62e5\u6709\u4e00\u7ec4\u5c5e\u6027": 318, "\u56fe\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61": 318, "\u70b9\u6216\u8fb9": 318, "\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6": 318, "\u548c\u4e00\u4e2a\u7c7b\u522b\u540d\u79f0": 318, "\u6307\u5b9a\u5176\u7c7b\u578b\u6216\u89d2\u8272": 318, "\u6bcf\u4e2a\u5c5e\u6027\u662f\u4e00\u4e2a\u5305\u542b\u5c5e\u6027\u540d\u548c\u5c5e\u6027\u503c\u7684": 318, "\u952e": 318, "\u503c": 318, "\u5bf9": 318, "\u5176\u6240\u5c5e\u5bf9\u8c61\u7684": 318, "\u52a0\u4e0a\u5c5e\u6027\u540d\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u5c5e\u6027\u503c": 318, "\u4e0a\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u5c5e\u6027\u56fe\u6a21\u578b\u793a\u4f8b": 318, "\u5b83\u5305\u542b": 318, "\u7528\u6237": 318, "\u5546\u54c1": 318, "\u5730\u5740": 318, "\u4e09\u7c7b\u70b9": 318, "\u5b83\u4eec\u901a\u8fc7": 318, "\u8d2d\u4e70": 318, "\u9012\u9001": 318, "belongs_to": 318, "\u5c5e\u4e8e": 318, "home_of": 318, "\u5bb6\u5ead\u5730\u5740": 318, "\u56db\u7c7b\u8fb9\u76f8\u4e92\u5173\u8054": 318, "\u56fe\u4e2d\u865a\u7ebf\u5c55\u793a\u7684\u4e00\u6761": 318, "\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684": 318, "\u8def\u5f841": 318, "\u4ee3\u8868\u4e86\u4e00\u4e2a\u7528\u6237": 318, "\u4e70\u5bb6": 318, "tom": 318, "\u8d2d\u4e70\u4e86\u4e00\u4e2a\u5356\u5bb6": 318, "jack": 318, "\u63d0\u4f9b\u7684\u6807\u4ef7": 318, "\u7684\u5546\u54c1": 318, "gift": 318, "\u4e00\u4e2agremlin\u67e5\u8be2\u6216\u56fe\u904d\u5386\u7684\u6267\u884c": 318, "\u53ef\u4ee5\u7528\u4e00\u7ec4": 318, "\u904d\u5386\u5668": 318, "\u6807\u8bc6": 318, "\u5b83\u4eec\u4f9d\u636egremlin\u67e5\u8be2\u63d0\u4f9b\u7684\u7528\u6237\u6307\u4ee4\u5728\u8f93\u5165\u56fe\u4e2d\u6e38\u8d70": 318, "\u6700\u7ec8\u6240\u6709\u505c\u6b62\u7684\u904d\u5386\u5668\u96c6\u5408": 318, "\u5305\u542b\u5b83\u4eec\u7684\u4f4d\u7f6e": 318, "\u4ee3\u8868\u4e86\u67e5\u8be2\u7684\u7ed3\u679c": 318, "\u4e00\u4e2a\u904d\u5386\u5668\u662fgremlin\u5f15\u64ce\u5904\u7406\u7684\u6700\u5c0f\u6570\u636e\u5355\u5143": 318, "\u6bcf\u4e2a\u904d\u5386\u5668\u90fd\u7ef4\u62a4\u5b83\u5bf9\u5e94\u7684\u56fe\u4e2d\u7684\u5f53\u524d\u4f4d\u7f6e": 318, "\u53ef\u4ee5\u662f\u88ab\u8bbf\u95ee\u7684\u70b9": 318, "\u8fb9\u6216\u5c5e\u6027": 318, "\u53ef\u9009\u7684\u5b83\u4e5f\u53ef\u4ee5\u5305\u542b\u8d70\u8fc7\u7684\u5b8c\u6574\u8def\u5f84\u5386\u53f2\u751a\u81f3\u5e94\u7528\u72b6\u6001": 318, "gremlin\u8bed\u8a00\u4e30\u5bcc\u7075\u6d3b\u7684\u8868\u8fbe\u80fd\u529b\u4e3b\u8981\u6765\u81ea\u4e8e\u5b83\u5bf9": 318, "\u5d4c\u5957\u904d\u5386": 318, "\u7684\u652f\u6301": 318, "\u5b83\u5141\u8bb8\u4e00\u4e2a": 318, "\u5b50": 318, "\u67e5\u8be2\u6216\u904d\u5386\u88ab\u5305\u542b\u5728\u53e6\u4e00\u4e2a\u64cd\u4f5c\u4e2d": 318, "\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u8c03\u7528\u7684\u51fd\u6570\u88ab\u5305\u88f9\u64cd\u4f5c\u7528\u4e8e\u5904\u7406\u5176\u6bcf\u4e00\u4e2a\u8f93\u5165": 318, "\u51fd\u6570\u7684\u58f0\u660e\u548c\u4f5c\u7528\u90fd\u7531\u5305\u88f9\u64cd\u4f5c\u7684\u8bed\u4e49\u51b3\u5b9a": 318, "\u8fc7\u6ee4": 318, "\u64cd\u4f5c\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u5d4c\u5957\u67e5\u8be2": 318, "\u4f5c\u4e3a\u8fc7\u6ee4\u6761\u4ef6\u8c13\u8bcd": 318, "\u800c": 318, "\u6620\u5c04": 318, "\u6392\u5e8f": 318, "\u64cd\u4f5c\u5404\u81ea\u53ef\u4ee5\u901a\u8fc7\u5d4c\u5957\u67e5\u8be2\u8bb2\u6bcf\u4e00\u4e2a\u8f93\u5165\u5355\u72ec\u6620\u5c04\u5230\u4ece\u5b83\u5f00\u59cb\u7684\u5b50\u904d\u5386\u5f97\u5230\u7684\u7ed3\u679c": 318, "\u6216\u4f9d\u636e\u7ed3\u679c\u503c\u4f5c\u4e3a\u6392\u5e8f\u4f9d\u636e": 318, "\u5d4c\u5957\u904d\u5386\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u5e94\u7528\u662f\u8868\u8fbe\u5faa\u73af": 318, "\u5728gremlin\u4e2d\u901a\u8fc7": 318, "\u5faa\u73af": 318, "\u64cd\u4f5c\u548c\u968f\u540e\u7684": 318, "\u7ec8\u6b62\u6761\u4ef6": 318, "\u8868\u8fbe": 318, "\u64cd\u4f5c\u5305\u542b\u4e00\u4e2a\u5d4c\u5957\u904d\u5386\u4f5c\u4e3a\u5faa\u73af\u4f53": 318, "\u6bcf\u4e00\u4e2a\u8f93\u5165\u90fd\u4f1a\u91cd\u590d\u9001\u5165\u8fd9\u4e00\u5b50\u67e5\u8be2": 318, "\u76f4\u5230\u7ec8\u6b62\u6761\u4ef6\u6ee1\u8db3": 318, "\u6761\u4ef6\u7ec8\u6b62": 318, "\u64cd\u4f5c\u7c7b\u4f3c": 318, "\u53ef\u4ee5\u8868\u8fbe\u4e00\u4e2a\u6761\u4ef6\u8c13\u8bcd": 318, "\u5b83\u88ab\u72ec\u7acb\u5e94\u7528\u4e8e\u5faa\u73af\u4f53\u7684\u6bcf\u4e00\u4e2a\u8f93\u51fa\u904d\u5386\u5668": 318, "\u6ee1\u8db3\u6761\u4ef6\u7684\u904d\u5386\u5668\u5c31\u4f1a\u79bb\u5f00\u5faa\u73af": 318, "\u53e6\u4e00\u4e2a\u5e38\u7528\u7684": 318, "\u8fed\u4ee3\u8f6e\u6b21\u7ec8\u6b62": 318, "\u64cd\u4f5c\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u6574\u578b\u5e38\u91cf": 318, "\u8868\u8fbe\u56fa\u5b9a\u8fed\u4ee3\u8f6e\u6b21\u540e\u7ec8\u6b62\u5faa\u73af": 318, "\u4e0b\u9762\u5c55\u793a\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684gremlin\u793a\u4f8b": 318, "\u5b83\u5c1d\u8bd5\u4ece\u4e00\u4e2a\u7ed9\u5b9a\u8d26\u6237": 318, "\u70b9\u5f00\u59cb\u627e\u5230\u957f\u5ea6\u4e3a": 318, "\u7684\u6709\u5411\u73af\u8def": 318, "\u9996\u5148": [318, 320], "\u8f93\u5165\u56fe\u64cd\u4f5c": 318, "\u5305\u542b\u4e00\u4e2a": 318, "\u8868\u8fbe\u7684\u7b80\u5355\u8fc7\u6ee4": 318, "\u8fd4\u56de\u56fe\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684": 318, "\u70b9": 318, "\u5373\u552f\u4e00\u6807\u8bc6\u4e3a": 318, "\u7684\u70b9": 318, "\u7d27\u968f\u5176\u540e\u7684": 318, "\u64cd\u4f5c\u662f\u4e00\u4e2a": 318, "\u4fee\u9970\u7b26": 318, "\u5b83\u4e0d\u6539\u53d8\u8f93\u5165\u904d\u5386\u5668\u96c6\u5408": 318, "\u4f46\u5bf9\u5176\u4e2d\u6bcf\u4e00\u4e2a\u904d\u5386\u5668\u7684\u5f53\u524d\u4f4d\u7f6e": 318, "\u6253\u4e0a\u4e00\u4e2a\u6709\u540d\u6807\u7b7e": 318, "\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u7684": 318, "\u4ece\u800c\u4eca\u540e\u53ef\u4ee5\u5f15\u7528": 318, "\u67e5\u8be2\u6cbf\u7740": 318, "\u7c7b\u578b\u7684\u51fa\u8fb9\u5faa\u73af\u6e38\u8d70": 318, "\u6b21": 318, "\u8f93\u51fahops\u5728": 318, "\u8303\u56f4\u5185\u7684\u90bb\u70b9": 318, "\u4e14\u6bcf\u4e00\u6b21\u90fd\u8fc7\u6ee4\u6216\u8df3\u8fc7\u8def\u5f84\u4e2d\u7684\u91cd\u590d\u70b9": 318, "\u901a\u8fc7\u5728": 318, "\u5185\u914d\u7f6e": 318, "\u9009\u9879\u5b9e\u73b0": 318, "\u64cd\u4f5c\u68c0\u67e5\u6b64\u65f6\u904d\u5386\u8def\u5f84\u7684\u4e0b\u4e00\u8df3\u662f\u5426\u53ef\u4ee5\u56de\u5230\u8d77\u70b9": 318, "\u6307\u4ee3": 318, "\u4ece\u800c\u5f62\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a": 318, "\u7684\u73af": 318, "\u5bf9\u4e8e\u68c0\u6d4b\u5230\u7684\u73af": 318, "\u67e5\u8be2\u8fd8\u901a\u8fc7": 318, "\u64cd\u4f5c\u5c55\u793a\u6bcf\u4e2a\u904d\u5386\u5668\u7684\u5b8c\u6210\u8def\u5f84\u4fe1\u606f": 318, "\u64cd\u4f5c\u7c7b\u4f3csql\u4e2d\u7684top": 318, "\u5b83\u8868\u8fbe\u4e86\u67e5\u8be2\u7ed3\u679c\u4ec5\u9700\u8981\u5305\u542b\u4e00\u4e2a\u8fd9\u6837\u7684\u8def\u5f84": 318, "\u5982\u679c\u6709\u7684\u8bdd": 318, "gie\u652f\u6301apach": 318, "tinkerpop\u5b9a\u4e49\u7684\u5c5e\u6027\u56fe\u6a21\u578b\u548cgremlin\u904d\u5386\u67e5\u8be2": 318, "\u4e14\u5b9e\u73b0\u4e86\u4e00\u4e2a\u4e0etinkerpop": 318, "3\u548c3": 318, "4\u7248\u672c\u517c\u5bb9\u7684": 318, "\u670d\u52a1\u63a5\u53e3": 318, "\u9664\u6b64\u4e4b\u5916": 318, "\u6211\u4eec\u6269\u5c55\u4e86\u4e00\u4e9b\u8bed\u6cd5\u7cd6\u6765\u8fdb\u4e00\u6b65\u5f15\u5165\u4e00\u4e9b\u7b80\u6d01\u660e\u4e86\u7684expression\u8868\u793a": 318, "\u4e0b\u9762\u6211\u4eec\u5217\u51fa\u5f53\u524d\u5b9e\u73b0\u548capach": 318, "tinkerpop\u89c4\u8303\u7684\u4e3b\u8981\u5dee\u4e00\u70b9": 318, "\u5176\u4e2d\u4e00\u4e9b\u5dee\u5f02\u4f1a\u6709\u673a\u4f1a\u6d88\u9664": 318, "\u53e6\u4e00\u4e9b\u662f\u76ee\u524dgraphscope\u5b9a\u4f4d\u7684\u573a\u666f\u5dee\u5f02\u9020\u6210\u7684\u4e0d\u540c\u8bbe\u8ba1\u9009\u62e9": 318, "\u76ee\u524d\u7684": 318, "\u6280\u672f\u9884\u89c8\u7248\u5229\u7528\u4e86": 318, "\u9879\u76ee\u63d0\u4f9b\u7684\u5206\u5e03\u5f0f\u5185\u5b58\u5b58\u50a8\u4f5c\u4e3a\u8f93\u5165\u56fe": 318, "\u5b83\u652f\u6301\u4e00\u6b21\u8f7d\u5165": 318, "\u4e0d\u53ef\u4fee\u6539": 318, "\u7684\u56fe\u6a21\u578b\u6570\u636e": 318, "\u548c\u56fe\u5206\u7247\u5b58\u50a8\u5728\u5206\u5e03\u5f0f\u96c6\u7fa4": 318, "\u5f53\u524d\u8bbe\u8ba1\u6709\u4e0b\u9762\u7684\u4e00\u4e9b\u9650\u5236": 318, "\u7ea6\u675f": 318, "\u6bcf\u4e2a\u56fe\u7684\u6570\u636e\u9700\u8981\u6ee1\u8db3\u4e8b\u5148\u5b9a\u4e49\u7684schema": 318, "\u5305\u62ec\u70b9": 318, "\u8fb9\u7684\u7c7b\u578b\u540d\u79f0": 318, "\u548c\u5c5e\u6027\u540d\u53ca\u503c\u7c7b\u578b": 318, "\u4e3b\u952e\u7ea6\u675f": 318, "\u6bcf\u4e2a\u9876\u70b9\u7c7b\u578b\u9700\u8981\u5305\u542b\u4e00\u4e2a\u7528\u6237\u53ef\u81ea\u5b9a\u4e49\u7684\u4e3b\u952e": 318, "\u540c\u65f6\u7cfb\u7edf\u4f1a\u4e3a\u6bcf\u4e2a\u70b9\u548c\u8fb9\u5bf9\u8c61": 318, "\u81ea\u52a8\u5206\u914d\u4ea7\u751f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u552f\u4e00\u6807\u8bc6": 318, "\u5bf9\u4e8e\u70b9\u6765\u8bf4": 318, "id\u7f16\u7801\u4e86\u7c7b\u578b": 318, "\u548c\u7528\u6237\u81ea\u5b9a\u4e49\u4e3b\u952e\u4fe1\u606f": 318, "\u6bcf\u4e2a\u70b9\u6216\u8fb9\u7684\u5c5e\u6027": 318, "\u53ef\u4ee5\u5305\u542b\u4e0b\u5217\u7c7b\u578b\u7684\u5c5e\u6027\u503c": 318, "\u56e0\u4e3a\u7cfb\u7edf\u7684\u5168\u5206\u5e03\u5f0f\u53ef\u6269\u5c55\u67b6\u6784": 318, "\u5f53\u524d\u5b9a\u4f4d\u7684\u573a\u666f\u548c\u5b9e\u73b0\u4e0d\u652f\u6301\u4e0b\u5217\u529f\u80fd": 318, "\u56fe\u4fee\u6539\u64cd\u4f5c": 318, "lambda\u548cgroovy\u8868\u8fbe\u5f0f\u6216\u81ea\u5b9a\u4e49\u51fd\u6570": 318, "\u7b49\u8868\u8fbe\u5f0f\u6216java\u8c03\u7528\u7b49\u7b49": 318, "\u5b9a\u5236gremlin\u56fe\u904d\u5386\u7b56\u7565": 318, "\u5373\u67e5\u8be2\u4f18\u5316\u7531graphscope\u7cfb\u7edf\u81ea\u52a8\u5b8c\u6210": 318, "\u4e8b\u52a1": 318, "\u4e8c\u7ea7\u7d22\u5f15\u76ee\u524d\u5c1a\u672a\u652f\u6301": 318, "\u7528\u6237\u5b9a\u4e49\u7684\u4e3b\u952e\u4f1a\u88ab\u81ea\u52a8\u7d22\u5f15": 318, "\u5f53\u524dgraphscope\u652f\u6301\u4e0b\u5217gremlin\u64cd\u4f5c": 318, "\u548c\u793a\u4f8b\u7528\u6cd5": 318, "\u8f93\u5165\u56fe": 318, "id1": 318, "id2": 318, "labelnam": 318, "labelname1": 318, "labelname2": 318, "\u901a\u8fc7expression\u5b9e\u73b0\u8fc7\u6ee4": 318, "\u8bed\u6cd5\u7cd6": 318, "\u4ee3\u8868head\u8282\u70b9\u7684age\u5c5e\u6027": 318, "\u4ee3\u8868": 318, "\u8282\u70b9\u7684age\u5c5e\u6027": 318, "head\u8282\u70b9\u7684a\u5c5e\u6027\u662f\u6574\u6570\u6570\u7ec4\u7c7b\u578b": 318, "\u901a\u8fc7expression\u5b9e\u73b0\u4f4d\u8fd0\u7b97": 318, "head\u8282\u70b9\u7684number\u5c5e\u6027\u662f\u6574\u578b": 318, "\u901a\u8fc7expression\u5b9e\u73b0\u7b97\u6570\u8fd0\u7b97": 318, "head\u8282\u70b9\u7684number\u548cage\u5c5e\u6027\u90fd\u662f\u6574\u578b": 318, "\u901a\u8fc7expression\u5b9e\u73b0\u6307\u6570\u8fd0\u7b97": 318, "dedup": 318, "substr": 318, "contant": 318, "aaa": 318, "otherv": 318, "flatmap": 318, "\u591a\u91cd\u6620\u5c04": 318, "bothv": 318, "\u627e\u5230\u6240\u6709\u4ece": 318, "\u5f00\u59cb\u901a\u8fc7": 318, "\u8fb9\u7c7b\u578b\u5411\u5916\u6269\u5c55": 318, "\u8df3\u7684\u6240\u6709\u7b80\u5355\u8def\u5f84": 318, "\u70b9\u4e0d\u91cd\u590d": 318, "\u5e76\u4e14\u53ea\u4fdd\u5b58path\u7684\u6700\u672b\u7aef\u70b9": 318, "\u8df3\u7684\u6240\u6709\u4efb\u610f\u8def\u5f84": 318, "\u70b9\u53ef\u91cd\u590d": 318, "\u8f93\u51fa\u6240\u6709\u5c5e\u6027": 318, "\u805a\u5408": 318, "groupbi": 318, "groupby\u591a\u4e2akei": 318, "\u5e76\u4e14\u4e3a\u6bcf\u4e2akey\u8bbe\u7f6e\u522b\u540d": 318, "groupby\u591a\u4e2avalu": 318, "\u5e76\u4e14\u4e3a\u6bcf\u4e2avalue\u8bbe\u7f6e\u522b\u540d": 318, "\u5373\u53d6\u524dk\u4e2a\u7ed3\u679c": 318, "graphscope\u6682\u65f6\u4e0d\u652f\u6301\u4e0b\u5217gremlin\u64cd\u4f5c": 318, "\u4f1a\u9010\u6b65\u652f\u6301": 318, "\u53ef\u4ee5\u901a\u8fc7path": 318, "expansion\u8bed\u6cd5\u7cd6\u5b9e\u73b0": 318, "\u57fa\u4e8e\u96c6\u5408\u7684local\u8ba1\u7b97": 318, "\u67e5\u8be2\u8ba1\u5212\u89e3\u91ca": 318, "\u67e5\u8be2\u6267\u884c\u6027\u80fd\u5206\u6790": 318, "\u81ea\u5b9a\u4e49\u72b6\u6001\u8ba1\u7b97": 318, "\u8ba1\u7b97\u5b50\u56fe": 318, "\u76ee\u524d\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5316\u7248\u672c": 318, "\u652f\u6301\u62bd\u53d6\u5b50\u56fe\u5199\u5165vineyard\u5b58\u50a8": 318, "cap": 318, "\u8bbf\u95ee\u81ea\u5b9a\u4e49\u72b6\u6001": 318, "\u4f8b\u5982pagerank\u548cshortestpath": 318, "\u8fd9\u90e8\u5206\u529f\u80fdgraphscope\u901a\u8fc7\u56fe\u5206\u6790\u5f15\u64ce\u548cnetworkx\u517c\u5bb9\u63a5\u53e3\u63d0\u4f9b": 318, "graphscope\u4e2d\u7684\u56fe\u5b66\u4e60\u5f15\u64ce": 319, "\u662f\u9762\u5411\u5927\u89c4\u6a21\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u7814\u53d1\u548c\u5e94\u7528\u800c\u8bbe\u8ba1\u7684\u4e00\u6b3e\u5206\u5e03\u5f0f\u6846\u67b6": 319, "\u5b83\u4ece\u5b9e\u9645\u95ee\u9898\u51fa\u53d1": 319, "\u63d0\u70bc\u548c\u62bd\u8c61\u4e86\u4e00\u5957\u9002\u5408\u4e8e\u5f53\u4e0b\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7684\u7f16\u7a0b\u8303\u5f0f": 319, "\u5e76\u5df2\u7ecf\u6210\u529f\u5e94\u7528\u5728\u963f\u91cc\u5df4\u5df4": 319, "\u5185\u90e8\u7684\u8bf8\u5982\u641c\u7d22\u63a8\u8350": 319, "\u77e5\u8bc6\u56fe\u8c31\u7b49\u4f17\u591a\u573a\u666f": 319, "gl\u6ce8\u91cd\u53ef\u79fb\u690d\u548c\u53ef\u6269\u5c55": 319, "\u5bf9\u4e8e\u5f00\u53d1\u8005\u66f4\u4e3a\u53cb\u597d": 319, "\u4e3a\u4e86\u5e94\u5bf9gnn\u5728\u5de5\u4e1a\u573a\u666f\u4e2d\u7684\u591a\u6837\u6027\u548c\u5feb\u901f\u53d1\u5c55\u7684\u9700\u6c42": 319, "\u57fa\u4e8egl": 319, "\u5f00\u53d1\u8005\u53ef\u4ee5\u5b9e\u73b0\u4e00\u79cdgnn\u7b97\u6cd5": 319, "\u6216\u8005\u9762\u5411\u5b9e\u9645\u573a\u666f\u5b9a\u5236\u5316\u4e00\u79cd\u56fe\u7b97\u5b50": 319, "\u4f8b\u5982\u56fe\u91c7\u6837": 319, "\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u5165\u95e8\u6559\u7a0b\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528": 319, "\u6765\u6784\u5efa\u7528\u6237\u81ea\u5df1\u7684cnn\u6a21\u578b": 319, "\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u5b9e\u73b0\u76ee\u524d\u4e3b\u8981\u6709\u4e24\u79cd\u65b9\u5f0f": 319, "\u7b2c\u4e00\u79cd\u662f\u76f4\u63a5\u4ee5\u5168\u56fe\u4e3a\u8ba1\u7b97\u5bf9\u8c61": 319, "\u539f\u59cb\u7684gcn": 319, "gat\u7b49\u7b97\u6cd5\u90fd\u662f\u8fd9\u79cd\u5b9e\u73b0\u601d\u8def": 319, "\u4e00\u822c\u4f1a\u76f4\u63a5\u7528\u90bb\u63a5\u77e9\u9635\u8fdb\u884c\u8ba1\u7b97": 319, "\u7136\u800c\u8fd9\u79cd\u65b9\u6cd5\u5728\u5927\u89c4\u6a21\u56fe\u4e0a\u4f1a\u6d88\u8017\u5927\u91cf\u5185\u5b58": 319, "\u5bfc\u81f4\u65e0\u6cd5\u9ad8\u6548\u8bad\u7ec3\u751a\u81f3\u65e0\u6cd5\u8bad\u7ec3": 319, "\u7b2c\u4e8c\u79cd\u601d\u8def\u662f\u5c06\u5168\u56fe\u5206\u6210\u82e5\u5e72\u5b50\u56fe": 319, "\u7528\u6df1\u5ea6\u5b66\u4e60\u91cc\u5e38\u7528\u7684\u6279\u6b21\u8bad\u7ec3\u65b9\u6cd5\u8fdb\u884c\u8bad\u7ec3": 319, "\u6bcf\u6b21\u8bad\u7ec3\u4e00\u4e2a\u5b50\u56fe": 319, "\u4ee3\u8868\u65b9\u6cd5\u662fgraphsag": 319, "graphsaint\u7b49": 319, "\u4e3b\u8981\u9762\u5411\u8d85\u5927\u89c4\u6a21\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u5f00\u53d1": 319, "\u5b83\u7531\u5e95\u5c42\u7684\u4e00\u4e2a\u56fe\u5f15\u64ce\u548c\u4e0a\u5c42\u7684": 319, "\u7b97\u6cd5\u6a21\u578b\u6784\u6210": 319, "\u56fe\u5f15\u64ce\u5206\u5e03\u5f0f\u5b58\u50a8\u56fe\u7684\u62d3\u6251\u548c\u5c5e\u6027\u4fe1\u606f\u5e76\u63d0\u4f9b\u9ad8\u6548\u7684\u56fe\u91c7\u6837\u67e5\u8be2": 319, "\u7b97\u6cd5\u6a21\u578b\u901a\u8fc7\u8c03\u7528\u56fe\u91c7\u6837\u548c\u67e5\u8be2\u63a5\u53e3\u83b7\u53d6\u5b50\u56fe\u5e76\u8fdb\u884c\u8ba1\u7b97": 319, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u7edf\u4e00\u7f16\u7a0b\u6846\u67b6": 319, "\u652f\u6301\u5e38\u89c1\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u5f00\u53d1": 319, "\u77e5\u8bc6\u56fe\u8c31\u6a21\u578b": 319, "\u56fe\u5d4c\u5165\u7b97\u6cd5\u7b49": 319, "\u5e76\u4e14\u548c\u4e3b\u6d41\u7684\u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5\u517c\u5bb9": 319, "\u5305\u62ectensorflow": 319, "\u548cpytorch": 319, "\u76ee\u524d\u6211\u4eec\u5b9e\u73b0\u4e86\u57fa\u4e8etensorflow\u7684\u6a21\u578b": 319, "\u57fa\u4e8epytorch\u7684\u6a21\u578b\u6b63\u5728\u5f00\u53d1\u4e2d": 319, "\u91c7\u7528\u91c7\u6837\u5b50\u56fe\u518d\u8ba1\u7b97\u7684\u65b9\u5f0f\u6784\u5efa\u548c\u8bad\u7ec3\u6a21\u578b": 319, "\u6211\u4eec\u9996\u5148\u4ecb\u7ecd\u4e00\u4e0b\u57fa\u672c\u7684\u6570\u636e\u6a21\u578b": 319, "\u662f\u56fe\u5b66\u4e60\u7b97\u6cd5\u7f16\u7a0b\u7684\u57fa\u672c\u6570\u636e\u5bf9\u8c61": 319, "\u5b83\u7531\u4e00\u4e2abatch\u7684\u79cd\u5b50\u70b9\u6216\u8005\u8fb9": 319, "\u79f0\u4e3a": 319, "\u4ee5\u53ca\u4ed6\u4eec\u7684": 319, "\u611f\u53d7\u91ce": 319, "\u591a\u8df3\u90bb\u5c45": 319, "\u7ec4\u6210": 319, "\u7531\u56fe\u91c7\u6837\u548c\u67e5\u8be2\u5230\u7684\u6570\u636e\u7ec4\u6210": 319, "\u6211\u4eec\u5b9e\u73b0": 319, "\u4e86\u5e38\u89c1\u7684\u90bb\u5c45\u91c7\u6837": 319, "\u56fe\u904d\u5386\u548c\u8d1f\u91c7\u6837\u65b9\u6cd5": 319, "\u91c7\u6837\u7684\u6570\u636e\u7ec4\u7ec7\u6210numpy\u683c\u5f0f\u7684": 319, "\u540e\u6839\u636e\u4e0d\u540c\u7684\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce\u8f6c\u6362\u6210\u5bf9\u5e94\u7684tensor\u683c\u5f0f": 319, "\u7136\u540e\u7528": 319, "\u7ba1\u7406": 319, "\u5230": 319, "\u7684\u8f6c\u6362": 319, "\u63d0\u4f9b\u8bad\u7ec3\u6240\u9700\u8981\u7684\u6570\u636e": 319, "\u6240\u6709\u7684\u56fe\u5b66\u4e60\u6a21\u578b\u53ef\u4ee5\u62bd\u8c61\u4e3a\u4f7f\u7528\u7f16\u7801\u5668\u5c06": 319, "\u7f16\u7801\u6210\u6700\u7ec8\u7684\u70b9": 319, "\u8fb9\u6216\u8005\u5b50\u56fe\u7684": 319, "\u5411\u91cf": 319, "\u9996\u5148\u5229\u7528\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801\u539f\u59cb\u7684\u70b9\u548c\u8fb9\u4e0a\u7684\u7279\u5f81": 319, "\u7136\u540e\u5c06\u7279\u5f81\u7f16\u7801\u5668\u7f16\u7801\u540e\u7684": 319, "\u539f\u59cb\u5411\u91cf\u7528\u4e0d\u540c\u7684\u56fe\u7f16\u7801\u5668\u8fdb\u884c\u7f16\u7801": 319, "\u5f97\u5230\u6700\u7ec8\u7684\u8f93\u51fa": 319, "\u5bf9\u4e8e\u5927\u591a\u6570gnn\u6a21\u578b": 319, "\u56fe\u7f16\u7801\u5668": 319, "\u63d0\u4f9b\u4e86\u5982\u4f55\u805a\u5408\u90bb\u5c45\u4fe1\u606f\u5230\u81ea\u8eab\u8282\u70b9\u6216\u8005\u8fb9\u7684\u62bd\u8c61": 319, "\u7528\u4e0d\u540c\u7684\u56fe\u5377\u79ef\u5c42\u5b9e\u73b0": 319, "\u57fa\u4e8e\u4e0a\u9762\u4ecb\u7ecd\u7684\u6570\u636e\u6a21\u578b\u548c\u7f16\u7801\u5668": 319, "\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5feb\u901f\u5730\u5b9e\u73b0\u4e0d\u540c\u7684\u56fe\u5b66\u4e60\u7b97\u6cd5": 319, "\u5728\u63a5\u4e0b\u6765\u4e00\u7ae0\u91cc": 319, "\u6211\u4eec\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u5f00\u53d1\u4e00\u4e2agnn\u6a21\u578b": 319, "\u8fd9\u7bc7\u6587\u6863\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u7528": 319, "\u63d0\u4f9b\u7684\u57fa\u672capi\u914d\u5408\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce": 319, "\u5982tensorflow": 319, "\u6765\u6784\u5efa\u56fe\u5b66\u4e60\u7b97\u6cd5": 319, "\u6211\u4eec\u4ee5\u56fe\u795e\u7ecf\u7f51\u7edc\u91cc\u6700\u6d41\u884c\u7684gcn\u6a21\u578b\u505a\u4e3a\u793a\u4f8b\u6765\u8bf4\u660e": 319, "\u901a\u5e38\u6765\u8bf4": 319, "\u5b9e\u73b0\u4e00\u4e2a\u7b97\u6cd5\u9700\u8981\u4e0b\u9762\u56db\u4e2a\u6b65\u9aa4": 319, "\u6307\u5b9a\u91c7\u6837\u6a21\u5f0f": 319, "\u7528\u56fe\u91c7\u6837": 319, "\u67e5\u8be2\u65b9\u6cd5\u91c7\u6837\u5b50\u56fe\u5e76\u7ec4\u7ec7\u6210": 319, "\u6211\u4eec\u62bd\u8c61\u4e864\u4e2a\u57fa\u672c\u7684\u51fd\u6570": 319, "\u7528\u6765\u904d\u5386\u56fe\u6570\u636e\u4ea7\u751f": 319, "positve_sampl": 319, "\u4ee5\u8fd9\u4e9b": 319, "\u4e3a\u8f93\u5165\u4ea7\u751f": 319, "\u8bad\u7ec3\u7684\u6b63\u6837\u672c": 319, "\u5bf9\u4e8e\u65e0\u76d1\u7763\u5b66\u4e60": 319, "\u4ea7\u751f\u8d1f\u6837\u672c": 319, "gnns\u9700\u8981\u805a\u5408\u90bb\u5c45\u4fe1\u606f": 319, "\u6211\u4eec\u62bd\u8c61\u4e86": 319, "\u6765\u91c7\u6837\u90bb\u5c45": 319, "\u6700\u540e\u5c06": 319, "\u4ea7\u751f\u7684": 319, "\u4ee5\u53ca\u91c7\u6837\u51fa\u7684\u90bb\u5c45\u7ec4\u6210": 319, "\u6784\u5efa\u56fe\u6570\u636e\u6d41": 319, "\u7b97\u6cd5\u6a21\u578b\u57fa\u4e8e\u7c7b\u4f3ctensorflow\u7684\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce\u6784\u5efa": 319, "\u6240\u4ee5\u91c7\u6837\u51fa\u7684": 319, "\u9700\u8981\u5148\u8f6c\u6362\u6210tensor\u683c\u5f0f": 319, "\u624d\u80fd\u4f7f\u7528": 319, "\u6765\u5c01\u88c5\u8fd9\u4e00\u8f6c\u6362\u8fc7\u7a0b": 319, "\u53ef\u4ee5\u4ea7\u751f\u4e00\u4e2a\u8fed\u4ee3\u5668\u6765\u8fdb\u884c\u6279\u6b21\u8bad\u7ec3": 319, "\u5b9a\u4e49\u7f16\u7801\u5668": 319, "\u7f16\u7801\u5668\u548c\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801": 319, "\u5f97\u5230": 319, "\u540e": 319, "\u6211\u4eec\u9996\u5148\u5c06\u539f\u59cb\u7684\u70b9": 319, "\u8fb9\u7279\u5f81\u7528\u4e00\u4e9b\u5e38\u89c1\u7279\u5f81\u7f16\u7801\u5668\u7f16\u7801\u6210\u539f\u59cb\u5411\u91cf": 319, "\u505a\u4e3agnns\u6a21\u578b\u7684\u7279\u5f81\u8f93\u5165": 319, "\u7136\u540e\u7528\u56fe\u7f16\u7801\u5668\u5904\u7406": 319, "\u5c06\u90bb\u5c45\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u6c47\u805a\u5e76": 319, "\u548c\u81ea\u8eab\u7279\u5f81\u8fdb\u884c\u7ec4\u5408": 319, "\u5f97\u5230\u6700\u540e\u7684\u70b9\u6216\u8005\u8fb9\u7684\u5411\u91cf": 319, "\u7f16\u5199\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": 319, "\u9009\u62e9\u9002\u5f53\u7684\u635f\u5931\u51fd\u6570": 319, "\u5e76\u7f16\u5199\u8bad\u7ec3\u8fc7\u7a0b": 319, "\u5185\u7f6e\u4e86\u4e00\u4e9b\u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570\u548c\u4f18\u5316\u5668": 319, "\u5e76\u5bf9\u8bad\u7ec3\u8fc7\u7a0b\u8fdb\u884c\u4e86\u5c01\u88c5": 319, "\u540c\u65f6\u652f\u6301\u5355\u673a\u548c\u5206\u5e03\u5f0f\u8bad\u7ec3": 319, "\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u635f\u5931\u51fd\u6570": 319, "\u4f18\u5316\u5668\u548c\u8bad\u7ec3\u8fc7\u7a0b": 319, "\u4e0b\u9762\u6211\u4eec\u6309\u7167\u4e0a\u9762\u4ecb\u7ecd\u76844\u4e2a\u6b65\u9aa4\u6765\u4ecb\u7ecd\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2agcn\u6a21\u578b": 319, "\u6211\u4eec\u4f7f\u7528cora\u6570\u636e\u96c6\u4ee5\u70b9\u5206\u7c7b\u4efb\u52a1\u505a\u4e3a\u793a\u4f8b": 319, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u636e\u8f6c\u6362\u811a\u672c": 319, "\u6765": 319, "\u5c06\u539f\u59cbcora\u8f6c\u6362\u6210": 319, "\u9700\u8981\u7684\u683c\u5f0f": 319, "\u8fd0\u884c\u5b8c\u8fd9\u4e2a\u811a\u672c\u540e\u4f60\u53ef\u4ee5\u5f97\u5230\u4e0b\u97625\u4e2a\u6587\u4ef6": 319, "\u5206\u522b\u662f\u70b9\u8868": 319, "\u8fb9\u8868\u4ee5\u53ca\u7528\u6765\u533a\u5206\u8bad\u7ec3": 319, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u7684\u70b9\u8868": 319, "\u7136\u540e\u53ef\u4ee5\u7528\u4e0b\u9762\u4ee3\u7801\u6765\u6784\u5efa\u56fe": 319, "\u540e\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u5c06\u56fe\u52a0\u8f7d\u8fdb\u5185\u5b58": 319, "gcn\u6a21\u578b\u7ee7\u627f\u81ea\u57fa\u672c\u7684\u5b66\u4e60\u6a21\u578b\u7c7b": 319, "\u53ea\u9700\u8981\u91cd\u5199\u57fa\u7c7b\u7684\u91c7\u6837": 319, "\u6a21\u578b\u6784\u5efa\u7b49\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b8c\u6210gcn\u7684\u6784\u5efa": 319, "\u524d\u4e24\u4e2a\u51fd\u6570\u7528\u6765\u91c7\u6837\u79cd\u5b50\u8282\u70b9\u548c\u6b63\u6837\u672c": 319, "\u91c7\u6837\u90bb\u5c45\u5e76\u7ec4\u7ec7": 319, "\u56de\u4e00\u8df3\u90bb\u5c45": 319, "\u56e0\u6b64\u4e0a\u9762\u4ee3\u7801\u662f\u91c7\u6837\u4e8c\u8df3\u90bb\u5c45": 319, "\u8fd9\u91cc\u53ef\u4ee5\u9009\u62e9\u4e0d\u540c\u7684\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5": 319, "\u5bf9\u4e8e\u539f\u59cbgcn\u6765\u8bf4\u56e0\u4e3a\u8981\u83b7\u5f97\u6bcf\u4e2a\u70b9\u7684\u6240\u6709\u90bb\u5c45": 319, "\u56e0\u6b64\u9009\u62e9": 319, "\u91c7\u6837\u5b8c\u540e\u5c06\u7ed3\u679c\u7ec4\u7ec7": 319, "\u6210": 319, "\u8fd4\u56de": 319, "\u51fd\u6570\u91cc\u6211\u4eec\u4f7f\u7528\u5c01\u88c5\u7684": 319, "\u6765\u628a": 319, "\u8f6c\u6362\u6210\u5bf9\u5e94\u7684": 319, "\u5305\u542b\u4e00\u4e2a\u6570\u636e\u6d41\u8fed\u4ee3\u5668\u548c\u82e5\u5e72": 319, "\u4f60\u53ef\u4ee5\u4ece": 319, "\u83b7\u53d6\u548c\u524d\u9762": 319, "\u5bf9\u5e94\u7684": 319, "\u9996\u5148\u4f7f\u7528\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801\u539f\u59cb\u7279\u5f81": 319, "\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528": 319, "\u5373\u8fd4\u56de\u81ea\u8eab\u5373\u53ef": 319, "\u56e0\u4e3a": 319, "cora\u7684\u7279\u5f81\u5df2\u7ecf\u662f\u5904\u7406\u8fc7\u7684\u5411\u91cf\u683c\u5f0f\u4e86": 319, "\u5bf9\u4e8e\u65e2\u6709\u79bb\u6563\u7279\u5f81\u7531\u4e8e\u8fde\u7eed\u7279\u5f81\u7684\u60c5\u51b5": 319, "\u66f4\u591aencoder\u8bf7\u53c2\u8003": 319, "\u5c42\u6784\u5efa\u56fe\u7f16\u7801\u5668": 319, "gcn\u6bcf\u4e2a\u8282\u70b9\u91c7\u6837\u5168\u90e8\u90bb\u5c45": 319, "\u90bb\u5c45\u4ee5\u7a00\u758f\u683c\u5f0f\u7ec4\u7ec7": 319, "\u6240\u4ee5\u8fd9\u91cc\u4f7f\u7528": 319, "\u90bb\u5c45\u5bf9\u9f50\u7684\u6a21\u578b\u53ef\u4ee5\u53c2\u8003graphsage\u7684\u5b9e\u73b0": 319, "\u5bf9\u4e8ecora\u70b9\u5206\u7c7b\u6a21\u578b": 319, "\u6211\u4eec\u9009\u62e9\u5bf9\u5e94\u7684tensorflow\u91cc\u7684\u5206\u7c7b\u635f\u5931\u51fd\u6570\u5373\u53ef": 319, "\u7136\u540e\u5728": 319, "\u51fd\u6570\u91cc\u5c06\u7f16\u7801\u5668\u548c\u635f\u5931\u51fd\u6570\u7ec4\u7ec7\u8d77\u6765": 319, "\u6700\u7ec8\u8fd4\u56de\u4e00\u4e2a\u6570\u636e\u8fed\u4ee3\u5668\u548c\u635f\u5931\u51fd\u6570": 319, "\u63a5\u7740\u4f7f\u7528\u5c01\u88c5\u7684\u5355\u673a\u8bad\u7ec3\u8fc7\u7a0b": 319, "\u6765\u8fdb\u884c\u8bad\u7ec3": 319, "\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u4e00\u4e2agcn\u6a21\u578b\u7684\u7f16\u5199": 319, "\u5b8c\u6574\u4ee3\u7801\u8bf7\u53c2\u8003": 319, "\u76ee\u5f55": 319, "\u6211\u4eec\u5b9e\u73b0\u4e86gcn": 319, "gat\u7b49\u6a21\u578b": 319, "\u4f60\u53ef\u4ee5\u53c2\u8003\u76f8\u4f3c\u7684\u6a21\u578b\u4ee3\u7801\u505a\u4e3a\u5f00\u59cb": 319, "\u5c5e\u6027\u56fe": 320, "\u56fe\u4e0a\u7684\u70b9": 320, "\u8fb9\u90fd\u5e26\u6709\u6807\u7b7e": 320, "\u6bcf\u4e2a\u6807\u7b7e\u90fd\u53ef\u80fd\u5e26\u6709\u8bb8\u591a\u5c5e\u6027": 320, "\u5185\u7f6e\u4e86\u4e00\u7ec4\u6d41\u884c\u7684\u6570\u636e\u96c6": 320, "\u4ee5\u53ca\u8f7d\u5165\u4ed6\u4eec\u7684\u5de5\u5177\u51fd\u6570": 320, "\u5e2e\u52a9\u7528\u6237\u66f4\u5bb9\u6613\u7684\u4e0a\u624b": 320, "\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50": 320, "\u5728\u5355\u673a\u6a21\u5f0f\u4e0b": 320, "\u4f1a\u5c06\u6570\u636e\u6587\u4ef6\u4e0b\u8f7d\u5230": 320, "\u5e76\u4e14\u4f1a\u4fdd\u7559\u4ee5\u4f9b\u5c06\u6765\u4f7f\u7528": 320, "\u96c6\u7fa4\u6a21\u5f0f\u4e0b": 320, "\u5c06\u6570\u636e\u6587\u4ef6\u4e0b\u8f7d\u5230": 320, "\u7684\u672c\u5730\u5b58\u50a8\u6bd4\u8f83\u590d\u6742": 320, "\u6240\u4ee5\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6302\u8f7d\u4e86": 320, "\u7684\u6570\u636e\u96c6\u6876\u7684\u4e00\u4e2a\u5bb9\u5668": 320, "\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u91cc": 320, "\u6211\u4eec\u5c06\u8f7d\u5165\u548c\u4e0a\u9762\u540c\u6837\u7684\u4e00\u5f20\u56fe": 320, "\u53ea\u4e0d\u8fc7\u8fd9\u6b21": 320, "\u90e8\u7f72\u5728\u96c6\u7fa4\u4e2d": 320, "\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 320, "\u7136\u540e\u5c06\u6570\u636e\u96c6\u6876\u6302\u8f7d\u5230": 320, "\u6b64\u8def\u5f84\u76f8\u5bf9\u4e8e": 320, "\u7684\u672c\u5730\u8def\u5f84": 320, "\u7136\u540e\u6211\u4eec\u5c06\u4f1a\u8bdd\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165": 320, "\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570": 320, "\u662f\u6211\u4eec\u901a\u8fc7": 320, "\u7684\u53c2\u6570\u6307\u5b9a\u7684\u6302\u8f7d\u8def\u5f84": 320, "\u662f\u8fd9\u4e2a\u6570\u636e\u96c6\u6240\u5728\u7684\u6587\u4ef6\u5939\u7684\u540d\u5b57": 320, "\u4f60\u53ef\u4ee5\u5728": 320, "\u627e\u5230\u6240\u6709\u76ee\u524d\u652f\u6301\u7684\u6570\u636e\u96c6": 320, "\u6587\u4ef6\u4e2d\u5305\u62ec\u8be6\u7ec6\u7684\u4ecb\u7ecd\u548c\u7528\u6cd5": 320, "\u7136\u800c": 320, "\u66f4\u5e38\u89c1\u7684\u60c5\u51b5\u662f\u7528\u6237\u9700\u8981\u4f7f\u7528\u81ea\u5df1\u7684\u6570\u636e\u96c6": 320, "\u5e76\u505a\u4e00\u4e9b\u6570\u636e\u5206\u6790\u7684\u5de5\u4f5c": 320, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u51fd\u6570\u7528\u6765\u5b9a\u4e49\u4e00\u4e2a\u5c5e\u6027\u56fe\u7684\u6a21\u578b": 320, "\u5e76\u4ee5\u5c06\u5c5e\u6027\u56fe\u8f7d\u5165": 320, "\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 320, "\u7136\u540e\u5728\u6b64\u4f1a\u8bdd\u5185\u521b\u5efa\u56fe": 320, "\u6709\u51e0\u4e2a\u65b9\u6cd5\u6765\u914d\u7f6e": 320, "\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u589e\u91cf\u7684\u6784\u5efa\u4e00\u4e2a\u5c5e\u6027\u56fe": 320, "\u6211\u4eec\u5c06\u4f7f\u7528": 320, "\u91cc\u7684\u6587\u4ef6\u505a\u5b8c\u6b64\u7bc7\u6559\u7a0b\u7684\u793a\u4f8b": 320, "\u627e\u5230\u6e90\u6570\u636e": 320, "\u4f60\u53ef\u4ee5\u968f\u65f6\u4f7f\u7528": 320, "\u6765\u67e5\u770b\u56fe\u7684\u6a21\u578b": 320, "\u6211\u4eec\u53ef\u4ee5\u5411\u56fe\u5185\u6dfb\u52a0\u4e00\u4e2a\u70b9\u6807\u7b7e": 320, "\u76f8\u5173\u7684\u53c2\u6570\u542b\u4e49\u5982\u4e0b": 320, "\u4ee3\u8868\u6570\u636e\u6e90": 320, "\u6307\u793a": 320, "\u53ef\u4ee5\u5728\u54ea\u91cc\u627e\u5230\u6e90\u6570\u636e": 320, "\u53ef\u4ee5\u4e3a\u6587\u4ef6\u8def\u5f84": 320, "\u6570\u7ec4\u7b49": 320, "\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50": 320, "\u8fd9\u5c06\u4f1a\u4ece\u6587\u4ef6": 320, "\u8f7d\u5165\u6570\u636e": 320, "\u5e76\u4e14\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a": 320, "\u4f46\u662f\u6709\u4e0d\u540c\u7684\u8d77\u59cb\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u6807\u7b7e": 320, "\u70b9\u6807\u7b7e\u7684\u540d\u5b57": 320, "\u9ed8\u8ba4\u4e3a": 320, "\u4e00\u5f20\u56fe\u4e2d\u4e0d\u80fd\u542b\u6709\u540c\u540d\u7684\u6807\u7b7e": 320, "\u6240\u4ee5\u82e5\u6709\u4e24\u4e2a\u6216\u4ee5\u4e0a\u7684\u6807\u7b7e": 320, "\u7528\u6237\u5fc5\u987b\u6307\u5b9a\u6807\u7b7e\u540d\u5b57": 320, "\u603b\u662f\u7ed9\u6807\u7b7e\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u540d\u5b57\u4e5f\u6709\u597d\u5904": 320, "\u53ef\u4ee5\u4e3a\u4efb\u4f55\u6807\u8bc6\u7b26": 320, "\u4e3e\u4e2a\u4f8b\u5b50": 320, "\u7ed3\u679c\u4e0e\u4e0a\u4e00\u6b65\u7ed3\u679c\u9664\u4e86\u6807\u7b7e\u540d\u5b8c\u5168\u4e00\u81f4": 320, "\u4e00\u7ec4\u5c5e\u6027\u540d\u5b57": 320, "\u53ef\u9009\u9879": 320, "\u5c5e\u6027\u540d\u5e94\u5f53\u4e0e\u6570\u636e\u4e2d\u7684\u9996\u884c\u8868\u5934\u4e2d\u7684\u540d\u5b57\u76f8\u4e00\u81f4": 320, "\u5982\u679c\u7701\u7565\u6216\u4e3a": 320, "\u9664id\u5217\u4e4b\u5916\u7684\u6240\u6709\u5217\u90fd\u5c06\u4f1a\u4f5c\u4e3a\u5c5e\u6027\u8f7d\u5165": 320, "\u5982\u679c\u4e3a\u7a7a\u5217\u8868": 320, "\u90a3\u4e48\u5c06\u4e0d\u4f1a\u8f7d\u5165\u4efb\u4f55\u5c5e\u6027": 320, "\u5176\u4ed6\u60c5\u51b5\u4e0b": 320, "\u53ea\u4f1a\u8f7d\u5165\u6307\u5b9a\u4e86\u7684\u5217\u4f5c\u4e3a\u5c5e\u6027": 320, "\u6bd4\u5982\u8bf4": 320, "\u5217\u7684\u5217\u540d": 320, "\u6b64\u5217\u5c06\u5728\u8f7d\u5165\u8fb9\u65f6\u88ab\u7528\u505a\u8d77\u59cb\u70b9": 320, "\u6216\u76ee\u6807\u70b9": 320, "\u5176\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32": 320, "\u6b64\u65f6\u6307\u4ee3\u5217\u540d": 320, "\u6216\u8005\u53ef\u4ee5\u662f\u4e00\u4e2a\u6b63\u6574\u6570": 320, "\u4ee3\u8868\u7b2c\u51e0\u5217": 320, "\u4ece0\u5f00\u59cb": 320, "\u9ed8\u8ba4\u4e3a\u7b2c0\u5217": 320, "\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5411\u56fe\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u8fb9\u6807\u7b7e": 320, "\u4e0e\u6784\u5efa\u70b9\u6807\u7b7e\u4e00\u8282\u4e2d\u7684": 320, "\u7c7b\u4f3c": 320, "\u4e3a\u6307\u793a\u53bb\u54ea\u91cc\u8bfb\u6570\u636e\u7684\u8def\u5f84": 320, "\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50": 320, "\u8fd9\u5c06\u4f1a\u8f7d\u5165\u4e00\u4e2a\u6807\u7b7e\u540d\u4e3a": 320, "\u6e90\u8282\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u8282\u70b9\u6807\u7b7e\u90fd\u4e3a": 320, "\u7b2c\u4e00\u5217\u4f5c\u4e3a\u8d77\u70b9\u7684\u70b9id": 320, "\u7b2c\u4e8c\u5217\u4f5c\u4e3a\u7ec8\u70b9\u7684\u70b9id": 320, "\u5176\u4ed6\u5217\u90fd\u4f5c\u4e3a\u5c5e\u6027": 320, "\u8fb9\u7684\u6807\u7b7e\u540d": 320, "\u63a8\u8350\u603b\u662f\u4f7f\u7528\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u6807\u7b7e\u540d": 320, "\u4e00\u5217\u5c5e\u6027": 320, "\u610f\u4e49\u4e0e\u884c\u4e3a\u90fd\u548c\u70b9\u4e2d\u7684\u4e00\u81f4": 320, "\u8d77\u70b9\u7684\u6807\u7b7e\u540d\u4e0e\u7ec8\u70b9\u7684\u6807\u7b7e\u540d": 320, "\u6211\u4eec\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u5df2\u7ecf\u770b\u5230\u8fc7\u4e86": 320, "\u5728\u90a3\u91cc\u5c06\u5176\u8d4b\u503c\u4e3a": 320, "\u8fd9\u4e24\u8005\u53ef\u4ee5\u53d6\u4e0d\u540c\u7684\u503c": 320, "\u4e3e\u4f8b\u6765\u8bf4": 320, "person_likes_comment_0_0": 320, "\u8d77\u70b9\u7684": 320, "\u5217\u540d\u4e0e\u7ec8\u70b9\u7684": 320, "\u5217\u540d": 320, "\u9ed8\u8ba4\u5206\u522b\u4e3a": 320, "\u610f\u4e49\u548c\u8868\u73b0\u4e0e\u70b9\u4e2d\u7684": 320, "\u4e0d\u540c\u7684\u662f\u9700\u8981\u4e24\u5217": 320, "\u4e00\u5217\u4e3a\u8d77\u70b9": 320, "\u4e00\u5217\u4e3a\u7ec8\u70b9": 320, "\u4ee5\u4e0b\u662f\u4e2a\u4f8b\u5b50": 320, "\u8fd9\u662f\u4e00\u4e9b\u7528\u6765\u5904\u7406\u7279\u522b\u7b80\u5355\u6216\u7279\u522b\u590d\u6742\u7684\u9ad8\u7ea7\u4e00\u4e9b\u7684\u7528\u6cd5": 320, "\u5982\u679c\u56fe\u4e2d\u53ea\u5b58\u5728\u4e00\u4e2a\u70b9\u6807\u7b7e": 320, "\u90a3\u4e48\u53ef\u4ee5\u7701\u7565\u6307\u5b9a\u70b9\u6807\u7b7e": 320, "\u5c06\u4f1a\u63a8\u65ad\u8d77\u59cb\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u6807\u7b7e\u4e3a\u8fd9\u4e00\u4e2a\u70b9\u6807\u7b7e": 320, "\u5982\u679c\u7528\u6237\u7684": 320, "\u53d6\u503c\u4e3a\u56fe\u4e2d\u4e0d\u5b58\u5728\u7684\u70b9\u6807\u7b7e": 320, "\u4f1a\u4ece\u8fb9\u7684\u7aef\u70b9\u4e2d\u805a\u5408\u51fa\u70b9\u8868": 320, "\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b": 320, "\u4e00\u79cd\u8fb9\u7684\u6807\u7b7e\u53ef\u80fd\u8fde\u63a5\u4e86\u4e24\u79cd\u53ca\u4ee5\u4e0a\u7684\u70b9": 320, "\u5728\u4e0b\u9762\u7684\u5c5e\u6027\u56fe\u4e2d": 320, "\u6709\u4e00\u4e2a\u540d\u4e3a": 320, "\u7684\u8fb9\u6807\u7b7e": 320, "\u8fde\u63a5\u4e86\u4e24\u79cd\u70b9\u6807\u7b7e": 320, "\u53ef\u4ee5\u6dfb\u52a0\u4e24\u6b21\u540d\u4e3a": 320, "person_likes_post_0_0": 320, "\u53ef\u4ee5\u4ece\u8f93\u5165\u6587\u4ef6\u4e2d\u63a8\u65ad\u70b9\u7684\u7c7b\u578b": 320, "\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u5de5\u4f5c\u7684\u5f88\u597d": 320, "\u7528\u6237\u6709\u65f6\u9700\u8981\u66f4\u591a\u7684\u81ea\u5b9a\u4e49\u80fd\u529b": 320, "\u4e3a\u4e86\u6ee1\u8db3\u6b64\u79cd\u9700\u6c42": 320, "\u53ef\u4ee5\u5728\u5c5e\u6027\u540d\u4e4b\u540e\u52a0\u5165\u4e00\u4e2a\u989d\u5916\u7c7b\u578b\u7684\u53c2\u6570": 320, "\u50cf\u8fd9\u6837": 320, "post_0_0": 320, "\u8fd9\u5c06\u4f1a\u5c06\u5c5e\u6027\u7684\u7c7b\u578b\u8f6c\u6362\u4e3a\u6307\u5b9a\u7684\u7c7b\u578b": 320, "\u6ce8\u610f\u5c5e\u6027\u540d\u5b57\u548c\u7c7b\u578b\u9700\u8981\u5728\u540c\u4e00\u4e2a\u5143\u7ec4\u4e2d": 320, "\u5728\u8fd9\u91cc": 320, "\u7684\u7c7b\u578b\u5c06\u4f1a\u662f": 320, "\u800c\u9ed8\u8ba4\u4e0d\u6307\u5b9a\u7684\u8bdd\u4e3a": 320, "\u5e38\u89c1\u7684\u4f7f\u7528\u573a\u666f\u662f\u6307\u5b9a": 320, "\u7b49\u7c7b\u578b": 320, "\u6709\u4e09\u4e2a\u914d\u7f6e\u5143\u4fe1\u606f\u7684\u53c2\u6570": 320, "\u5206\u522b\u4e3a": 320, "\u53ef\u4ee5\u4e3a": 320, "\u4f1a\u6709\u66f4\u5feb\u7684\u901f\u5ea6": 320, "\u548c\u4f7f\u7528\u66f4\u5c11\u7684\u5185\u5b58": 320, "\u5f53id\u4e0d\u80fd\u7528": 320, "\u8868\u793a\u65f6": 320, "\u624d\u5e94\u8be5\u4f7f\u7528": 320, "\u5982\u679c\u786e\u5b9a\u56fe\u70b9id\u8303\u56f4\u4e0d\u4f1a\u8d85\u8fc7": 320, "\u5efa\u8bae\u4f7f\u7528": 320, "\u6765\u964d\u4f4e\u5185\u5b58\u5f00\u9500": 320, "\u6307\u793a\u8f7d\u5165\u65e0\u5411\u56fe\u8fd8\u662f\u6709\u5411\u56fe": 320, "\u6307\u793a\u662f\u5426\u4e3a\u6bcf\u6761\u8fb9\u5206\u914d\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u7684id": 320, "\u6307\u793a\u662f\u5426\u662f\u5426\u5c06\u70b9\u539f\u59cbid\u4fdd\u7559\u4e3a\u5c5e\u6027": 320, "\u8ba9\u6211\u4eec\u5199\u4e00\u4e2a\u5b8c\u6574\u7684\u56fe\u7684\u5b9a\u4e49": 320, "\u8fd9\u91cc\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u8f7d\u5165": 320, "\u5c5e\u6027\u56fe\u7684": 320, "\u4f8b\u5b50": 320, "\u4e0a\u6587\u63d0\u5230\u7684\u6570\u636e\u6e90\u662f\u4e00\u4e2a": 320, "\u7684\u7c7b": 320, "\u5305\u542b\u6587\u4ef6\u8def\u5f84\u6216\u8005\u6570\u636e\u672c\u8eab": 320, "\u652f\u6301\u4ece": 320, "\u8fd9\u53ef\u4ee5\u4f7f\u7528\u6237\u4ec5\u901a\u8fc7": 320, "\u63a7\u5236\u53f0\u4fbf\u53ef\u4ee5\u521b\u5efa\u56fe": 320, "\u9664\u4e86": 320, "\u5916": 320, "\u5176\u4ed6\u5c5e\u6027": 320, "id\u5217": 320, "\u6807\u7b7e\u8bbe\u7f6e\u7b49\u90fd\u548c\u4e4b\u524d\u63d0\u5230\u7684\u4fdd\u6301\u4e00\u81f4": 320, "datasourc": 320, "col_0": 320, "col_1": 320, "\u6ce8\u610f\u6bcf\u4e2a\u6570\u7ec4\u90fd\u4ee3\u8868\u4e00\u5217": 320, "\u6211\u4eec\u5c06\u5176\u4ee5": 320, "\u77e9\u9635\u7684\u65b9\u5f0f\u4f20\u5165": 320, "array_v": 320, "col": 320, "array_": 320, "\u5f53": 320, "\u5305\u542b\u6587\u4ef6\u8def\u5f84\u65f6": 320, "\u5b83\u53ef\u80fd\u4ec5\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u4e32": 320, "\u6587\u4ef6\u8def\u5f84\u5e94\u9075\u5faa": 320, "uri": 320, "\u6807\u51c6": 320, "\u5f53\u6536\u5230\u5305\u542b\u6587\u4ef6\u8def\u5f84\u7684\u8f7d\u56fe\u8bf7\u6c42\u65f6": 320, "\u5c06\u4f1a\u89e3\u6790": 320, "\u8c03\u7528\u76f8\u5e94\u7684\u8f7d\u56fe\u6a21\u5757": 320, "\u652f\u6301\u591a\u79cd\u6570\u636e\u6e90": 320, "\u672c\u5730": 320, "\u6570\u636e\u7531": 320, "\u8d1f\u8d23\u8f7d\u5165": 320, "fsspec": 320, "\u89e3\u6790\u4e0d\u540c\u7684\u6570\u636e\u683c\u5f0f\u4ee5\u53ca\u53c2\u6570": 320, "\u4efb\u4f55\u989d\u5916\u7684\u5177\u4f53\u7684\u914d\u7f6e\u90fd\u53ef\u4ee5\u5728loader\u7684\u53ef\u53d8\u53c2\u6570\u5217\u8868\u4e2d\u4f20\u5165": 320, "\u8fd9\u4e9b\u53c2\u6570\u4f1a\u76f4\u63a5\u88ab\u4f20\u9012\u5230\u5bf9\u5e94\u7684\u5b58\u50a8\u7c7b\u4e2d": 320, "\u4e4b\u4e8e": 320, "\u6216\u8005\u662f": 320, "ds1": 320, "datafil": 320, "ds2": 320, "graphscope_bucket": 320, "ds3": 320, "extra_conf": 320, "conf1": 320, "d34": 320, "client_kwarg": 320, "region_nam": 320, "east": 320, "\u7528\u6237\u53ef\u4ee5\u65b9\u4fbf\u7684\u5b9e\u73b0\u81ea\u5df1\u7684driver\u6765\u652f\u6301\u66f4\u591a\u7684\u6570\u636e\u6e90": 320, "\u6bd4\u5982\u53c2\u7167": 320, "ossf": 320, "driver\u7684\u5b9e\u73b0\u65b9\u5f0f": 320, "\u7528\u6237\u9700\u8981\u7ee7\u627f": 320, "abstractfilesystem": 320, "\u7c7b\u7528\u6765\u505ascheme\u5bf9\u5e94\u7684resolv": 320, "abstractbufferedfil": 320, "\u7528\u6237\u4ec5\u9700\u8981\u5b9e\u73b0": 320, "_upload_chunk": 320, "_initiate_upload": 320, "_fetch_rang": 320, "\u8fd9\u51e0\u4e2a\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b9e\u73b0\u57fa\u672c\u7684read": 320, "write\u529f\u80fd": 320, "\u6700\u540e\u901a\u8fc7": 320, "register_implement": 320, "protocol_nam": 320, "protocol_file_system": 320, "\u6ce8\u518c\u81ea\u5b9a\u4e49\u7684resolv": 320, "\u6211\u4eec\u4e3agraphscope\u7684\u7528\u6237\u51c6\u5907\u4e86\u4e00\u7cfb\u5217\u8be6\u5c3d\u7684\u5165\u95e8\u6559\u7a0b": 321, "\u4ece\u8fd9\u4e9b\u5165\u95e8\u6559\u7a0b\u4e2d\u4f60\u53ef\u4ee5\u4e86\u89e3\u5230\u5982\u4f55\u542f\u52a8\u4e00\u4e2agraphscope\u4f1a\u8bdd": 321, "\u5982\u4f55\u8f7d\u56fe": 321, "\u4ee5\u53ca\u5982\u4f55\u5206\u522b": 321, "\u4f7f\u7528graphscope\u4e2d\u7684ga": 321, "gle\u5f15\u64ce\u6765\u5b8c\u6210\u56fe\u5206\u6790\u4efb\u52a1": 321, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u548c\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7684\u8bad\u7ec3": 321, "\u6211\u4eec\u7528jupyt": 321, "notebook\u6765\u7ec4\u7ec7\u8fd9\u4e9b\u6559\u7a0b": 321, "\u7528\u6237\u53ef\u4ee5\u5728\u4efb\u4f55\u4e00\u4e2ajupyt": 321, "notebook\u670d\u52a1\u4e2d\u5c1d\u8bd5\u6267\u884c": 321, "\u6211\u4eec\u8fd8\u63d0\u4f9b\u4e86\u5df2\u7ecf\u51c6\u5907\u597d\u7684jupyt": 321, "lab": 321, "\u73af\u5883": 321, "\u4ee5\u4fbf\u4e8e\u7528\u6237\u66f4\u5feb\u5730\u4e0a\u624bgraphscop": 321, "\u5165\u95e8\u6559\u7a0b\u5305\u62ec\u5982\u4e0b\u8fd9\u4e9b\u5185\u5bb9": 321}, "objects": {"": [[75, 0, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase"], [75, 1, 1, "_CPPv4N2gs7AppBase7AppBaseEv", "gs::AppBase::AppBase"], [75, 2, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase::CONTEXT_T"], [75, 2, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase::FRAG_T"], [75, 1, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval"], [75, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::context"], [75, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::graph"], [75, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::messages"], [75, 1, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval"], [75, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::context"], [75, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::graph"], [75, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::messages"], [75, 4, 1, "_CPPv4N2gs7AppBase13load_strategyE", "gs::AppBase::load_strategy"], [75, 5, 1, "_CPPv4N2gs7AppBase17message_manager_tE", "gs::AppBase::message_manager_t"], [75, 4, 1, "_CPPv4N2gs7AppBase16message_strategyE", "gs::AppBase::message_strategy"], [75, 4, 1, "_CPPv4N2gs7AppBase16need_split_edgesE", "gs::AppBase::need_split_edges"], [75, 1, 1, "_CPPv4N2gs7AppBaseD0Ev", "gs::AppBase::~AppBase"], [75, 0, 1, "_CPPv4N2gs8AppEntryE", "gs::AppEntry"], [75, 1, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry"], [75, 3, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry::id"], [75, 3, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry::lib_path"], [75, 1, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker"], [75, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::comm_spec"], [75, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::fragment"], [75, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::spec"], [75, 1, 1, "_CPPv4N2gs8AppEntry4InitEv", "gs::AppEntry::Init"], [75, 1, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query"], [75, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::context_key"], [75, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::frag_wrapper"], [75, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::query_args"], [75, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::worker_handler"], [75, 0, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt"], [75, 2, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt::FunctionType"], [75, 2, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt::index"], [75, 0, 1, "_CPPv4I0EN2gs7ArgsNumE", "gs::ArgsNum"], [75, 2, 1, "_CPPv4I0EN2gs7ArgsNumE", "gs::ArgsNum::FunctionType"], [75, 0, 1, "_CPPv4I0EN2gs12ArgsUnpackerE", "gs::ArgsUnpacker"], [75, 2, 1, "_CPPv4I0EN2gs12ArgsUnpackerE", "gs::ArgsUnpacker::T"], [75, 0, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader"], [75, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragment"], [75, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragment::frag_id"], [75, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragmentAsFragmentGroup"], [75, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragmentAsFragmentGroup::frag_id"], [75, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader"], [75, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader"], [75, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::client"], [75, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::client"], [75, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::comm_spec"], [75, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::comm_spec"], [75, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::compact_edges"], [75, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::directed"], [75, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::efiles"], [75, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::generate_eid"], [75, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::graph_info"], [75, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::retain_oid"], [75, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::vfiles"], [75, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader14LoadEdgeTablesEv", "gs::ArrowFragmentLoader::LoadEdgeTables"], [75, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader12LoadFragmentEv", "gs::ArrowFragmentLoader::LoadFragment"], [75, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader27LoadFragmentAsFragmentGroupEv", "gs::ArrowFragmentLoader::LoadFragmentAsFragmentGroup"], [75, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader20LoadVertexEdgeTablesEv", "gs::ArrowFragmentLoader::LoadVertexEdgeTables"], [75, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader16LoadVertexTablesEv", "gs::ArrowFragmentLoader::LoadVertexTables"], [75, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::OID_T"], [75, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::VERTEX_MAP_T"], [75, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::VID_T"], [75, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader15initPartitionerEv", "gs::ArrowFragmentLoader::initPartitioner"], [75, 1, 1, "_CPPv4N2gs19ArrowFragmentLoaderD0Ev", "gs::ArrowFragmentLoader::~ArrowFragmentLoader"], [75, 0, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment"], [75, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::COMPACT"], [75, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedFragment::Construct"], [75, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedFragment::Construct::meta"], [75, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment6CreateEv", "gs::ArrowProjectedFragment::Create"], [75, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::EDATA_T"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t", "gs::ArrowProjectedFragment::GetData"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t", "gs::ArrowProjectedFragment::GetData::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10GetEdgeNumEv", "gs::ArrowProjectedFragment::GetEdgeNum"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t", "gs::ArrowProjectedFragment::GetFragId"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t", "gs::ArrowProjectedFragment::GetFragId::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t", "gs::ArrowProjectedFragment::GetId"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t", "gs::ArrowProjectedFragment::GetId::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12GetInEdgeNumEv", "gs::ArrowProjectedFragment::GetInEdgeNum"], [75, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList"], [75, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList"], [75, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList"], [75, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::COMPACT_"], [75, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::COMPACT_"], [75, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::COMPACT_"], [75, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::src_fid"], [75, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::v"], [75, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::v"], [75, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingEdgeNumEv", "gs::ArrowProjectedFragment::GetIncomingEdgeNum"], [75, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingInnerVertexAdjList"], [75, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingInnerVertexAdjList::COMPACT_"], [75, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingInnerVertexAdjList::v"], [75, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingOuterVertexAdjList"], [75, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingOuterVertexAdjList::COMPACT_"], [75, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingOuterVertexAdjList::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex::oid"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexGid"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexGid::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexId"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexId::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexInternalId"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexInternalId::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetInnerVerticesNumEv", "gs::ArrowProjectedFragment::GetInnerVerticesNum"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInternalId"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInternalId::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalInDegree"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalInDegree::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalOutDegree"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalOutDegree::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetOutEdgeNumEv", "gs::ArrowProjectedFragment::GetOutEdgeNum"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex::oid"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexGid"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexGid::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexId"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexId::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexInternalId"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexInternalId::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetOuterVerticesNumEv", "gs::ArrowProjectedFragment::GetOuterVerticesNum"], [75, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList"], [75, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList"], [75, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList"], [75, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::COMPACT_"], [75, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::COMPACT_"], [75, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::COMPACT_"], [75, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::dst_fid"], [75, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::v"], [75, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::v"], [75, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingEdgeNumEv", "gs::ArrowProjectedFragment::GetOutgoingEdgeNum"], [75, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingInnerVertexAdjList"], [75, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingInnerVertexAdjList::COMPACT_"], [75, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingInnerVertexAdjList::v"], [75, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingOuterVertexAdjList"], [75, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingOuterVertexAdjList::COMPACT_"], [75, 3, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingOuterVertexAdjList::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetTotalVerticesNumEv", "gs::ArrowProjectedFragment::GetTotalVerticesNum"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex::oid"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex::v"], [75, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment12GetVertexMapEv", "gs::ArrowProjectedFragment::GetVertexMap"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12GetVertexMapEv", "gs::ArrowProjectedFragment::GetVertexMap"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetVerticesNumEv", "gs::ArrowProjectedFragment::GetVerticesNum"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t", "gs::ArrowProjectedFragment::Gid2Oid"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t", "gs::ArrowProjectedFragment::Gid2Oid::gid"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex::gid"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IEDests"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IEDests::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IOEDests"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IOEDests::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex::gid"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13InnerVerticesEv", "gs::ArrowProjectedFragment::InnerVertices"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsInnerVertex"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsInnerVertex::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsOuterVertex"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsOuterVertex::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t", "gs::ArrowProjectedFragment::MirrorVertices"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t", "gs::ArrowProjectedFragment::MirrorVertices::fid"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t", "gs::ArrowProjectedFragment::OEDests"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t", "gs::ArrowProjectedFragment::OEDests::v"], [75, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::OID_T"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t", "gs::ArrowProjectedFragment::Oid2Gid"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid::gid"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t", "gs::ArrowProjectedFragment::Oid2Gid::oid"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid::oid"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex::gid"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t", "gs::ArrowProjectedFragment::OuterVertices"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesEv", "gs::ArrowProjectedFragment::OuterVertices"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t", "gs::ArrowProjectedFragment::OuterVertices::fid"], [75, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp"], [75, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp::comm_spec"], [75, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp::conf"], [75, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project"], [75, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::e_label"], [75, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::e_prop"], [75, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::fragment"], [75, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::v_label"], [75, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::v_prop"], [75, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VDATA_T"], [75, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VERTEX_MAP_T"], [75, 2, 1, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VID_T"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t", "gs::ArrowProjectedFragment::Vertex2Gid"], [75, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t", "gs::ArrowProjectedFragment::Vertex2Gid::v"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8VerticesEv", "gs::ArrowProjectedFragment::Vertices"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10adj_list_tE", "gs::ArrowProjectedFragment::adj_list_t"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment18compact_adj_list_tE", "gs::ArrowProjectedFragment::compact_adj_list_t"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13compact_edgesEv", "gs::ArrowProjectedFragment::compact_edges"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment13compact_nbr_tE", "gs::ArrowProjectedFragment::compact_nbr_t"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16const_adj_list_tE", "gs::ArrowProjectedFragment::const_adj_list_t"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment24const_compact_adj_list_tE", "gs::ArrowProjectedFragment::const_compact_adj_list_t"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8directedEv", "gs::ArrowProjectedFragment::directed"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment7edata_tE", "gs::ArrowProjectedFragment::edata_t"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10edge_labelEv", "gs::ArrowProjectedFragment::edge_label"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12edge_prop_idEv", "gs::ArrowProjectedFragment::edge_prop_id"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment11eid_array_tE", "gs::ArrowProjectedFragment::eid_array_t"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5eid_tE", "gs::ArrowProjectedFragment::eid_t"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment3fidEv", "gs::ArrowProjectedFragment::fid"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment4fnumEv", "gs::ArrowProjectedFragment::fnum"], [75, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment18get_arrow_fragmentEv", "gs::ArrowProjectedFragment::get_arrow_fragment"], [75, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment24get_edata_array_accessorEv", "gs::ArrowProjectedFragment::get_edata_array_accessor"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24get_ie_offsets_begin_ptrEv", "gs::ArrowProjectedFragment::get_ie_offsets_begin_ptr"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment22get_ie_offsets_end_ptrEv", "gs::ArrowProjectedFragment::get_ie_offsets_end_ptr"], [75, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment16get_in_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv", "gs::ArrowProjectedFragment::get_in_edges_ptr"], [75, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment16get_in_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv", "gs::ArrowProjectedFragment::get_in_edges_ptr::COMPACT_"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24get_oe_offsets_begin_ptrEv", "gs::ArrowProjectedFragment::get_oe_offsets_begin_ptr"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment22get_oe_offsets_end_ptrEv", "gs::ArrowProjectedFragment::get_oe_offsets_end_ptr"], [75, 1, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment17get_out_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv", "gs::ArrowProjectedFragment::get_out_edges_ptr"], [75, 2, 1, "_CPPv4I_bENK2gs22ArrowProjectedFragment17get_out_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv", "gs::ArrowProjectedFragment::get_out_edges_ptr::COMPACT_"], [75, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment24get_vdata_array_accessorEv", "gs::ArrowProjectedFragment::get_vdata_array_accessor"], [75, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE", "gs::ArrowProjectedFragment::inner_vertex_array_t"], [75, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE", "gs::ArrowProjectedFragment::inner_vertex_array_t::DATA_T"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16inner_vertices_tE", "gs::ArrowProjectedFragment::inner_vertices_t"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14internal_oid_tE", "gs::ArrowProjectedFragment::internal_oid_t"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10label_id_tE", "gs::ArrowProjectedFragment::label_id_t"], [75, 4, 1, "_CPPv4N2gs22ArrowProjectedFragment13load_strategyE", "gs::ArrowProjectedFragment::load_strategy"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16local_vertex_mapEv", "gs::ArrowProjectedFragment::local_vertex_map"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5nbr_tE", "gs::ArrowProjectedFragment::nbr_t"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10nbr_unit_tE", "gs::ArrowProjectedFragment::nbr_unit_t"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5oid_tE", "gs::ArrowProjectedFragment::oid_t"], [75, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE", "gs::ArrowProjectedFragment::outer_vertex_array_t"], [75, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE", "gs::ArrowProjectedFragment::outer_vertex_array_t::DATA_T"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16outer_vertices_tE", "gs::ArrowProjectedFragment::outer_vertices_t"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment9prop_id_tE", "gs::ArrowProjectedFragment::prop_id_t"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16property_graph_tE", "gs::ArrowProjectedFragment::property_graph_t"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment21property_vertex_map_tE", "gs::ArrowProjectedFragment::property_vertex_map_t"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14sub_vertices_tE", "gs::ArrowProjectedFragment::sub_vertices_t"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment7vdata_tE", "gs::ArrowProjectedFragment::vdata_t"], [75, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE", "gs::ArrowProjectedFragment::vertex_array_t"], [75, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE", "gs::ArrowProjectedFragment::vertex_array_t::DATA_T"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12vertex_labelEv", "gs::ArrowProjectedFragment::vertex_label"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13vertex_map_idEv", "gs::ArrowProjectedFragment::vertex_map_id"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment12vertex_map_tE", "gs::ArrowProjectedFragment::vertex_map_t"], [75, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14vertex_prop_idEv", "gs::ArrowProjectedFragment::vertex_prop_id"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14vertex_range_tE", "gs::ArrowProjectedFragment::vertex_range_t"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment8vertex_tE", "gs::ArrowProjectedFragment::vertex_t"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10vertices_tE", "gs::ArrowProjectedFragment::vertices_t"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment11vid_array_tE", "gs::ArrowProjectedFragment::vid_array_t"], [75, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5vid_tE", "gs::ArrowProjectedFragment::vid_t"], [75, 1, 1, "_CPPv4N2gs22ArrowProjectedFragmentD0Ev", "gs::ArrowProjectedFragment::~ArrowProjectedFragment"], [75, 0, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap"], [75, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedVertexMap::Construct"], [75, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedVertexMap::Construct::meta"], [75, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap6CreateEv", "gs::ArrowProjectedVertexMap::Create"], [75, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetFidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetFidFromGid"], [75, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetFidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetFidFromGid::gid"], [75, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid"], [75, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid"], [75, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::fid"], [75, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::gid"], [75, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::gid"], [75, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::oid"], [75, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::oid"], [75, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap18GetInnerVertexSizeE5fid_t", "gs::ArrowProjectedVertexMap::GetInnerVertexSize"], [75, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap18GetInnerVertexSizeE5fid_t", "gs::ArrowProjectedVertexMap::GetInnerVertexSize::fid"], [75, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetLidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetLidFromGid"], [75, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetLidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetLidFromGid::gid"], [75, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap16GetOffsetFromLidE5vid_t", "gs::ArrowProjectedVertexMap::GetOffsetFromLid"], [75, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap16GetOffsetFromLidE5vid_t", "gs::ArrowProjectedVertexMap::GetOffsetFromLid::lid"], [75, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid"], [75, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid::gid"], [75, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid::oid"], [75, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap19GetTotalVerticesNumEv", "gs::ArrowProjectedVertexMap::GetTotalVerticesNum"], [75, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::OID_T"], [75, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap10Offset2LidERK5vid_t", "gs::ArrowProjectedVertexMap::Offset2Lid"], [75, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap10Offset2LidERK5vid_t", "gs::ArrowProjectedVertexMap::Offset2Lid::offset"], [75, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project"], [75, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project::v_label"], [75, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project::vm"], [75, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::VERTEX_MAP_T"], [75, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::VID_T"], [75, 0, 1, "_CPPv4I00EN2gs17CtxWrapperBuilderE", "gs::CtxWrapperBuilder"], [75, 2, 1, "_CPPv4I00EN2gs17CtxWrapperBuilderE", "gs::CtxWrapperBuilder::CTX_T"], [75, 0, 1, "_CPPv4I0EN2gs21DefaultPropertyWorkerE", "gs::DefaultPropertyWorker"], [75, 2, 1, "_CPPv4I0EN2gs21DefaultPropertyWorkerE", "gs::DefaultPropertyWorker::APP_T"], [75, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker"], [75, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker::app"], [75, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker::graph"], [75, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker8FinalizeEv", "gs::DefaultPropertyWorker::Finalize"], [75, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker10GetContextEv", "gs::DefaultPropertyWorker::GetContext"], [75, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init"], [75, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init::comm_spec"], [75, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init::pe_spec"], [75, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE", "gs::DefaultPropertyWorker::Output"], [75, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE", "gs::DefaultPropertyWorker::Output::os"], [75, 1, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query"], [75, 2, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query::Args"], [75, 3, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query::args"], [75, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker9context_tE", "gs::DefaultPropertyWorker::context_t"], [75, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker10fragment_tE", "gs::DefaultPropertyWorker::fragment_t"], [75, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker17message_manager_tE", "gs::DefaultPropertyWorker::message_manager_t"], [75, 1, 1, "_CPPv4N2gs21DefaultPropertyWorkerD0Ev", "gs::DefaultPropertyWorker::~DefaultPropertyWorker"], [75, 0, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker"], [75, 0, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker"], [75, 2, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker::APP_T"], [75, 2, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker::APP_T"], [75, 1, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker"], [75, 1, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker"], [75, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::app"], [75, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::app"], [75, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::graph"], [75, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::graph"], [75, 1, 1, "_CPPv4N2gs13DefaultWorker8FinalizeEv", "gs::DefaultWorker::Finalize"], [75, 1, 1, "_CPPv4N2gs13DefaultWorker8FinalizeEv", "gs::DefaultWorker::Finalize"], [75, 1, 1, "_CPPv4N2gs13DefaultWorker10GetContextEv", "gs::DefaultWorker::GetContext"], [75, 1, 1, "_CPPv4N2gs13DefaultWorker10GetContextEv", "gs::DefaultWorker::GetContext"], [75, 1, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init"], [75, 1, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init"], [75, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::comm_spec"], [75, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::comm_spec"], [75, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::pe_spec"], [75, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::pe_spec"], [75, 1, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output"], [75, 1, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output"], [75, 3, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output::os"], [75, 3, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output::os"], [75, 1, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query"], [75, 1, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query"], [75, 2, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::Args"], [75, 2, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::Args"], [75, 3, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::args"], [75, 3, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::args"], [75, 5, 1, "_CPPv4N2gs13DefaultWorker9context_tE", "gs::DefaultWorker::context_t"], [75, 5, 1, "_CPPv4N2gs13DefaultWorker9context_tE", "gs::DefaultWorker::context_t"], [75, 5, 1, "_CPPv4N2gs13DefaultWorker10fragment_tE", "gs::DefaultWorker::fragment_t"], [75, 5, 1, "_CPPv4N2gs13DefaultWorker10fragment_tE", "gs::DefaultWorker::fragment_t"], [75, 5, 1, "_CPPv4N2gs13DefaultWorker17message_manager_tE", "gs::DefaultWorker::message_manager_t"], [75, 5, 1, "_CPPv4N2gs13DefaultWorker17message_manager_tE", "gs::DefaultWorker::message_manager_t"], [75, 1, 1, "_CPPv4N2gs13DefaultWorkerD0Ev", "gs::DefaultWorker::~DefaultWorker"], [75, 1, 1, "_CPPv4N2gs13DefaultWorkerD0Ev", "gs::DefaultWorker::~DefaultWorker"], [75, 0, 1, "_CPPv4N2gs14DispatchResultE", "gs::DispatchResult"], [75, 6, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicyE", "gs::DispatchResult::AggregatePolicy"], [75, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE", "gs::DispatchResult::AggregatePolicy::kConcat"], [75, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE", "gs::DispatchResult::AggregatePolicy::kMergeGraphDef"], [75, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE", "gs::DispatchResult::AggregatePolicy::kPickFirst"], [75, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE", "gs::DispatchResult::AggregatePolicy::kPickFirstNonEmpty"], [75, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE", "gs::DispatchResult::AggregatePolicy::kPickFirstNonEmptyGraphDef"], [75, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE", "gs::DispatchResult::AggregatePolicy::kRequireConsistent"], [75, 1, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult"], [75, 1, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEv", "gs::DispatchResult::DispatchResult"], [75, 3, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult::error_code"], [75, 3, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult::worker_id"], [75, 1, 1, "_CPPv4NK2gs14DispatchResult16aggregate_policyEv", "gs::DispatchResult::aggregate_policy"], [75, 1, 1, "_CPPv4NK2gs14DispatchResult4dataEv", "gs::DispatchResult::data"], [75, 1, 1, "_CPPv4NK2gs14DispatchResult10error_codeEv", "gs::DispatchResult::error_code"], [75, 1, 1, "_CPPv4N2gs14DispatchResult9graph_defEv", "gs::DispatchResult::graph_def"], [75, 1, 1, "_CPPv4NK2gs14DispatchResult9graph_defEv", "gs::DispatchResult::graph_def"], [75, 1, 1, "_CPPv4NK2gs14DispatchResult14has_large_dataEv", "gs::DispatchResult::has_large_data"], [75, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE", "gs::DispatchResult::kConcat"], [75, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE", "gs::DispatchResult::kMergeGraphDef"], [75, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE", "gs::DispatchResult::kPickFirst"], [75, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE", "gs::DispatchResult::kPickFirstNonEmpty"], [75, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE", "gs::DispatchResult::kPickFirstNonEmptyGraphDef"], [75, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE", "gs::DispatchResult::kRequireConsistent"], [75, 1, 1, "_CPPv4N2gs14DispatchResult7messageEv", "gs::DispatchResult::message"], [75, 1, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data"], [75, 1, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data"], [75, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::arc"], [75, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::data"], [75, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::large_data"], [75, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::large_data"], [75, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::policy"], [75, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::policy"], [75, 1, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error"], [75, 3, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error::error_code"], [75, 3, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error::message"], [75, 1, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def"], [75, 3, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def::graph_def"], [75, 3, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def::policy"], [75, 1, 1, "_CPPv4NK2gs14DispatchResult9worker_idEv", "gs::DispatchResult::worker_id"], [75, 0, 1, "_CPPv4N2gs10DispatcherE", "gs::Dispatcher"], [75, 1, 1, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::Dispatch"], [75, 3, 1, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::Dispatch::cmd"], [75, 1, 1, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE", "gs::Dispatcher::Dispatcher"], [75, 3, 1, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE", "gs::Dispatcher::Dispatcher::comm_spec"], [75, 1, 1, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::SetCommand"], [75, 3, 1, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::SetCommand::cmd"], [75, 1, 1, "_CPPv4N2gs10Dispatcher5StartEv", "gs::Dispatcher::Start"], [75, 1, 1, "_CPPv4N2gs10Dispatcher4StopEv", "gs::Dispatcher::Stop"], [75, 1, 1, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE", "gs::Dispatcher::Subscribe"], [75, 3, 1, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE", "gs::Dispatcher::Subscribe::subscriber"], [75, 0, 1, "_CPPv4N2gs12EngineConfigE", "gs::EngineConfig"], [75, 1, 1, "_CPPv4NK2gs12EngineConfig12ToJsonStringEv", "gs::EngineConfig::ToJsonString"], [75, 4, 1, "_CPPv4N2gs12EngineConfig15enable_java_sdkE", "gs::EngineConfig::enable_java_sdk"], [75, 4, 1, "_CPPv4N2gs12EngineConfig8networkxE", "gs::EngineConfig::networkx"], [75, 4, 1, "_CPPv4N2gs12EngineConfig21vineyard_rpc_endpointE", "gs::EngineConfig::vineyard_rpc_endpoint"], [75, 4, 1, "_CPPv4N2gs12EngineConfig15vineyard_socketE", "gs::EngineConfig::vineyard_socket"], [75, 0, 1, "_CPPv4I0EN2gs15FragmentWrapperE", "gs::FragmentWrapper"], [75, 2, 1, "_CPPv4I0EN2gs15FragmentWrapperE", "gs::FragmentWrapper::FRAG_T"], [75, 0, 1, "_CPPv4N2gs8GSObjectE", "gs::GSObject"], [75, 1, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject"], [75, 3, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject::id"], [75, 3, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject::type"], [75, 1, 1, "_CPPv4NK2gs8GSObject8ToStringEv", "gs::GSObject::ToString"], [75, 1, 1, "_CPPv4NK2gs8GSObject2idEv", "gs::GSObject::id"], [75, 1, 1, "_CPPv4NK2gs8GSObject4typeEv", "gs::GSObject::type"], [75, 1, 1, "_CPPv4N2gs8GSObjectD0Ev", "gs::GSObject::~GSObject"], [75, 0, 1, "_CPPv4N2gs11GrapeEngineE", "gs::GrapeEngine"], [75, 1, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE", "gs::GrapeEngine::GrapeEngine"], [75, 1, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine"], [75, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE", "gs::GrapeEngine::GrapeEngine::dag_file"], [75, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine::host"], [75, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine::port"], [75, 1, 1, "_CPPv4N2gs11GrapeEngine10RunDAGFileEv", "gs::GrapeEngine::RunDAGFile"], [75, 1, 1, "_CPPv4N2gs11GrapeEngine5StartEv", "gs::GrapeEngine::Start"], [75, 1, 1, "_CPPv4N2gs11GrapeEngine4StopEv", "gs::GrapeEngine::Stop"], [75, 0, 1, "_CPPv4N2gs13GrapeInstanceE", "gs::GrapeInstance"], [75, 1, 1, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE", "gs::GrapeInstance::GrapeInstance"], [75, 3, 1, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE", "gs::GrapeInstance::GrapeInstance::comm_spec"], [75, 1, 1, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE", "gs::GrapeInstance::Init"], [75, 3, 1, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE", "gs::GrapeInstance::Init::vineyard_socket"], [75, 1, 1, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE", "gs::GrapeInstance::OnReceive"], [75, 3, 1, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE", "gs::GrapeInstance::OnReceive::cmd"], [75, 0, 1, "_CPPv4N2gs13ObjectManagerE", "gs::ObjectManager"], [75, 1, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject"], [75, 1, 1, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE", "gs::ObjectManager::GetObject"], [75, 2, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject::T"], [75, 3, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject::id"], [75, 3, 1, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE", "gs::ObjectManager::GetObject::id"], [75, 1, 1, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE", "gs::ObjectManager::HasObject"], [75, 3, 1, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE", "gs::ObjectManager::HasObject::id"], [75, 1, 1, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE", "gs::ObjectManager::PutObject"], [75, 3, 1, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE", "gs::ObjectManager::PutObject::obj"], [75, 1, 1, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE", "gs::ObjectManager::RemoveObject"], [75, 3, 1, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE", "gs::ObjectManager::RemoveObject::id"], [75, 0, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker"], [75, 0, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker"], [75, 2, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker::APP_T"], [75, 2, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker::APP_T"], [75, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv", "gs::ParallelPropertyWorker::Finalize"], [75, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv", "gs::ParallelPropertyWorker::Finalize"], [75, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv", "gs::ParallelPropertyWorker::GetContext"], [75, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv", "gs::ParallelPropertyWorker::GetContext"], [75, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init"], [75, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init"], [75, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::comm_spec"], [75, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::comm_spec"], [75, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::pe_spec"], [75, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::pe_spec"], [75, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output"], [75, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output"], [75, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output::os"], [75, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output::os"], [75, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker"], [75, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker"], [75, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::app"], [75, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::app"], [75, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::graph"], [75, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::graph"], [75, 1, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query"], [75, 1, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query"], [75, 2, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::Args"], [75, 2, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::Args"], [75, 3, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::args"], [75, 3, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::args"], [75, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker9context_tE", "gs::ParallelPropertyWorker::context_t"], [75, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker9context_tE", "gs::ParallelPropertyWorker::context_t"], [75, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE", "gs::ParallelPropertyWorker::fragment_t"], [75, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE", "gs::ParallelPropertyWorker::fragment_t"], [75, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE", "gs::ParallelPropertyWorker::message_manager_t"], [75, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE", "gs::ParallelPropertyWorker::message_manager_t"], [75, 1, 1, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev", "gs::ParallelPropertyWorker::~ParallelPropertyWorker"], [75, 1, 1, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev", "gs::ParallelPropertyWorker::~ParallelPropertyWorker"], [75, 0, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase"], [75, 2, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase::CONTEXT_T"], [75, 2, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase::FRAG_T"], [75, 1, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval"], [75, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::context"], [75, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::graph"], [75, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::messages"], [75, 1, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval"], [75, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::context"], [75, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::graph"], [75, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::messages"], [75, 1, 1, "_CPPv4N2gs15PropertyAppBase15PropertyAppBaseEv", "gs::PropertyAppBase::PropertyAppBase"], [75, 4, 1, "_CPPv4N2gs15PropertyAppBase13load_strategyE", "gs::PropertyAppBase::load_strategy"], [75, 5, 1, "_CPPv4N2gs15PropertyAppBase17message_manager_tE", "gs::PropertyAppBase::message_manager_t"], [75, 4, 1, "_CPPv4N2gs15PropertyAppBase16message_strategyE", "gs::PropertyAppBase::message_strategy"], [75, 4, 1, "_CPPv4N2gs15PropertyAppBase16need_split_edgesE", "gs::PropertyAppBase::need_split_edges"], [75, 1, 1, "_CPPv4N2gs15PropertyAppBaseD0Ev", "gs::PropertyAppBase::~PropertyAppBase"], [75, 0, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase"], [75, 2, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase::CONTEXT_T"], [75, 2, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase::FRAG_T"], [75, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval"], [75, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval::context"], [75, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval::graph"], [75, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval"], [75, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval::context"], [75, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval::graph"], [75, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase19PropertyAutoAppBaseEv", "gs::PropertyAutoAppBase::PropertyAutoAppBase"], [75, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase13load_strategyE", "gs::PropertyAutoAppBase::load_strategy"], [75, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase16message_strategyE", "gs::PropertyAutoAppBase::message_strategy"], [75, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase16need_split_edgesE", "gs::PropertyAutoAppBase::need_split_edges"], [75, 1, 1, "_CPPv4N2gs19PropertyAutoAppBaseD0Ev", "gs::PropertyAutoAppBase::~PropertyAutoAppBase"], [75, 0, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker"], [75, 0, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker"], [75, 2, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker::APP_T"], [75, 2, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker::APP_T"], [75, 1, 1, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv", "gs::PropertyAutoWorker::Finalize"], [75, 1, 1, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv", "gs::PropertyAutoWorker::Finalize"], [75, 1, 1, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv", "gs::PropertyAutoWorker::GetContext"], [75, 1, 1, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv", "gs::PropertyAutoWorker::GetContext"], [75, 1, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init"], [75, 1, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init"], [75, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::comm_spec"], [75, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::comm_spec"], [75, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::pe_spec"], [75, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::pe_spec"], [75, 1, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output"], [75, 1, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output"], [75, 3, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output::os"], [75, 3, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output::os"], [75, 1, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker"], [75, 1, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker"], [75, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::app"], [75, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::app"], [75, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::graph"], [75, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::graph"], [75, 1, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query"], [75, 1, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query"], [75, 2, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::Args"], [75, 2, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::Args"], [75, 3, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::args"], [75, 3, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::args"], [75, 5, 1, "_CPPv4N2gs18PropertyAutoWorker9context_tE", "gs::PropertyAutoWorker::context_t"], [75, 5, 1, "_CPPv4N2gs18PropertyAutoWorker9context_tE", "gs::PropertyAutoWorker::context_t"], [75, 5, 1, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE", "gs::PropertyAutoWorker::fragment_t"], [75, 5, 1, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE", "gs::PropertyAutoWorker::fragment_t"], [75, 5, 1, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE", "gs::PropertyAutoWorker::message_manager_t"], [75, 5, 1, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE", "gs::PropertyAutoWorker::message_manager_t"], [75, 1, 1, "_CPPv4N2gs18PropertyAutoWorkerD0Ev", "gs::PropertyAutoWorker::~PropertyAutoWorker"], [75, 1, 1, "_CPPv4N2gs18PropertyAutoWorkerD0Ev", "gs::PropertyAutoWorker::~PropertyAutoWorker"], [75, 0, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext"], [75, 2, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext::DATA_T"], [75, 2, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext::FRAG_T"], [75, 1, 1, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t", "gs::TensorContext::TensorContext"], [75, 3, 1, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t", "gs::TensorContext::TensorContext::fragment"], [75, 1, 1, "_CPPv4N2gs13TensorContext6assignERK6data_t", "gs::TensorContext::assign"], [75, 1, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign"], [75, 3, 1, "_CPPv4N2gs13TensorContext6assignERK6data_t", "gs::TensorContext::assign::data"], [75, 3, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign::data"], [75, 3, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign::shape"], [75, 5, 1, "_CPPv4N2gs13TensorContext6data_tE", "gs::TensorContext::data_t"], [75, 1, 1, "_CPPv4N2gs13TensorContext8fragmentEv", "gs::TensorContext::fragment"], [75, 1, 1, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE", "gs::TensorContext::set_shape"], [75, 3, 1, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE", "gs::TensorContext::set_shape::shape"], [75, 1, 1, "_CPPv4NK2gs13TensorContext5shapeEv", "gs::TensorContext::shape"], [75, 1, 1, "_CPPv4N2gs13TensorContext6tensorEv", "gs::TensorContext::tensor"], [75, 0, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper"], [75, 2, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper::DATA_T"], [75, 2, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper::FRAG_T"], [75, 1, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper"], [75, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::ctx"], [75, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::frag_wrapper"], [75, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::id"], [75, 1, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays"], [75, 3, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays::comm_spec"], [75, 3, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays::selectors"], [75, 1, 1, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE", "gs::TensorContextWrapper::ToDataframe"], [75, 3, 1, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE", "gs::TensorContextWrapper::ToDataframe::comm_spec"], [75, 1, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray"], [75, 3, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray::axis"], [75, 3, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray::comm_spec"], [75, 1, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe"], [75, 3, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe::client"], [75, 3, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe::comm_spec"], [75, 1, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor"], [75, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::axis"], [75, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::client"], [75, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::comm_spec"], [75, 1, 1, "_CPPv4N2gs20TensorContextWrapper12context_typeEv", "gs::TensorContextWrapper::context_type"], [75, 1, 1, "_CPPv4N2gs20TensorContextWrapper16fragment_wrapperEv", "gs::TensorContextWrapper::fragment_wrapper"], [75, 0, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper"], [75, 2, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper::DATA_T"], [75, 2, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper::FRAG_T"], [75, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays"], [75, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays::comm_spec"], [75, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays::selectors"], [75, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe"], [75, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::comm_spec"], [75, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::range"], [75, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::selectors"], [75, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray"], [75, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::comm_spec"], [75, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::range"], [75, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::selector"], [75, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe"], [75, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::client"], [75, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::comm_spec"], [75, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::range"], [75, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::selectors"], [75, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor"], [75, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::client"], [75, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::comm_spec"], [75, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::range"], [75, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::selector"], [75, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper"], [75, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::ctx"], [75, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::frag_wrapper"], [75, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::id"], [75, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper12context_typeEv", "gs::VertexDataContextWrapper::context_type"], [75, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper16fragment_wrapperEv", "gs::VertexDataContextWrapper::fragment_wrapper"], [75, 0, 1, "_CPPv4I0EN2gs21VertexPropertyContextE", "gs::VertexPropertyContext"], [75, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContextE", "gs::VertexPropertyContext::FRAG_T"], [75, 1, 1, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t", "gs::VertexPropertyContext::VertexPropertyContext"], [75, 3, 1, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t", "gs::VertexPropertyContext::VertexPropertyContext::fragment"], [75, 1, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column"], [75, 3, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column::name"], [75, 3, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column::type"], [75, 1, 1, "_CPPv4N2gs21VertexPropertyContext8fragmentEv", "gs::VertexPropertyContext::fragment"], [75, 5, 1, "_CPPv4N2gs21VertexPropertyContext10fragment_tE", "gs::VertexPropertyContext::fragment_t"], [75, 1, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t", "gs::VertexPropertyContext::get_column"], [75, 1, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE", "gs::VertexPropertyContext::get_column"], [75, 3, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t", "gs::VertexPropertyContext::get_column::index"], [75, 3, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE", "gs::VertexPropertyContext::get_column::name"], [75, 1, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column"], [75, 1, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column"], [75, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column::DATA_T"], [75, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column::DATA_T"], [75, 3, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column::index"], [75, 3, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column::name"], [75, 5, 1, "_CPPv4N2gs21VertexPropertyContext5oid_tE", "gs::VertexPropertyContext::oid_t"], [75, 5, 1, "_CPPv4N2gs21VertexPropertyContext9prop_id_tE", "gs::VertexPropertyContext::prop_id_t"], [75, 1, 1, "_CPPv4N2gs21VertexPropertyContext14properties_mapEv", "gs::VertexPropertyContext::properties_map"], [75, 1, 1, "_CPPv4N2gs21VertexPropertyContext17vertex_propertiesEv", "gs::VertexPropertyContext::vertex_properties"], [75, 5, 1, "_CPPv4N2gs21VertexPropertyContext8vertex_tE", "gs::VertexPropertyContext::vertex_t"], [75, 0, 1, "_CPPv4N2gs3rpc16AnalyticalServerE", "gs::rpc::AnalyticalServer"], [75, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer"], [75, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::dispatcher"], [75, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::host"], [75, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::port"], [75, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer11StartServerEv", "gs::rpc::AnalyticalServer::StartServer"], [75, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer10StopServerEv", "gs::rpc::AnalyticalServer::StopServer"], [0, 8, 1, "", "all_pairs_shortest_path_length"], [0, 8, 1, "", "attribute_assortativity"], [0, 8, 1, "", "average_degree_connectivity"], [0, 8, 1, "", "betweenness_centrality"], [0, 8, 1, "", "bfs"], [0, 8, 1, "", "closeness_centrality"], [0, 8, 1, "id0", "clustering"], [0, 8, 1, "", "degree_assortativity_coefficient"], [0, 8, 1, "", "degree_centrality"], [0, 8, 1, "", "dfs"], [0, 8, 1, "", "eigenvector_centrality"], [0, 8, 1, "", "hits"], [0, 8, 1, "", "katz_centrality"], [0, 8, 1, "", "kkore"], [0, 8, 1, "", "kshell"], [0, 8, 1, "", "lpa"], [0, 8, 1, "id1", "pagerank"], [0, 8, 1, "", "sampling_path"], [0, 8, 1, "", "sssp"], [0, 8, 1, "id2", "voterank"]], "graphscope": [[294, 9, 1, "", "Session"], [81, 12, 1, "", "Vertex"], [76, 8, 1, "", "attribute_assortativity_coefficient"], [76, 8, 1, "", "average_degree_connectivity"], [76, 8, 1, "", "average_shortest_path_length"], [76, 8, 1, "", "avg_clustering"], [76, 8, 1, "", "bfs"], [76, 8, 1, "", "cdlp"], [76, 8, 1, "", "clustering"], [82, 8, 1, "", "declare"], [76, 8, 1, "", "degree_assortativity_coefficient"], [76, 8, 1, "", "degree_centrality"], [76, 8, 1, "", "eigenvector_centrality"], [127, 8, 1, "", "g"], [128, 8, 1, "", "get_default_session"], [129, 8, 1, "", "get_option"], [130, 8, 1, "", "graphlearn"], [131, 8, 1, "", "gremlin"], [132, 8, 1, "", "has_default_session"], [76, 8, 1, "", "hits"], [76, 8, 1, "", "is_simple_path"], [76, 8, 1, "", "k_core"], [76, 8, 1, "", "k_shell"], [76, 8, 1, "", "katz_centrality"], [76, 8, 1, "", "louvain"], [76, 8, 1, "", "lpa"], [76, 8, 1, "", "lpa_u2i"], [76, 8, 1, "", "numeric_assortativity_coefficient"], [76, 8, 1, "", "pagerank"], [76, 8, 1, "", "pagerank_nx"], [133, 14, 1, "", "session"], [134, 8, 1, "", "set_option"], [76, 8, 1, "", "sssp"], [76, 8, 1, "", "triangles"], [76, 8, 1, "", "voterank"], [76, 8, 1, "", "wcc"]], "graphscope.Session": [[294, 10, 1, "", "__enter__"], [294, 10, 1, "", "__exit__"], [294, 10, 1, "", "__init__"], [294, 10, 1, "", "add_lib"], [294, 10, 1, "", "as_default"], [294, 10, 1, "", "close"], [294, 10, 1, "", "connected"], [294, 11, 1, "", "engine_config"], [294, 10, 1, "", "get_config"], [294, 10, 1, "", "graphlearn"], [294, 10, 1, "", "gremlin"], [294, 11, 1, "", "info"], [294, 10, 1, "", "learning"], [294, 10, 1, "", "load_from"], [294, 10, 1, "", "load_from_gar"], [294, 10, 1, "", "run_fetches"]], "graphscope.analytical.app": [[76, 9, 1, "", "JavaApp"]], "graphscope.analytical.app.JavaApp": [[76, 10, 1, "", "__call__"], [76, 10, 1, "", "__init__"], [76, 10, 1, "", "is_compatible"], [76, 10, 1, "", "signature"]], "graphscope.framework.app": [[76, 9, 1, "", "App"], [76, 9, 1, "", "AppAssets"], [76, 9, 1, "", "AppDAGNode"], [83, 8, 1, "", "load_app"]], "graphscope.framework.app.App": [[76, 10, 1, "", "__del__"], [76, 10, 1, "", "__init__"], [76, 11, 1, "", "key"], [76, 11, 1, "", "signature"]], "graphscope.framework.app.AppAssets": [[76, 10, 1, "", "__init__"], [76, 11, 1, "", "algo"], [76, 11, 1, "", "context_type"], [76, 11, 1, "", "gar"], [76, 10, 1, "", "is_compatible"], [76, 11, 1, "", "signature"], [76, 11, 1, "", "type"]], "graphscope.framework.context": [[77, 9, 1, "", "BaseContextDAGNode"], [77, 9, 1, "", "Context"], [77, 9, 1, "", "DynamicVertexDataContext"], [77, 9, 1, "", "LabeledVertexDataContextDAGNode"], [77, 9, 1, "", "LabeledVertexPropertyContextDAGNode"], [77, 9, 1, "", "ResultDAGNode"], [77, 9, 1, "", "TensorContextDAGNode"], [77, 9, 1, "", "VertexDataContextDAGNode"], [77, 9, 1, "", "VertexPropertyContextDAGNode"]], "graphscope.framework.context.BaseContextDAGNode": [[77, 10, 1, "", "to_dataframe"], [77, 10, 1, "", "to_numpy"], [77, 10, 1, "", "to_vineyard_dataframe"], [77, 10, 1, "", "to_vineyard_tensor"]], "graphscope.framework": [[291, 13, 0, "-", "dag_utils"]], "graphscope.framework.dag_utils": [[84, 8, 1, "", "add_column"], [85, 8, 1, "", "add_labels_to_graph"], [86, 8, 1, "", "arrow_to_dynamic"], [87, 8, 1, "", "bind_app"], [88, 8, 1, "", "clear_edges"], [89, 8, 1, "", "clear_graph"], [90, 8, 1, "", "context_to_dataframe"], [91, 8, 1, "", "context_to_numpy"], [92, 8, 1, "", "copy_graph"], [93, 8, 1, "", "create_app"], [94, 8, 1, "", "create_graph"], [95, 8, 1, "", "create_graph_view"], [96, 8, 1, "", "create_loader"], [97, 8, 1, "", "create_subgraph"], [98, 8, 1, "", "create_unload_op"], [99, 8, 1, "", "dynamic_to_arrow"], [100, 8, 1, "", "fetch_gremlin_result"], [101, 8, 1, "", "get_context_data"], [102, 8, 1, "", "graph_to_dataframe"], [103, 8, 1, "", "graph_to_numpy"], [104, 8, 1, "", "gremlin_query"], [105, 8, 1, "", "gremlin_to_subgraph"], [106, 8, 1, "", "modify_edges"], [107, 8, 1, "", "modify_vertices"], [108, 8, 1, "", "output"], [109, 8, 1, "", "project_arrow_property_graph"], [110, 8, 1, "", "project_to_simple"], [111, 8, 1, "", "report_graph"], [112, 8, 1, "", "run_app"], [113, 8, 1, "", "to_data_sink"], [114, 8, 1, "", "to_directed"], [115, 8, 1, "", "to_undirected"], [116, 8, 1, "", "to_vineyard_dataframe"], [117, 8, 1, "", "to_vineyard_tensor"], [118, 8, 1, "", "unload_app"], [119, 8, 1, "", "unload_context"], [120, 8, 1, "", "unload_graph"]], "graphscope.framework.graph": [[149, 9, 1, "", "Graph"], [149, 9, 1, "", "GraphDAGNode"]], "graphscope.framework.graph.Graph": [[149, 10, 1, "", "__init__"], [149, 10, 1, "", "archive"], [149, 10, 1, "", "detach"], [149, 11, 1, "", "key"], [149, 10, 1, "", "load_from"], [149, 10, 1, "", "loaded"], [149, 10, 1, "", "save_to"], [149, 11, 1, "", "schema"], [149, 11, 1, "", "schema_path"], [149, 11, 1, "", "session_id"], [149, 10, 1, "", "to_dataframe"], [149, 10, 1, "", "to_directed"], [149, 10, 1, "", "to_numpy"], [149, 10, 1, "", "to_undirected"], [149, 11, 1, "", "vineyard_id"]], "graphscope.framework.graph.GraphDAGNode": [[149, 10, 1, "", "__init__"], [149, 10, 1, "", "add_column"], [149, 10, 1, "", "add_edges"], [149, 10, 1, "", "add_vertices"], [149, 10, 1, "", "project"]], "graphscope.framework.graph_builder": [[149, 8, 1, "", "load_from"]], "graphscope.framework.loader": [[149, 9, 1, "", "Loader"]], "graphscope.framework.loader.Loader": [[149, 10, 1, "", "__init__"]], "graphscope.framework.operation": [[291, 9, 1, "", "Operation"]], "graphscope.framework.operation.Operation": [[121, 10, 1, "", "__init__"], [122, 10, 1, "", "as_op_def"], [123, 10, 1, "", "eval"], [124, 11, 1, "", "evaluated"], [125, 11, 1, "", "key"], [126, 11, 1, "", "signature"]], "graphscope.interactive.query": [[150, 9, 1, "", "InteractiveQuery"]], "graphscope.interactive.query.InteractiveQuery": [[150, 10, 1, "", "__init__"], [150, 10, 1, "", "close"], [150, 10, 1, "", "execute"], [150, 11, 1, "", "graph_url"], [150, 11, 1, "", "object_id"], [150, 11, 1, "", "session"], [150, 11, 1, "", "session_id"], [150, 10, 1, "", "subgraph"], [150, 10, 1, "", "submit"], [150, 10, 1, "", "traversal_source"]], "graphscope.learning.graph": [[151, 9, 1, "", "Graph"]], "graphscope.learning.graph.Graph": [[151, 10, 1, "", "E"], [151, 10, 1, "", "V"], [151, 10, 1, "", "__init__"], [151, 10, 1, "", "get_handle"]], "graphscope.nx": [[287, 9, 1, "", "DiGraph"], [287, 9, 1, "", "Graph"], [289, 8, 1, "", "read_adjlist"], [289, 8, 1, "", "read_edgelist"]], "graphscope.nx.DiGraph": [[287, 10, 1, "", "__contains__"], [287, 10, 1, "", "__getitem__"], [287, 10, 1, "", "__init__"], [287, 10, 1, "", "__iter__"], [287, 10, 1, "", "__len__"], [287, 10, 1, "", "add_edge"], [287, 10, 1, "", "add_edges_from"], [287, 10, 1, "", "add_node"], [287, 10, 1, "", "add_nodes_from"], [287, 10, 1, "", "add_weighted_edges_from"], [287, 11, 1, "", "adj"], [287, 10, 1, "", "adjacency"], [287, 14, 1, "", "adjlist_inner_dict_factory"], [287, 14, 1, "", "adjlist_outer_dict_factory"], [287, 10, 1, "", "clear"], [287, 10, 1, "", "clear_edges"], [287, 10, 1, "", "copy"], [287, 11, 1, "", "degree"], [287, 14, 1, "", "edge_attr_dict_factory"], [287, 10, 1, "", "edge_subgraph"], [287, 11, 1, "", "edges"], [287, 10, 1, "", "get_edge_data"], [287, 14, 1, "", "graph_attr_dict_factory"], [287, 14, 1, "", "graph_cache_factory"], [287, 11, 1, "", "graph_type"], [287, 10, 1, "", "has_edge"], [287, 10, 1, "", "has_node"], [287, 10, 1, "", "has_predecessor"], [287, 10, 1, "", "has_successor"], [287, 11, 1, "", "in_degree"], [287, 11, 1, "", "in_edges"], [287, 10, 1, "", "is_directed"], [287, 10, 1, "", "is_multigraph"], [287, 11, 1, "", "key"], [287, 11, 1, "", "name"], [287, 10, 1, "", "nbunch_iter"], [287, 10, 1, "", "neighbors"], [287, 14, 1, "", "node_attr_dict_factory"], [287, 14, 1, "", "node_dict_factory"], [287, 11, 1, "", "nodes"], [287, 10, 1, "", "number_of_edges"], [287, 10, 1, "", "number_of_nodes"], [287, 11, 1, "", "op"], [287, 10, 1, "", "order"], [287, 11, 1, "", "out_degree"], [287, 11, 1, "", "out_edges"], [287, 11, 1, "", "pred"], [287, 10, 1, "", "predecessors"], [287, 10, 1, "", "remove_edge"], [287, 10, 1, "", "remove_edges_from"], [287, 10, 1, "", "remove_node"], [287, 10, 1, "", "remove_nodes_from"], [287, 10, 1, "", "reverse"], [287, 11, 1, "", "schema"], [287, 11, 1, "", "session"], [287, 11, 1, "", "session_id"], [287, 10, 1, "", "set_edge_data"], [287, 10, 1, "", "set_node_data"], [287, 11, 1, "", "signature"], [287, 10, 1, "", "size"], [287, 10, 1, "", "subgraph"], [287, 11, 1, "", "succ"], [287, 10, 1, "", "successors"], [287, 10, 1, "", "to_directed"], [287, 10, 1, "", "to_undirected"], [287, 10, 1, "", "to_undirected_class"], [287, 10, 1, "", "update"]], "graphscope.nx.Graph": [[287, 10, 1, "", "__contains__"], [287, 10, 1, "", "__getitem__"], [290, 8, 1, "", "__init__"], [287, 10, 1, "", "__iter__"], [287, 10, 1, "", "__len__"], [290, 8, 1, "", "_convert_arrow_to_dynamic"], [287, 10, 1, "", "add_edge"], [287, 10, 1, "", "add_edges_from"], [287, 10, 1, "", "add_node"], [287, 10, 1, "", "add_nodes_from"], [287, 10, 1, "", "add_weighted_edges_from"], [287, 11, 1, "", "adj"], [287, 10, 1, "", "adjacency"], [287, 14, 1, "", "adjlist_inner_dict_factory"], [287, 14, 1, "", "adjlist_outer_dict_factory"], [287, 10, 1, "", "clear"], [287, 10, 1, "", "clear_edges"], [287, 10, 1, "", "copy"], [287, 11, 1, "", "degree"], [287, 14, 1, "", "edge_attr_dict_factory"], [287, 10, 1, "", "edge_subgraph"], [287, 11, 1, "", "edges"], [287, 10, 1, "", "get_edge_data"], [287, 14, 1, "", "graph_attr_dict_factory"], [287, 14, 1, "", "graph_cache_factory"], [287, 11, 1, "", "graph_type"], [287, 10, 1, "", "has_edge"], [287, 10, 1, "", "has_node"], [287, 10, 1, "", "is_directed"], [287, 10, 1, "", "is_multigraph"], [287, 11, 1, "", "key"], [287, 11, 1, "", "name"], [287, 10, 1, "", "nbunch_iter"], [287, 10, 1, "", "neighbors"], [287, 14, 1, "", "node_attr_dict_factory"], [287, 14, 1, "", "node_dict_factory"], [287, 11, 1, "", "nodes"], [287, 10, 1, "", "number_of_edges"], [287, 10, 1, "", "number_of_nodes"], [287, 11, 1, "", "op"], [287, 10, 1, "", "order"], [287, 10, 1, "", "remove_edge"], [287, 10, 1, "", "remove_edges_from"], [287, 10, 1, "", "remove_node"], [287, 10, 1, "", "remove_nodes_from"], [287, 11, 1, "", "schema"], [287, 11, 1, "", "session"], [287, 11, 1, "", "session_id"], [287, 10, 1, "", "set_edge_data"], [287, 10, 1, "", "set_node_data"], [287, 11, 1, "", "signature"], [287, 10, 1, "", "size"], [287, 10, 1, "", "subgraph"], [287, 10, 1, "", "to_directed"], [287, 10, 1, "", "to_undirected"], [287, 10, 1, "", "to_undirected_class"], [287, 10, 1, "", "update"]], "graphscope.nx.builtin": [[152, 8, 1, "", "average_clustering"], [152, 8, 1, "", "average_shortest_path_length"], [152, 8, 1, "", "bfs_edges"], [152, 8, 1, "", "clustering"], [152, 8, 1, "", "degree_centrality"], [152, 8, 1, "", "eigenvector_centrality"], [152, 8, 1, "", "has_path"], [152, 8, 1, "", "hits"], [152, 8, 1, "", "in_degree_centrality"], [152, 8, 1, "", "k_core"], [152, 8, 1, "", "katz_centrality"], [152, 8, 1, "", "out_degree_centrality"], [152, 8, 1, "", "triangles"]], "graphscope.nx.classes": [[153, 13, 0, "-", "function"]], "graphscope.nx.classes.function": [[154, 8, 1, "", "add_cycle"], [155, 8, 1, "", "add_path"], [156, 8, 1, "", "add_star"], [157, 8, 1, "", "all_neighbors"], [158, 8, 1, "", "common_neighbors"], [159, 8, 1, "", "create_empty_copy"], [160, 8, 1, "", "degree"], [161, 8, 1, "", "degree_histogram"], [162, 8, 1, "", "density"], [163, 8, 1, "", "edge_subgraph"], [164, 8, 1, "", "edges"], [165, 8, 1, "", "freeze"], [166, 8, 1, "", "induced_subgraph"], [167, 8, 1, "", "info"], [168, 8, 1, "", "is_directed"], [169, 8, 1, "", "is_empty"], [170, 8, 1, "", "is_frozen"], [171, 8, 1, "", "is_negatively_weighted"], [172, 8, 1, "", "is_weighted"], [173, 8, 1, "", "neighbors"], [174, 8, 1, "", "nodes"], [175, 8, 1, "", "nodes_with_selfloops"], [176, 8, 1, "", "non_edges"], [177, 8, 1, "", "non_neighbors"], [178, 8, 1, "", "number_of_edges"], [179, 8, 1, "", "number_of_nodes"], [180, 8, 1, "", "number_of_selfloops"], [181, 8, 1, "", "selfloop_edges"], [182, 8, 1, "", "subgraph"], [183, 8, 1, "", "to_directed"], [184, 8, 1, "", "to_undirected"]], "graphscope.nx.generators": [[286, 13, 0, "-", "atlas"], [286, 13, 0, "-", "classic"], [286, 13, 0, "-", "community"], [286, 13, 0, "-", "degree_seq"], [286, 13, 0, "-", "directed"], [286, 13, 0, "-", "duplication"], [286, 13, 0, "-", "ego"], [286, 13, 0, "-", "expanders"], [286, 13, 0, "-", "geometric"], [286, 13, 0, "-", "harary_graph"], [286, 13, 0, "-", "intersection"], [286, 13, 0, "-", "joint_degree_seq"], [286, 13, 0, "-", "mycielski"], [286, 13, 0, "-", "nonisomorphic_trees"], [286, 13, 0, "-", "small"], [286, 13, 0, "-", "social"], [286, 13, 0, "-", "spectral_graph_forge"], [286, 13, 0, "-", "sudoku"], [286, 13, 0, "-", "trees"], [286, 13, 0, "-", "triads"]], "graphscope.nx.generators.atlas": [[185, 8, 1, "", "graph_atlas"], [186, 8, 1, "", "graph_atlas_g"]], "graphscope.nx.generators.classic": [[187, 8, 1, "", "balanced_tree"], [188, 8, 1, "", "barbell_graph"], [189, 8, 1, "", "binomial_tree"], [190, 8, 1, "", "circulant_graph"], [191, 8, 1, "", "circular_ladder_graph"], [192, 8, 1, "", "complete_graph"], [193, 8, 1, "", "complete_multipartite_graph"], [194, 8, 1, "", "cycle_graph"], [195, 8, 1, "", "dorogovtsev_goltsev_mendes_graph"], [196, 8, 1, "", "empty_graph"], [197, 8, 1, "", "full_rary_tree"], [198, 8, 1, "", "ladder_graph"], [199, 8, 1, "", "lollipop_graph"], [200, 8, 1, "", "null_graph"], [201, 8, 1, "", "path_graph"], [202, 8, 1, "", "star_graph"], [203, 8, 1, "", "trivial_graph"], [204, 8, 1, "", "turan_graph"], [205, 8, 1, "", "wheel_graph"]], "graphscope.nx.generators.community": [[206, 8, 1, "", "LFR_benchmark_graph"], [207, 8, 1, "", "caveman_graph"], [208, 8, 1, "", "connected_caveman_graph"], [209, 8, 1, "", "gaussian_random_partition_graph"], [210, 8, 1, "", "planted_partition_graph"], [211, 8, 1, "", "random_partition_graph"], [212, 8, 1, "", "relaxed_caveman_graph"], [213, 8, 1, "", "ring_of_cliques"], [214, 8, 1, "", "stochastic_block_model"], [215, 8, 1, "", "windmill_graph"]], "graphscope.nx.generators.degree_seq": [[216, 8, 1, "", "configuration_model"], [217, 8, 1, "", "degree_sequence_tree"], [218, 8, 1, "", "directed_configuration_model"], [219, 8, 1, "", "directed_havel_hakimi_graph"], [220, 8, 1, "", "expected_degree_graph"], [221, 8, 1, "", "havel_hakimi_graph"], [222, 8, 1, "", "random_degree_sequence_graph"]], "graphscope.nx.generators.directed": [[223, 8, 1, "", "gn_graph"], [224, 8, 1, "", "gnc_graph"], [225, 8, 1, "", "gnr_graph"], [226, 8, 1, "", "random_k_out_graph"], [227, 8, 1, "", "scale_free_graph"]], "graphscope.nx.generators.duplication": [[228, 8, 1, "", "duplication_divergence_graph"], [229, 8, 1, "", "partial_duplication_graph"]], "graphscope.nx.generators.ego": [[230, 8, 1, "", "ego_graph"]], "graphscope.nx.generators.expanders": [[231, 8, 1, "", "chordal_cycle_graph"], [232, 8, 1, "", "margulis_gabber_galil_graph"], [233, 8, 1, "", "paley_graph"]], "graphscope.nx.generators.geometric": [[234, 8, 1, "", "geographical_threshold_graph"], [235, 8, 1, "", "random_geometric_graph"], [236, 8, 1, "", "soft_random_geometric_graph"], [237, 8, 1, "", "thresholded_random_geometric_graph"], [238, 8, 1, "", "waxman_graph"]], "graphscope.nx.generators.harary_graph": [[239, 8, 1, "", "hkn_harary_graph"], [240, 8, 1, "", "hnm_harary_graph"]], "graphscope.nx.generators.intersection": [[241, 8, 1, "", "general_random_intersection_graph"], [242, 8, 1, "", "k_random_intersection_graph"], [243, 8, 1, "", "uniform_random_intersection_graph"]], "graphscope.nx.generators.joint_degree_seq": [[244, 8, 1, "", "directed_joint_degree_graph"], [245, 8, 1, "", "is_valid_directed_joint_degree"], [246, 8, 1, "", "is_valid_joint_degree"], [247, 8, 1, "", "joint_degree_graph"]], "graphscope.nx.generators.mycielski": [[248, 8, 1, "", "mycielski_graph"], [249, 8, 1, "", "mycielskian"]], "graphscope.nx.generators.nonisomorphic_trees": [[250, 8, 1, "", "nonisomorphic_trees"], [251, 8, 1, "", "number_of_nonisomorphic_trees"]], "graphscope.nx.generators.small": [[252, 8, 1, "", "LCF_graph"], [253, 8, 1, "", "bull_graph"], [254, 8, 1, "", "chvatal_graph"], [255, 8, 1, "", "cubical_graph"], [256, 8, 1, "", "desargues_graph"], [257, 8, 1, "", "diamond_graph"], [258, 8, 1, "", "dodecahedral_graph"], [259, 8, 1, "", "frucht_graph"], [260, 8, 1, "", "heawood_graph"], [261, 8, 1, "", "house_graph"], [262, 8, 1, "", "house_x_graph"], [263, 8, 1, "", "icosahedral_graph"], [264, 8, 1, "", "krackhardt_kite_graph"], [265, 8, 1, "", "make_small_graph"], [266, 8, 1, "", "moebius_kantor_graph"], [267, 8, 1, "", "octahedral_graph"], [268, 8, 1, "", "pappus_graph"], [269, 8, 1, "", "petersen_graph"], [270, 8, 1, "", "sedgewick_maze_graph"], [271, 8, 1, "", "tetrahedral_graph"], [272, 8, 1, "", "truncated_cube_graph"], [273, 8, 1, "", "truncated_tetrahedron_graph"], [274, 8, 1, "", "tutte_graph"]], "graphscope.nx.generators.social": [[275, 8, 1, "", "davis_southern_women_graph"], [276, 8, 1, "", "florentine_families_graph"], [277, 8, 1, "", "karate_club_graph"], [278, 8, 1, "", "les_miserables_graph"]], "graphscope.nx.generators.spectral_graph_forge": [[279, 8, 1, "", "spectral_graph_forge"]], "graphscope.nx.generators.sudoku": [[280, 8, 1, "", "sudoku_graph"]], "graphscope.nx.generators.trees": [[281, 8, 1, "", "prefix_tree"], [282, 8, 1, "", "random_tree"]], "graphscope.nx.generators.triads": [[283, 8, 1, "", "triad_graph"]], "networkx.generators": [[286, 13, 0, "-", "internet_as_graphs"], [286, 13, 0, "-", "stochastic"]], "networkx.generators.internet_as_graphs": [[284, 8, 1, "", "random_internet_as_graph"]], "networkx.generators.stochastic": [[285, 8, 1, "", "stochastic_graph"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:function", "2": "cpp:templateParam", "3": "cpp:functionParam", "4": "cpp:member", "5": "cpp:type", "6": "cpp:enum", "7": "cpp:enumerator", "8": "py:function", "9": "py:class", "10": "py:method", "11": "py:property", "12": "py:data", "13": "py:module", "14": "py:attribute"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "function", "C++ function"], "2": ["cpp", "templateParam", "C++ template parameter"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "member", "C++ member"], "5": ["cpp", "type", "C++ type"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "enumerator", "C++ enumerator"], "8": ["py", "function", "Python function"], "9": ["py", "class", "Python class"], "10": ["py", "method", "Python method"], "11": ["py", "property", "Python property"], "12": ["py", "data", "Python data"], "13": ["py", "module", "Python module"], "14": ["py", "attribute", "Python attribute"]}, "titleterms": {"built": [0, 6, 57, 147, 300, 302], "algorithm": [0, 1, 2, 6, 9, 11, 15, 16, 17, 18, 19, 21, 22, 23, 32, 57, 135, 152, 302, 304], "all": [0, 30, 31, 34, 38], "pair": 0, "shortest": 0, "path": [0, 50, 53, 55], "length": 0, "attribut": [0, 20, 136, 153], "assort": 0, "averag": 0, "degre": [0, 160, 286], "connect": [0, 28, 29, 54, 300], "between": [0, 50, 296], "central": 0, "breadth": 0, "first": [0, 47], "search": 0, "close": 0, "cluster": [0, 27, 29, 38, 47, 63], "coeffici": 0, "depth": 0, "eigenvector": 0, "hyperlink": 0, "induc": [0, 20], "topic": [0, 44], "katz": 0, "k": 0, "core": 0, "shell": 0, "label": [0, 53, 55, 136, 299, 320], "propag": 0, "pagerank": 0, "sampl": [0, 61, 70, 135, 139, 141, 144, 147], "singl": [0, 43], "sourc": [0, 30, 31, 53, 79, 136, 142, 145, 146], "voterank": 0, "custom": [1, 23, 27, 300], "aggreg": [1, 50, 53, 55, 58], "deploy": [2, 27, 36, 46, 47], "gae": [2, 32, 67, 304, 308], "prerequisit": [2, 16, 27, 28, 29, 31, 47, 300], "onli": [2, 35], "python": [2, 15, 18, 30, 33, 34, 54, 57, 74, 292, 300, 304, 312], "sdk": [2, 16, 32, 78], "helm": [2, 28], "execut": [2, 32, 65], "graph": [2, 9, 11, 19, 20, 29, 32, 42, 43, 44, 46, 54, 55, 57, 58, 61, 63, 64, 65, 66, 68, 69, 70, 72, 73, 135, 137, 138, 139, 140, 141, 143, 147, 149, 151, 153, 286, 287, 289, 290, 296, 298, 299, 300, 301, 302, 308], "analyt": [2, 3, 4, 7, 10, 24, 30, 42, 46, 57, 65, 66, 68, 73, 75, 76, 308], "uninstal": [2, 28, 300], "design": [3, 9, 32, 48, 57, 58, 65, 145, 299], "engin": [3, 4, 7, 9, 10, 12, 24, 30, 34, 46, 51, 57, 59, 60, 64, 65, 73, 75, 299, 308], "dev": [4, 31, 34, 38, 49, 59], "test": [4, 34, 35, 38, 49, 59, 142], "setup": [4, 31], "understand": 4, "codebas": 4, "make": [4, 20], "modif": 4, "build": [4, 31, 34, 38, 49, 59, 79, 135, 142, 300, 320], "faq": [5, 50], "program": [6, 12, 14, 32, 43, 145], "model": [6, 12, 14, 15, 16, 17, 24, 32, 58, 63, 64, 67, 70, 135, 143, 147, 299, 300], "flash": [6, 15, 67], "motiv": [6, 9, 48, 65, 299], "The": [6, 19, 48, 298], "overview": [6, 9, 12, 46, 143, 300], "api": [6, 9, 12, 19, 20, 75, 78, 136, 147, 288, 292, 316], "strong": 6, "express": [6, 53, 55], "implement": [6, 15, 17, 35, 145, 299], "architectur": [6, 12, 48, 296], "optim": [6, 50], "get": [7, 35, 41, 51, 60, 66, 142, 297], "start": [7, 41, 49, 51, 55, 60, 66, 147, 297], "instal": [7, 27, 28, 29, 30, 31, 34, 35, 46, 51, 59, 60, 142, 300], "run": [7, 15, 16, 17, 18, 21, 22, 23, 35, 38, 43, 51, 60, 142], "graphscop": [7, 10, 15, 16, 17, 19, 20, 22, 23, 26, 27, 28, 29, 30, 31, 34, 38, 43, 46, 51, 60, 65, 68, 70, 71, 72, 75, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 296, 298, 308, 312, 316, 317], "local": [7, 31, 34, 36, 38, 49, 51, 53, 59, 60, 64, 299, 300], "what": [7, 14, 50, 51, 60, 68, 70, 71], "": [7, 50, 51, 60, 75], "next": [7, 51, 60, 71], "guid": [8, 33, 34, 52, 62, 300, 304, 305], "exampl": [8, 17, 22, 23, 52, 62, 304, 305], "ingress": [9, 67], "increment": [9, 12], "messag": [9, 58], "driven": 9, "differenti": 9, "flexibl": [9, 32], "memoiz": 9, "distribut": [9, 43, 137, 145], "runtim": [9, 32, 145], "kei": [10, 50, 57, 125], "concept": [10, 299], "loadstrategi": 10, "onlyout": 10, "onlyin": 10, "bothinout": 10, "partitionstrategi": 10, "edg": [10, 20, 55, 153, 164, 289, 299, 320], "cut": [10, 299], "vertex": [10, 24, 55, 81, 293, 299, 320], "vertic": [10, 55, 320], "outervertex": 10, "innervertex": 10, "innervertexwithoutgoingedg": 10, "innervertexwithincomingedg": 10, "messagemanag": 10, "messagestrategi": 10, "alongoutgoingedgetooutervertex": 10, "alongincomingedgetooutervertex": 10, "alongedgetooutervertex": 10, "synconoutervertexastarget": 10, "synconoutervertexassourc": 10, "synconoutervertex": 10, "networkx": [11, 19, 284, 285, 288], "compat": [11, 54], "convert": 11, "nx": [11, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283], "support": [11, 23, 53, 57], "oper": [11, 20, 55, 121, 122, 123, 124, 125, 126, 145, 291], "storag": [12, 32, 46, 65, 296, 299], "layer": [12, 65], "grape": [12, 17, 67, 79], "ffi": 12, "comput": [12, 43, 46, 65, 299], "applic": [12, 15, 22, 23, 55, 65, 302], "perform": [13, 19, 32, 50, 57, 73], "tune": 13, "pie": [14, 16, 17, 18, 67, 78, 310], "i": [14, 53, 68, 70, 71], "workflow": [14, 57, 296], "tutori": [15, 16, 17, 18, 19, 20, 21, 22, 23, 55, 56, 63, 64, 74], "develop": [15, 16, 17, 18, 22, 23, 34, 46, 135, 147, 300, 304], "your": [15, 16, 17, 18, 22, 35, 47, 64, 135, 145, 304], "c": [15, 16, 33, 304], "defin": [15, 16, 44, 64, 145, 296], "A": [15, 46], "function": [15, 18, 76, 78, 135, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 294], "integr": [15, 35, 43, 146], "client": [15, 27, 29, 34, 137], "step": [16, 53, 55, 70], "1": [16, 39, 136, 137, 139, 147], "context": [16, 75, 77, 293], "class": [16, 145, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184], "2": [16, 39, 136, 137, 147], "3": [16, 39, 136, 137, 147], "packag": [16, 30, 31, 142], "4": [16, 39, 136, 147], "gar": 16, "file": [16, 27, 30, 146, 298], "github": [16, 17, 25, 35], "templat": [16, 17], "java": [17, 33, 54, 56, 80, 300, 304], "jar": 17, "own": [17, 18, 22, 47, 135, 145], "prepar": [17, 27, 29, 38, 147], "jdk": [17, 79], "submit": [17, 22, 23, 35, 37], "javasdk": 17, "write": 18, "pregel": [18, 24, 78, 310], "us": [18, 20, 27, 31, 47, 50, 57, 71, 142, 145, 147, 293, 296, 300, 301], "math": [18, 310], "h": [18, 310], "netowrkx": [19, 20], "how": [19, 35, 37, 38, 44, 45, 50, 59, 135, 145, 147, 308], "doe": 19, "analysi": [19, 65], "from": [19, 20, 30, 31, 46, 55, 79, 142, 296, 300], "displai": 19, "speed": 19, "up": [19, 27, 29], "over": 19, "creat": [20, 35, 63], "an": [20, 145], "empti": 20, "ad": 20, "node": [20, 58, 63, 64, 153, 174, 300], "examin": 20, "element": 20, "remov": [20, 47], "constructor": 20, "access": 20, "neighbor": [20, 173], "deepcopi": 20, "subgraph": [20, 50, 53, 58, 61, 70, 182], "edge_subgraph": [20, 163], "copi": [20, 30], "direct": [20, 223, 224, 225, 226, 227, 286], "analyz": 20, "object": [20, 76, 77, 137, 149, 291, 294], "transform": [20, 290], "builtin": [21, 76, 152, 291], "giraph": 22, "try": [22, 147], "some": [22, 55], "app": [22, 23, 75, 76, 83], "graphx": 23, "deploi": [23, 26, 27, 28, 29, 47, 300], "along": 23, "spark": 23, "includ": 23, "depend": [23, 30, 31, 142], "toward": 23, "centric": [24, 58], "ga": 24, "simul": 24, "contact": 25, "u": 25, "slack": [25, 35], "discuss": [25, 35], "cloud": [26, 57, 136], "k8": [27, 63, 308], "kubernet": [27, 29, 36, 38, 63, 312, 317], "launch": [27, 64], "default": 27, "paramet": 27, "frequent": [27, 40], "imag": [27, 31, 38, 142, 300], "uri": 27, "specifi": 27, "number": 27, "worker": [27, 75], "provid": 27, "kubeconfig": 27, "other": [27, 47, 146], "than": 27, "mount": 27, "volum": 27, "inspect": 27, "clean": [27, 29], "releas": [28, 35], "configur": [28, 47, 148, 300], "offlin": [28, 30, 300], "depoli": 29, "exist": 29, "vineyard": [29, 49, 67, 301], "load": [29, 44, 55, 63, 64, 296, 298, 300, 301], "dataset": [29, 300], "anoth": 29, "session": [29, 63, 133, 294], "environ": [30, 31, 34, 38, 49, 59], "wheel": [30, 142, 312], "download": 30, "destin": 30, "extract": [30, 55], "them": 30, "locat": 30, "basic": [30, 55, 136], "gcc": 30, "g": [30, 127, 307], "third": 30, "parti": 30, "stabl": 31, "version": 31, "preview": 31, "linux": [31, 312], "maco": [31, 312], "framework": [32, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "multi": [32, 293], "languag": [32, 141], "high": [32, 57, 65], "librari": [32, 57, 142], "code": [33, 35, 145, 306], "style": [33, 35, 288, 299], "rust": 33, "script": 33, "linter": 33, "checker": 33, "contain": [34, 59], "dep": [34, 59], "target": [34, 38], "compon": 34, "individu": 34, "coordin": 34, "contribut": 35, "conduct": 35, "commun": [35, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 286], "report": [35, 45], "bug": [35, 45], "request": [35, 37], "featur": [35, 57, 298], "improv": 35, "document": 35, "chang": 35, "pre": 35, "commit": 35, "minor": 35, "fix": 35, "fork": 35, "branch": [35, 53], "suit": 35, "format": [35, 136, 298, 300], "right": 35, "keep": 35, "pull": [35, 37], "updat": 35, "merg": 35, "pr": 35, "maintain": 35, "ship": 35, "review": 35, "continu": 35, "debug": 36, "command": [36, 307], "techniqu": 36, "introduct": [39, 53, 139], "arrowfrag": 39, "0": 39, "\u672f\u8bed": 39, "\u8f7d\u56fe": [39, 320], "\u521d\u59cb\u5316partiton": 39, "\u6784\u5efa\u539f\u59cbarrow": 39, "tabl": [39, 46, 136], "shuffl": 39, "vtabl": 39, "\u6784\u5efavertex": 39, "map": [39, 296], "basicarrowvertexmapbuild": 39, "5": [39, 136], "\u6784\u5efafragment\u51c6\u5907": 39, "\u5904\u7406edg": 39, "basicevfragmentload": 39, "fragmentbuilder\u6570\u636e\u521d\u59cb\u5316": 39, "basicarrowfragmentbuild": 39, "6": 39, "fragment\u6784\u5efa": 39, "\u8bbf\u95eefragment": 39, "\u8bbf\u95ee\u9876\u70b9": 39, "\u8bbf\u95ee\u5185\u90e8\u70b9": 39, "\u8303\u56f4\u5916\u90e8\u70b9": 39, "\u8bbf\u95ee\u5168\u90e8\u70b9": 39, "\u8bbf\u95ee\u9876\u70b9\u6570\u636e": 39, "\u8bbf\u95ee\u8fb9": 39, "\u8bbf\u95ee\u51fa\u8fb9": 39, "\u8bbf\u95ee\u5165\u8fb9": 39, "\u8bbf\u95ee\u8fb9\u4e0a\u7684\u6570\u636e": 39, "ask": 40, "question": 40, "gle": [41, 58, 305, 308], "workload": [42, 68, 69, 70, 72, 296], "interact": [42, 46, 51, 66, 69, 73, 150, 308], "queri": [42, 48, 50, 55, 65, 66, 138, 150, 300], "learn": [42, 46, 58, 59, 60, 64, 65, 66, 70, 72, 135, 143, 151, 308], "data": [43, 47, 50, 136, 143, 146, 147, 298, 300], "scientist": 43, "challeng": [43, 68, 70], "handl": [43, 72], "solut": 43, "machin": [43, 64], "pydata": 43, "ecosystem": [43, 54], "schema": 44, "advanc": 44, "tip": 44, "reduc": 44, "memori": [44, 301], "consumpt": 44, "One": [46, 66, 293], "stop": [46, 66], "larg": [46, 68, 70], "scale": [46, 303], "system": [46, 72, 146, 148], "alibaba": [46, 136], "troubleshoot": [46, 300], "util": [46, 307], "refer": [46, 75, 80, 292, 299], "indic": 46, "standalon": 47, "gie": [47, 48, 49, 50, 308], "servic": [47, 49], "process": [48, 64, 66, 72, 135, 300], "store": [49, 300], "manual": 49, "gremlin": [50, 53, 54, 55, 57, 69, 131, 318], "usag": 50, "differ": [50, 293], "inner": 50, "id": [50, 53, 55, 299], "properti": [50, 53, 54, 55, 299, 320], "expand": [50, 53, 231, 232, 233, 286], "filter": [50, 53, 55], "like": 50, "sql": 50, "group": [50, 53, 55], "multipl": [50, 55], "valu": [50, 53, 55], "appropri": 50, "index": 50, "standard": [53, 298], "v": 53, "e": 53, "out": [53, 55, 147], "inE": [53, 55], "both": [53, 55], "outv": [53, 55], "inv": [53, 55], "otherv": [53, 55], "bothv": [53, 55], "hasid": [53, 55], "haslabel": 53, "ha": 53, "hasnot": 53, "where": [53, 55], "travers": [53, 55, 57, 61, 69, 140], "predic": 53, "dedup": [53, 55], "project": [53, 55, 79], "constant": [53, 55], "valuemap": [53, 55], "select": [53, 55], "count": 53, "fold": [53, 55], "sum": [53, 55], "min": [53, 55], "max": [53, 55], "mean": [53, 55], "groupcount": [53, 55], "order": [53, 55, 299], "statist": 53, "limit": [53, 55, 71, 300], "coin": 53, "union": 53, "match": [53, 55, 69], "syntact": [53, 55], "sugar": [53, 55], "pathexpand": 53, "endv": 53, "To": 53, "ident": 53, "elementmap": 53, "unfold": 53, "Will": 53, "Not": 53, "repeat": 53, "sideeffect": 53, "apach": [54, 318], "tinkerpop": [54, 69, 318], "within": 54, "consol": [54, 318], "constraint": 54, "ldbc": 55, "retriev": [55, 299], "appli": [55, 70], "real": 55, "expans": 55, "mani": 55, "point": 55, "after": 55, "pattern": [55, 69], "relat": [55, 296], "syntax": 55, "complex": 55, "bi2": 55, "bi3": 55, "bi4": 55, "left": 55, "part": 55, "bi11": 55, "bi14": 55, "user": [56, 74, 136, 304, 305], "eas": 57, "interfac": [57, 145, 146, 299], "cypher": 57, "extens": 57, "gnn": [57, 63, 70, 147, 314], "train": [57, 63, 64, 70, 135], "infer": 57, "nativ": 57, "across": 57, "orchestr": 57, "paradigm": [58, 70], "egograph": 58, "base": 58, "pass": 58, "pipelin": 58, "docker": [59, 142, 312], "neighborhood": 61, "neg": [61, 144], "gsl": [61, 141], "classif": [63, 64], "neural": [63, 70], "network": [63, 70, 286], "egographsag": 64, "unifi": [65, 299], "platform": 65, "disaggreg": 65, "divers": 65, "bi": 65, "qp": 65, "task": 66, "quick": [66, 147], "glossari": 67, "gart": [67, 296], "grin": [67, 299], "graphar": [67, 298], "groot": [67, 300, 308], "gum": 67, "maxgraph": 67, "deprec": 67, "v6d": 67, "gaia": 67, "pegasu": 67, "can": [68, 70], "do": [68, 70], "typic": 70, "introduc": 71, "why": 71, "ar": 71, "case": 71, "posit": 72, "compar": 72, "databas": 72, "variou": 72, "type": [72, 78, 136, 287], "benchmark": 73, "result": [73, 293], "gpu": 73, "reproduc": 73, "fragment": 75, "appasset": 76, "javaapp": 76, "cython": 78, "about": 79, "structur": [79, 153], "javadoc": 80, "declar": 82, "load_app": 83, "dag_util": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120], "add_column": 84, "add_labels_to_graph": 85, "arrow_to_dynam": 86, "bind_app": 87, "clear_edg": 88, "clear_graph": 89, "context_to_datafram": 90, "context_to_numpi": 91, "copy_graph": 92, "create_app": 93, "create_graph": 94, "create_graph_view": 95, "create_load": 96, "create_subgraph": 97, "create_unload_op": 98, "dynamic_to_arrow": 99, "fetch_gremlin_result": 100, "get_context_data": 101, "graph_to_datafram": 102, "graph_to_numpi": 103, "gremlin_queri": 104, "gremlin_to_subgraph": 105, "modify_edg": 106, "modify_vertic": 107, "output": 108, "project_arrow_property_graph": 109, "project_to_simpl": 110, "report_graph": 111, "run_app": 112, "to_data_sink": 113, "to_direct": [114, 183], "to_undirect": [115, 184], "to_vineyard_datafram": 116, "to_vineyard_tensor": 117, "unload_app": 118, "unload_context": 119, "unload_graph": 120, "__init__": 121, "as_op_def": 122, "eval": 123, "evalu": 124, "signatur": 126, "get_default_sess": 128, "get_opt": 129, "graphlearn": 130, "has_default_sess": 132, "set_opt": 134, "encod": [135, 143], "loss": 135, "weight": 136, "put": 136, "togeth": 136, "maxcomput": 136, "describ": 137, "topologi": 137, "stand": 137, "alon": 137, "mode": 137, "server": 137, "pip": 142, "tensorflow": 142, "git": 142, "compil": [142, 145], "new": 145, "clone": 145, "regist": [145, 146], "bytestreamaccessfil": 146, "structuredaccessfil": 146, "writablefil": 146, "scheme": 146, "gl": 147, "construct": 147, "loader": [149, 320], "self": 153, "loop": 153, "freez": [153, 165], "add_cycl": 154, "add_path": 155, "add_star": 156, "all_neighbor": 157, "common_neighbor": 158, "create_empty_copi": 159, "degree_histogram": 161, "densiti": 162, "induced_subgraph": 166, "info": 167, "is_direct": 168, "is_empti": 169, "is_frozen": 170, "is_negatively_weight": 171, "is_weight": 172, "nodes_with_selfloop": 175, "non_edg": 176, "non_neighbor": 177, "number_of_edg": 178, "number_of_nod": 179, "number_of_selfloop": 180, "selfloop_edg": 181, "gener": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "atla": [185, 186, 286], "graph_atla": 185, "graph_atlas_g": 186, "classic": [187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 286], "balanced_tre": 187, "barbell_graph": 188, "binomial_tre": 189, "circulant_graph": 190, "circular_ladder_graph": 191, "complete_graph": 192, "complete_multipartite_graph": 193, "cycle_graph": 194, "dorogovtsev_goltsev_mendes_graph": 195, "empty_graph": 196, "full_rary_tre": 197, "ladder_graph": 198, "lollipop_graph": 199, "null_graph": 200, "path_graph": 201, "star_graph": 202, "trivial_graph": 203, "turan_graph": 204, "wheel_graph": 205, "lfr_benchmark_graph": 206, "caveman_graph": 207, "connected_caveman_graph": 208, "gaussian_random_partition_graph": 209, "planted_partition_graph": 210, "random_partition_graph": 211, "relaxed_caveman_graph": 212, "ring_of_cliqu": 213, "stochastic_block_model": 214, "windmill_graph": 215, "degree_seq": [216, 217, 218, 219, 220, 221, 222], "configuration_model": 216, "degree_sequence_tre": 217, "directed_configuration_model": 218, "directed_havel_hakimi_graph": 219, "expected_degree_graph": 220, "havel_hakimi_graph": 221, "random_degree_sequence_graph": 222, "gn_graph": 223, "gnc_graph": 224, "gnr_graph": 225, "random_k_out_graph": 226, "scale_free_graph": 227, "duplic": [228, 229, 286], "duplication_divergence_graph": 228, "partial_duplication_graph": 229, "ego": [230, 286], "ego_graph": 230, "chordal_cycle_graph": 231, "margulis_gabber_galil_graph": 232, "paley_graph": 233, "geometr": [234, 235, 236, 237, 238, 286], "geographical_threshold_graph": 234, "random_geometric_graph": 235, "soft_random_geometric_graph": 236, "thresholded_random_geometric_graph": 237, "waxman_graph": 238, "harary_graph": [239, 240], "hkn_harary_graph": 239, "hnm_harary_graph": 240, "intersect": [241, 242, 243, 286], "general_random_intersection_graph": 241, "k_random_intersection_graph": 242, "uniform_random_intersection_graph": 243, "joint_degree_seq": [244, 245, 246, 247], "directed_joint_degree_graph": 244, "is_valid_directed_joint_degre": 245, "is_valid_joint_degre": 246, "joint_degree_graph": 247, "mycielski": [248, 249, 286], "mycielski_graph": 248, "mycielskian": 249, "nonisomorphic_tre": [250, 251], "number_of_nonisomorphic_tre": 251, "small": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 286], "lcf_graph": 252, "bull_graph": 253, "chvatal_graph": 254, "cubical_graph": 255, "desargues_graph": 256, "diamond_graph": 257, "dodecahedral_graph": 258, "frucht_graph": 259, "heawood_graph": 260, "house_graph": 261, "house_x_graph": 262, "icosahedral_graph": 263, "krackhardt_kite_graph": 264, "make_small_graph": 265, "moebius_kantor_graph": 266, "octahedral_graph": 267, "pappus_graph": 268, "petersen_graph": 269, "sedgewick_maze_graph": 270, "tetrahedral_graph": 271, "truncated_cube_graph": 272, "truncated_tetrahedron_graph": 273, "tutte_graph": 274, "social": [275, 276, 277, 278, 286], "davis_southern_women_graph": 275, "florentine_families_graph": 276, "karate_club_graph": 277, "les_miserables_graph": 278, "spectral_graph_forg": 279, "sudoku": [280, 286], "sudoku_graph": 280, "tree": [281, 282, 286], "prefix_tre": 281, "random_tre": 282, "triad": [283, 286], "triad_graph": 283, "internet_as_graph": 284, "random_internet_as_graph": 284, "stochast": [285, 286], "stochastic_graph": 285, "diverg": 286, "sequenc": 286, "AS": 286, "spectral": 286, "non": 286, "isomorph": 286, "joint": 286, "harari": 286, "digraph": 287, "read": 289, "list": [289, 299], "adjac": 289, "selector": 293, "tensorcontext": 293, "vertexdatacontext": 293, "labeledvertexdatacontext": 293, "vertexpropertycontext": 293, "labeledvertexpropertycontext": 293, "method": 293, "dimension": 293, "rang": 293, "resourc": 295, "estim": 295, "bridg": 296, "gap": 296, "oltp": 296, "log": [296, 300, 308], "inform": 298, "archiv": 298, "predefin": 299, "macro": 299, "partit": [299, 300, 303], "strategi": 299, "guidelin": 299, "For": 299, "detail": 299, "handler": 299, "arrai": 299, "iter": 299, "master": 299, "mirror": 299, "complet": 299, "natur": 299, "trait": 299, "persist": 300, "known": 300, "artifacthub": 300, "directori": 300, "common": 300, "modifi": 300, "j": 300, "import": 300, "restart": 300, "destroi": 300, "view": 300, "In": 301, "immut": 301, "bind": 302, "repartit": 303, "fennel": 303, "xtrapulp": 303, "hybrid": 303, "error": 306, "line": 307, "find": 308, "monitor": 309, "\u56fe\u5206\u6790\u5f15\u64ce": 310, "\u5185\u7f6e\u7b97\u6cd5": 310, "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": 310, "\u4f7f\u7528": 310, "\u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": 310, "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528": 310, "\u4e2d\u7684\u51fd\u6570": 310, "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": 310, "\u8fd0\u884cjava\u7f16\u5199\u7684\u7b97\u6cd5": 310, "\u8fd0\u884c\u793a\u4f8b\u7684java\u7b97\u6cd5": 310, "\u4f7f\u7528java\u7f16\u5199\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5": 310, "\u90e8\u7f72": 311, "\u4f7f\u7528helm\u90e8\u7f72graphscop": 311, "\u5728aw": 311, "\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": 311, "\u672c\u5730\u90e8\u7f72graphscop": 311, "\u5f00\u53d1\u8005\u6307\u5357": 312, "\u57fa\u4e8e": [312, 317], "\u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5": 312, "\u6784\u5efa": 312, "\u4ee3\u7801\u98ce\u683c": 312, "\u5e38\u89c1\u95ee\u9898": 313, "\u5feb\u901f\u4e0a\u624b": 314, "\u793a\u4f8b": 314, "\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 314, "\u521b\u5efa\u4f1a\u8bdd": 314, "\u4ea4\u4e92\u5f0f\u67e5\u8be2": 314, "\u56fe\u5206\u6790": 314, "\u56fe\u795e\u7ecf\u7f51\u7edc": 314, "\u5173\u95ed\u4f1a\u8bdd": 314, "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": 315, "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": 315, "\u6295\u5f71": 315, "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 315, "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": 315, "\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": 316, "\u76ee\u5f55": [316, 321], "\u53c2\u8003": 316, "\u7d22\u5f15": 316, "\u5b89\u88c5": 317, "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": 317, "\u5ba2\u6237\u7aef": 317, "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": 318, "\u5229\u7528python": 318, "\u8fde\u63a5graphscop": 318, "\u5229\u7528java": 318, "\u5f00\u53d1\u63a7\u5236\u53f0": 318, "gremlin\u7f16\u7a0b\u5165\u95e8": 318, "101": 318, "\u56fe\u6570\u636e\u6a21\u578b": 318, "\u67e5\u8be2\u8bed\u8a00": 318, "\u4e00\u4e2a\u4f8b\u5b50": 318, "gremlin\u517c\u5bb9\u6027": 318, "\u5bf9\u6bd4tinkerpop": 318, "\u5c5e\u6027\u56fe\u6a21\u578b\u7ea6\u675f": 318, "\u5c1a\u4e0d\u652f\u6301\u7684\u529f\u80fd\u7279\u6027": 318, "\u652f\u6301\u7684gremlin\u64cd\u4f5c": 318, "\u5df2\u77e5\u9650\u5236": 318, "\u56fe\u5b66\u4e60\u5f15\u64ce": 319, "\u56fe\u5b66\u4e60\u6a21\u578b": 319, "\u6570\u636e\u6a21\u578b": 319, "\u7f16\u7801\u5668": 319, "\u81ea\u5b9a\u4e49\u7b97\u6cd5": 319, "\u91c7\u6837": 319, "\u56fe\u6570\u636e\u6d41": 319, "\u6a21\u578b": 319, "\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": 319, "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": 320, "\u624b\u52a8\u914d\u7f6e\u56fe": 320, "vid_field": 320, "src_label": 320, "dst_label": 320, "src_field": 320, "dst_field": 320, "\u9ad8\u7ea7\u7528\u6cd5": 320, "\u6ca1\u6709\u6b67\u4e49\u65f6": 320, "\u81ea\u52a8\u63a8\u65ad\u70b9\u6807\u7b7e": 320, "\u4ece\u8fb9\u4e2d\u63a8\u65ad\u70b9": 320, "\u591a\u79cd\u8fb9\u5173\u7cfb": 320, "\u6307\u5b9a\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b": 320, "\u56fe\u7684\u5176\u4ed6\u53c2\u6570": 320, "\u5b8c\u6574\u7684\u793a\u4f8b": 320, "\u4ece": 320, "panda": 320, "\u6216": 320, "numpi": 320, "\u4e2d\u8f7d\u56fe": 320, "\u7684\u53d8\u79cd": 320, "\u5165\u95e8\u6559\u7a0b": 321}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Built-in Algorithms": [[0, "built-in-algorithms"], [6, "built-in-algorithms"]], "All Pairs Shortest Path Length": [[0, "all-pairs-shortest-path-length"]], "Attribute Assortativity": [[0, "attribute-assortativity"]], "Average Degree Connectivity": [[0, "average-degree-connectivity"]], "Betweenness Centrality": [[0, "betweenness-centrality"]], "Breadth-First Search": [[0, "breadth-first-search"]], "Closeness Centrality": [[0, "closeness-centrality"]], "Clustering": [[0, "clustering"]], "Degree Assortativity Coefficient": [[0, "degree-assortativity-coefficient"]], "Degree Centrality": [[0, "degree-centrality"]], "Depth-First Search": [[0, "depth-first-search"]], "Eigenvector Centrality": [[0, "eigenvector-centrality"]], "Hyperlink-Induced Topic Search": [[0, "hyperlink-induced-topic-search"]], "Katz Centrality": [[0, "katz-centrality"]], "K-Core": [[0, "k-core"]], "K-Shell": [[0, "k-shell"]], "Label Propagation Algorithm": [[0, "label-propagation-algorithm"]], "PageRank": [[0, "pagerank"]], "Sampling Path": [[0, "sampling-path"]], "Single-Source Shortest Paths": [[0, "single-source-shortest-paths"]], "VoteRank": [[0, "voterank"]], "Customized Algorithms": [[1, "customized-algorithms"]], "Aggregators": [[1, "aggregators"]], "Deployment for GAE": [[2, "deployment-for-gae"]], "Prerequisites": [[2, "prerequisites"], [27, "prerequisites"], [28, "prerequisites"], [29, "prerequisites"], [31, "prerequisites"], [47, "prerequisites"], [300, "prerequisites"]], "Deployment GAE only": [[2, "deployment-gae-only"]], "Deployment with Python SDK": [[2, "deployment-with-python-sdk"]], "Deployment with Helm": [[2, "deployment-with-helm"]], "Execute graph analytical algorithms": [[2, "execute-graph-analytical-algorithms"]], "Uninstall deployment": [[2, "uninstall-deployment"]], "Design of Analytical Engine": [[3, "design-of-analytical-engine"], [3, null]], "Dev and Test": [[4, "dev-and-test"], [49, "dev-and-test"], [59, "dev-and-test"]], "Setup": [[4, "setup"]], "Understanding the Codebase": [[4, "understanding-the-codebase"]], "Making Modifications": [[4, "making-modifications"]], "Building Analytical Engine": [[4, "building-analytical-engine"]], "Testing": [[4, "testing"]], "FAQs": [[5, "faqs"]], "Programming Model: FLASH": [[6, "programming-model-flash"]], "Motivation": [[6, "motivation"], [9, "motivation"], [65, "motivation"]], "The FLASH Programming Model": [[6, "the-flash-programming-model"]], "Overview": [[6, "overview"], [9, "overview"], [46, null], [143, "overview"], [300, "overview"]], "FLASH API": [[6, "flash-api"]], "Strong Expressiveness": [[6, "strong-expressiveness"]], "Implementation": [[6, "implementation"]], "Architecture": [[6, "architecture"], [12, "architecture"]], "Optimizations": [[6, "optimizations"]], "Getting Started": [[7, "getting-started"], [51, "getting-started"], [60, "getting-started"], [66, "getting-started"], [297, "getting-started"]], "Installation": [[7, "installation"], [28, "installation"], [51, "installation"], [60, "installation"], [300, "installation"]], "Running GraphScope Analytical Engine on Local": [[7, "running-graphscope-analytical-engine-on-local"]], "What\u2019s the Next": [[7, "whats-the-next"], [51, "whats-the-next"], [60, "whats-the-next"]], "Guide and Examples": [[8, "guide-and-examples"], [52, "guide-and-examples"], [62, "guide-and-examples"]], "Ingress: Incrementalize Graph Algorithms": [[9, "ingress-incrementalize-graph-algorithms"]], "Design of Ingress": [[9, "design-of-ingress"]], "Message-driven Differentiation": [[9, "message-driven-differentiation"]], "Flexible Memoization": [[9, "flexible-memoization"]], "Ingress API": [[9, "ingress-api"]], "Distributed Runtime Engine": [[9, "distributed-runtime-engine"]], "Key Concepts": [[10, "key-concepts"]], "LoadStrategy": [[10, "loadstrategy"]], "OnlyOut": [[10, "onlyout"]], "OnlyIn": [[10, "onlyin"]], "BothInOut": [[10, "bothinout"]], "PartitionStrategy": [[10, "partitionstrategy"]], "Edge Cut": [[10, "edge-cut"]], "Vertex Cut": [[10, "vertex-cut"]], "Vertices on GraphScope analytical engine": [[10, "vertices-on-graphscope-analytical-engine"]], "OuterVertex": [[10, "outervertex"]], "InnerVertex": [[10, "innervertex"]], "InnerVertexWithOutgoingEdge": [[10, "innervertexwithoutgoingedge"]], "InnerVertexWithIncomingEdge": [[10, "innervertexwithincomingedge"]], "MessageManager and MessageStrategy": [[10, "messagemanager-and-messagestrategy"]], "AlongOutgoingEdgeToOuterVertex": [[10, "alongoutgoingedgetooutervertex"]], "AlongIncomingEdgeToOuterVertex": [[10, "alongincomingedgetooutervertex"]], "AlongEdgeToOuterVertex": [[10, "alongedgetooutervertex"]], "SyncOnOuterVertexAsTarget": [[10, "synconoutervertexastarget"]], "SyncOnOuterVertexAsSource": [[10, "synconoutervertexassource"]], "SyncOnOuterVertex": [[10, "synconoutervertex"]], "NetworkX Compatibility": [[11, "networkx-compatibility"]], "Convert a Graph to a nx.Graph": [[11, "convert-a-graph-to-a-nx-graph"]], "Supported Graph Operations": [[11, "supported-graph-operations"]], "Supported Algorithms": [[11, "supported-algorithms"]], "Overview and Architecture": [[12, "overview-and-architecture"]], "Storage Layer": [[12, "storage-layer"]], "Engine Layer": [[12, "engine-layer"]], "GRAPE Engine": [[12, "grape-engine"]], "Programming Model APIs": [[12, "programming-model-apis"]], "FFIs": [[12, "ffis"]], "Incremental Computation Engine": [[12, "incremental-computation-engine"]], "Application Layer": [[12, "application-layer"]], "Performance Tuning": [[13, "performance-tuning"]], "Programming Model: PIE": [[14, "programming-model-pie"]], "What is the PIE Model?": [[14, "what-is-the-pie-model"]], "Workflow of PIE": [[14, "workflow-of-pie"]], "Tutorial: Develop Your Algorithms in C++ with FLASH Model": [[15, "tutorial-develop-your-algorithms-in-c-with-flash-model"]], "Developing Algorithms with FLASH Model": [[15, "developing-algorithms-with-flash-model"]], "Defining A FLASH Application": [[15, "defining-a-flash-application"]], "Implementing the Run Function": [[15, "implementing-the-run-function"]], "Integrating with the Python Client of GraphScope": [[15, "integrating-with-the-python-client-of-graphscope"]], "Running the FLASH Algorithms": [[15, "running-the-flash-algorithms"]], "Tutorial: Develop your Algorithm in C++ with PIE Model": [[16, "tutorial-develop-your-algorithm-in-c-with-pie-model"]], "Prerequisites:": [[16, "prerequisites"]], "Step 1: Define the context class": [[16, "step-1-define-the-context-class"]], "Step 2: Define the Algorithm class": [[16, "step-2-define-the-algorithm-class"]], "Step 3: Package the Algorithm": [[16, "step-3-package-the-algorithm"]], "Step 4: Run the .gar file on GraphScope": [[16, "step-4-run-the-gar-file-on-graphscope"]], "GraphScope C++ SDK with Github Template": [[16, "graphscope-c-sdk-with-github-template"]], "Tutorial: Develop your Algorithm in Java with PIE Model": [[17, "tutorial-develop-your-algorithm-in-java-with-pie-model"]], "Run example algorithms with example jar": [[17, "run-example-algorithms-with-example-jar"]], "Implement your own algorithms in Java.": [[17, "implement-your-own-algorithms-in-java"]], "Prepare GRAPE-jdk": [[17, "prepare-grape-jdk"]], "Implement your algorithm": [[17, "implement-your-algorithm"]], "Submit to GraphScope": [[17, "submit-to-graphscope"]], "GraphScope JavaSDK with Github Template": [[17, "graphscope-javasdk-with-github-template"]], "Tutorial: Develop algorithms in Python": [[18, "tutorial-develop-algorithms-in-python"]], "Writing Your Own Algorithms in PIE": [[18, "writing-your-own-algorithms-in-pie"]], "Writing Algorithms in Pregel": [[18, "writing-algorithms-in-pregel"]], "Using math.h Functions in Algorithms": [[18, "using-math-h-functions-in-algorithms"]], "Run Your Own Algorithms": [[18, "run-your-own-algorithms"]], "Tutorial: Graph Algorithms with NetowrkX APIs": [[19, "tutorial-graph-algorithms-with-netowrkx-apis"]], "How does Networkx Perform Graph Analysis?": [[19, "how-does-networkx-perform-graph-analysis"]], "How to Perform Graph Analysis with NetworkX APIs from GraphScope": [[19, "how-to-perform-graph-analysis-with-networkx-apis-from-graphscope"]], "Graph Analysis": [[19, "graph-analysis"]], "Graph Display": [[19, "graph-display"]], "The Performance Speed-up of GraphScope over NetworkX": [[19, "the-performance-speed-up-of-graphscope-over-networkx"]], "Tutorial: Graph Operations with NetowrkX APIs": [[20, "tutorial-graph-operations-with-netowrkx-apis"]], "Creating an Empty Graph": [[20, "creating-an-empty-graph"]], "Adding Nodes": [[20, "adding-nodes"]], "Adding Edges": [[20, "adding-edges"]], "Examining Elements of a Graph": [[20, "examining-elements-of-a-graph"]], "Removing Elements from a Graph": [[20, "removing-elements-from-a-graph"]], "Using Graph Constructors": [[20, "using-graph-constructors"]], "Accessing Edges and Neighbors": [[20, "accessing-edges-and-neighbors"]], "Adding Attributes to Graphs, Nodes and Edges": [[20, "adding-attributes-to-graphs-nodes-and-edges"]], "Graph Attributes": [[20, "graph-attributes"]], "Node Attributes": [[20, "node-attributes"]], "Edge Attributes": [[20, "edge-attributes"]], "Induce deepcopy subgraph and edge_subgraph": [[20, "induce-deepcopy-subgraph-and-edge-subgraph"]], "Making Copies": [[20, "making-copies"]], "Directed Graphs": [[20, "directed-graphs"]], "Analyzing Graphs": [[20, "analyzing-graphs"]], "Create graph from GraphScope Graph Object": [[20, "create-graph-from-graphscope-graph-object"]], "Transform to GraphScope Graph Object": [[20, "transform-to-graphscope-graph-object"]], "Tutorial: Running Builtin Algorithms": [[21, "tutorial-running-builtin-algorithms"]], "Tutorial: Run Giraph Applications on GraphScope": [[22, "tutorial-run-giraph-applications-on-graphscope"]], "Try some example giraph apps": [[22, "try-some-example-giraph-apps"]], "Run your own Giraph apps.": [[22, "run-your-own-giraph-apps"]], "Develop Giraph algorithm": [[22, "develop-giraph-algorithm"]], "Submit to GraphScope.": [[22, "submit-to-graphscope"]], "Tutorial: Run GraphX Applications on GraphScope": [[23, "tutorial-run-graphx-applications-on-graphscope"]], "Deploy GraphScope along with Spark": [[23, "deploy-graphscope-along-with-spark"]], "Run example GraphX apps": [[23, "run-example-graphx-apps"]], "Submit to Spark": [[23, "submit-to-spark"]], "Run customized GraphX apps": [[23, "run-customized-graphx-apps"]], "Include dependency": [[23, "include-dependency"]], "Develop customized GraphX algorithm towards GraphScope.": [[23, "develop-customized-graphx-algorithm-towards-graphscope"]], "Run customized GraphX algorithms on Spark with GraphScope support": [[23, "run-customized-graphx-algorithms-on-spark-with-graphscope-support"]], "Vertex-Centric Model": [[24, "vertex-centric-model"]], "Pregel Model": [[24, "pregel-model"]], "GAS Model": [[24, "gas-model"]], "Simulation of Pregel Model in Analytical Engine": [[24, "simulation-of-pregel-model-in-analytical-engine"]], "Contact Us": [[25, "contact-us"]], "Slack": [[25, "slack"], [35, "slack"]], "Discussion on Github": [[25, "discussion-on-github"]], "Deploy GraphScope on Clouds": [[26, "deploy-graphscope-on-clouds"]], "Deploy on K8s Cluster": [[27, "deploy-on-k8s-cluster"]], "Install GraphScope Client": [[27, "install-graphscope-client"], [29, "install-graphscope-client"]], "Prepare a Kubernetes cluster": [[27, "prepare-a-kubernetes-cluster"], [29, "prepare-a-kubernetes-cluster"], [38, "prepare-a-kubernetes-cluster"]], "Deploying GraphScope": [[27, "deploying-graphscope"]], "Launch with default parameters": [[27, "launch-with-default-parameters"]], "Frequently used parameters": [[27, "frequently-used-parameters"]], "Customize image URI": [[27, "customize-image-uri"]], "Specify the number of workers": [[27, "specify-the-number-of-workers"]], "Provide a kubeconfig file other than default": [[27, "provide-a-kubeconfig-file-other-than-default"]], "Mount volumes": [[27, "mount-volumes"]], "Inspect the deployment": [[27, "inspect-the-deployment"]], "Cleaning Up": [[27, "cleaning-up"]], "Deploy GraphScope with helm": [[28, "deploy-graphscope-with-helm"]], "Connect to GraphScope": [[28, "connect-to-graphscope"]], "Uninstall the release": [[28, "uninstall-the-release"]], "Configuration": [[28, "configuration"]], "Offline Installation": [[28, "offline-installation"]], "Depoly with Existing Vineyard Cluster": [[29, "depoly-with-existing-vineyard-cluster"]], "Deploy a Vineyard Cluster": [[29, "deploy-a-vineyard-cluster"]], "Load the dataset to the Kubernetes cluster": [[29, "load-the-dataset-to-the-kubernetes-cluster"]], "Load a graph to the existing vineyard cluster": [[29, "load-a-graph-to-the-existing-vineyard-cluster"]], "Connect to the existing vineyard cluster with another GraphScope session": [[29, "connect-to-the-existing-vineyard-cluster-with-another-graphscope-session"]], "Cleaning up": [[29, "cleaning-up"]], "Install GraphScope in offline environment": [[30, "install-graphscope-in-offline-environment"]], "Install from wheels": [[30, "install-from-wheels"]], "Install from source": [[30, "install-from-source"], [31, "install-from-source"]], "Download dependencies and GraphScope": [[30, "download-dependencies-and-graphscope"]], "Copy all files to the destination environment and extract them to a location": [[30, "copy-all-files-to-the-destination-environment-and-extract-them-to-a-location"]], "Install basic packages and gcc-g++,\u00a0python": [[30, "install-basic-packages-and-gcc-g-python"]], "Install third-party dependencies and GraphScope Analytical Engine": [[30, "install-third-party-dependencies-and-graphscope-analytical-engine"]], "Install GraphScope on Local": [[31, "install-graphscope-on-local"]], "Install from packages": [[31, "install-from-packages"]], "Install stable version of GraphScope": [[31, "install-stable-version-of-graphscope"]], "Install preview version of GraphScope": [[31, "install-preview-version-of-graphscope"]], "Setup build environment for Linux and macOS": [[31, "setup-build-environment-for-linux-and-macos"]], "Use dev image with all dependencies installed": [[31, "use-dev-image-with-all-dependencies-installed"]], "Build and install": [[31, "build-and-install"]], "Design of GAE": [[32, "design-of-gae"]], "Graph Storage": [[32, "graph-storage"]], "Execution Framework": [[32, "execution-framework"]], "Flexible programming models": [[32, "flexible-programming-models"]], "Multi-language SDKs": [[32, "multi-language-sdks"]], "High-performance runtime": [[32, "high-performance-runtime"]], "Algorithm Library": [[32, "algorithm-library"]], "Code Style Guide": [[33, "code-style-guide"]], "C++ Style": [[33, "c-style"]], "Python Style": [[33, "python-style"]], "Rust Style": [[33, "rust-style"]], "Java Style": [[33, "java-style"]], "Script Style": [[33, "script-style"]], "Style Linter and Checker": [[33, "style-linter-and-checker"]], "Development Guide": [[34, "development-guide"]], "Dev Environment": [[34, "dev-environment"], [38, "dev-environment"], [49, "dev-environment"], [59, "dev-environment"]], "Develop with dev containers.": [[34, "develop-with-dev-containers"]], "Install deps on local": [[34, "install-deps-on-local"], [59, "install-deps-on-local"]], "Build All Targets for GraphScope": [[34, "build-all-targets-for-graphscope"], [38, "build-all-targets-for-graphscope"]], "Build Components Individually": [[34, "build-components-individually"]], "Build and Test Engines": [[34, "build-and-test-engines"]], "Build Coordinator": [[34, "build-coordinator"]], "Build Python Client": [[34, "build-python-client"]], "How to Contribute": [[35, "how-to-contribute"]], "Code of Conduct": [[35, "code-of-conduct"]], "Community": [[35, "community"], [286, "module-graphscope.nx.generators.community"]], "GitHub Discussion": [[35, "github-discussion"]], "Reporting Bugs": [[35, "reporting-bugs"]], "Requesting Features": [[35, "requesting-features"]], "Improving Documentation": [[35, "improving-documentation"]], "Contributing Code and Documentation Changes": [[35, "contributing-code-and-documentation-changes"]], "Install pre-commit": [[35, "install-pre-commit"]], "Minor Fixes": [[35, "minor-fixes"]], "Fork and Create a Branch": [[35, "fork-and-create-a-branch"]], "Get the Test Suite Running": [[35, "get-the-test-suite-running"]], "Implement Your Fix or Feature": [[35, "implement-your-fix-or-feature"]], "Get the Code Format and Style Right": [[35, "get-the-code-format-and-style-right"]], "Submitting Your Changes": [[35, "submitting-your-changes"]], "Discussing and Keeping Your Pull Request Updated": [[35, "discussing-and-keeping-your-pull-request-updated"]], "Merging a PR (maintainers only)": [[35, "merging-a-pr-maintainers-only"]], "Shipping a Release (maintainers only)": [[35, "shipping-a-release-maintainers-only"]], "How to Review Pull Requests": [[35, "how-to-review-pull-requests"]], "Continuous integration testing": [[35, "continuous-integration-testing"]], "Debugging on local deployment": [[36, "debugging-on-local-deployment"]], "Debugging on Kubernetes deployment": [[36, "debugging-on-kubernetes-deployment"]], "Commands for Debugging": [[36, "commands-for-debugging"]], "Debugging Techniques": [[36, "debugging-techniques"]], "How to Submit Pull-requests": [[37, "how-to-submit-pull-requests"]], "How to Test": [[38, "how-to-test"], [59, "how-to-test"]], "Test GraphScope on local": [[38, "test-graphscope-on-local"]], "Run tests": [[38, "run-tests"], [38, "id1"]], "Test GraphScope on Kubernetes cluster": [[38, "test-graphscope-on-kubernetes-cluster"]], "Build images": [[38, "build-images"]], "Introduction to ArrowFragment": [[39, "introduction-to-arrowfragment"]], "0. \u672f\u8bed": [[39, "id1"]], "1. \u8f7d\u56fe": [[39, "id2"]], "1.1 \u521d\u59cb\u5316partitoner": [[39, "partitoner"]], "1.2 \u6784\u5efa\u539f\u59cbarrow table": [[39, "arrow-table"]], "1.3. Shuffle vtable": [[39, "shuffle-vtable"]], "1.4. \u6784\u5efaVertex map(BasicArrowVertexMapBuilder)": [[39, "vertex-map-basicarrowvertexmapbuilder"]], "1.5. \u6784\u5efaFragment\u51c6\u5907": [[39, "fragment"]], "1.5.1. \u5904\u7406edge table(BasicEVFragmentLoader)": [[39, "edge-table-basicevfragmentloader"]], "1.5.2 FragmentBuilder\u6570\u636e\u521d\u59cb\u5316 (BasicArrowFragmentBuilder)": [[39, "fragmentbuilder-basicarrowfragmentbuilder"]], "1.6 Fragment\u6784\u5efa": [[39, "id3"]], "2. \u8bbf\u95eeFragment": [[39, "id4"]], "2.1 \u8bbf\u95ee\u9876\u70b9": [[39, "id5"]], "2.1.1 \u8bbf\u95ee\u5185\u90e8\u70b9": [[39, "id6"]], "2.1.2 \u8303\u56f4\u5916\u90e8\u70b9": [[39, "id7"]], "2.1.3 \u8bbf\u95ee\u5168\u90e8\u70b9": [[39, "id8"]], "2.1.4 \u8bbf\u95ee\u9876\u70b9\u6570\u636e": [[39, "id9"]], "2.2 \u8bbf\u95ee\u8fb9": [[39, "id10"]], "2.2.1 \u8bbf\u95ee\u51fa\u8fb9": [[39, "id11"]], "2.2.2 \u8bbf\u95ee\u5165\u8fb9": [[39, "id12"]], "2.2.3 \u8bbf\u95ee\u8fb9\u4e0a\u7684\u6570\u636e": [[39, "id13"]], "Frequently Asked Questions": [[40, "frequently-asked-questions"]], "Getting Started for GLE": [[41, "getting-started-for-gle"]], "Graph Workloads": [[42, "graph-workloads"]], "Graph Analytics": [[42, "graph-analytics"]], "Graph Interactive Query": [[42, "graph-interactive-query"]], "Graph Learning": [[42, "graph-learning"], [151, "graph-learning"]], "GraphScope for Data Scientists": [[43, "graphscope-for-data-scientists"]], "Challenges of Handling Graph Computation": [[43, "challenges-of-handling-graph-computation"]], "Solutions of GraphScope": [[43, "solutions-of-graphscope"]], "Program as Single Machine and Run as Distributed": [[43, "program-as-single-machine-and-run-as-distributed"]], "Integration with PyData Ecosystem": [[43, "integration-with-pydata-ecosystem"]], "How to Load Graphs": [[44, "how-to-load-graphs"]], "Define Graph Schema": [[44, "define-graph-schema"]], "Load Graphs": [[44, "load-graphs"]], "Advanced Topics": [[44, "advanced-topics"]], "Tips for reduce memory consumption of graphs": [[44, "tips-for-reduce-memory-consumption-of-graphs"]], "How to Report Bugs": [[45, "how-to-report-bugs"]], "GraphScope: A One-Stop Large-Scale Graph Computing System from Alibaba": [[46, "graphscope-a-one-stop-large-scale-graph-computing-system-from-alibaba"]], "Installation & Deployment": [[46, null]], "Graph Analytical Engine": [[46, null], [73, "graph-analytical-engine"]], "Graph Interactive Engine": [[46, null], [73, "graph-interactive-engine"]], "Graph Learning Engine": [[46, null]], "Storage Engine": [[46, null]], "Troubleshooting & Utilities": [[46, null]], "Development": [[46, null]], "Reference": [[46, null], [299, "reference"]], "Indices and tables": [[46, "indices-and-tables"]], "Standalone Deployment for GIE": [[47, "standalone-deployment-for-gie"]], "Deploy Your First GIE Service": [[47, "deploy-your-first-gie-service"]], "Remove the GIE Service": [[47, "remove-the-gie-service"]], "Using Your Own Data": [[47, "using-your-own-data"]], "Deploy on a Cluster": [[47, "deploy-on-a-cluster"]], "Other Useful Configurations": [[47, "other-useful-configurations"]], "Design of GIE": [[48, "design-of-gie"]], "The Motivations": [[48, "the-motivations"]], "The Architecture": [[48, "the-architecture"]], "Query Processing": [[48, "query-processing"]], "Build GIE with Vineyard Store on Local": [[49, "build-gie-with-vineyard-store-on-local"]], "Test GIE with Vineyard Store on Local": [[49, "test-gie-with-vineyard-store-on-local"]], "Manually Start the GIE Services": [[49, "manually-start-the-gie-services"]], "FAQs for GIE Gremlin Usage": [[50, "faqs-for-gie-gremlin-usage"]], "What\u2019s the difference between Inner ID and Property ID ?": [[50, "whats-the-difference-between-inner-id-and-property-id"]], "How to use path expand in GIE Gremlin ?": [[50, "how-to-use-path-expand-in-gie-gremlin"]], "How to filter data in GIE Gremlin like SQL ?": [[50, "how-to-filter-data-in-gie-gremlin-like-sql"]], "How to aggregate data in GIE Gremlin like SQL?": [[50, "how-to-aggregate-data-in-gie-gremlin-like-sql"]], "group by multiple keys": [[50, "group-by-multiple-keys"]], "group by multiple values:": [[50, "group-by-multiple-values"]], "How to optimize Gremlin queries for performance in GIE?": [[50, "how-to-optimize-gremlin-queries-for-performance-in-gie"]], "Use appropriate indexing": [[50, "use-appropriate-indexing"]], "How to use subgraph in GIE Gremlin ?": [[50, "how-to-use-subgraph-in-gie-gremlin"]], "Running GraphScope Interactive Engine on Local": [[51, "running-graphscope-interactive-engine-on-local"]], "Supported Gremlin Steps": [[53, "supported-gremlin-steps"]], "Introduction": [[53, "introduction"]], "Standard Steps": [[53, "standard-steps"]], "Source": [[53, "source"]], "V()": [[53, "v"]], "E()": [[53, "e"]], "Expand": [[53, "expand"]], "outE()": [[53, "oute"]], "inE()": [[53, "ine"]], "bothE()": [[53, "bothe"]], "out()": [[53, "out"], [53, "id5"]], "in()": [[53, "in"], [53, "id6"]], "both()": [[53, "both"], [53, "id7"]], "outV()": [[53, "outv"]], "inV()": [[53, "inv"]], "otherV()": [[53, "otherv"]], "bothV()": [[53, "bothv"]], "Filter": [[53, "filter"]], "hasId()": [[53, "hasid"], [55, "hasid"]], "hasLabel()": [[53, "haslabel"]], "has()": [[53, "has"]], "hasNot()": [[53, "hasnot"]], "is()": [[53, "is"]], "where(traversal)": [[53, "where-traversal"]], "where(predicate)": [[53, "where-predicate"]], "not(traversal)": [[53, "not-traversal"]], "dedup()": [[53, "dedup"], [55, "dedup"]], "Project": [[53, "project"]], "id()": [[53, "id"]], "label()": [[53, "label"]], "constant()": [[53, "constant"], [55, "constant"]], "valueMap()": [[53, "valuemap"], [55, "valuemap"]], "values()": [[53, "values"]], "select()": [[53, "select"], [55, "select"]], "Aggregate": [[53, "aggregate"]], "count()": [[53, "count"]], "fold()": [[53, "fold"], [55, "fold"]], "sum()": [[53, "sum"]], "min()": [[53, "min"]], "max()": [[53, "max"]], "mean()": [[53, "mean"]], "group()": [[53, "group"], [55, "group"]], "groupCount()": [[53, "groupcount"], [55, "groupcount"]], "Order": [[53, "order"], [299, "order"]], "order()": [[53, "id1"]], "Statistics": [[53, "statistics"]], "limit()": [[53, "limit"]], "coin()": [[53, "coin"]], "Union": [[53, "union"]], "union()": [[53, "id2"]], "Match": [[53, "match"]], "match()": [[53, "id3"]], "Subgraph": [[53, "subgraph"]], "subgraph()": [[53, "id4"]], "Syntactic Sugars": [[53, "syntactic-sugars"]], "PathExpand": [[53, "pathexpand"]], "endV()": [[53, "endv"]], "Expression": [[53, "expression"]], "Aggregate (Group)": [[53, "aggregate-group"]], "Limitations": [[53, "limitations"]], "To be Supported": [[53, "to-be-supported"]], "identity()": [[53, "identity"]], "elementMap()": [[53, "elementmap"]], "path()": [[53, "path"]], "unfold()": [[53, "unfold"]], "local()": [[53, "local"]], "Will Not be Supported": [[53, "will-not-be-supported"]], "repeat()": [[53, "repeat"]], "properties()": [[53, "properties"]], "sideEffect": [[53, "sideeffect"]], "branch": [[53, "branch"]], "Apache TinkerPop Ecosystem": [[54, "apache-tinkerpop-ecosystem"]], "Connecting Gremlin within Python": [[54, "connecting-gremlin-within-python"]], "Connecting Gremlin within Java": [[54, "connecting-gremlin-within-java"]], "Gremlin Console": [[54, "gremlin-console"]], "Compatibility with TinkerPop": [[54, "compatibility-with-tinkerpop"]], "Property Graph Constraints": [[54, "property-graph-constraints"]], "Tutorial: LDBC Gremlin": [[55, "tutorial-ldbc-gremlin"]], "Load the LDBC Graph": [[55, "load-the-ldbc-graph"]], "Basic Vertex/Edge Query": [[55, "basic-vertex-edge-query"]], "Retrieve Vertices and Edges": [[55, "retrieve-vertices-and-edges"]], "Apply Some Filters": [[55, "apply-some-filters"]], "Extract Property Values": [[55, "extract-property-values"]], "Real Applications": [[55, "real-applications"], [55, "id1"]], "Basic Traversal Query": [[55, "basic-traversal-query"]], "Expansion": [[55, "expansion"]], "out(), in() and both()": [[55, "out-in-and-both"]], "outE(), inE() and bothE()": [[55, "oute-ine-and-bothe"]], "outV(), inV(), bothV() and otherV()": [[55, "outv-inv-bothv-and-otherv"]], "Multiple Expansion Steps": [[55, "multiple-expansion-steps"]], "Expansion from many starting points": [[55, "expansion-from-many-starting-points"]], "Filter & Expansion": [[55, "filter-expansion"]], "Apply filters after expansion": [[55, "apply-filters-after-expansion"]], "Expansion as filters": [[55, "expansion-as-filters"]], "Path Expansion (Syntactic Sugar)": [[55, "path-expansion-syntactic-sugar"]], "Pattern Match": [[55, "pattern-match"]], "Relational Operations": [[55, "relational-operations"]], "Filter Steps": [[55, "filter-steps"]], "where()": [[55, "where"]], "Project Steps": [[55, "project-steps"]], "id() and label()": [[55, "id-and-label"]], "Aggregate Steps": [[55, "aggregate-steps"]], "sum(), min(), max() and  mean()": [[55, "sum-min-max-and-mean"]], "Order Step": [[55, "order-step"]], "Limit Step": [[55, "limit-step"]], "Expression(Syntax Sugar)": [[55, "expression-syntax-sugar"]], "Complex Queries": [[55, "complex-queries"]], "LDBC BI2": [[55, "ldbc-bi2"]], "LDBC BI3": [[55, "ldbc-bi3"]], "LDBC BI4(Left Part)": [[55, "ldbc-bi4-left-part"]], "LDBC BI11": [[55, "ldbc-bi11"]], "LDBC BI14": [[55, "ldbc-bi14"]], "Tutorials for Java Users": [[56, "tutorials-for-java-users"]], "Key Features": [[57, "key-features"]], "Ease-of-use: Python Interface": [[57, "ease-of-use-python-interface"]], "Graph Traversal Support, in Gremlin and Cypher": [[57, "graph-traversal-support-in-gremlin-and-cypher"]], "High Performant Built-in Algorithms": [[57, "high-performant-built-in-algorithms"]], "Extensible Algorithm Library for Graph Analytics": [[57, "extensible-algorithm-library-for-graph-analytics"]], "GNN Training & Inference": [[57, "gnn-training-inference"]], "Cloud Native Design": [[57, "cloud-native-design"]], "Across-Engine Workflow Orchestration": [[57, "across-engine-workflow-orchestration"]], "Design of GLE": [[58, "design-of-gle"]], "Model Paradigms": [[58, "model-paradigms"]], "EgoGraph-based node-centric aggregation": [[58, "egograph-based-node-centric-aggregation"]], "SubGraph-based graph message passing": [[58, "subgraph-based-graph-message-passing"]], "Pipeline for Learning": [[58, "pipeline-for-learning"]], "Dev on docker container": [[59, "dev-on-docker-container"]], "Build Learning Engine": [[59, "build-learning-engine"]], "Running GraphScope Learning Engine on Local": [[60, "running-graphscope-learning-engine-on-local"]], "Graph Sampling": [[61, "graph-sampling"], [139, "graph-sampling"]], "Graph Traversal": [[61, "graph-traversal"], [69, "graph-traversal"], [140, "graph-traversal"]], "Neighborhood Sampling": [[61, "neighborhood-sampling"]], "Subgraph Sampling": [[61, "subgraph-sampling"], [70, "subgraph-sampling"]], "Negative Sampling": [[61, "negative-sampling"], [144, "negative-sampling"]], "GSL": [[61, "gsl"]], "Tutorial: Training a Node Classification Model on K8s Cluster": [[63, "tutorial-training-a-node-classification-model-on-k8s-cluster"]], "Create a session on kubernetes and load graph": [[63, "create-a-session-on-kubernetes-and-load-graph"]], "Graph neural networks (GNNs)": [[63, "graph-neural-networks-gnns"]], "Tutorial: Training a Node Classification Model on Your Local Machine": [[64, "tutorial-training-a-node-classification-model-on-your-local-machine"]], "Load Graph": [[64, "load-graph"]], "Define the Training Process for the EgoGraphSAGE Model": [[64, "define-the-training-process-for-the-egographsage-model"]], "Launch the Learning Engine": [[64, "launch-the-learning-engine"]], "Train the Model": [[64, "train-the-model"]], "Design of GraphScope": [[65, "design-of-graphscope"]], "Unified Graph Computing Platform": [[65, "unified-graph-computing-platform"]], "Application layer": [[65, "application-layer"]], "Execution engine layer": [[65, "execution-engine-layer"]], "Storage layer": [[65, "storage-layer"]], "Disaggregated Design for Diverse Graph Applications": [[65, "disaggregated-design-for-diverse-graph-applications"]], "GraphScope for BI analysis": [[65, "graphscope-for-bi-analysis"]], "GraphScope for high QPS queries": [[65, "graphscope-for-high-qps-queries"]], "GraphScope for graph analytics": [[65, "graphscope-for-graph-analytics"]], "GraphScope for learning": [[65, "graphscope-for-learning"]], "One-stop Graph Processing": [[66, "one-stop-graph-processing"]], "Graph Analytical Task Quick Start": [[66, "graph-analytical-task-quick-start"]], "Graph Interactive Query Quick Start": [[66, "graph-interactive-query-quick-start"]], "Graph Learning Quick Start": [[66, "graph-learning-quick-start"]], "Glossary": [[67, "glossary"]], "FLASH": [[67, "flash"]], "GRAPE": [[67, "grape"]], "GAE": [[67, "gae"]], "GART": [[67, "gart"]], "GRIN": [[67, "grin"]], "GraphAr": [[67, "graphar"]], "Groot": [[67, "groot"]], "GUM": [[67, "gum"]], "MaxGraph (deprecated)": [[67, "maxgraph-deprecated"]], "Vineyard, or v6d": [[67, "vineyard-or-v6d"]], "GAIA": [[67, "gaia"]], "Ingress": [[67, "ingress"]], "Pegasus": [[67, "pegasus"]], "PIE-model": [[67, "pie-model"]], "Graph Analytics Workloads": [[68, "graph-analytics-workloads"]], "What is Graph Analytics": [[68, "what-is-graph-analytics"]], "Challenges of Graph Analytics on Large Graphs": [[68, "challenges-of-graph-analytics-on-large-graphs"]], "What can GraphScope Do": [[68, "what-can-graphscope-do"], [70, "what-can-graphscope-do"]], "Graph Interactive Workloads": [[69, "graph-interactive-workloads"]], "Tinkerpop and Gremlin": [[69, "tinkerpop-and-gremlin"]], "Pattern Matching": [[69, "pattern-matching"]], "Graph Learning Workloads": [[70, "graph-learning-workloads"]], "What is Graph Neural Network": [[70, "what-is-graph-neural-network"]], "Typical GNN Models": [[70, "typical-gnn-models"]], "Paradigm of Model Training": [[70, "paradigm-of-model-training"]], "Steps of Model Training": [[70, "steps-of-model-training"]], "Challenges of Applying GNNs on Large Graphs": [[70, "challenges-of-applying-gnns-on-large-graphs"]], "Introducing GraphScope": [[71, "introducing-graphscope"]], "What is GraphScope": [[71, "what-is-graphscope"]], "Why use GraphScope": [[71, "why-use-graphscope"]], "What are the Use Cases": [[71, "what-are-the-use-cases"]], "What are the Limitations": [[71, "what-are-the-limitations"]], "What are the Next": [[71, "what-are-the-next"]], "Positioning of GraphScope": [[72, "positioning-of-graphscope"]], "Compare with Graph Processing Systems": [[72, "compare-with-graph-processing-systems"]], "Compare with Graph Databases": [[72, "compare-with-graph-databases"]], "Compare with Graph Learning Systems": [[72, "compare-with-graph-learning-systems"]], "Handling Various Types of Graph Workloads": [[72, "handling-various-types-of-graph-workloads"]], "Performance and Benchmark": [[73, "performance-and-benchmark"]], "Results": [[73, "results"]], "Performance on GPUs": [[73, "performance-on-gpus"]], "Reproducing the results": [[73, "reproducing-the-results"]], "Tutorials for Python Users": [[74, "tutorials-for-python-users"]], "Analytical Engine API Reference": [[75, "analytical-engine-api-reference"]], "Analytical Engine": [[75, "analytical-engine"]], "Fragments in GraphScope": [[75, "fragments-in-graphscope"]], "Analytical Apps": [[75, "analytical-apps"]], "Analytical Workers": [[75, "analytical-workers"]], "App\u2019s Context": [[75, "app-s-context"]], "Analytical App": [[76, "analytical-app"]], "AppAssets": [[76, "appassets"]], "JavaApp": [[76, "javaapp"]], "App object": [[76, "app-object"]], "Functions": [[76, "functions"], [78, "functions"], [153, "functions"]], "BuiltIn apps": [[76, "builtin-apps"]], "Context": [[77, "context"]], "Context object": [[77, "context-object"]], "Cython SDK API": [[78, "cython-sdk-api"]], "Pregel": [[78, "pregel"]], "PIE": [[78, "pie"]], "GraphScope types": [[78, "graphscope-types"]], "About Grape JDK": [[79, "about-grape-jdk"]], "Project Structure": [[79, "project-structure"]], "Building from source": [[79, "building-from-source"]], "Java Reference (javadoc)": [[80, "java-reference-javadoc"]], "graphscope.Vertex": [[81, "graphscope-vertex"]], "graphscope.declare": [[82, "graphscope-declare"]], "graphscope.framework.app.load_app": [[83, "graphscope-framework-app-load-app"]], "graphscope.framework.dag_utils.add_column": [[84, "graphscope-framework-dag-utils-add-column"]], "graphscope.framework.dag_utils.add_labels_to_graph": [[85, "graphscope-framework-dag-utils-add-labels-to-graph"]], "graphscope.framework.dag_utils.arrow_to_dynamic": [[86, "graphscope-framework-dag-utils-arrow-to-dynamic"]], "graphscope.framework.dag_utils.bind_app": [[87, "graphscope-framework-dag-utils-bind-app"]], "graphscope.framework.dag_utils.clear_edges": [[88, "graphscope-framework-dag-utils-clear-edges"]], "graphscope.framework.dag_utils.clear_graph": [[89, "graphscope-framework-dag-utils-clear-graph"]], "graphscope.framework.dag_utils.context_to_dataframe": [[90, "graphscope-framework-dag-utils-context-to-dataframe"]], "graphscope.framework.dag_utils.context_to_numpy": [[91, "graphscope-framework-dag-utils-context-to-numpy"]], "graphscope.framework.dag_utils.copy_graph": [[92, "graphscope-framework-dag-utils-copy-graph"]], "graphscope.framework.dag_utils.create_app": [[93, "graphscope-framework-dag-utils-create-app"]], "graphscope.framework.dag_utils.create_graph": [[94, "graphscope-framework-dag-utils-create-graph"]], "graphscope.framework.dag_utils.create_graph_view": [[95, "graphscope-framework-dag-utils-create-graph-view"]], "graphscope.framework.dag_utils.create_loader": [[96, "graphscope-framework-dag-utils-create-loader"]], "graphscope.framework.dag_utils.create_subgraph": [[97, "graphscope-framework-dag-utils-create-subgraph"]], "graphscope.framework.dag_utils.create_unload_op": [[98, "graphscope-framework-dag-utils-create-unload-op"]], "graphscope.framework.dag_utils.dynamic_to_arrow": [[99, "graphscope-framework-dag-utils-dynamic-to-arrow"]], "graphscope.framework.dag_utils.fetch_gremlin_result": [[100, "graphscope-framework-dag-utils-fetch-gremlin-result"]], "graphscope.framework.dag_utils.get_context_data": [[101, "graphscope-framework-dag-utils-get-context-data"]], "graphscope.framework.dag_utils.graph_to_dataframe": [[102, "graphscope-framework-dag-utils-graph-to-dataframe"]], "graphscope.framework.dag_utils.graph_to_numpy": [[103, "graphscope-framework-dag-utils-graph-to-numpy"]], "graphscope.framework.dag_utils.gremlin_query": [[104, "graphscope-framework-dag-utils-gremlin-query"]], "graphscope.framework.dag_utils.gremlin_to_subgraph": [[105, "graphscope-framework-dag-utils-gremlin-to-subgraph"]], "graphscope.framework.dag_utils.modify_edges": [[106, "graphscope-framework-dag-utils-modify-edges"]], "graphscope.framework.dag_utils.modify_vertices": [[107, "graphscope-framework-dag-utils-modify-vertices"]], "graphscope.framework.dag_utils.output": [[108, "graphscope-framework-dag-utils-output"]], "graphscope.framework.dag_utils.project_arrow_property_graph": [[109, "graphscope-framework-dag-utils-project-arrow-property-graph"]], "graphscope.framework.dag_utils.project_to_simple": [[110, "graphscope-framework-dag-utils-project-to-simple"]], "graphscope.framework.dag_utils.report_graph": [[111, "graphscope-framework-dag-utils-report-graph"]], "graphscope.framework.dag_utils.run_app": [[112, "graphscope-framework-dag-utils-run-app"]], "graphscope.framework.dag_utils.to_data_sink": [[113, "graphscope-framework-dag-utils-to-data-sink"]], "graphscope.framework.dag_utils.to_directed": [[114, "graphscope-framework-dag-utils-to-directed"]], "graphscope.framework.dag_utils.to_undirected": [[115, "graphscope-framework-dag-utils-to-undirected"]], "graphscope.framework.dag_utils.to_vineyard_dataframe": [[116, "graphscope-framework-dag-utils-to-vineyard-dataframe"]], "graphscope.framework.dag_utils.to_vineyard_tensor": [[117, "graphscope-framework-dag-utils-to-vineyard-tensor"]], "graphscope.framework.dag_utils.unload_app": [[118, "graphscope-framework-dag-utils-unload-app"]], "graphscope.framework.dag_utils.unload_context": [[119, "graphscope-framework-dag-utils-unload-context"]], "graphscope.framework.dag_utils.unload_graph": [[120, "graphscope-framework-dag-utils-unload-graph"]], "graphscope.framework.operation.Operation.__init__": [[121, "graphscope-framework-operation-operation-init"]], "graphscope.framework.operation.Operation.as_op_def": [[122, "graphscope-framework-operation-operation-as-op-def"]], "graphscope.framework.operation.Operation.eval": [[123, "graphscope-framework-operation-operation-eval"]], "graphscope.framework.operation.Operation.evaluated": [[124, "graphscope-framework-operation-operation-evaluated"]], "graphscope.framework.operation.Operation.key": [[125, "graphscope-framework-operation-operation-key"]], "graphscope.framework.operation.Operation.signature": [[126, "graphscope-framework-operation-operation-signature"]], "graphscope.g": [[127, "graphscope-g"]], "graphscope.get_default_session": [[128, "graphscope-get-default-session"]], "graphscope.get_option": [[129, "graphscope-get-option"]], "graphscope.graphlearn": [[130, "graphscope-graphlearn"]], "graphscope.gremlin": [[131, "graphscope-gremlin"]], "graphscope.has_default_session": [[132, "graphscope-has-default-session"]], "graphscope.session": [[133, "graphscope-session"]], "graphscope.set_option": [[134, "graphscope-set-option"]], "Developing Your Own Model": [[135, "developing-your-own-model"]], "How to Build a Graph Learning Algorithm": [[135, "how-to-build-a-graph-learning-algorithm"]], "Sampling": [[135, "sampling"]], "Encoder": [[135, "encoder"], [143, "encoder"]], "Loss Function and Training Process": [[135, "loss-function-and-training-process"]], "Data Source": [[136, "data-source"]], "1 Data format": [[136, "data-format"]], "1.1 Basic format": [[136, "basic-format"]], "1.2 Attribute format\uff08ATTRIBUTED\uff09": [[136, "attribute-format-attributed"]], "1.3 Weight format\uff08WEIGHTED\uff09": [[136, "weight-format-weighted"]], "1.4 Label format\uff08LABELED\uff09": [[136, "label-format-labeled"]], "1.5 Putting together": [[136, "putting-together"]], "2 Data source type": [[136, "data-source-type"]], "2.2 Alibaba Cloud MaxCompute data table": [[136, "alibaba-cloud-maxcompute-data-table"]], "3 User API": [[136, "user-api"]], "Graph Object": [[137, "graph-object"]], "2 Describe the Topology": [[137, "describe-the-topology"]], "3.1 Stand-alone Mode": [[137, "stand-alone-mode"]], "3.2 Distributed Mode \u2013 Client/Server Mode": [[137, "distributed-mode-client-server-mode"]], "Graph Query": [[138, "graph-query"]], "1 Introduction": [[139, "introduction"]], "Graph Sampling Language\uff08GSL)": [[141, "graph-sampling-language-gsl"]], "Install from pip": [[142, "install-from-pip"]], "Get wheel package": [[142, "get-wheel-package"]], "Install using pip": [[142, "install-using-pip"]], "Install TensorFlow": [[142, "install-tensorflow"]], "Build from source": [[142, "build-from-source"]], "Install git": [[142, "install-git"]], "Install dependent libraries": [[142, "install-dependent-libraries"]], "Compile": [[142, "compile"], [145, "compile"]], "Install": [[142, "install"]], "Run test": [[142, "run-test"]], "Docker image": [[142, "docker-image"]], "Graph Learning Model": [[143, "graph-learning-model"]], "Data model": [[143, "data-model"]], "Defining Your Own Operator": [[145, "defining-your-own-operator"]], "Programming Interface": [[145, "programming-interface"]], "Distributed Runtime Design": [[145, "distributed-runtime-design"]], "Implement a New Operator": [[145, "implement-a-new-operator"]], "Clone source code": [[145, "clone-source-code"]], "Implement your operator class": [[145, "implement-your-operator-class"]], "Register Operator": [[145, "register-operator"]], "How to Use an Operator": [[145, "how-to-use-an-operator"]], "Integrating Other Data Sources": [[146, "integrating-other-data-sources"]], "File System Interface": [[146, "file-system-interface"]], "ByteStreamAccessFile": [[146, "bytestreamaccessfile"]], "StructuredAccessFile": [[146, "structuredaccessfile"]], "WritableFile": [[146, "writablefile"]], "Register with Scheme": [[146, "register-with-scheme"]], "Quick Start": [[147, "quick-start"]], "1 Trying out the built-in models": [[147, "trying-out-the-built-in-models"]], "2 How to use the GL APIs": [[147, "how-to-use-the-gl-apis"]], "3 Developing a GNN model": [[147, "developing-a-gnn-model"]], "3.1 Data Preparation": [[147, "data-preparation"]], "3.2 Graph Construction": [[147, "graph-construction"]], "3.3 Graph Sampling": [[147, "graph-sampling"]], "3.4 GNN Model": [[147, "gnn-model"]], "System configuration": [[148, "system-configuration"]], "Graph": [[149, "graph"], [153, "graph"], [287, "graph"]], "Graph object": [[149, "graph-object"]], "Loader object": [[149, "loader-object"]], "Graph Functions": [[149, "graph-functions"]], "Interactive Query": [[150, "interactive-query"]], "Builtin algorithms": [[152, "builtin-algorithms"]], "Nodes": [[153, "nodes"]], "Edges": [[153, "edges"]], "Self loops": [[153, "self-loops"]], "Attributes": [[153, "attributes"]], "Freezing graph structure": [[153, "freezing-graph-structure"]], "graphscope.nx.classes.function.add_cycle": [[154, "graphscope-nx-classes-function-add-cycle"]], "graphscope.nx.classes.function.add_path": [[155, "graphscope-nx-classes-function-add-path"]], "graphscope.nx.classes.function.add_star": [[156, "graphscope-nx-classes-function-add-star"]], "graphscope.nx.classes.function.all_neighbors": [[157, "graphscope-nx-classes-function-all-neighbors"]], "graphscope.nx.classes.function.common_neighbors": [[158, "graphscope-nx-classes-function-common-neighbors"]], "graphscope.nx.classes.function.create_empty_copy": [[159, "graphscope-nx-classes-function-create-empty-copy"]], "graphscope.nx.classes.function.degree": [[160, "graphscope-nx-classes-function-degree"]], "graphscope.nx.classes.function.degree_histogram": [[161, "graphscope-nx-classes-function-degree-histogram"]], "graphscope.nx.classes.function.density": [[162, "graphscope-nx-classes-function-density"]], "graphscope.nx.classes.function.edge_subgraph": [[163, "graphscope-nx-classes-function-edge-subgraph"]], "graphscope.nx.classes.function.edges": [[164, "graphscope-nx-classes-function-edges"]], "graphscope.nx.classes.function.freeze": [[165, "graphscope-nx-classes-function-freeze"]], "graphscope.nx.classes.function.induced_subgraph": [[166, "graphscope-nx-classes-function-induced-subgraph"]], "graphscope.nx.classes.function.info": [[167, "graphscope-nx-classes-function-info"]], "graphscope.nx.classes.function.is_directed": [[168, "graphscope-nx-classes-function-is-directed"]], "graphscope.nx.classes.function.is_empty": [[169, "graphscope-nx-classes-function-is-empty"]], "graphscope.nx.classes.function.is_frozen": [[170, "graphscope-nx-classes-function-is-frozen"]], "graphscope.nx.classes.function.is_negatively_weighted": [[171, "graphscope-nx-classes-function-is-negatively-weighted"]], "graphscope.nx.classes.function.is_weighted": [[172, "graphscope-nx-classes-function-is-weighted"]], "graphscope.nx.classes.function.neighbors": [[173, "graphscope-nx-classes-function-neighbors"]], "graphscope.nx.classes.function.nodes": [[174, "graphscope-nx-classes-function-nodes"]], "graphscope.nx.classes.function.nodes_with_selfloops": [[175, "graphscope-nx-classes-function-nodes-with-selfloops"]], "graphscope.nx.classes.function.non_edges": [[176, "graphscope-nx-classes-function-non-edges"]], "graphscope.nx.classes.function.non_neighbors": [[177, "graphscope-nx-classes-function-non-neighbors"]], "graphscope.nx.classes.function.number_of_edges": [[178, "graphscope-nx-classes-function-number-of-edges"]], "graphscope.nx.classes.function.number_of_nodes": [[179, "graphscope-nx-classes-function-number-of-nodes"]], "graphscope.nx.classes.function.number_of_selfloops": [[180, "graphscope-nx-classes-function-number-of-selfloops"]], "graphscope.nx.classes.function.selfloop_edges": [[181, "graphscope-nx-classes-function-selfloop-edges"]], "graphscope.nx.classes.function.subgraph": [[182, "graphscope-nx-classes-function-subgraph"]], "graphscope.nx.classes.function.to_directed": [[183, "graphscope-nx-classes-function-to-directed"]], "graphscope.nx.classes.function.to_undirected": [[184, "graphscope-nx-classes-function-to-undirected"]], "graphscope.nx.generators.atlas.graph_atlas": [[185, "graphscope-nx-generators-atlas-graph-atlas"]], "graphscope.nx.generators.atlas.graph_atlas_g": [[186, "graphscope-nx-generators-atlas-graph-atlas-g"]], "graphscope.nx.generators.classic.balanced_tree": [[187, "graphscope-nx-generators-classic-balanced-tree"]], "graphscope.nx.generators.classic.barbell_graph": [[188, "graphscope-nx-generators-classic-barbell-graph"]], "graphscope.nx.generators.classic.binomial_tree": [[189, "graphscope-nx-generators-classic-binomial-tree"]], "graphscope.nx.generators.classic.circulant_graph": [[190, "graphscope-nx-generators-classic-circulant-graph"]], "graphscope.nx.generators.classic.circular_ladder_graph": [[191, "graphscope-nx-generators-classic-circular-ladder-graph"]], "graphscope.nx.generators.classic.complete_graph": [[192, "graphscope-nx-generators-classic-complete-graph"]], "graphscope.nx.generators.classic.complete_multipartite_graph": [[193, "graphscope-nx-generators-classic-complete-multipartite-graph"]], "graphscope.nx.generators.classic.cycle_graph": [[194, "graphscope-nx-generators-classic-cycle-graph"]], "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph": [[195, "graphscope-nx-generators-classic-dorogovtsev-goltsev-mendes-graph"]], "graphscope.nx.generators.classic.empty_graph": [[196, "graphscope-nx-generators-classic-empty-graph"]], "graphscope.nx.generators.classic.full_rary_tree": [[197, "graphscope-nx-generators-classic-full-rary-tree"]], "graphscope.nx.generators.classic.ladder_graph": [[198, "graphscope-nx-generators-classic-ladder-graph"]], "graphscope.nx.generators.classic.lollipop_graph": [[199, "graphscope-nx-generators-classic-lollipop-graph"]], "graphscope.nx.generators.classic.null_graph": [[200, "graphscope-nx-generators-classic-null-graph"]], "graphscope.nx.generators.classic.path_graph": [[201, "graphscope-nx-generators-classic-path-graph"]], "graphscope.nx.generators.classic.star_graph": [[202, "graphscope-nx-generators-classic-star-graph"]], "graphscope.nx.generators.classic.trivial_graph": [[203, "graphscope-nx-generators-classic-trivial-graph"]], "graphscope.nx.generators.classic.turan_graph": [[204, "graphscope-nx-generators-classic-turan-graph"]], "graphscope.nx.generators.classic.wheel_graph": [[205, "graphscope-nx-generators-classic-wheel-graph"]], "graphscope.nx.generators.community.LFR_benchmark_graph": [[206, "graphscope-nx-generators-community-lfr-benchmark-graph"]], "graphscope.nx.generators.community.caveman_graph": [[207, "graphscope-nx-generators-community-caveman-graph"]], "graphscope.nx.generators.community.connected_caveman_graph": [[208, "graphscope-nx-generators-community-connected-caveman-graph"]], "graphscope.nx.generators.community.gaussian_random_partition_graph": [[209, "graphscope-nx-generators-community-gaussian-random-partition-graph"]], "graphscope.nx.generators.community.planted_partition_graph": [[210, "graphscope-nx-generators-community-planted-partition-graph"]], "graphscope.nx.generators.community.random_partition_graph": [[211, "graphscope-nx-generators-community-random-partition-graph"]], "graphscope.nx.generators.community.relaxed_caveman_graph": [[212, "graphscope-nx-generators-community-relaxed-caveman-graph"]], "graphscope.nx.generators.community.ring_of_cliques": [[213, "graphscope-nx-generators-community-ring-of-cliques"]], "graphscope.nx.generators.community.stochastic_block_model": [[214, "graphscope-nx-generators-community-stochastic-block-model"]], "graphscope.nx.generators.community.windmill_graph": [[215, "graphscope-nx-generators-community-windmill-graph"]], "graphscope.nx.generators.degree_seq.configuration_model": [[216, "graphscope-nx-generators-degree-seq-configuration-model"]], "graphscope.nx.generators.degree_seq.degree_sequence_tree": [[217, "graphscope-nx-generators-degree-seq-degree-sequence-tree"]], "graphscope.nx.generators.degree_seq.directed_configuration_model": [[218, "graphscope-nx-generators-degree-seq-directed-configuration-model"]], "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph": [[219, "graphscope-nx-generators-degree-seq-directed-havel-hakimi-graph"]], "graphscope.nx.generators.degree_seq.expected_degree_graph": [[220, "graphscope-nx-generators-degree-seq-expected-degree-graph"]], "graphscope.nx.generators.degree_seq.havel_hakimi_graph": [[221, "graphscope-nx-generators-degree-seq-havel-hakimi-graph"]], "graphscope.nx.generators.degree_seq.random_degree_sequence_graph": [[222, "graphscope-nx-generators-degree-seq-random-degree-sequence-graph"]], "graphscope.nx.generators.directed.gn_graph": [[223, "graphscope-nx-generators-directed-gn-graph"]], "graphscope.nx.generators.directed.gnc_graph": [[224, "graphscope-nx-generators-directed-gnc-graph"]], "graphscope.nx.generators.directed.gnr_graph": [[225, "graphscope-nx-generators-directed-gnr-graph"]], "graphscope.nx.generators.directed.random_k_out_graph": [[226, "graphscope-nx-generators-directed-random-k-out-graph"]], "graphscope.nx.generators.directed.scale_free_graph": [[227, "graphscope-nx-generators-directed-scale-free-graph"]], "graphscope.nx.generators.duplication.duplication_divergence_graph": [[228, "graphscope-nx-generators-duplication-duplication-divergence-graph"]], "graphscope.nx.generators.duplication.partial_duplication_graph": [[229, "graphscope-nx-generators-duplication-partial-duplication-graph"]], "graphscope.nx.generators.ego.ego_graph": [[230, "graphscope-nx-generators-ego-ego-graph"]], "graphscope.nx.generators.expanders.chordal_cycle_graph": [[231, "graphscope-nx-generators-expanders-chordal-cycle-graph"]], "graphscope.nx.generators.expanders.margulis_gabber_galil_graph": [[232, "graphscope-nx-generators-expanders-margulis-gabber-galil-graph"]], "graphscope.nx.generators.expanders.paley_graph": [[233, "graphscope-nx-generators-expanders-paley-graph"]], "graphscope.nx.generators.geometric.geographical_threshold_graph": [[234, "graphscope-nx-generators-geometric-geographical-threshold-graph"]], "graphscope.nx.generators.geometric.random_geometric_graph": [[235, "graphscope-nx-generators-geometric-random-geometric-graph"]], "graphscope.nx.generators.geometric.soft_random_geometric_graph": [[236, "graphscope-nx-generators-geometric-soft-random-geometric-graph"]], "graphscope.nx.generators.geometric.thresholded_random_geometric_graph": [[237, "graphscope-nx-generators-geometric-thresholded-random-geometric-graph"]], "graphscope.nx.generators.geometric.waxman_graph": [[238, "graphscope-nx-generators-geometric-waxman-graph"]], "graphscope.nx.generators.harary_graph.hkn_harary_graph": [[239, "graphscope-nx-generators-harary-graph-hkn-harary-graph"]], "graphscope.nx.generators.harary_graph.hnm_harary_graph": [[240, "graphscope-nx-generators-harary-graph-hnm-harary-graph"]], "graphscope.nx.generators.intersection.general_random_intersection_graph": [[241, "graphscope-nx-generators-intersection-general-random-intersection-graph"]], "graphscope.nx.generators.intersection.k_random_intersection_graph": [[242, "graphscope-nx-generators-intersection-k-random-intersection-graph"]], "graphscope.nx.generators.intersection.uniform_random_intersection_graph": [[243, "graphscope-nx-generators-intersection-uniform-random-intersection-graph"]], "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph": [[244, "graphscope-nx-generators-joint-degree-seq-directed-joint-degree-graph"]], "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree": [[245, "graphscope-nx-generators-joint-degree-seq-is-valid-directed-joint-degree"]], "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree": [[246, "graphscope-nx-generators-joint-degree-seq-is-valid-joint-degree"]], "graphscope.nx.generators.joint_degree_seq.joint_degree_graph": [[247, "graphscope-nx-generators-joint-degree-seq-joint-degree-graph"]], "graphscope.nx.generators.mycielski.mycielski_graph": [[248, "graphscope-nx-generators-mycielski-mycielski-graph"]], "graphscope.nx.generators.mycielski.mycielskian": [[249, "graphscope-nx-generators-mycielski-mycielskian"]], "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees": [[250, "graphscope-nx-generators-nonisomorphic-trees-nonisomorphic-trees"]], "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees": [[251, "graphscope-nx-generators-nonisomorphic-trees-number-of-nonisomorphic-trees"]], "graphscope.nx.generators.small.LCF_graph": [[252, "graphscope-nx-generators-small-lcf-graph"]], "graphscope.nx.generators.small.bull_graph": [[253, "graphscope-nx-generators-small-bull-graph"]], "graphscope.nx.generators.small.chvatal_graph": [[254, "graphscope-nx-generators-small-chvatal-graph"]], "graphscope.nx.generators.small.cubical_graph": [[255, "graphscope-nx-generators-small-cubical-graph"]], "graphscope.nx.generators.small.desargues_graph": [[256, "graphscope-nx-generators-small-desargues-graph"]], "graphscope.nx.generators.small.diamond_graph": [[257, "graphscope-nx-generators-small-diamond-graph"]], "graphscope.nx.generators.small.dodecahedral_graph": [[258, "graphscope-nx-generators-small-dodecahedral-graph"]], "graphscope.nx.generators.small.frucht_graph": [[259, "graphscope-nx-generators-small-frucht-graph"]], "graphscope.nx.generators.small.heawood_graph": [[260, "graphscope-nx-generators-small-heawood-graph"]], "graphscope.nx.generators.small.house_graph": [[261, "graphscope-nx-generators-small-house-graph"]], "graphscope.nx.generators.small.house_x_graph": [[262, "graphscope-nx-generators-small-house-x-graph"]], "graphscope.nx.generators.small.icosahedral_graph": [[263, "graphscope-nx-generators-small-icosahedral-graph"]], "graphscope.nx.generators.small.krackhardt_kite_graph": [[264, "graphscope-nx-generators-small-krackhardt-kite-graph"]], "graphscope.nx.generators.small.make_small_graph": [[265, "graphscope-nx-generators-small-make-small-graph"]], "graphscope.nx.generators.small.moebius_kantor_graph": [[266, "graphscope-nx-generators-small-moebius-kantor-graph"]], "graphscope.nx.generators.small.octahedral_graph": [[267, "graphscope-nx-generators-small-octahedral-graph"]], "graphscope.nx.generators.small.pappus_graph": [[268, "graphscope-nx-generators-small-pappus-graph"]], "graphscope.nx.generators.small.petersen_graph": [[269, "graphscope-nx-generators-small-petersen-graph"]], "graphscope.nx.generators.small.sedgewick_maze_graph": [[270, "graphscope-nx-generators-small-sedgewick-maze-graph"]], "graphscope.nx.generators.small.tetrahedral_graph": [[271, "graphscope-nx-generators-small-tetrahedral-graph"]], "graphscope.nx.generators.small.truncated_cube_graph": [[272, "graphscope-nx-generators-small-truncated-cube-graph"]], "graphscope.nx.generators.small.truncated_tetrahedron_graph": [[273, "graphscope-nx-generators-small-truncated-tetrahedron-graph"]], "graphscope.nx.generators.small.tutte_graph": [[274, "graphscope-nx-generators-small-tutte-graph"]], "graphscope.nx.generators.social.davis_southern_women_graph": [[275, "graphscope-nx-generators-social-davis-southern-women-graph"]], "graphscope.nx.generators.social.florentine_families_graph": [[276, "graphscope-nx-generators-social-florentine-families-graph"]], "graphscope.nx.generators.social.karate_club_graph": [[277, "graphscope-nx-generators-social-karate-club-graph"]], "graphscope.nx.generators.social.les_miserables_graph": [[278, "graphscope-nx-generators-social-les-miserables-graph"]], "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge": [[279, "graphscope-nx-generators-spectral-graph-forge-spectral-graph-forge"]], "graphscope.nx.generators.sudoku.sudoku_graph": [[280, "graphscope-nx-generators-sudoku-sudoku-graph"]], "graphscope.nx.generators.trees.prefix_tree": [[281, "graphscope-nx-generators-trees-prefix-tree"]], "graphscope.nx.generators.trees.random_tree": [[282, "graphscope-nx-generators-trees-random-tree"]], "graphscope.nx.generators.triads.triad_graph": [[283, "graphscope-nx-generators-triads-triad-graph"]], "networkx.generators.internet_as_graphs.random_internet_as_graph": [[284, "networkx-generators-internet-as-graphs-random-internet-as-graph"]], "networkx.generators.stochastic.stochastic_graph": [[285, "networkx-generators-stochastic-stochastic-graph"]], "Graph generators": [[286, "graph-generators"]], "Atlas": [[286, "module-graphscope.nx.generators.atlas"]], "Classic": [[286, "module-graphscope.nx.generators.classic"]], "Expanders": [[286, "module-graphscope.nx.generators.expanders"]], "Small": [[286, "module-graphscope.nx.generators.small"]], "Duplication Divergence": [[286, "module-graphscope.nx.generators.duplication"]], "Degree Sequence": [[286, "module-graphscope.nx.generators.degree_seq"]], "Directed": [[286, "module-graphscope.nx.generators.directed"]], "Geometric": [[286, "module-graphscope.nx.generators.geometric"]], "Ego Graph": [[286, "module-graphscope.nx.generators.ego"]], "Stochastic": [[286, "module-networkx.generators.stochastic"]], "AS graph": [[286, "module-networkx.generators.internet_as_graphs"]], "Intersection": [[286, "module-graphscope.nx.generators.intersection"]], "Social Networks": [[286, "module-graphscope.nx.generators.social"]], "Spectral": [[286, "module-graphscope.nx.generators.spectral_graph_forge"]], "Trees": [[286, "module-graphscope.nx.generators.trees"]], "Non Isomorphic Trees": [[286, "module-graphscope.nx.generators.nonisomorphic_trees"]], "Triads": [[286, "module-graphscope.nx.generators.triads"]], "Joint Degree Sequence": [[286, "module-graphscope.nx.generators.joint_degree_seq"]], "Mycielski": [[286, "module-graphscope.nx.generators.mycielski"]], "Harary Graph": [[286, "module-graphscope.nx.generators.harary_graph"]], "Sudoku": [[286, "module-graphscope.nx.generators.sudoku"]], "Graph types": [[287, "graph-types"]], "DiGraph": [[287, "digraph"]], "NetworkX-style API": [[288, "networkx-style-api"]], "Reading graphs": [[289, "reading-graphs"]], "Edge List": [[289, "edge-list"]], "Adjacency List": [[289, "adjacency-list"]], "Graph Transformation": [[290, "graph-transformation"]], "Operation": [[291, "operation"]], "Operation object": [[291, "operation-object"]], "BuiltIn operations": [[291, "module-graphscope.framework.dag_utils"]], "Python API Reference": [[292, "python-api-reference"]], "Selector": [[293, "selector"]], "Selectors in different context": [[293, "selectors-in-different-context"]], "TensorContext": [[293, "tensorcontext"]], "VertexDataContext": [[293, "vertexdatacontext"]], "LabeledVertexDataContext": [[293, "labeledvertexdatacontext"]], "VertexPropertyContext": [[293, "vertexpropertycontext"]], "LabeledVertexPropertyContext": [[293, "labeledvertexpropertycontext"]], "Methods that use selectors": [[293, "methods-that-use-selectors"]], "One-dimensional results": [[293, "one-dimensional-results"]], "Multi-dimensional results": [[293, "multi-dimensional-results"]], "Vertex Range": [[293, "vertex-range"]], "Session": [[294, "session"]], "Session object": [[294, "session-object"]], "Session Functions": [[294, "session-functions"]], "Resources Estimator": [[295, "resources-estimator"]], "GART: Bridging the Gap between Relational OLTP and Graph Workloads": [[296, "gart-bridging-the-gap-between-relational-oltp-and-graph-workloads"]], "Architecture and Workflow": [[296, "architecture-and-workflow"]], "Defining Graph Mapping in GART": [[296, "defining-graph-mapping-in-gart"]], "Loading Logs to GART Storage": [[296, "loading-logs-to-gart-storage"]], "Using Loaded Graphs from GraphScope": [[296, "using-loaded-graphs-from-graphscope"]], "GraphAr: Standard Graph Data File Format": [[298, "graphar-standard-graph-data-file-format"]], "The GraphAr File Format": [[298, "the-graphar-file-format"]], "Features": [[298, "features"]], "File Format": [[298, "file-format"]], "Information files": [[298, "information-files"]], "Data files": [[298, "data-files"]], "GraphAr in GraphScope": [[298, "graphar-in-graphscope"]], "Loading GraphAr Data into GraphScope": [[298, "loading-graphar-data-into-graphscope"]], "Archiving the Graph Data in GraphAr": [[298, "archiving-the-graph-data-in-graphar"]], "GRIN: Graph Retrieval INterface": [[299, "grin-graph-retrieval-interface"]], "Motivations": [[299, "motivations"]], "Unified Graph Retrieval": [[299, "unified-graph-retrieval"]], "GRIN Concepts": [[299, "grin-concepts"]], "Predefined Macros": [[299, "predefined-macros"]], "Partition Strategy": [[299, "partition-strategy"]], "Edge-cut Partition Strategy": [[299, "edge-cut-partition-strategy"]], "Vertex-cut Partition Strategy": [[299, "vertex-cut-partition-strategy"]], "Property Graph Model": [[299, "property-graph-model"]], "Implementation Guideline": [[299, "implementation-guideline"]], "For computing engine": [[299, "for-computing-engine"]], "For storage engine": [[299, "for-storage-engine"]], "Design Details": [[299, "design-details"]], "Handler": [[299, "handler"]], "Edge": [[299, "edge"]], "List": [[299, "list"]], "Array-style Retrieval": [[299, "array-style-retrieval"]], "List Iterator": [[299, "list-iterator"]], "Property": [[299, "property"]], "Label": [[299, "label"], [320, "label"]], "Master and Mirror": [[299, "master-and-mirror"]], "Local Complete": [[299, "local-complete"]], "Natural ID Trait": [[299, "natural-id-trait"]], "Groot: Persistent Graph Store": [[300, "groot-persistent-graph-store"]], "Known Limitation": [[300, "known-limitation"]], "Deploy Groot": [[300, "deploy-groot"]], "Install from ArtifactHub": [[300, "install-from-artifacthub"]], "Installing from a local directory": [[300, "installing-from-a-local-directory"]], "Common Configurations": [[300, "common-configurations"]], "Connecting to Groot": [[300, "connecting-to-groot"]], "Connection": [[300, "connection"]], "Building and Modifying Graph Models": [[300, "building-and-modifying-graph-models"]], "Using Built-in Datasets": [[300, "using-built-in-datasets"]], "Customizing Models and Datasets": [[300, "customizing-models-and-datasets"]], "Querying Data": [[300, "querying-data"]], "Python": [[300, "python"]], "Java": [[300, "java"]], "Node.js": [[300, "node-js"]], "Data Import": [[300, "data-import"]], "Offline Import": [[300, "offline-import"]], "Prerequisite": [[300, "prerequisite"]], "Data Format": [[300, "data-format"]], "Loading Process": [[300, "loading-process"]], "Build: Building a partitioned graph": [[300, "build-building-a-partitioned-graph"]], "Uninstalling and Restarting": [[300, "uninstalling-and-restarting"]], "Uninstall Groot": [[300, "uninstall-groot"]], "Restart Groot": [[300, "restart-groot"]], "Destroy Groot": [[300, "destroy-groot"]], "Developing Guide": [[300, "developing-guide"]], "Build image": [[300, "build-image"]], "Persistence": [[300, "persistence"]], "Troubleshooting": [[300, "troubleshooting"]], "Viewing logs": [[300, "viewing-logs"]], "Configuring logs": [[300, "configuring-logs"]], "In-memory immutable graphs on Vineyard": [[301, "in-memory-immutable-graphs-on-vineyard"]], "Graphs in Vineyard": [[301, "graphs-in-vineyard"]], "Loading Graphs to Vineyard": [[301, "loading-graphs-to-vineyard"]], "Using Loaded Graphs": [[301, "using-loaded-graphs"]], "Applications and algorithms": [[302, "applications-and-algorithms"]], "Bind application to graph": [[302, "bind-application-to-graph"]], "Built-in algorithms": [[302, "built-in-algorithms"]], "Scaling and repartitioning": [[303, "scaling-and-repartitioning"]], "Fennel": [[303, "fennel"]], "XtraPuLP": [[303, "xtrapulp"]], "Hybrid partitioning": [[303, "hybrid-partitioning"]], "User Guide and Examples of GAE": [[304, "user-guide-and-examples-of-gae"]], "Developing Your Algorithms with Python": [[304, "developing-your-algorithms-with-python"]], "Developing Your Algorithms with C++": [[304, "developing-your-algorithms-with-c"]], "Developing Your Algorithms with Java": [[304, "developing-your-algorithms-with-java"]], "User Guide and Examples of GLE": [[305, "user-guide-and-examples-of-gle"]], "Error Codes": [[306, "error-codes"]], "Command-line Utility gs": [[307, "command-line-utility-gs"]], "How to Find logs": [[308, "how-to-find-logs"]], "Find logs in k8s": [[308, "find-logs-in-k8s"]], "Find logs for GraphScope Analytical Engine (GAE)": [[308, "find-logs-for-graphscope-analytical-engine-gae"]], "Find logs for Graph Interactive Engine (GIE)": [[308, "find-logs-for-graph-interactive-engine-gie"]], "Find logs for Graph Learning Engine (GLE)": [[308, "find-logs-for-graph-learning-engine-gle"]], "Find logs for Groot": [[308, "find-logs-for-groot"]], "Monitoring": [[309, "monitoring"]], "\u56fe\u5206\u6790\u5f15\u64ce": [[310, "id1"]], "\u5185\u7f6e\u7b97\u6cd5": [[310, "id2"]], "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": [[310, "id3"]], "\u4f7f\u7528 PIE \u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[310, "pie"]], "\u4f7f\u7528 Pregel \u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[310, "pregel"]], "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528 math.h \u4e2d\u7684\u51fd\u6570": [[310, "math-h"]], "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[310, "id5"]], "\u8fd0\u884cJava\u7f16\u5199\u7684\u7b97\u6cd5": [[310, "java"]], "\u8fd0\u884c\u793a\u4f8b\u7684Java\u7b97\u6cd5": [[310, "id6"]], "\u4f7f\u7528Java\u7f16\u5199\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5": [[310, "id7"]], "\u90e8\u7f72": [[311, "id1"]], "\u4f7f\u7528Helm\u90e8\u7f72GraphScope": [[311, "helmgraphscope"]], "\u5728AWS/\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": [[311, "aws"]], "\u672c\u5730\u90e8\u7f72GraphScope": [[311, "graphscope"]], "\u5f00\u53d1\u8005\u6307\u5357": [[312, "id1"]], "\u57fa\u4e8e Docker \u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5 GraphScope": [[312, "docker-graphscope"]], "\u57fa\u4e8e Kubernetes \u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5 GraphScope": [[312, "kubernetes-graphscope"]], "\u6784\u5efa Python Wheels": [[312, "python-wheels"]], "Linux": [[312, "linux"]], "macOS": [[312, "macos"]], "\u4ee3\u7801\u98ce\u683c": [[312, "id3"]], "\u5e38\u89c1\u95ee\u9898": [[313, "id1"]], "\u5feb\u901f\u4e0a\u624b": [[314, "id1"]], "\u793a\u4f8b: \u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [[314, "id3"]], "\u521b\u5efa\u4f1a\u8bdd": [[314, "id4"]], "\u4ea4\u4e92\u5f0f\u67e5\u8be2": [[314, "id6"]], "\u56fe\u5206\u6790": [[314, "id7"]], "\u56fe\u795e\u7ecf\u7f51\u7edc (GNNs)": [[314, "gnns"]], "\u5173\u95ed\u4f1a\u8bdd": [[314, "id8"]], "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": [[315, "graph-transformation"]], "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": [[315, "id2"]], "\u6295\u5f71": [[315, "id3"]], "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": [[315, "id4"]], "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": [[315, "id5"]], "GraphScope: \u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": [[316, "graphscope"]], "\u76ee\u5f55": [[316, null], [321, null]], "API \u53c2\u8003": [[316, null]], "\u7d22\u5f15": [[316, "id1"]], "\u5b89\u88c5": [[317, "id1"]], "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": [[317, "id2"]], "\u57fa\u4e8e Kubernetes \u5b89\u88c5 GraphScope \u5ba2\u6237\u7aef": [[317, "kubernetes-graphscope"]], "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": [[318, "id1"]], "Apache TinkerPop": [[318, "apache-tinkerpop"]], "\u5229\u7528Python\uff08Gremlin\uff09\u8fde\u63a5GraphScope": [[318, "python-gremlin-graphscope"]], "\u5229\u7528Java\uff08Gremlin\uff09\u8fde\u63a5GraphScope": [[318, "java-gremlin-graphscope"]], "Gremlin Console\uff08\u5f00\u53d1\u63a7\u5236\u53f0\uff09": [[318, "id5"]], "Gremlin\u7f16\u7a0b\u5165\u95e8\u2013101": [[318, "gremlin-101"]], "\u56fe\u6570\u636e\u6a21\u578b": [[318, "id8"]], "\u67e5\u8be2\u8bed\u8a00": [[318, "id9"]], "\u4e00\u4e2a\u4f8b\u5b50": [[318, "id10"]], "Gremlin\u517c\u5bb9\u6027\uff08\u5bf9\u6bd4TinkerPop\uff09": [[318, "gremlin-tinkerpop"]], "\u5c5e\u6027\u56fe\u6a21\u578b\u7ea6\u675f": [[318, "id11"]], "\u5c1a\u4e0d\u652f\u6301\u7684\u529f\u80fd\u7279\u6027": [[318, "id12"]], "\u652f\u6301\u7684Gremlin\u64cd\u4f5c": [[318, "id13"]], "\u5df2\u77e5\u9650\u5236": [[318, "id14"]], "\u56fe\u5b66\u4e60\u5f15\u64ce": [[319, "id1"]], "\u56fe\u5b66\u4e60\u6a21\u578b": [[319, "id2"]], "\u6570\u636e\u6a21\u578b": [[319, "id3"]], "\u7f16\u7801\u5668": [[319, "id4"]], "\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[319, "id5"]], "\u91c7\u6837": [[319, "id6"]], "\u56fe\u6570\u636e\u6d41": [[319, "id7"]], "\u6a21\u578b": [[319, "id8"]], "\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": [[319, "id9"]], "\u8f7d\u56fe": [[320, "loading-graphs"]], "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": [[320, "id3"]], "\u624b\u52a8\u914d\u7f6e\u56fe": [[320, "id4"]], "Build Vertex": [[320, "build-vertex"]], "vertices": [[320, "vertices"]], "properties": [[320, "properties"], [320, "id7"]], "vid_field": [[320, "vid-field"]], "Build Edge": [[320, "build-edge"]], "edges": [[320, "edges"]], "label": [[320, "id6"]], "src_label and dst_label": [[320, "src-label-and-dst-label"]], "src_field and dst_field": [[320, "src-field-and-dst-field"]], "\u9ad8\u7ea7\u7528\u6cd5": [[320, "id8"]], "\u6ca1\u6709\u6b67\u4e49\u65f6\uff0c\u81ea\u52a8\u63a8\u65ad\u70b9\u6807\u7b7e": [[320, "id9"]], "\u4ece\u8fb9\u4e2d\u63a8\u65ad\u70b9": [[320, "id10"]], "\u591a\u79cd\u8fb9\u5173\u7cfb": [[320, "id11"]], "\u6307\u5b9a\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b": [[320, "id12"]], "\u56fe\u7684\u5176\u4ed6\u53c2\u6570": [[320, "id13"]], "\u5b8c\u6574\u7684\u793a\u4f8b": [[320, "id14"]], "\u4ece Pandas \u6216 Numpy \u4e2d\u8f7d\u56fe": [[320, "pandas-numpy"]], "\u4ece Pandas \u4e2d\u8f7d\u56fe": [[320, "pandas"]], "\u4ece Numpy \u4e2d\u8f7d\u56fe": [[320, "numpy"]], "Loader \u7684\u53d8\u79cd": [[320, "loader"]], "\u5165\u95e8\u6559\u7a0b": [[321, "id1"]]}, "indexentries": {"all_pairs_shortest_path_length()": [[0, "all_pairs_shortest_path_length"]], "attribute_assortativity()": [[0, "attribute_assortativity"]], "average_degree_connectivity()": [[0, "average_degree_connectivity"]], "betweenness_centrality()": [[0, "betweenness_centrality"]], "bfs()": [[0, "bfs"]], "built-in function": [[0, "all_pairs_shortest_path_length"], [0, "attribute_assortativity"], [0, "average_degree_connectivity"], [0, "betweenness_centrality"], [0, "bfs"], [0, "closeness_centrality"], [0, "degree_assortativity_coefficient"], [0, "degree_centrality"], [0, "dfs"], [0, "eigenvector_centrality"], [0, "hits"], [0, "id0"], [0, "id1"], [0, "id2"], [0, "katz_centrality"], [0, "kkore"], [0, "kshell"], [0, "lpa"], [0, "sampling_path"], [0, "sssp"]], "closeness_centrality()": [[0, "closeness_centrality"]], "clustering()": [[0, "id0"]], "degree_assortativity_coefficient()": [[0, "degree_assortativity_coefficient"]], "degree_centrality()": [[0, "degree_centrality"]], "dfs()": [[0, "dfs"]], "eigenvector_centrality()": [[0, "eigenvector_centrality"]], "hits()": [[0, "hits"]], "katz_centrality()": [[0, "katz_centrality"]], "kkore()": [[0, "kkore"]], "kshell()": [[0, "kshell"]], "lpa()": [[0, "lpa"]], "pagerank()": [[0, "id1"]], "sampling_path()": [[0, "sampling_path"]], "sssp()": [[0, "sssp"]], "voterank()": [[0, "id2"]], "gs::appbase (c++ class)": [[75, "_CPPv4I00EN2gs7AppBaseE"]], "gs::appbase::appbase (c++ function)": [[75, "_CPPv4N2gs7AppBase7AppBaseEv"]], "gs::appbase::inceval (c++ function)": [[75, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::appbase::peval (c++ function)": [[75, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::appbase::load_strategy (c++ member)": [[75, "_CPPv4N2gs7AppBase13load_strategyE"]], "gs::appbase::message_manager_t (c++ type)": [[75, "_CPPv4N2gs7AppBase17message_manager_tE"]], "gs::appbase::message_strategy (c++ member)": [[75, "_CPPv4N2gs7AppBase16message_strategyE"]], "gs::appbase::need_split_edges (c++ member)": [[75, "_CPPv4N2gs7AppBase16need_split_edgesE"]], "gs::appbase::~appbase (c++ function)": [[75, "_CPPv4N2gs7AppBaseD0Ev"]], "gs::appentry (c++ class)": [[75, "_CPPv4N2gs8AppEntryE"]], "gs::appentry::appentry (c++ function)": [[75, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE"]], "gs::appentry::createworker (c++ function)": [[75, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::appentry::init (c++ function)": [[75, "_CPPv4N2gs8AppEntry4InitEv"]], "gs::appentry::query (c++ function)": [[75, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE"]], "gs::argtypeat (c++ struct)": [[75, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE"]], "gs::argsnum (c++ struct)": [[75, "_CPPv4I0EN2gs7ArgsNumE"]], "gs::argsunpacker (c++ struct)": [[75, "_CPPv4I0EN2gs12ArgsUnpackerE"]], "gs::arrowfragmentloader (c++ class)": [[75, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE"]], "gs::arrowfragmentloader::addlabelstofragment (c++ function)": [[75, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE"]], "gs::arrowfragmentloader::addlabelstofragmentasfragmentgroup (c++ function)": [[75, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE"]], "gs::arrowfragmentloader::arrowfragmentloader (c++ function)": [[75, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE"], [75, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbbb"]], "gs::arrowfragmentloader::loadedgetables (c++ function)": [[75, "_CPPv4N2gs19ArrowFragmentLoader14LoadEdgeTablesEv"]], "gs::arrowfragmentloader::loadfragment (c++ function)": [[75, "_CPPv4N2gs19ArrowFragmentLoader12LoadFragmentEv"]], "gs::arrowfragmentloader::loadfragmentasfragmentgroup (c++ function)": [[75, "_CPPv4N2gs19ArrowFragmentLoader27LoadFragmentAsFragmentGroupEv"]], "gs::arrowfragmentloader::loadvertexedgetables (c++ function)": [[75, "_CPPv4N2gs19ArrowFragmentLoader20LoadVertexEdgeTablesEv"]], "gs::arrowfragmentloader::loadvertextables (c++ function)": [[75, "_CPPv4N2gs19ArrowFragmentLoader16LoadVertexTablesEv"]], "gs::arrowfragmentloader::initpartitioner (c++ function)": [[75, "_CPPv4N2gs19ArrowFragmentLoader15initPartitionerEv"]], "gs::arrowfragmentloader::~arrowfragmentloader (c++ function)": [[75, "_CPPv4N2gs19ArrowFragmentLoaderD0Ev"]], "gs::arrowprojectedfragment (c++ class)": [[75, "_CPPv4I00000_bEN2gs22ArrowProjectedFragmentE"]], "gs::arrowprojectedfragment::construct (c++ function)": [[75, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE"]], "gs::arrowprojectedfragment::create (c++ function)": [[75, "_CPPv4N2gs22ArrowProjectedFragment6CreateEv"]], "gs::arrowprojectedfragment::getdata (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t"]], "gs::arrowprojectedfragment::getedgenum (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment10GetEdgeNumEv"]], "gs::arrowprojectedfragment::getfragid (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t"]], "gs::arrowprojectedfragment::getid (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinedgenum (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment12GetInEdgeNumEv"]], "gs::arrowprojectedfragment::getincomingadjlist (c++ function)": [[75, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t"], [75, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"], [75, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetIncomingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t"]], "gs::arrowprojectedfragment::getincomingedgenum (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingEdgeNumEv"]], "gs::arrowprojectedfragment::getincominginnervertexadjlist (c++ function)": [[75, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"]], "gs::arrowprojectedfragment::getincomingoutervertexadjlist (c++ function)": [[75, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertex (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexgid (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexid (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexinternalid (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinnerverticesnum (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment19GetInnerVerticesNumEv"]], "gs::arrowprojectedfragment::getinternalid (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getlocalindegree (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t"]], "gs::arrowprojectedfragment::getlocaloutdegree (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t"]], "gs::arrowprojectedfragment::getoutedgenum (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment13GetOutEdgeNumEv"]], "gs::arrowprojectedfragment::getoutervertex (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexgid (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexid (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexinternalid (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getouterverticesnum (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment19GetOuterVerticesNumEv"]], "gs::arrowprojectedfragment::getoutgoingadjlist (c++ function)": [[75, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifI8COMPACT_18compact_adj_list_tE4typeERK8vertex_t"], [75, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"], [75, "_CPPv4I_bENK2gs22ArrowProjectedFragment18GetOutgoingAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t5fid_t"]], "gs::arrowprojectedfragment::getoutgoingedgenum (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingEdgeNumEv"]], "gs::arrowprojectedfragment::getoutgoinginnervertexadjlist (c++ function)": [[75, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"]], "gs::arrowprojectedfragment::getoutgoingoutervertexadjlist (c++ function)": [[75, "_CPPv4I_bENK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListENSt9enable_ifIXnt8COMPACT_E10adj_list_tE4typeERK8vertex_t"]], "gs::arrowprojectedfragment::gettotalverticesnum (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment19GetTotalVerticesNumEv"]], "gs::arrowprojectedfragment::getvertex (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getvertexmap (c++ function)": [[75, "_CPPv4N2gs22ArrowProjectedFragment12GetVertexMapEv"], [75, "_CPPv4NK2gs22ArrowProjectedFragment12GetVertexMapEv"]], "gs::arrowprojectedfragment::getverticesnum (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment14GetVerticesNumEv"]], "gs::arrowprojectedfragment::gid2oid (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t"]], "gs::arrowprojectedfragment::gid2vertex (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::iedests (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::ioedests (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::innervertexgid2vertex (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::innervertices (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment13InnerVerticesEv"]], "gs::arrowprojectedfragment::isinnervertex (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t"]], "gs::arrowprojectedfragment::isoutervertex (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t"]], "gs::arrowprojectedfragment::mirrorvertices (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t"]], "gs::arrowprojectedfragment::oedests (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::oid2gid (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t"], [75, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t"]], "gs::arrowprojectedfragment::outervertexgid2vertex (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::outervertices (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t"], [75, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesEv"]], "gs::arrowprojectedfragment::preparetorunapp (c++ function)": [[75, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE"]], "gs::arrowprojectedfragment::project (c++ function)": [[75, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_t7COMPACTEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t"]], "gs::arrowprojectedfragment::vertex2gid (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t"]], "gs::arrowprojectedfragment::vertices (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment8VerticesEv"]], "gs::arrowprojectedfragment::adj_list_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment10adj_list_tE"]], "gs::arrowprojectedfragment::compact_adj_list_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment18compact_adj_list_tE"]], "gs::arrowprojectedfragment::compact_edges (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment13compact_edgesEv"]], "gs::arrowprojectedfragment::compact_nbr_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment13compact_nbr_tE"]], "gs::arrowprojectedfragment::const_adj_list_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment16const_adj_list_tE"]], "gs::arrowprojectedfragment::const_compact_adj_list_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment24const_compact_adj_list_tE"]], "gs::arrowprojectedfragment::directed (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment8directedEv"]], "gs::arrowprojectedfragment::edata_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment7edata_tE"]], "gs::arrowprojectedfragment::edge_label (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment10edge_labelEv"]], "gs::arrowprojectedfragment::edge_prop_id (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment12edge_prop_idEv"]], "gs::arrowprojectedfragment::eid_array_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment11eid_array_tE"]], "gs::arrowprojectedfragment::eid_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment5eid_tE"]], "gs::arrowprojectedfragment::fid (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment3fidEv"]], "gs::arrowprojectedfragment::fnum (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment4fnumEv"]], "gs::arrowprojectedfragment::get_arrow_fragment (c++ function)": [[75, "_CPPv4N2gs22ArrowProjectedFragment18get_arrow_fragmentEv"]], "gs::arrowprojectedfragment::get_edata_array_accessor (c++ function)": [[75, "_CPPv4N2gs22ArrowProjectedFragment24get_edata_array_accessorEv"]], "gs::arrowprojectedfragment::get_ie_offsets_begin_ptr (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment24get_ie_offsets_begin_ptrEv"]], "gs::arrowprojectedfragment::get_ie_offsets_end_ptr (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment22get_ie_offsets_end_ptrEv"]], "gs::arrowprojectedfragment::get_in_edges_ptr (c++ function)": [[75, "_CPPv4I_bENK2gs22ArrowProjectedFragment16get_in_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv"]], "gs::arrowprojectedfragment::get_oe_offsets_begin_ptr (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment24get_oe_offsets_begin_ptrEv"]], "gs::arrowprojectedfragment::get_oe_offsets_end_ptr (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment22get_oe_offsets_end_ptrEv"]], "gs::arrowprojectedfragment::get_out_edges_ptr (c++ function)": [[75, "_CPPv4I_bENK2gs22ArrowProjectedFragment17get_out_edges_ptrENSt9enable_ifIXnt8COMPACT_EPK10nbr_unit_tE4typeEv"]], "gs::arrowprojectedfragment::get_vdata_array_accessor (c++ function)": [[75, "_CPPv4N2gs22ArrowProjectedFragment24get_vdata_array_accessorEv"]], "gs::arrowprojectedfragment::inner_vertex_array_t (c++ type)": [[75, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE"]], "gs::arrowprojectedfragment::inner_vertices_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment16inner_vertices_tE"]], "gs::arrowprojectedfragment::internal_oid_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment14internal_oid_tE"]], "gs::arrowprojectedfragment::label_id_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment10label_id_tE"]], "gs::arrowprojectedfragment::load_strategy (c++ member)": [[75, "_CPPv4N2gs22ArrowProjectedFragment13load_strategyE"]], "gs::arrowprojectedfragment::local_vertex_map (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment16local_vertex_mapEv"]], "gs::arrowprojectedfragment::nbr_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment5nbr_tE"]], "gs::arrowprojectedfragment::nbr_unit_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment10nbr_unit_tE"]], "gs::arrowprojectedfragment::oid_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment5oid_tE"]], "gs::arrowprojectedfragment::outer_vertex_array_t (c++ type)": [[75, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE"]], "gs::arrowprojectedfragment::outer_vertices_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment16outer_vertices_tE"]], "gs::arrowprojectedfragment::prop_id_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment9prop_id_tE"]], "gs::arrowprojectedfragment::property_graph_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment16property_graph_tE"]], "gs::arrowprojectedfragment::property_vertex_map_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment21property_vertex_map_tE"]], "gs::arrowprojectedfragment::sub_vertices_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment14sub_vertices_tE"]], "gs::arrowprojectedfragment::vdata_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment7vdata_tE"]], "gs::arrowprojectedfragment::vertex_array_t (c++ type)": [[75, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE"]], "gs::arrowprojectedfragment::vertex_label (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment12vertex_labelEv"]], "gs::arrowprojectedfragment::vertex_map_id (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment13vertex_map_idEv"]], "gs::arrowprojectedfragment::vertex_map_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment12vertex_map_tE"]], "gs::arrowprojectedfragment::vertex_prop_id (c++ function)": [[75, "_CPPv4NK2gs22ArrowProjectedFragment14vertex_prop_idEv"]], "gs::arrowprojectedfragment::vertex_range_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment14vertex_range_tE"]], "gs::arrowprojectedfragment::vertex_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment8vertex_tE"]], "gs::arrowprojectedfragment::vertices_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment10vertices_tE"]], "gs::arrowprojectedfragment::vid_array_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment11vid_array_tE"]], "gs::arrowprojectedfragment::vid_t (c++ type)": [[75, "_CPPv4N2gs22ArrowProjectedFragment5vid_tE"]], "gs::arrowprojectedfragment::~arrowprojectedfragment (c++ function)": [[75, "_CPPv4N2gs22ArrowProjectedFragmentD0Ev"]], "gs::arrowprojectedvertexmap (c++ class)": [[75, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE"]], "gs::arrowprojectedvertexmap::construct (c++ function)": [[75, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE"]], "gs::arrowprojectedvertexmap::create (c++ function)": [[75, "_CPPv4N2gs23ArrowProjectedVertexMap6CreateEv"]], "gs::arrowprojectedvertexmap::getfidfromgid (c++ function)": [[75, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetFidFromGidE5vid_t"]], "gs::arrowprojectedvertexmap::getgid (c++ function)": [[75, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t"], [75, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t"]], "gs::arrowprojectedvertexmap::getinnervertexsize (c++ function)": [[75, "_CPPv4NK2gs23ArrowProjectedVertexMap18GetInnerVertexSizeE5fid_t"]], "gs::arrowprojectedvertexmap::getlidfromgid (c++ function)": [[75, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetLidFromGidE5vid_t"]], "gs::arrowprojectedvertexmap::getoffsetfromlid (c++ function)": [[75, "_CPPv4N2gs23ArrowProjectedVertexMap16GetOffsetFromLidE5vid_t"]], "gs::arrowprojectedvertexmap::getoid (c++ function)": [[75, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t"]], "gs::arrowprojectedvertexmap::gettotalverticesnum (c++ function)": [[75, "_CPPv4NK2gs23ArrowProjectedVertexMap19GetTotalVerticesNumEv"]], "gs::arrowprojectedvertexmap::offset2lid (c++ function)": [[75, "_CPPv4N2gs23ArrowProjectedVertexMap10Offset2LidERK5vid_t"]], "gs::arrowprojectedvertexmap::project (c++ function)": [[75, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t"]], "gs::ctxwrapperbuilder (c++ struct)": [[75, "_CPPv4I00EN2gs17CtxWrapperBuilderE"]], "gs::defaultpropertyworker (c++ class)": [[75, "_CPPv4I0EN2gs21DefaultPropertyWorkerE"]], "gs::defaultpropertyworker::defaultpropertyworker (c++ function)": [[75, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::defaultpropertyworker::finalize (c++ function)": [[75, "_CPPv4N2gs21DefaultPropertyWorker8FinalizeEv"]], "gs::defaultpropertyworker::getcontext (c++ function)": [[75, "_CPPv4N2gs21DefaultPropertyWorker10GetContextEv"]], "gs::defaultpropertyworker::init (c++ function)": [[75, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::defaultpropertyworker::output (c++ function)": [[75, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE"]], "gs::defaultpropertyworker::query (c++ function)": [[75, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args"]], "gs::defaultpropertyworker::context_t (c++ type)": [[75, "_CPPv4N2gs21DefaultPropertyWorker9context_tE"]], "gs::defaultpropertyworker::fragment_t (c++ type)": [[75, "_CPPv4N2gs21DefaultPropertyWorker10fragment_tE"]], "gs::defaultpropertyworker::message_manager_t (c++ type)": [[75, "_CPPv4N2gs21DefaultPropertyWorker17message_manager_tE"]], "gs::defaultpropertyworker::~defaultpropertyworker (c++ function)": [[75, "_CPPv4N2gs21DefaultPropertyWorkerD0Ev"]], "gs::defaultworker (c++ class)": [[75, "_CPPv4I0EN2gs13DefaultWorkerE"]], "gs::defaultworker::defaultworker (c++ function)": [[75, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::defaultworker::finalize (c++ function)": [[75, "_CPPv4N2gs13DefaultWorker8FinalizeEv"]], "gs::defaultworker::getcontext (c++ function)": [[75, "_CPPv4N2gs13DefaultWorker10GetContextEv"]], "gs::defaultworker::init (c++ function)": [[75, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::defaultworker::output (c++ function)": [[75, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE"]], "gs::defaultworker::query (c++ function)": [[75, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args"]], "gs::defaultworker::context_t (c++ type)": [[75, "_CPPv4N2gs13DefaultWorker9context_tE"]], "gs::defaultworker::fragment_t (c++ type)": [[75, "_CPPv4N2gs13DefaultWorker10fragment_tE"]], "gs::defaultworker::message_manager_t (c++ type)": [[75, "_CPPv4N2gs13DefaultWorker17message_manager_tE"]], "gs::defaultworker::~defaultworker (c++ function)": [[75, "_CPPv4N2gs13DefaultWorkerD0Ev"]], "gs::dispatchresult (c++ class)": [[75, "_CPPv4N2gs14DispatchResultE"]], "gs::dispatchresult::aggregatepolicy (c++ enum)": [[75, "_CPPv4N2gs14DispatchResult15AggregatePolicyE"]], "gs::dispatchresult::aggregatepolicy::kconcat (c++ enumerator)": [[75, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE"]], "gs::dispatchresult::aggregatepolicy::kmergegraphdef (c++ enumerator)": [[75, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE"]], "gs::dispatchresult::aggregatepolicy::kpickfirst (c++ enumerator)": [[75, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE"]], "gs::dispatchresult::aggregatepolicy::kpickfirstnonempty (c++ enumerator)": [[75, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE"]], "gs::dispatchresult::aggregatepolicy::kpickfirstnonemptygraphdef (c++ enumerator)": [[75, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE"]], "gs::dispatchresult::aggregatepolicy::krequireconsistent (c++ enumerator)": [[75, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE"]], "gs::dispatchresult::dispatchresult (c++ function)": [[75, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE"], [75, "_CPPv4N2gs14DispatchResult14DispatchResultEv"]], "gs::dispatchresult::aggregate_policy (c++ function)": [[75, "_CPPv4NK2gs14DispatchResult16aggregate_policyEv"]], "gs::dispatchresult::data (c++ function)": [[75, "_CPPv4NK2gs14DispatchResult4dataEv"]], "gs::dispatchresult::error_code (c++ function)": [[75, "_CPPv4NK2gs14DispatchResult10error_codeEv"]], "gs::dispatchresult::graph_def (c++ function)": [[75, "_CPPv4N2gs14DispatchResult9graph_defEv"], [75, "_CPPv4NK2gs14DispatchResult9graph_defEv"]], "gs::dispatchresult::has_large_data (c++ function)": [[75, "_CPPv4NK2gs14DispatchResult14has_large_dataEv"]], "gs::dispatchresult::message (c++ function)": [[75, "_CPPv4N2gs14DispatchResult7messageEv"]], "gs::dispatchresult::set_data (c++ function)": [[75, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb"], [75, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb"]], "gs::dispatchresult::set_error (c++ function)": [[75, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE"]], "gs::dispatchresult::set_graph_def (c++ function)": [[75, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy"]], "gs::dispatchresult::worker_id (c++ function)": [[75, "_CPPv4NK2gs14DispatchResult9worker_idEv"]], "gs::dispatcher (c++ class)": [[75, "_CPPv4N2gs10DispatcherE"]], "gs::dispatcher::dispatch (c++ function)": [[75, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE"]], "gs::dispatcher::dispatcher (c++ function)": [[75, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE"]], "gs::dispatcher::setcommand (c++ function)": [[75, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE"]], "gs::dispatcher::start (c++ function)": [[75, "_CPPv4N2gs10Dispatcher5StartEv"]], "gs::dispatcher::stop (c++ function)": [[75, "_CPPv4N2gs10Dispatcher4StopEv"]], "gs::dispatcher::subscribe (c++ function)": [[75, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE"]], "gs::engineconfig (c++ struct)": [[75, "_CPPv4N2gs12EngineConfigE"]], "gs::engineconfig::tojsonstring (c++ function)": [[75, "_CPPv4NK2gs12EngineConfig12ToJsonStringEv"]], "gs::engineconfig::enable_java_sdk (c++ member)": [[75, "_CPPv4N2gs12EngineConfig15enable_java_sdkE"]], "gs::engineconfig::networkx (c++ member)": [[75, "_CPPv4N2gs12EngineConfig8networkxE"]], "gs::engineconfig::vineyard_rpc_endpoint (c++ member)": [[75, "_CPPv4N2gs12EngineConfig21vineyard_rpc_endpointE"]], "gs::engineconfig::vineyard_socket (c++ member)": [[75, "_CPPv4N2gs12EngineConfig15vineyard_socketE"]], "gs::fragmentwrapper (c++ class)": [[75, "_CPPv4I0EN2gs15FragmentWrapperE"]], "gs::gsobject (c++ class)": [[75, "_CPPv4N2gs8GSObjectE"]], "gs::gsobject::gsobject (c++ function)": [[75, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType"]], "gs::gsobject::tostring (c++ function)": [[75, "_CPPv4NK2gs8GSObject8ToStringEv"]], "gs::gsobject::id (c++ function)": [[75, "_CPPv4NK2gs8GSObject2idEv"]], "gs::gsobject::type (c++ function)": [[75, "_CPPv4NK2gs8GSObject4typeEv"]], "gs::gsobject::~gsobject (c++ function)": [[75, "_CPPv4N2gs8GSObjectD0Ev"]], "gs::grapeengine (c++ class)": [[75, "_CPPv4N2gs11GrapeEngineE"]], "gs::grapeengine::grapeengine (c++ function)": [[75, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE"], [75, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi"]], "gs::grapeengine::rundagfile (c++ function)": [[75, "_CPPv4N2gs11GrapeEngine10RunDAGFileEv"]], "gs::grapeengine::start (c++ function)": [[75, "_CPPv4N2gs11GrapeEngine5StartEv"]], "gs::grapeengine::stop (c++ function)": [[75, "_CPPv4N2gs11GrapeEngine4StopEv"]], "gs::grapeinstance (c++ class)": [[75, "_CPPv4N2gs13GrapeInstanceE"]], "gs::grapeinstance::grapeinstance (c++ function)": [[75, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE"]], "gs::grapeinstance::init (c++ function)": [[75, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE"]], "gs::grapeinstance::onreceive (c++ function)": [[75, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE"]], "gs::objectmanager (c++ class)": [[75, "_CPPv4N2gs13ObjectManagerE"]], "gs::objectmanager::getobject (c++ function)": [[75, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE"], [75, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE"]], "gs::objectmanager::hasobject (c++ function)": [[75, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE"]], "gs::objectmanager::putobject (c++ function)": [[75, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE"]], "gs::objectmanager::removeobject (c++ function)": [[75, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE"]], "gs::parallelpropertyworker (c++ class)": [[75, "_CPPv4I0EN2gs22ParallelPropertyWorkerE"]], "gs::parallelpropertyworker::finalize (c++ function)": [[75, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv"]], "gs::parallelpropertyworker::getcontext (c++ function)": [[75, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv"]], "gs::parallelpropertyworker::init (c++ function)": [[75, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::parallelpropertyworker::output (c++ function)": [[75, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE"]], "gs::parallelpropertyworker::parallelpropertyworker (c++ function)": [[75, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::parallelpropertyworker::query (c++ function)": [[75, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args"]], "gs::parallelpropertyworker::context_t (c++ type)": [[75, "_CPPv4N2gs22ParallelPropertyWorker9context_tE"]], "gs::parallelpropertyworker::fragment_t (c++ type)": [[75, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE"]], "gs::parallelpropertyworker::message_manager_t (c++ type)": [[75, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE"]], "gs::parallelpropertyworker::~parallelpropertyworker (c++ function)": [[75, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev"]], "gs::propertyappbase (c++ class)": [[75, "_CPPv4I00EN2gs15PropertyAppBaseE"]], "gs::propertyappbase::inceval (c++ function)": [[75, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::propertyappbase::peval (c++ function)": [[75, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::propertyappbase::propertyappbase (c++ function)": [[75, "_CPPv4N2gs15PropertyAppBase15PropertyAppBaseEv"]], "gs::propertyappbase::load_strategy (c++ member)": [[75, "_CPPv4N2gs15PropertyAppBase13load_strategyE"]], "gs::propertyappbase::message_manager_t (c++ type)": [[75, "_CPPv4N2gs15PropertyAppBase17message_manager_tE"]], "gs::propertyappbase::message_strategy (c++ member)": [[75, "_CPPv4N2gs15PropertyAppBase16message_strategyE"]], "gs::propertyappbase::need_split_edges (c++ member)": [[75, "_CPPv4N2gs15PropertyAppBase16need_split_edgesE"]], "gs::propertyappbase::~propertyappbase (c++ function)": [[75, "_CPPv4N2gs15PropertyAppBaseD0Ev"]], "gs::propertyautoappbase (c++ class)": [[75, "_CPPv4I00EN2gs19PropertyAutoAppBaseE"]], "gs::propertyautoappbase::inceval (c++ function)": [[75, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T"]], "gs::propertyautoappbase::peval (c++ function)": [[75, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T"]], "gs::propertyautoappbase::propertyautoappbase (c++ function)": [[75, "_CPPv4N2gs19PropertyAutoAppBase19PropertyAutoAppBaseEv"]], "gs::propertyautoappbase::load_strategy (c++ member)": [[75, "_CPPv4N2gs19PropertyAutoAppBase13load_strategyE"]], "gs::propertyautoappbase::message_strategy (c++ member)": [[75, "_CPPv4N2gs19PropertyAutoAppBase16message_strategyE"]], "gs::propertyautoappbase::need_split_edges (c++ member)": [[75, "_CPPv4N2gs19PropertyAutoAppBase16need_split_edgesE"]], "gs::propertyautoappbase::~propertyautoappbase (c++ function)": [[75, "_CPPv4N2gs19PropertyAutoAppBaseD0Ev"]], "gs::propertyautoworker (c++ class)": [[75, "_CPPv4I0EN2gs18PropertyAutoWorkerE"]], "gs::propertyautoworker::finalize (c++ function)": [[75, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv"]], "gs::propertyautoworker::getcontext (c++ function)": [[75, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv"]], "gs::propertyautoworker::init (c++ function)": [[75, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::propertyautoworker::output (c++ function)": [[75, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE"]], "gs::propertyautoworker::propertyautoworker (c++ function)": [[75, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::propertyautoworker::query (c++ function)": [[75, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args"]], "gs::propertyautoworker::context_t (c++ type)": [[75, "_CPPv4N2gs18PropertyAutoWorker9context_tE"]], "gs::propertyautoworker::fragment_t (c++ type)": [[75, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE"]], "gs::propertyautoworker::message_manager_t (c++ type)": [[75, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE"]], "gs::propertyautoworker::~propertyautoworker (c++ function)": [[75, "_CPPv4N2gs18PropertyAutoWorkerD0Ev"]], "gs::tensorcontext (c++ class)": [[75, "_CPPv4I00EN2gs13TensorContextE"]], "gs::tensorcontext::tensorcontext (c++ function)": [[75, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t"]], "gs::tensorcontext::assign (c++ function)": [[75, "_CPPv4N2gs13TensorContext6assignERK6data_t"], [75, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE"]], "gs::tensorcontext::data_t (c++ type)": [[75, "_CPPv4N2gs13TensorContext6data_tE"]], "gs::tensorcontext::fragment (c++ function)": [[75, "_CPPv4N2gs13TensorContext8fragmentEv"]], "gs::tensorcontext::set_shape (c++ function)": [[75, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE"]], "gs::tensorcontext::shape (c++ function)": [[75, "_CPPv4NK2gs13TensorContext5shapeEv"]], "gs::tensorcontext::tensor (c++ function)": [[75, "_CPPv4N2gs13TensorContext6tensorEv"]], "gs::tensorcontextwrapper (c++ class)": [[75, "_CPPv4I000EN2gs20TensorContextWrapperE"]], "gs::tensorcontextwrapper::tensorcontextwrapper (c++ function)": [[75, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE"]], "gs::tensorcontextwrapper::toarrowarrays (c++ function)": [[75, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE"]], "gs::tensorcontextwrapper::todataframe (c++ function)": [[75, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE"]], "gs::tensorcontextwrapper::tondarray (c++ function)": [[75, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t"]], "gs::tensorcontextwrapper::tovineyarddataframe (c++ function)": [[75, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE"]], "gs::tensorcontextwrapper::tovineyardtensor (c++ function)": [[75, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t"]], "gs::tensorcontextwrapper::context_type (c++ function)": [[75, "_CPPv4N2gs20TensorContextWrapper12context_typeEv"]], "gs::tensorcontextwrapper::fragment_wrapper (c++ function)": [[75, "_CPPv4N2gs20TensorContextWrapper16fragment_wrapperEv"]], "gs::vertexdatacontextwrapper (c++ class)": [[75, "_CPPv4I00EN2gs24VertexDataContextWrapperE"]], "gs::vertexdatacontextwrapper::toarrowarrays (c++ function)": [[75, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE"]], "gs::vertexdatacontextwrapper::todataframe (c++ function)": [[75, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tondarray (c++ function)": [[75, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tovineyarddataframe (c++ function)": [[75, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tovineyardtensor (c++ function)": [[75, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::vertexdatacontextwrapper (c++ function)": [[75, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE"]], "gs::vertexdatacontextwrapper::context_type (c++ function)": [[75, "_CPPv4N2gs24VertexDataContextWrapper12context_typeEv"]], "gs::vertexdatacontextwrapper::fragment_wrapper (c++ function)": [[75, "_CPPv4N2gs24VertexDataContextWrapper16fragment_wrapperEv"]], "gs::vertexpropertycontext (c++ class)": [[75, "_CPPv4I0EN2gs21VertexPropertyContextE"]], "gs::vertexpropertycontext::vertexpropertycontext (c++ function)": [[75, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t"]], "gs::vertexpropertycontext::add_column (c++ function)": [[75, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType"]], "gs::vertexpropertycontext::fragment (c++ function)": [[75, "_CPPv4N2gs21VertexPropertyContext8fragmentEv"]], "gs::vertexpropertycontext::fragment_t (c++ type)": [[75, "_CPPv4N2gs21VertexPropertyContext10fragment_tE"]], "gs::vertexpropertycontext::get_column (c++ function)": [[75, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t"], [75, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE"]], "gs::vertexpropertycontext::get_typed_column (c++ function)": [[75, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t"], [75, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE"]], "gs::vertexpropertycontext::oid_t (c++ type)": [[75, "_CPPv4N2gs21VertexPropertyContext5oid_tE"]], "gs::vertexpropertycontext::prop_id_t (c++ type)": [[75, "_CPPv4N2gs21VertexPropertyContext9prop_id_tE"]], "gs::vertexpropertycontext::properties_map (c++ function)": [[75, "_CPPv4N2gs21VertexPropertyContext14properties_mapEv"]], "gs::vertexpropertycontext::vertex_properties (c++ function)": [[75, "_CPPv4N2gs21VertexPropertyContext17vertex_propertiesEv"]], "gs::vertexpropertycontext::vertex_t (c++ type)": [[75, "_CPPv4N2gs21VertexPropertyContext8vertex_tE"]], "gs::rpc::analyticalserver (c++ class)": [[75, "_CPPv4N2gs3rpc16AnalyticalServerE"]], "gs::rpc::analyticalserver::analyticalserver (c++ function)": [[75, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi"]], "gs::rpc::analyticalserver::startserver (c++ function)": [[75, "_CPPv4N2gs3rpc16AnalyticalServer11StartServerEv"]], "gs::rpc::analyticalserver::stopserver (c++ function)": [[75, "_CPPv4N2gs3rpc16AnalyticalServer10StopServerEv"]], "app (class in graphscope.framework.app)": [[76, "graphscope.framework.app.App"]], "appassets (class in graphscope.framework.app)": [[76, "graphscope.framework.app.AppAssets"]], "appdagnode (class in graphscope.framework.app)": [[76, "graphscope.framework.app.AppDAGNode"]], "javaapp (class in graphscope.analytical.app)": [[76, "graphscope.analytical.app.JavaApp"]], "__call__() (graphscope.analytical.app.javaapp method)": [[76, "graphscope.analytical.app.JavaApp.__call__"]], "__del__() (graphscope.framework.app.app method)": [[76, "graphscope.framework.app.App.__del__"]], "__init__() (graphscope.analytical.app.javaapp method)": [[76, "graphscope.analytical.app.JavaApp.__init__"]], "__init__() (graphscope.framework.app.app method)": [[76, "graphscope.framework.app.App.__init__"]], "__init__() (graphscope.framework.app.appassets method)": [[76, "graphscope.framework.app.AppAssets.__init__"]], "algo (graphscope.framework.app.appassets property)": [[76, "graphscope.framework.app.AppAssets.algo"]], "attribute_assortativity_coefficient() (in module graphscope)": [[76, "graphscope.attribute_assortativity_coefficient"]], "average_degree_connectivity() (in module graphscope)": [[76, "graphscope.average_degree_connectivity"]], "average_shortest_path_length() (in module graphscope)": [[76, "graphscope.average_shortest_path_length"]], "avg_clustering() (in module graphscope)": [[76, "graphscope.avg_clustering"]], "bfs() (in module graphscope)": [[76, "graphscope.bfs"]], "cdlp() (in module graphscope)": [[76, "graphscope.cdlp"]], "clustering() (in module graphscope)": [[76, "graphscope.clustering"]], "context_type (graphscope.framework.app.appassets property)": [[76, "graphscope.framework.app.AppAssets.context_type"]], "degree_assortativity_coefficient() (in module graphscope)": [[76, "graphscope.degree_assortativity_coefficient"]], "degree_centrality() (in module graphscope)": [[76, "graphscope.degree_centrality"]], "eigenvector_centrality() (in module graphscope)": [[76, "graphscope.eigenvector_centrality"]], "gar (graphscope.framework.app.appassets property)": [[76, "graphscope.framework.app.AppAssets.gar"]], "hits() (in module graphscope)": [[76, "graphscope.hits"]], "is_compatible() (graphscope.analytical.app.javaapp method)": [[76, "graphscope.analytical.app.JavaApp.is_compatible"]], "is_compatible() (graphscope.framework.app.appassets method)": [[76, "graphscope.framework.app.AppAssets.is_compatible"]], "is_simple_path() (in module graphscope)": [[76, "graphscope.is_simple_path"]], "k_core() (in module graphscope)": [[76, "graphscope.k_core"]], "k_shell() (in module graphscope)": [[76, "graphscope.k_shell"]], "katz_centrality() (in module graphscope)": [[76, "graphscope.katz_centrality"]], "key (graphscope.framework.app.app property)": [[76, "graphscope.framework.app.App.key"]], "louvain() (in module graphscope)": [[76, "graphscope.louvain"]], "lpa() (in module graphscope)": [[76, "graphscope.lpa"]], "lpa_u2i() (in module graphscope)": [[76, "graphscope.lpa_u2i"]], "numeric_assortativity_coefficient() (in module graphscope)": [[76, "graphscope.numeric_assortativity_coefficient"]], "pagerank() (in module graphscope)": [[76, "graphscope.pagerank"]], "pagerank_nx() (in module graphscope)": [[76, "graphscope.pagerank_nx"]], "signature (graphscope.framework.app.app property)": [[76, "graphscope.framework.app.App.signature"]], "signature (graphscope.framework.app.appassets property)": [[76, "graphscope.framework.app.AppAssets.signature"]], "signature() (graphscope.analytical.app.javaapp method)": [[76, "graphscope.analytical.app.JavaApp.signature"]], "sssp() (in module graphscope)": [[76, "graphscope.sssp"]], "triangles() (in module graphscope)": [[76, "graphscope.triangles"]], "type (graphscope.framework.app.appassets property)": [[76, "graphscope.framework.app.AppAssets.type"]], "voterank() (in module graphscope)": [[76, "graphscope.voterank"]], "wcc() (in module graphscope)": [[76, "graphscope.wcc"]], "basecontextdagnode (class in graphscope.framework.context)": [[77, "graphscope.framework.context.BaseContextDAGNode"]], "context (class in graphscope.framework.context)": [[77, "graphscope.framework.context.Context"]], "dynamicvertexdatacontext (class in graphscope.framework.context)": [[77, "graphscope.framework.context.DynamicVertexDataContext"]], "labeledvertexdatacontextdagnode (class in graphscope.framework.context)": [[77, "graphscope.framework.context.LabeledVertexDataContextDAGNode"]], "labeledvertexpropertycontextdagnode (class in graphscope.framework.context)": [[77, "graphscope.framework.context.LabeledVertexPropertyContextDAGNode"]], "resultdagnode (class in graphscope.framework.context)": [[77, "graphscope.framework.context.ResultDAGNode"]], "tensorcontextdagnode (class in graphscope.framework.context)": [[77, "graphscope.framework.context.TensorContextDAGNode"]], "vertexdatacontextdagnode (class in graphscope.framework.context)": [[77, "graphscope.framework.context.VertexDataContextDAGNode"]], "vertexpropertycontextdagnode (class in graphscope.framework.context)": [[77, "graphscope.framework.context.VertexPropertyContextDAGNode"]], "to_dataframe() (graphscope.framework.context.basecontextdagnode method)": [[77, "graphscope.framework.context.BaseContextDAGNode.to_dataframe"]], "to_numpy() (graphscope.framework.context.basecontextdagnode method)": [[77, "graphscope.framework.context.BaseContextDAGNode.to_numpy"]], "to_vineyard_dataframe() (graphscope.framework.context.basecontextdagnode method)": [[77, "graphscope.framework.context.BaseContextDAGNode.to_vineyard_dataframe"]], "to_vineyard_tensor() (graphscope.framework.context.basecontextdagnode method)": [[77, "graphscope.framework.context.BaseContextDAGNode.to_vineyard_tensor"]], "vertex (in module graphscope)": [[81, "graphscope.Vertex"]], "declare() (in module graphscope)": [[82, "graphscope.declare"]], "load_app() (in module graphscope.framework.app)": [[83, "graphscope.framework.app.load_app"]], "add_column() (in module graphscope.framework.dag_utils)": [[84, "graphscope.framework.dag_utils.add_column"]], "add_labels_to_graph() (in module graphscope.framework.dag_utils)": [[85, "graphscope.framework.dag_utils.add_labels_to_graph"]], "arrow_to_dynamic() (in module graphscope.framework.dag_utils)": [[86, "graphscope.framework.dag_utils.arrow_to_dynamic"]], "bind_app() (in module graphscope.framework.dag_utils)": [[87, "graphscope.framework.dag_utils.bind_app"]], "clear_edges() (in module graphscope.framework.dag_utils)": [[88, "graphscope.framework.dag_utils.clear_edges"]], "clear_graph() (in module graphscope.framework.dag_utils)": [[89, "graphscope.framework.dag_utils.clear_graph"]], "context_to_dataframe() (in module graphscope.framework.dag_utils)": [[90, "graphscope.framework.dag_utils.context_to_dataframe"]], "context_to_numpy() (in module graphscope.framework.dag_utils)": [[91, "graphscope.framework.dag_utils.context_to_numpy"]], "copy_graph() (in module graphscope.framework.dag_utils)": [[92, "graphscope.framework.dag_utils.copy_graph"]], "create_app() (in module graphscope.framework.dag_utils)": [[93, "graphscope.framework.dag_utils.create_app"]], "create_graph() (in module graphscope.framework.dag_utils)": [[94, "graphscope.framework.dag_utils.create_graph"]], "create_graph_view() (in module graphscope.framework.dag_utils)": [[95, "graphscope.framework.dag_utils.create_graph_view"]], "create_loader() (in module graphscope.framework.dag_utils)": [[96, "graphscope.framework.dag_utils.create_loader"]], "create_subgraph() (in module graphscope.framework.dag_utils)": [[97, "graphscope.framework.dag_utils.create_subgraph"]], "create_unload_op() (in module graphscope.framework.dag_utils)": [[98, "graphscope.framework.dag_utils.create_unload_op"]], "dynamic_to_arrow() (in module graphscope.framework.dag_utils)": [[99, "graphscope.framework.dag_utils.dynamic_to_arrow"]], "fetch_gremlin_result() (in module graphscope.framework.dag_utils)": [[100, "graphscope.framework.dag_utils.fetch_gremlin_result"]], "get_context_data() (in module graphscope.framework.dag_utils)": [[101, "graphscope.framework.dag_utils.get_context_data"]], "graph_to_dataframe() (in module graphscope.framework.dag_utils)": [[102, "graphscope.framework.dag_utils.graph_to_dataframe"]], "graph_to_numpy() (in module graphscope.framework.dag_utils)": [[103, "graphscope.framework.dag_utils.graph_to_numpy"]], "gremlin_query() (in module graphscope.framework.dag_utils)": [[104, "graphscope.framework.dag_utils.gremlin_query"]], "gremlin_to_subgraph() (in module graphscope.framework.dag_utils)": [[105, "graphscope.framework.dag_utils.gremlin_to_subgraph"]], "modify_edges() (in module graphscope.framework.dag_utils)": [[106, "graphscope.framework.dag_utils.modify_edges"]], "modify_vertices() (in module graphscope.framework.dag_utils)": [[107, "graphscope.framework.dag_utils.modify_vertices"]], "output() (in module graphscope.framework.dag_utils)": [[108, "graphscope.framework.dag_utils.output"]], "project_arrow_property_graph() (in module graphscope.framework.dag_utils)": [[109, "graphscope.framework.dag_utils.project_arrow_property_graph"]], "project_to_simple() (in module graphscope.framework.dag_utils)": [[110, "graphscope.framework.dag_utils.project_to_simple"]], "report_graph() (in module graphscope.framework.dag_utils)": [[111, "graphscope.framework.dag_utils.report_graph"]], "run_app() (in module graphscope.framework.dag_utils)": [[112, "graphscope.framework.dag_utils.run_app"]], "to_data_sink() (in module graphscope.framework.dag_utils)": [[113, "graphscope.framework.dag_utils.to_data_sink"]], "to_directed() (in module graphscope.framework.dag_utils)": [[114, "graphscope.framework.dag_utils.to_directed"]], "to_undirected() (in module graphscope.framework.dag_utils)": [[115, "graphscope.framework.dag_utils.to_undirected"]], "to_vineyard_dataframe() (in module graphscope.framework.dag_utils)": [[116, "graphscope.framework.dag_utils.to_vineyard_dataframe"]], "to_vineyard_tensor() (in module graphscope.framework.dag_utils)": [[117, "graphscope.framework.dag_utils.to_vineyard_tensor"]], "unload_app() (in module graphscope.framework.dag_utils)": [[118, "graphscope.framework.dag_utils.unload_app"]], "unload_context() (in module graphscope.framework.dag_utils)": [[119, "graphscope.framework.dag_utils.unload_context"]], "unload_graph() (in module graphscope.framework.dag_utils)": [[120, "graphscope.framework.dag_utils.unload_graph"]], "__init__() (graphscope.framework.operation.operation method)": [[121, "graphscope.framework.operation.Operation.__init__"]], "as_op_def() (graphscope.framework.operation.operation method)": [[122, "graphscope.framework.operation.Operation.as_op_def"]], "eval() (graphscope.framework.operation.operation method)": [[123, "graphscope.framework.operation.Operation.eval"]], "evaluated (graphscope.framework.operation.operation property)": [[124, "graphscope.framework.operation.Operation.evaluated"]], "key (graphscope.framework.operation.operation property)": [[125, "graphscope.framework.operation.Operation.key"]], "signature (graphscope.framework.operation.operation property)": [[126, "graphscope.framework.operation.Operation.signature"]], "g() (in module graphscope)": [[127, "graphscope.g"]], "get_default_session() (in module graphscope)": [[128, "graphscope.get_default_session"]], "get_option() (in module graphscope)": [[129, "graphscope.get_option"]], "graphlearn() (in module graphscope)": [[130, "graphscope.graphlearn"]], "gremlin() (in module graphscope)": [[131, "graphscope.gremlin"]], "has_default_session() (in module graphscope)": [[132, "graphscope.has_default_session"]], "session (in module graphscope)": [[133, "graphscope.session"]], "set_option() (in module graphscope)": [[134, "graphscope.set_option"]], "graph (class in graphscope.framework.graph)": [[149, "graphscope.framework.graph.Graph"]], "graphdagnode (class in graphscope.framework.graph)": [[149, "graphscope.framework.graph.GraphDAGNode"]], "loader (class in graphscope.framework.loader)": [[149, "graphscope.framework.loader.Loader"]], "__init__() (graphscope.framework.graph.graph method)": [[149, "graphscope.framework.graph.Graph.__init__"]], "__init__() (graphscope.framework.graph.graphdagnode method)": [[149, "graphscope.framework.graph.GraphDAGNode.__init__"]], "__init__() (graphscope.framework.loader.loader method)": [[149, "graphscope.framework.loader.Loader.__init__"]], "add_column() (graphscope.framework.graph.graphdagnode method)": [[149, "graphscope.framework.graph.GraphDAGNode.add_column"]], "add_edges() (graphscope.framework.graph.graphdagnode method)": [[149, "graphscope.framework.graph.GraphDAGNode.add_edges"]], "add_vertices() (graphscope.framework.graph.graphdagnode method)": [[149, "graphscope.framework.graph.GraphDAGNode.add_vertices"]], "archive() (graphscope.framework.graph.graph method)": [[149, "graphscope.framework.graph.Graph.archive"]], "detach() (graphscope.framework.graph.graph method)": [[149, "graphscope.framework.graph.Graph.detach"]], "key (graphscope.framework.graph.graph property)": [[149, "graphscope.framework.graph.Graph.key"]], "load_from() (graphscope.framework.graph.graph class method)": [[149, "graphscope.framework.graph.Graph.load_from"]], "load_from() (in module graphscope.framework.graph_builder)": [[149, "graphscope.framework.graph_builder.load_from"]], "loaded() (graphscope.framework.graph.graph method)": [[149, "graphscope.framework.graph.Graph.loaded"]], "project() (graphscope.framework.graph.graphdagnode method)": [[149, "graphscope.framework.graph.GraphDAGNode.project"]], "save_to() (graphscope.framework.graph.graph method)": [[149, "graphscope.framework.graph.Graph.save_to"]], "schema (graphscope.framework.graph.graph property)": [[149, "graphscope.framework.graph.Graph.schema"]], "schema_path (graphscope.framework.graph.graph property)": [[149, "graphscope.framework.graph.Graph.schema_path"]], "session_id (graphscope.framework.graph.graph property)": [[149, "graphscope.framework.graph.Graph.session_id"]], "to_dataframe() (graphscope.framework.graph.graph method)": [[149, "graphscope.framework.graph.Graph.to_dataframe"]], "to_directed() (graphscope.framework.graph.graph method)": [[149, "graphscope.framework.graph.Graph.to_directed"]], "to_numpy() (graphscope.framework.graph.graph method)": [[149, "graphscope.framework.graph.Graph.to_numpy"]], "to_undirected() (graphscope.framework.graph.graph method)": [[149, "graphscope.framework.graph.Graph.to_undirected"]], "vineyard_id (graphscope.framework.graph.graph property)": [[149, "graphscope.framework.graph.Graph.vineyard_id"]], "interactivequery (class in graphscope.interactive.query)": [[150, "graphscope.interactive.query.InteractiveQuery"]], "__init__() (graphscope.interactive.query.interactivequery method)": [[150, "graphscope.interactive.query.InteractiveQuery.__init__"]], "close() (graphscope.interactive.query.interactivequery method)": [[150, "graphscope.interactive.query.InteractiveQuery.close"]], "execute() (graphscope.interactive.query.interactivequery method)": [[150, "graphscope.interactive.query.InteractiveQuery.execute"]], "graph_url (graphscope.interactive.query.interactivequery property)": [[150, "graphscope.interactive.query.InteractiveQuery.graph_url"]], "object_id (graphscope.interactive.query.interactivequery property)": [[150, "graphscope.interactive.query.InteractiveQuery.object_id"]], "session (graphscope.interactive.query.interactivequery property)": [[150, "graphscope.interactive.query.InteractiveQuery.session"]], "session_id (graphscope.interactive.query.interactivequery property)": [[150, "graphscope.interactive.query.InteractiveQuery.session_id"]], "subgraph() (graphscope.interactive.query.interactivequery method)": [[150, "graphscope.interactive.query.InteractiveQuery.subgraph"]], "submit() (graphscope.interactive.query.interactivequery method)": [[150, "graphscope.interactive.query.InteractiveQuery.submit"]], "traversal_source() (graphscope.interactive.query.interactivequery method)": [[150, "graphscope.interactive.query.InteractiveQuery.traversal_source"]], "e() (graphscope.learning.graph.graph method)": [[151, "graphscope.learning.graph.Graph.E"]], "graph (class in graphscope.learning.graph)": [[151, "graphscope.learning.graph.Graph"]], "v() (graphscope.learning.graph.graph method)": [[151, "graphscope.learning.graph.Graph.V"]], "__init__() (graphscope.learning.graph.graph method)": [[151, "graphscope.learning.graph.Graph.__init__"]], "get_handle() (graphscope.learning.graph.graph method)": [[151, "graphscope.learning.graph.Graph.get_handle"]], "average_clustering() (in module graphscope.nx.builtin)": [[152, "graphscope.nx.builtin.average_clustering"]], "average_shortest_path_length() (in module graphscope.nx.builtin)": [[152, "graphscope.nx.builtin.average_shortest_path_length"]], "bfs_edges() (in module graphscope.nx.builtin)": [[152, "graphscope.nx.builtin.bfs_edges"]], "clustering() (in module graphscope.nx.builtin)": [[152, "graphscope.nx.builtin.clustering"]], "degree_centrality() (in module graphscope.nx.builtin)": [[152, "graphscope.nx.builtin.degree_centrality"]], "eigenvector_centrality() (in module graphscope.nx.builtin)": [[152, "graphscope.nx.builtin.eigenvector_centrality"]], "has_path() (in module graphscope.nx.builtin)": [[152, "graphscope.nx.builtin.has_path"]], "hits() (in module graphscope.nx.builtin)": [[152, "graphscope.nx.builtin.hits"]], "in_degree_centrality() (in module graphscope.nx.builtin)": [[152, "graphscope.nx.builtin.in_degree_centrality"]], "k_core() (in module graphscope.nx.builtin)": [[152, "graphscope.nx.builtin.k_core"]], "katz_centrality() (in module graphscope.nx.builtin)": [[152, "graphscope.nx.builtin.katz_centrality"]], "out_degree_centrality() (in module graphscope.nx.builtin)": [[152, "graphscope.nx.builtin.out_degree_centrality"]], "triangles() (in module graphscope.nx.builtin)": [[152, "graphscope.nx.builtin.triangles"]], "graphscope.nx.classes.function": [[153, "module-graphscope.nx.classes.function"]], "module": [[153, "module-graphscope.nx.classes.function"], [286, "module-graphscope.nx.generators.atlas"], [286, "module-graphscope.nx.generators.classic"], [286, "module-graphscope.nx.generators.community"], [286, "module-graphscope.nx.generators.degree_seq"], [286, "module-graphscope.nx.generators.directed"], [286, "module-graphscope.nx.generators.duplication"], [286, "module-graphscope.nx.generators.ego"], [286, "module-graphscope.nx.generators.expanders"], [286, "module-graphscope.nx.generators.geometric"], [286, "module-graphscope.nx.generators.harary_graph"], [286, "module-graphscope.nx.generators.intersection"], [286, "module-graphscope.nx.generators.joint_degree_seq"], [286, "module-graphscope.nx.generators.mycielski"], [286, "module-graphscope.nx.generators.nonisomorphic_trees"], [286, "module-graphscope.nx.generators.small"], [286, "module-graphscope.nx.generators.social"], [286, "module-graphscope.nx.generators.spectral_graph_forge"], [286, "module-graphscope.nx.generators.sudoku"], [286, "module-graphscope.nx.generators.trees"], [286, "module-graphscope.nx.generators.triads"], [286, "module-networkx.generators.internet_as_graphs"], [286, "module-networkx.generators.stochastic"], [291, "module-graphscope.framework.dag_utils"]], "add_cycle() (in module graphscope.nx.classes.function)": [[154, "graphscope.nx.classes.function.add_cycle"]], "add_path() (in module graphscope.nx.classes.function)": [[155, "graphscope.nx.classes.function.add_path"]], "add_star() (in module graphscope.nx.classes.function)": [[156, "graphscope.nx.classes.function.add_star"]], "all_neighbors() (in module graphscope.nx.classes.function)": [[157, "graphscope.nx.classes.function.all_neighbors"]], "common_neighbors() (in module graphscope.nx.classes.function)": [[158, "graphscope.nx.classes.function.common_neighbors"]], "create_empty_copy() (in module graphscope.nx.classes.function)": [[159, "graphscope.nx.classes.function.create_empty_copy"]], "degree() (in module graphscope.nx.classes.function)": [[160, "graphscope.nx.classes.function.degree"]], "degree_histogram() (in module graphscope.nx.classes.function)": [[161, "graphscope.nx.classes.function.degree_histogram"]], "density() (in module graphscope.nx.classes.function)": [[162, "graphscope.nx.classes.function.density"]], "edge_subgraph() (in module graphscope.nx.classes.function)": [[163, "graphscope.nx.classes.function.edge_subgraph"]], "edges() (in module graphscope.nx.classes.function)": [[164, "graphscope.nx.classes.function.edges"]], "freeze() (in module graphscope.nx.classes.function)": [[165, "graphscope.nx.classes.function.freeze"]], "induced_subgraph() (in module graphscope.nx.classes.function)": [[166, "graphscope.nx.classes.function.induced_subgraph"]], "info() (in module graphscope.nx.classes.function)": [[167, "graphscope.nx.classes.function.info"]], "is_directed() (in module graphscope.nx.classes.function)": [[168, "graphscope.nx.classes.function.is_directed"]], "is_empty() (in module graphscope.nx.classes.function)": [[169, "graphscope.nx.classes.function.is_empty"]], "is_frozen() (in module graphscope.nx.classes.function)": [[170, "graphscope.nx.classes.function.is_frozen"]], "is_negatively_weighted() (in module graphscope.nx.classes.function)": [[171, "graphscope.nx.classes.function.is_negatively_weighted"]], "is_weighted() (in module graphscope.nx.classes.function)": [[172, "graphscope.nx.classes.function.is_weighted"]], "neighbors() (in module graphscope.nx.classes.function)": [[173, "graphscope.nx.classes.function.neighbors"]], "nodes() (in module graphscope.nx.classes.function)": [[174, "graphscope.nx.classes.function.nodes"]], "nodes_with_selfloops() (in module graphscope.nx.classes.function)": [[175, "graphscope.nx.classes.function.nodes_with_selfloops"]], "non_edges() (in module graphscope.nx.classes.function)": [[176, "graphscope.nx.classes.function.non_edges"]], "non_neighbors() (in module graphscope.nx.classes.function)": [[177, "graphscope.nx.classes.function.non_neighbors"]], "number_of_edges() (in module graphscope.nx.classes.function)": [[178, "graphscope.nx.classes.function.number_of_edges"]], "number_of_nodes() (in module graphscope.nx.classes.function)": [[179, "graphscope.nx.classes.function.number_of_nodes"]], "number_of_selfloops() (in module graphscope.nx.classes.function)": [[180, "graphscope.nx.classes.function.number_of_selfloops"]], "selfloop_edges() (in module graphscope.nx.classes.function)": [[181, "graphscope.nx.classes.function.selfloop_edges"]], "subgraph() (in module graphscope.nx.classes.function)": [[182, "graphscope.nx.classes.function.subgraph"]], "to_directed() (in module graphscope.nx.classes.function)": [[183, "graphscope.nx.classes.function.to_directed"]], "to_undirected() (in module graphscope.nx.classes.function)": [[184, "graphscope.nx.classes.function.to_undirected"]], "graph_atlas() (in module graphscope.nx.generators.atlas)": [[185, "graphscope.nx.generators.atlas.graph_atlas"]], "graph_atlas_g() (in module graphscope.nx.generators.atlas)": [[186, "graphscope.nx.generators.atlas.graph_atlas_g"]], "balanced_tree() (in module graphscope.nx.generators.classic)": [[187, "graphscope.nx.generators.classic.balanced_tree"]], "barbell_graph() (in module graphscope.nx.generators.classic)": [[188, "graphscope.nx.generators.classic.barbell_graph"]], "binomial_tree() (in module graphscope.nx.generators.classic)": [[189, "graphscope.nx.generators.classic.binomial_tree"]], "circulant_graph() (in module graphscope.nx.generators.classic)": [[190, "graphscope.nx.generators.classic.circulant_graph"]], "circular_ladder_graph() (in module graphscope.nx.generators.classic)": [[191, "graphscope.nx.generators.classic.circular_ladder_graph"]], "complete_graph() (in module graphscope.nx.generators.classic)": [[192, "graphscope.nx.generators.classic.complete_graph"]], "complete_multipartite_graph() (in module graphscope.nx.generators.classic)": [[193, "graphscope.nx.generators.classic.complete_multipartite_graph"]], "cycle_graph() (in module graphscope.nx.generators.classic)": [[194, "graphscope.nx.generators.classic.cycle_graph"]], "dorogovtsev_goltsev_mendes_graph() (in module graphscope.nx.generators.classic)": [[195, "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph"]], "empty_graph() (in module graphscope.nx.generators.classic)": [[196, "graphscope.nx.generators.classic.empty_graph"]], "full_rary_tree() (in module graphscope.nx.generators.classic)": [[197, "graphscope.nx.generators.classic.full_rary_tree"]], "ladder_graph() (in module graphscope.nx.generators.classic)": [[198, "graphscope.nx.generators.classic.ladder_graph"]], "lollipop_graph() (in module graphscope.nx.generators.classic)": [[199, "graphscope.nx.generators.classic.lollipop_graph"]], "null_graph() (in module graphscope.nx.generators.classic)": [[200, "graphscope.nx.generators.classic.null_graph"]], "path_graph() (in module graphscope.nx.generators.classic)": [[201, "graphscope.nx.generators.classic.path_graph"]], "star_graph() (in module graphscope.nx.generators.classic)": [[202, "graphscope.nx.generators.classic.star_graph"]], "trivial_graph() (in module graphscope.nx.generators.classic)": [[203, "graphscope.nx.generators.classic.trivial_graph"]], "turan_graph() (in module graphscope.nx.generators.classic)": [[204, "graphscope.nx.generators.classic.turan_graph"]], "wheel_graph() (in module graphscope.nx.generators.classic)": [[205, "graphscope.nx.generators.classic.wheel_graph"]], "lfr_benchmark_graph() (in module graphscope.nx.generators.community)": [[206, "graphscope.nx.generators.community.LFR_benchmark_graph"]], "caveman_graph() (in module graphscope.nx.generators.community)": [[207, "graphscope.nx.generators.community.caveman_graph"]], "connected_caveman_graph() (in module graphscope.nx.generators.community)": [[208, "graphscope.nx.generators.community.connected_caveman_graph"]], "gaussian_random_partition_graph() (in module graphscope.nx.generators.community)": [[209, "graphscope.nx.generators.community.gaussian_random_partition_graph"]], "planted_partition_graph() (in module graphscope.nx.generators.community)": [[210, "graphscope.nx.generators.community.planted_partition_graph"]], "random_partition_graph() (in module graphscope.nx.generators.community)": [[211, "graphscope.nx.generators.community.random_partition_graph"]], "relaxed_caveman_graph() (in module graphscope.nx.generators.community)": [[212, "graphscope.nx.generators.community.relaxed_caveman_graph"]], "ring_of_cliques() (in module graphscope.nx.generators.community)": [[213, "graphscope.nx.generators.community.ring_of_cliques"]], "stochastic_block_model() (in module graphscope.nx.generators.community)": [[214, "graphscope.nx.generators.community.stochastic_block_model"]], "windmill_graph() (in module graphscope.nx.generators.community)": [[215, "graphscope.nx.generators.community.windmill_graph"]], "configuration_model() (in module graphscope.nx.generators.degree_seq)": [[216, "graphscope.nx.generators.degree_seq.configuration_model"]], "degree_sequence_tree() (in module graphscope.nx.generators.degree_seq)": [[217, "graphscope.nx.generators.degree_seq.degree_sequence_tree"]], "directed_configuration_model() (in module graphscope.nx.generators.degree_seq)": [[218, "graphscope.nx.generators.degree_seq.directed_configuration_model"]], "directed_havel_hakimi_graph() (in module graphscope.nx.generators.degree_seq)": [[219, "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph"]], "expected_degree_graph() (in module graphscope.nx.generators.degree_seq)": [[220, "graphscope.nx.generators.degree_seq.expected_degree_graph"]], "havel_hakimi_graph() (in module graphscope.nx.generators.degree_seq)": [[221, "graphscope.nx.generators.degree_seq.havel_hakimi_graph"]], "random_degree_sequence_graph() (in module graphscope.nx.generators.degree_seq)": [[222, "graphscope.nx.generators.degree_seq.random_degree_sequence_graph"]], "gn_graph() (in module graphscope.nx.generators.directed)": [[223, "graphscope.nx.generators.directed.gn_graph"]], "gnc_graph() (in module graphscope.nx.generators.directed)": [[224, "graphscope.nx.generators.directed.gnc_graph"]], "gnr_graph() (in module graphscope.nx.generators.directed)": [[225, "graphscope.nx.generators.directed.gnr_graph"]], "random_k_out_graph() (in module graphscope.nx.generators.directed)": [[226, "graphscope.nx.generators.directed.random_k_out_graph"]], "scale_free_graph() (in module graphscope.nx.generators.directed)": [[227, "graphscope.nx.generators.directed.scale_free_graph"]], "duplication_divergence_graph() (in module graphscope.nx.generators.duplication)": [[228, "graphscope.nx.generators.duplication.duplication_divergence_graph"]], "partial_duplication_graph() (in module graphscope.nx.generators.duplication)": [[229, "graphscope.nx.generators.duplication.partial_duplication_graph"]], "ego_graph() (in module graphscope.nx.generators.ego)": [[230, "graphscope.nx.generators.ego.ego_graph"]], "chordal_cycle_graph() (in module graphscope.nx.generators.expanders)": [[231, "graphscope.nx.generators.expanders.chordal_cycle_graph"]], "margulis_gabber_galil_graph() (in module graphscope.nx.generators.expanders)": [[232, "graphscope.nx.generators.expanders.margulis_gabber_galil_graph"]], "paley_graph() (in module graphscope.nx.generators.expanders)": [[233, "graphscope.nx.generators.expanders.paley_graph"]], "geographical_threshold_graph() (in module graphscope.nx.generators.geometric)": [[234, "graphscope.nx.generators.geometric.geographical_threshold_graph"]], "random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[235, "graphscope.nx.generators.geometric.random_geometric_graph"]], "soft_random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[236, "graphscope.nx.generators.geometric.soft_random_geometric_graph"]], "thresholded_random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[237, "graphscope.nx.generators.geometric.thresholded_random_geometric_graph"]], "waxman_graph() (in module graphscope.nx.generators.geometric)": [[238, "graphscope.nx.generators.geometric.waxman_graph"]], "hkn_harary_graph() (in module graphscope.nx.generators.harary_graph)": [[239, "graphscope.nx.generators.harary_graph.hkn_harary_graph"]], "hnm_harary_graph() (in module graphscope.nx.generators.harary_graph)": [[240, "graphscope.nx.generators.harary_graph.hnm_harary_graph"]], "general_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[241, "graphscope.nx.generators.intersection.general_random_intersection_graph"]], "k_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[242, "graphscope.nx.generators.intersection.k_random_intersection_graph"]], "uniform_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[243, "graphscope.nx.generators.intersection.uniform_random_intersection_graph"]], "directed_joint_degree_graph() (in module graphscope.nx.generators.joint_degree_seq)": [[244, "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph"]], "is_valid_directed_joint_degree() (in module graphscope.nx.generators.joint_degree_seq)": [[245, "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree"]], "is_valid_joint_degree() (in module graphscope.nx.generators.joint_degree_seq)": [[246, "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree"]], "joint_degree_graph() (in module graphscope.nx.generators.joint_degree_seq)": [[247, "graphscope.nx.generators.joint_degree_seq.joint_degree_graph"]], "mycielski_graph() (in module graphscope.nx.generators.mycielski)": [[248, "graphscope.nx.generators.mycielski.mycielski_graph"]], "mycielskian() (in module graphscope.nx.generators.mycielski)": [[249, "graphscope.nx.generators.mycielski.mycielskian"]], "nonisomorphic_trees() (in module graphscope.nx.generators.nonisomorphic_trees)": [[250, "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees"]], "number_of_nonisomorphic_trees() (in module graphscope.nx.generators.nonisomorphic_trees)": [[251, "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees"]], "lcf_graph() (in module graphscope.nx.generators.small)": [[252, "graphscope.nx.generators.small.LCF_graph"]], "bull_graph() (in module graphscope.nx.generators.small)": [[253, "graphscope.nx.generators.small.bull_graph"]], "chvatal_graph() (in module graphscope.nx.generators.small)": [[254, "graphscope.nx.generators.small.chvatal_graph"]], "cubical_graph() (in module graphscope.nx.generators.small)": [[255, "graphscope.nx.generators.small.cubical_graph"]], "desargues_graph() (in module graphscope.nx.generators.small)": [[256, "graphscope.nx.generators.small.desargues_graph"]], "diamond_graph() (in module graphscope.nx.generators.small)": [[257, "graphscope.nx.generators.small.diamond_graph"]], "dodecahedral_graph() (in module graphscope.nx.generators.small)": [[258, "graphscope.nx.generators.small.dodecahedral_graph"]], "frucht_graph() (in module graphscope.nx.generators.small)": [[259, "graphscope.nx.generators.small.frucht_graph"]], "heawood_graph() (in module graphscope.nx.generators.small)": [[260, "graphscope.nx.generators.small.heawood_graph"]], "house_graph() (in module graphscope.nx.generators.small)": [[261, "graphscope.nx.generators.small.house_graph"]], "house_x_graph() (in module graphscope.nx.generators.small)": [[262, "graphscope.nx.generators.small.house_x_graph"]], "icosahedral_graph() (in module graphscope.nx.generators.small)": [[263, "graphscope.nx.generators.small.icosahedral_graph"]], "krackhardt_kite_graph() (in module graphscope.nx.generators.small)": [[264, "graphscope.nx.generators.small.krackhardt_kite_graph"]], "make_small_graph() (in module graphscope.nx.generators.small)": [[265, "graphscope.nx.generators.small.make_small_graph"]], "moebius_kantor_graph() (in module graphscope.nx.generators.small)": [[266, "graphscope.nx.generators.small.moebius_kantor_graph"]], "octahedral_graph() (in module graphscope.nx.generators.small)": [[267, "graphscope.nx.generators.small.octahedral_graph"]], "pappus_graph() (in module graphscope.nx.generators.small)": [[268, "graphscope.nx.generators.small.pappus_graph"]], "petersen_graph() (in module graphscope.nx.generators.small)": [[269, "graphscope.nx.generators.small.petersen_graph"]], "sedgewick_maze_graph() (in module graphscope.nx.generators.small)": [[270, "graphscope.nx.generators.small.sedgewick_maze_graph"]], "tetrahedral_graph() (in module graphscope.nx.generators.small)": [[271, "graphscope.nx.generators.small.tetrahedral_graph"]], "truncated_cube_graph() (in module graphscope.nx.generators.small)": [[272, "graphscope.nx.generators.small.truncated_cube_graph"]], "truncated_tetrahedron_graph() (in module graphscope.nx.generators.small)": [[273, "graphscope.nx.generators.small.truncated_tetrahedron_graph"]], "tutte_graph() (in module graphscope.nx.generators.small)": [[274, "graphscope.nx.generators.small.tutte_graph"]], "davis_southern_women_graph() (in module graphscope.nx.generators.social)": [[275, "graphscope.nx.generators.social.davis_southern_women_graph"]], "florentine_families_graph() (in module graphscope.nx.generators.social)": [[276, "graphscope.nx.generators.social.florentine_families_graph"]], "karate_club_graph() (in module graphscope.nx.generators.social)": [[277, "graphscope.nx.generators.social.karate_club_graph"]], "les_miserables_graph() (in module graphscope.nx.generators.social)": [[278, "graphscope.nx.generators.social.les_miserables_graph"]], "spectral_graph_forge() (in module graphscope.nx.generators.spectral_graph_forge)": [[279, "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge"]], "sudoku_graph() (in module graphscope.nx.generators.sudoku)": [[280, "graphscope.nx.generators.sudoku.sudoku_graph"]], "prefix_tree() (in module graphscope.nx.generators.trees)": [[281, "graphscope.nx.generators.trees.prefix_tree"]], "random_tree() (in module graphscope.nx.generators.trees)": [[282, "graphscope.nx.generators.trees.random_tree"]], "triad_graph() (in module graphscope.nx.generators.triads)": [[283, "graphscope.nx.generators.triads.triad_graph"]], "random_internet_as_graph() (in module networkx.generators.internet_as_graphs)": [[284, "networkx.generators.internet_as_graphs.random_internet_as_graph"]], "stochastic_graph() (in module networkx.generators.stochastic)": [[285, "networkx.generators.stochastic.stochastic_graph"]], "graphscope.nx.generators.atlas": [[286, "module-graphscope.nx.generators.atlas"]], "graphscope.nx.generators.classic": [[286, "module-graphscope.nx.generators.classic"]], "graphscope.nx.generators.community": [[286, "module-graphscope.nx.generators.community"]], "graphscope.nx.generators.degree_seq": [[286, "module-graphscope.nx.generators.degree_seq"]], "graphscope.nx.generators.directed": [[286, "module-graphscope.nx.generators.directed"]], "graphscope.nx.generators.duplication": [[286, "module-graphscope.nx.generators.duplication"]], "graphscope.nx.generators.ego": [[286, "module-graphscope.nx.generators.ego"]], "graphscope.nx.generators.expanders": [[286, "module-graphscope.nx.generators.expanders"]], "graphscope.nx.generators.geometric": [[286, "module-graphscope.nx.generators.geometric"]], "graphscope.nx.generators.harary_graph": [[286, "module-graphscope.nx.generators.harary_graph"]], "graphscope.nx.generators.intersection": [[286, "module-graphscope.nx.generators.intersection"]], "graphscope.nx.generators.joint_degree_seq": [[286, "module-graphscope.nx.generators.joint_degree_seq"]], "graphscope.nx.generators.mycielski": [[286, "module-graphscope.nx.generators.mycielski"]], "graphscope.nx.generators.nonisomorphic_trees": [[286, "module-graphscope.nx.generators.nonisomorphic_trees"]], "graphscope.nx.generators.small": [[286, "module-graphscope.nx.generators.small"]], "graphscope.nx.generators.social": [[286, "module-graphscope.nx.generators.social"]], "graphscope.nx.generators.spectral_graph_forge": [[286, "module-graphscope.nx.generators.spectral_graph_forge"]], "graphscope.nx.generators.sudoku": [[286, "module-graphscope.nx.generators.sudoku"]], "graphscope.nx.generators.trees": [[286, "module-graphscope.nx.generators.trees"]], "graphscope.nx.generators.triads": [[286, "module-graphscope.nx.generators.triads"]], "networkx.generators.internet_as_graphs": [[286, "module-networkx.generators.internet_as_graphs"]], "networkx.generators.stochastic": [[286, "module-networkx.generators.stochastic"]], "digraph (class in graphscope.nx)": [[287, "graphscope.nx.DiGraph"]], "graph (class in graphscope.nx)": [[287, "graphscope.nx.Graph"]], "__contains__() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.__contains__"]], "__contains__() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.__contains__"]], "__getitem__() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.__getitem__"]], "__getitem__() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.__getitem__"]], "__init__() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.__init__"]], "__init__() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.__init__"]], "__iter__() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.__iter__"]], "__iter__() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.__iter__"]], "__len__() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.__len__"]], "__len__() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.__len__"]], "add_edge() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.add_edge"]], "add_edge() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.add_edge"]], "add_edges_from() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.add_edges_from"]], "add_edges_from() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.add_edges_from"]], "add_node() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.add_node"]], "add_node() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.add_node"]], "add_nodes_from() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.add_nodes_from"]], "add_nodes_from() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.add_nodes_from"]], "add_weighted_edges_from() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.add_weighted_edges_from"]], "add_weighted_edges_from() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.add_weighted_edges_from"]], "adj (graphscope.nx.digraph property)": [[287, "graphscope.nx.DiGraph.adj"]], "adj (graphscope.nx.graph property)": [[287, "graphscope.nx.Graph.adj"]], "adjacency() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.adjacency"]], "adjacency() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.adjacency"]], "adjlist_inner_dict_factory (graphscope.nx.digraph attribute)": [[287, "graphscope.nx.DiGraph.adjlist_inner_dict_factory"]], "adjlist_inner_dict_factory (graphscope.nx.graph attribute)": [[287, "graphscope.nx.Graph.adjlist_inner_dict_factory"]], "adjlist_outer_dict_factory (graphscope.nx.digraph attribute)": [[287, "graphscope.nx.DiGraph.adjlist_outer_dict_factory"]], "adjlist_outer_dict_factory (graphscope.nx.graph attribute)": [[287, "graphscope.nx.Graph.adjlist_outer_dict_factory"]], "clear() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.clear"]], "clear() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.clear"]], "clear_edges() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.clear_edges"]], "clear_edges() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.clear_edges"]], "copy() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.copy"]], "copy() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.copy"]], "degree (graphscope.nx.digraph property)": [[287, "graphscope.nx.DiGraph.degree"]], "degree (graphscope.nx.graph property)": [[287, "graphscope.nx.Graph.degree"]], "edge_attr_dict_factory (graphscope.nx.digraph attribute)": [[287, "graphscope.nx.DiGraph.edge_attr_dict_factory"]], "edge_attr_dict_factory (graphscope.nx.graph attribute)": [[287, "graphscope.nx.Graph.edge_attr_dict_factory"]], "edge_subgraph() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.edge_subgraph"]], "edge_subgraph() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.edge_subgraph"]], "edges (graphscope.nx.digraph property)": [[287, "graphscope.nx.DiGraph.edges"]], "edges (graphscope.nx.graph property)": [[287, "graphscope.nx.Graph.edges"]], "get_edge_data() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.get_edge_data"]], "get_edge_data() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.get_edge_data"]], "graph_attr_dict_factory (graphscope.nx.digraph attribute)": [[287, "graphscope.nx.DiGraph.graph_attr_dict_factory"]], "graph_attr_dict_factory (graphscope.nx.graph attribute)": [[287, "graphscope.nx.Graph.graph_attr_dict_factory"]], "graph_cache_factory (graphscope.nx.digraph attribute)": [[287, "graphscope.nx.DiGraph.graph_cache_factory"]], "graph_cache_factory (graphscope.nx.graph attribute)": [[287, "graphscope.nx.Graph.graph_cache_factory"]], "graph_type (graphscope.nx.digraph property)": [[287, "graphscope.nx.DiGraph.graph_type"]], "graph_type (graphscope.nx.graph property)": [[287, "graphscope.nx.Graph.graph_type"]], "has_edge() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.has_edge"]], "has_edge() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.has_edge"]], "has_node() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.has_node"]], "has_node() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.has_node"]], "has_predecessor() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.has_predecessor"]], "has_successor() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.has_successor"]], "in_degree (graphscope.nx.digraph property)": [[287, "graphscope.nx.DiGraph.in_degree"]], "in_edges (graphscope.nx.digraph property)": [[287, "graphscope.nx.DiGraph.in_edges"]], "is_directed() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.is_directed"]], "is_directed() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.is_directed"]], "is_multigraph() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.is_multigraph"]], "is_multigraph() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.is_multigraph"]], "key (graphscope.nx.digraph property)": [[287, "graphscope.nx.DiGraph.key"]], "key (graphscope.nx.graph property)": [[287, "graphscope.nx.Graph.key"]], "name (graphscope.nx.digraph property)": [[287, "graphscope.nx.DiGraph.name"]], "name (graphscope.nx.graph property)": [[287, "graphscope.nx.Graph.name"]], "nbunch_iter() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.nbunch_iter"]], "nbunch_iter() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.nbunch_iter"]], "neighbors() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.neighbors"]], "neighbors() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.neighbors"]], "node_attr_dict_factory (graphscope.nx.digraph attribute)": [[287, "graphscope.nx.DiGraph.node_attr_dict_factory"]], "node_attr_dict_factory (graphscope.nx.graph attribute)": [[287, "graphscope.nx.Graph.node_attr_dict_factory"]], "node_dict_factory (graphscope.nx.digraph attribute)": [[287, "graphscope.nx.DiGraph.node_dict_factory"]], "node_dict_factory (graphscope.nx.graph attribute)": [[287, "graphscope.nx.Graph.node_dict_factory"]], "nodes (graphscope.nx.digraph property)": [[287, "graphscope.nx.DiGraph.nodes"]], "nodes (graphscope.nx.graph property)": [[287, "graphscope.nx.Graph.nodes"]], "number_of_edges() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.number_of_edges"]], "number_of_edges() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.number_of_edges"]], "number_of_nodes() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.number_of_nodes"]], "number_of_nodes() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.number_of_nodes"]], "op (graphscope.nx.digraph property)": [[287, "graphscope.nx.DiGraph.op"]], "op (graphscope.nx.graph property)": [[287, "graphscope.nx.Graph.op"]], "order() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.order"]], "order() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.order"]], "out_degree (graphscope.nx.digraph property)": [[287, "graphscope.nx.DiGraph.out_degree"]], "out_edges (graphscope.nx.digraph property)": [[287, "graphscope.nx.DiGraph.out_edges"]], "pred (graphscope.nx.digraph property)": [[287, "graphscope.nx.DiGraph.pred"]], "predecessors() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.predecessors"]], "remove_edge() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.remove_edge"]], "remove_edge() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.remove_edge"]], "remove_edges_from() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.remove_edges_from"]], "remove_edges_from() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.remove_edges_from"]], "remove_node() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.remove_node"]], "remove_node() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.remove_node"]], "remove_nodes_from() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.remove_nodes_from"]], "remove_nodes_from() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.remove_nodes_from"]], "reverse() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.reverse"]], "schema (graphscope.nx.digraph property)": [[287, "graphscope.nx.DiGraph.schema"]], "schema (graphscope.nx.graph property)": [[287, "graphscope.nx.Graph.schema"]], "session (graphscope.nx.digraph property)": [[287, "graphscope.nx.DiGraph.session"]], "session (graphscope.nx.graph property)": [[287, "graphscope.nx.Graph.session"]], "session_id (graphscope.nx.digraph property)": [[287, "graphscope.nx.DiGraph.session_id"]], "session_id (graphscope.nx.graph property)": [[287, "graphscope.nx.Graph.session_id"]], "set_edge_data() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.set_edge_data"]], "set_edge_data() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.set_edge_data"]], "set_node_data() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.set_node_data"]], "set_node_data() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.set_node_data"]], "signature (graphscope.nx.digraph property)": [[287, "graphscope.nx.DiGraph.signature"]], "signature (graphscope.nx.graph property)": [[287, "graphscope.nx.Graph.signature"]], "size() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.size"]], "size() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.size"]], "subgraph() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.subgraph"]], "subgraph() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.subgraph"]], "succ (graphscope.nx.digraph property)": [[287, "graphscope.nx.DiGraph.succ"]], "successors() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.successors"]], "to_directed() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.to_directed"]], "to_directed() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.to_directed"]], "to_undirected() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.to_undirected"]], "to_undirected() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.to_undirected"]], "to_undirected_class() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.to_undirected_class"]], "to_undirected_class() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.to_undirected_class"]], "update() (graphscope.nx.digraph method)": [[287, "graphscope.nx.DiGraph.update"]], "update() (graphscope.nx.graph method)": [[287, "graphscope.nx.Graph.update"]], "read_adjlist() (in module graphscope.nx)": [[289, "graphscope.nx.read_adjlist"]], "read_edgelist() (in module graphscope.nx)": [[289, "graphscope.nx.read_edgelist"]], "__init__() (in module graphscope.nx.graph)": [[290, "graphscope.nx.Graph.__init__"]], "_convert_arrow_to_dynamic() (in module graphscope.nx.graph)": [[290, "graphscope.nx.Graph._convert_arrow_to_dynamic"]], "operation (class in graphscope.framework.operation)": [[291, "graphscope.framework.operation.Operation"]], "graphscope.framework.dag_utils": [[291, "module-graphscope.framework.dag_utils"]], "session (class in graphscope)": [[294, "graphscope.Session"]], "__enter__() (graphscope.session method)": [[294, "graphscope.Session.__enter__"]], "__exit__() (graphscope.session method)": [[294, "graphscope.Session.__exit__"]], "__init__() (graphscope.session method)": [[294, "graphscope.Session.__init__"]], "add_lib() (graphscope.session method)": [[294, "graphscope.Session.add_lib"]], "as_default() (graphscope.session method)": [[294, "graphscope.Session.as_default"]], "close() (graphscope.session method)": [[294, "graphscope.Session.close"]], "connected() (graphscope.session method)": [[294, "graphscope.Session.connected"]], "engine_config (graphscope.session property)": [[294, "graphscope.Session.engine_config"]], "get_config() (graphscope.session method)": [[294, "graphscope.Session.get_config"]], "graphlearn() (graphscope.session method)": [[294, "graphscope.Session.graphlearn"]], "gremlin() (graphscope.session method)": [[294, "graphscope.Session.gremlin"]], "info (graphscope.session property)": [[294, "graphscope.Session.info"]], "learning() (graphscope.session method)": [[294, "graphscope.Session.learning"]], "load_from() (graphscope.session method)": [[294, "graphscope.Session.load_from"]], "load_from_gar() (graphscope.session method)": [[294, "graphscope.Session.load_from_gar"]], "run_fetches() (graphscope.session method)": [[294, "graphscope.Session.run_fetches"]]}})