Search.setIndex({"docnames": ["analytical_engine/builtin_algorithms", "analytical_engine/customized_algorithms", "analytical_engine/deployment", "analytical_engine/design_of_gae", "analytical_engine/dev_and_test", "analytical_engine/faqs", "analytical_engine/flash", "analytical_engine/getting_started", "analytical_engine/guide_and_examples", "analytical_engine/ingress", "analytical_engine/key_concepts", "analytical_engine/networkx_compatibility", "analytical_engine/overview_and_architecture", "analytical_engine/performance_tuning", "analytical_engine/programming_model_pie", "analytical_engine/tutorial_dev_algo_cpp_flash", "analytical_engine/tutorial_dev_algo_cpp_pie", "analytical_engine/tutorial_dev_algo_java", "analytical_engine/tutorial_dev_algo_python", "analytical_engine/tutorial_networkx_algorithms", "analytical_engine/tutorial_networkx_operations", "analytical_engine/tutorial_run_builtin_algo", "analytical_engine/tutorial_run_giraph_apps", "analytical_engine/tutorial_run_graphx_apps", "analytical_engine/vertex_centric_models", "contact_us", "deployment/deploy_graphscope_on_clouds", "deployment/deploy_graphscope_on_existing_vineyard_cluster", "deployment/deploy_graphscope_on_self_managed_k8s", "deployment/deploy_graphscope_with_helm", "deployment/install_on_local", "design_of_gae", "development/code_style_guide", "development/dev_guide", "development/how_to_contribute", "development/how_to_debugging", "development/how_to_install_in_offline_mode", "development/how_to_submit_pr", "development/how_to_test", "frag_intro", "frequently_asked_questions", "getting_started_gle", "graph_workloads", "graphscope_for_data_scientists", "how_to_load_graphs", "how_to_report_bugs", "index", "interactive_engine/deployment", "interactive_engine/design_of_gie", "interactive_engine/dev_and_test", "interactive_engine/faq", "interactive_engine/getting_started", "interactive_engine/guide_and_examples", "interactive_engine/supported_gremlin_steps", "interactive_engine/tutorial_ldbc_gremlin", "java_tutorials", "key_features", "learning_engine/design_of_gle", "learning_engine/dev_and_test", "learning_engine/getting_started", "learning_engine/graph_sampling", "learning_engine/guide_and_examples", "learning_engine/tutorial_node_classification_k8s", "learning_engine/tutorial_node_classification_local", "overview/design_of_graphscope", "overview/getting_started", "overview/glossary", "overview/graph_analytics_workloads", "overview/graph_interactive_workloads", "overview/graph_learning_workloads", "overview/intro", "overview/positioning", "performance_and_benchmark", "python_tutorials", "reference/analytical_engine_index", "reference/app", "reference/context", "reference/cython_sdk", "reference/gae_java/about", "reference/gae_java/index", "reference/generated/graphscope.Vertex", "reference/generated/graphscope.declare", "reference/generated/graphscope.framework.app.load_app", "reference/generated/graphscope.framework.dag_utils.add_column", "reference/generated/graphscope.framework.dag_utils.add_labels_to_graph", "reference/generated/graphscope.framework.dag_utils.arrow_to_dynamic", "reference/generated/graphscope.framework.dag_utils.bind_app", "reference/generated/graphscope.framework.dag_utils.clear_edges", "reference/generated/graphscope.framework.dag_utils.clear_graph", "reference/generated/graphscope.framework.dag_utils.context_to_dataframe", "reference/generated/graphscope.framework.dag_utils.context_to_numpy", "reference/generated/graphscope.framework.dag_utils.copy_graph", "reference/generated/graphscope.framework.dag_utils.create_app", "reference/generated/graphscope.framework.dag_utils.create_graph", "reference/generated/graphscope.framework.dag_utils.create_graph_view", "reference/generated/graphscope.framework.dag_utils.create_loader", "reference/generated/graphscope.framework.dag_utils.create_subgraph", "reference/generated/graphscope.framework.dag_utils.create_unload_op", "reference/generated/graphscope.framework.dag_utils.dynamic_to_arrow", "reference/generated/graphscope.framework.dag_utils.fetch_gremlin_result", "reference/generated/graphscope.framework.dag_utils.get_context_data", "reference/generated/graphscope.framework.dag_utils.graph_to_dataframe", "reference/generated/graphscope.framework.dag_utils.graph_to_numpy", "reference/generated/graphscope.framework.dag_utils.gremlin_query", "reference/generated/graphscope.framework.dag_utils.gremlin_to_subgraph", "reference/generated/graphscope.framework.dag_utils.modify_edges", "reference/generated/graphscope.framework.dag_utils.modify_vertices", "reference/generated/graphscope.framework.dag_utils.output", "reference/generated/graphscope.framework.dag_utils.project_arrow_property_graph", "reference/generated/graphscope.framework.dag_utils.project_to_simple", "reference/generated/graphscope.framework.dag_utils.report_graph", "reference/generated/graphscope.framework.dag_utils.run_app", "reference/generated/graphscope.framework.dag_utils.to_data_sink", "reference/generated/graphscope.framework.dag_utils.to_directed", "reference/generated/graphscope.framework.dag_utils.to_undirected", "reference/generated/graphscope.framework.dag_utils.to_vineyard_dataframe", "reference/generated/graphscope.framework.dag_utils.to_vineyard_tensor", "reference/generated/graphscope.framework.dag_utils.unload_app", "reference/generated/graphscope.framework.dag_utils.unload_context", "reference/generated/graphscope.framework.dag_utils.unload_graph", "reference/generated/graphscope.framework.operation.Operation.__init__", "reference/generated/graphscope.framework.operation.Operation.as_op_def", "reference/generated/graphscope.framework.operation.Operation.eval", "reference/generated/graphscope.framework.operation.Operation.evaluated", "reference/generated/graphscope.framework.operation.Operation.key", "reference/generated/graphscope.framework.operation.Operation.signature", "reference/generated/graphscope.g", "reference/generated/graphscope.get_default_session", "reference/generated/graphscope.get_option", "reference/generated/graphscope.graphlearn", "reference/generated/graphscope.gremlin", "reference/generated/graphscope.has_default_session", "reference/generated/graphscope.session", "reference/generated/graphscope.set_option", "reference/gnn_engine/algo_en", "reference/gnn_engine/data_loader_en", "reference/gnn_engine/graph_object_en", "reference/gnn_engine/graph_query_en", "reference/gnn_engine/graph_sampling_en", "reference/gnn_engine/graph_traverse_en", "reference/gnn_engine/gsl_en", "reference/gnn_engine/install_en", "reference/gnn_engine/model_programming_en", "reference/gnn_engine/negative_sampling_en", "reference/gnn_engine/operator", "reference/gnn_engine/other_source", "reference/gnn_engine/quick_start_en", "reference/gnn_engine/system_config", "reference/graph", "reference/interactive", "reference/learning", "reference/networkx/builtin", "reference/networkx/functions", "reference/networkx/generated/graphscope.nx.classes.function.add_cycle", "reference/networkx/generated/graphscope.nx.classes.function.add_path", "reference/networkx/generated/graphscope.nx.classes.function.add_star", "reference/networkx/generated/graphscope.nx.classes.function.all_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.common_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.create_empty_copy", "reference/networkx/generated/graphscope.nx.classes.function.degree", "reference/networkx/generated/graphscope.nx.classes.function.degree_histogram", "reference/networkx/generated/graphscope.nx.classes.function.density", "reference/networkx/generated/graphscope.nx.classes.function.edge_subgraph", "reference/networkx/generated/graphscope.nx.classes.function.edges", "reference/networkx/generated/graphscope.nx.classes.function.freeze", "reference/networkx/generated/graphscope.nx.classes.function.induced_subgraph", "reference/networkx/generated/graphscope.nx.classes.function.info", "reference/networkx/generated/graphscope.nx.classes.function.is_directed", "reference/networkx/generated/graphscope.nx.classes.function.is_empty", "reference/networkx/generated/graphscope.nx.classes.function.is_frozen", "reference/networkx/generated/graphscope.nx.classes.function.is_negatively_weighted", "reference/networkx/generated/graphscope.nx.classes.function.is_weighted", "reference/networkx/generated/graphscope.nx.classes.function.neighbors", "reference/networkx/generated/graphscope.nx.classes.function.nodes", "reference/networkx/generated/graphscope.nx.classes.function.nodes_with_selfloops", "reference/networkx/generated/graphscope.nx.classes.function.non_edges", "reference/networkx/generated/graphscope.nx.classes.function.non_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.number_of_edges", "reference/networkx/generated/graphscope.nx.classes.function.number_of_nodes", "reference/networkx/generated/graphscope.nx.classes.function.number_of_selfloops", "reference/networkx/generated/graphscope.nx.classes.function.selfloop_edges", "reference/networkx/generated/graphscope.nx.classes.function.subgraph", "reference/networkx/generated/graphscope.nx.classes.function.to_directed", "reference/networkx/generated/graphscope.nx.classes.function.to_undirected", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas_g", "reference/networkx/generated/graphscope.nx.generators.classic.balanced_tree", "reference/networkx/generated/graphscope.nx.generators.classic.barbell_graph", "reference/networkx/generated/graphscope.nx.generators.classic.binomial_tree", "reference/networkx/generated/graphscope.nx.generators.classic.circulant_graph", "reference/networkx/generated/graphscope.nx.generators.classic.circular_ladder_graph", "reference/networkx/generated/graphscope.nx.generators.classic.complete_graph", "reference/networkx/generated/graphscope.nx.generators.classic.complete_multipartite_graph", "reference/networkx/generated/graphscope.nx.generators.classic.cycle_graph", "reference/networkx/generated/graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph", "reference/networkx/generated/graphscope.nx.generators.classic.empty_graph", "reference/networkx/generated/graphscope.nx.generators.classic.full_rary_tree", "reference/networkx/generated/graphscope.nx.generators.classic.ladder_graph", "reference/networkx/generated/graphscope.nx.generators.classic.lollipop_graph", "reference/networkx/generated/graphscope.nx.generators.classic.null_graph", "reference/networkx/generated/graphscope.nx.generators.classic.path_graph", "reference/networkx/generated/graphscope.nx.generators.classic.star_graph", "reference/networkx/generated/graphscope.nx.generators.classic.trivial_graph", "reference/networkx/generated/graphscope.nx.generators.classic.turan_graph", "reference/networkx/generated/graphscope.nx.generators.classic.wheel_graph", "reference/networkx/generated/graphscope.nx.generators.community.LFR_benchmark_graph", "reference/networkx/generated/graphscope.nx.generators.community.caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.connected_caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.gaussian_random_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.planted_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.random_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.relaxed_caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.ring_of_cliques", "reference/networkx/generated/graphscope.nx.generators.community.stochastic_block_model", "reference/networkx/generated/graphscope.nx.generators.community.windmill_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.configuration_model", "reference/networkx/generated/graphscope.nx.generators.degree_seq.degree_sequence_tree", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_configuration_model", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.expected_degree_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.havel_hakimi_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.random_degree_sequence_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gn_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gnc_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gnr_graph", "reference/networkx/generated/graphscope.nx.generators.directed.random_k_out_graph", "reference/networkx/generated/graphscope.nx.generators.directed.scale_free_graph", "reference/networkx/generated/graphscope.nx.generators.duplication.duplication_divergence_graph", "reference/networkx/generated/graphscope.nx.generators.duplication.partial_duplication_graph", "reference/networkx/generated/graphscope.nx.generators.ego.ego_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.chordal_cycle_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.margulis_gabber_galil_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.paley_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.geographical_threshold_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.soft_random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.thresholded_random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.waxman_graph", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hkn_harary_graph", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hnm_harary_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.general_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.k_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.uniform_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.joint_degree_graph", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielski_graph", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielskian", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees", "reference/networkx/generated/graphscope.nx.generators.small.LCF_graph", "reference/networkx/generated/graphscope.nx.generators.small.bull_graph", "reference/networkx/generated/graphscope.nx.generators.small.chvatal_graph", "reference/networkx/generated/graphscope.nx.generators.small.cubical_graph", "reference/networkx/generated/graphscope.nx.generators.small.desargues_graph", "reference/networkx/generated/graphscope.nx.generators.small.diamond_graph", "reference/networkx/generated/graphscope.nx.generators.small.dodecahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.frucht_graph", "reference/networkx/generated/graphscope.nx.generators.small.heawood_graph", "reference/networkx/generated/graphscope.nx.generators.small.house_graph", "reference/networkx/generated/graphscope.nx.generators.small.house_x_graph", "reference/networkx/generated/graphscope.nx.generators.small.icosahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.krackhardt_kite_graph", "reference/networkx/generated/graphscope.nx.generators.small.make_small_graph", "reference/networkx/generated/graphscope.nx.generators.small.moebius_kantor_graph", "reference/networkx/generated/graphscope.nx.generators.small.octahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.pappus_graph", "reference/networkx/generated/graphscope.nx.generators.small.petersen_graph", "reference/networkx/generated/graphscope.nx.generators.small.sedgewick_maze_graph", "reference/networkx/generated/graphscope.nx.generators.small.tetrahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.truncated_cube_graph", "reference/networkx/generated/graphscope.nx.generators.small.truncated_tetrahedron_graph", "reference/networkx/generated/graphscope.nx.generators.small.tutte_graph", "reference/networkx/generated/graphscope.nx.generators.social.davis_southern_women_graph", "reference/networkx/generated/graphscope.nx.generators.social.florentine_families_graph", "reference/networkx/generated/graphscope.nx.generators.social.karate_club_graph", "reference/networkx/generated/graphscope.nx.generators.social.les_miserables_graph", "reference/networkx/generated/graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge", "reference/networkx/generated/graphscope.nx.generators.sudoku.sudoku_graph", "reference/networkx/generated/graphscope.nx.generators.trees.prefix_tree", "reference/networkx/generated/graphscope.nx.generators.trees.random_tree", "reference/networkx/generated/graphscope.nx.generators.triads.triad_graph", "reference/networkx/generated/networkx.generators.internet_as_graphs.random_internet_as_graph", "reference/networkx/generated/networkx.generators.stochastic.stochastic_graph", "reference/networkx/generators", "reference/networkx/graphs", "reference/networkx/index", "reference/networkx/io", "reference/networkx/transformation", "reference/operation", "reference/python_index", "reference/selector", "reference/session", "resources_estimator", "storage_engine/gart", "storage_engine/getting_started", "storage_engine/graphar", "storage_engine/grin", "storage_engine/groot", "storage_engine/vineyard", "tutorial/builtin", "tutorial/scaling", "user_guide_and_examples_of_gae", "user_guide_and_examples_of_gle", "utilities/error_codes", "utilities/gs", "utilities/how_to_find_logs", "utilities/monitoring", "zh/analytics_engine", "zh/deployment", "zh/developer_guide", "zh/frequently_asked_questions", "zh/getting_started", "zh/graph_transformation", "zh/index", "zh/installation", "zh/interactive_engine", "zh/learning_engine", "zh/loading_graph", "zh/tutorials"], "filenames": ["analytical_engine/builtin_algorithms.md", "analytical_engine/customized_algorithms.md", "analytical_engine/deployment.md", "analytical_engine/design_of_gae.md", "analytical_engine/dev_and_test.md", "analytical_engine/faqs.md", "analytical_engine/flash.md", "analytical_engine/getting_started.md", "analytical_engine/guide_and_examples.md", "analytical_engine/ingress.md", "analytical_engine/key_concepts.rst", "analytical_engine/networkx_compatibility.md", "analytical_engine/overview_and_architecture.md", "analytical_engine/performance_tuning.md", "analytical_engine/programming_model_pie.md", "analytical_engine/tutorial_dev_algo_cpp_flash.md", "analytical_engine/tutorial_dev_algo_cpp_pie.md", "analytical_engine/tutorial_dev_algo_java.md", "analytical_engine/tutorial_dev_algo_python.rst", "analytical_engine/tutorial_networkx_algorithms.md", "analytical_engine/tutorial_networkx_operations.md", "analytical_engine/tutorial_run_builtin_algo.md", "analytical_engine/tutorial_run_giraph_apps.md", "analytical_engine/tutorial_run_graphx_apps.md", "analytical_engine/vertex_centric_models.md", "contact_us.md", "deployment/deploy_graphscope_on_clouds.md", "deployment/deploy_graphscope_on_existing_vineyard_cluster.md", "deployment/deploy_graphscope_on_self_managed_k8s.md", "deployment/deploy_graphscope_with_helm.md", "deployment/install_on_local.md", "design_of_gae.md", "development/code_style_guide.md", "development/dev_guide.md", "development/how_to_contribute.md", "development/how_to_debugging.md", "development/how_to_install_in_offline_mode.md", "development/how_to_submit_pr.md", "development/how_to_test.md", "frag_intro.md", "frequently_asked_questions.rst", "getting_started_gle.md", "graph_workloads.md", "graphscope_for_data_scientists.md", "how_to_load_graphs.md", "how_to_report_bugs.md", "index.rst", "interactive_engine/deployment.md", "interactive_engine/design_of_gie.md", "interactive_engine/dev_and_test.md", "interactive_engine/faq.md", "interactive_engine/getting_started.md", "interactive_engine/guide_and_examples.md", "interactive_engine/supported_gremlin_steps.md", "interactive_engine/tutorial_ldbc_gremlin.md", "java_tutorials.md", "key_features.md", "learning_engine/design_of_gle.md", "learning_engine/dev_and_test.md", "learning_engine/getting_started.md", "learning_engine/graph_sampling.md", "learning_engine/guide_and_examples.md", "learning_engine/tutorial_node_classification_k8s.md", "learning_engine/tutorial_node_classification_local.md", "overview/design_of_graphscope.md", "overview/getting_started.md", "overview/glossary.md", "overview/graph_analytics_workloads.md", "overview/graph_interactive_workloads.md", "overview/graph_learning_workloads.md", "overview/intro.md", "overview/positioning.md", "performance_and_benchmark.md", "python_tutorials.md", "reference/analytical_engine_index.rst", "reference/app.rst", "reference/context.rst", "reference/cython_sdk.rst", "reference/gae_java/about.rst", "reference/gae_java/index.rst", "reference/generated/graphscope.Vertex.rst", "reference/generated/graphscope.declare.rst", "reference/generated/graphscope.framework.app.load_app.rst", "reference/generated/graphscope.framework.dag_utils.add_column.rst", "reference/generated/graphscope.framework.dag_utils.add_labels_to_graph.rst", "reference/generated/graphscope.framework.dag_utils.arrow_to_dynamic.rst", "reference/generated/graphscope.framework.dag_utils.bind_app.rst", "reference/generated/graphscope.framework.dag_utils.clear_edges.rst", "reference/generated/graphscope.framework.dag_utils.clear_graph.rst", "reference/generated/graphscope.framework.dag_utils.context_to_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.context_to_numpy.rst", "reference/generated/graphscope.framework.dag_utils.copy_graph.rst", "reference/generated/graphscope.framework.dag_utils.create_app.rst", "reference/generated/graphscope.framework.dag_utils.create_graph.rst", "reference/generated/graphscope.framework.dag_utils.create_graph_view.rst", "reference/generated/graphscope.framework.dag_utils.create_loader.rst", "reference/generated/graphscope.framework.dag_utils.create_subgraph.rst", "reference/generated/graphscope.framework.dag_utils.create_unload_op.rst", "reference/generated/graphscope.framework.dag_utils.dynamic_to_arrow.rst", "reference/generated/graphscope.framework.dag_utils.fetch_gremlin_result.rst", "reference/generated/graphscope.framework.dag_utils.get_context_data.rst", "reference/generated/graphscope.framework.dag_utils.graph_to_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.graph_to_numpy.rst", "reference/generated/graphscope.framework.dag_utils.gremlin_query.rst", "reference/generated/graphscope.framework.dag_utils.gremlin_to_subgraph.rst", "reference/generated/graphscope.framework.dag_utils.modify_edges.rst", "reference/generated/graphscope.framework.dag_utils.modify_vertices.rst", "reference/generated/graphscope.framework.dag_utils.output.rst", "reference/generated/graphscope.framework.dag_utils.project_arrow_property_graph.rst", "reference/generated/graphscope.framework.dag_utils.project_to_simple.rst", "reference/generated/graphscope.framework.dag_utils.report_graph.rst", "reference/generated/graphscope.framework.dag_utils.run_app.rst", "reference/generated/graphscope.framework.dag_utils.to_data_sink.rst", "reference/generated/graphscope.framework.dag_utils.to_directed.rst", "reference/generated/graphscope.framework.dag_utils.to_undirected.rst", "reference/generated/graphscope.framework.dag_utils.to_vineyard_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.to_vineyard_tensor.rst", "reference/generated/graphscope.framework.dag_utils.unload_app.rst", "reference/generated/graphscope.framework.dag_utils.unload_context.rst", "reference/generated/graphscope.framework.dag_utils.unload_graph.rst", "reference/generated/graphscope.framework.operation.Operation.__init__.rst", "reference/generated/graphscope.framework.operation.Operation.as_op_def.rst", "reference/generated/graphscope.framework.operation.Operation.eval.rst", "reference/generated/graphscope.framework.operation.Operation.evaluated.rst", "reference/generated/graphscope.framework.operation.Operation.key.rst", "reference/generated/graphscope.framework.operation.Operation.signature.rst", "reference/generated/graphscope.g.rst", "reference/generated/graphscope.get_default_session.rst", "reference/generated/graphscope.get_option.rst", "reference/generated/graphscope.graphlearn.rst", "reference/generated/graphscope.gremlin.rst", "reference/generated/graphscope.has_default_session.rst", "reference/generated/graphscope.session.rst", "reference/generated/graphscope.set_option.rst", "reference/gnn_engine/algo_en.rst", "reference/gnn_engine/data_loader_en.rst", "reference/gnn_engine/graph_object_en.rst", "reference/gnn_engine/graph_query_en.rst", "reference/gnn_engine/graph_sampling_en.rst", "reference/gnn_engine/graph_traverse_en.rst", "reference/gnn_engine/gsl_en.rst", "reference/gnn_engine/install_en.rst", "reference/gnn_engine/model_programming_en.rst", "reference/gnn_engine/negative_sampling_en.rst", "reference/gnn_engine/operator.rst", "reference/gnn_engine/other_source.rst", "reference/gnn_engine/quick_start_en.rst", "reference/gnn_engine/system_config.rst", "reference/graph.rst", "reference/interactive.rst", "reference/learning.rst", "reference/networkx/builtin.rst", "reference/networkx/functions.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_cycle.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_path.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_star.rst", "reference/networkx/generated/graphscope.nx.classes.function.all_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.common_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.create_empty_copy.rst", "reference/networkx/generated/graphscope.nx.classes.function.degree.rst", "reference/networkx/generated/graphscope.nx.classes.function.degree_histogram.rst", "reference/networkx/generated/graphscope.nx.classes.function.density.rst", "reference/networkx/generated/graphscope.nx.classes.function.edge_subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.freeze.rst", "reference/networkx/generated/graphscope.nx.classes.function.induced_subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.info.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_directed.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_empty.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_frozen.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_negatively_weighted.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_weighted.rst", "reference/networkx/generated/graphscope.nx.classes.function.neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.nodes.rst", "reference/networkx/generated/graphscope.nx.classes.function.nodes_with_selfloops.rst", "reference/networkx/generated/graphscope.nx.classes.function.non_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.non_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_nodes.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_selfloops.rst", "reference/networkx/generated/graphscope.nx.classes.function.selfloop_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.to_directed.rst", "reference/networkx/generated/graphscope.nx.classes.function.to_undirected.rst", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas.rst", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas_g.rst", "reference/networkx/generated/graphscope.nx.generators.classic.balanced_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.barbell_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.binomial_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.circulant_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.circular_ladder_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.complete_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.complete_multipartite_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.cycle_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.empty_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.full_rary_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.ladder_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.lollipop_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.null_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.path_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.star_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.trivial_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.turan_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.wheel_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.LFR_benchmark_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.connected_caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.gaussian_random_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.planted_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.random_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.relaxed_caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.ring_of_cliques.rst", "reference/networkx/generated/graphscope.nx.generators.community.stochastic_block_model.rst", "reference/networkx/generated/graphscope.nx.generators.community.windmill_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.configuration_model.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.degree_sequence_tree.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_configuration_model.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.expected_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.havel_hakimi_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.random_degree_sequence_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gn_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gnc_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gnr_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.random_k_out_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.scale_free_graph.rst", "reference/networkx/generated/graphscope.nx.generators.duplication.duplication_divergence_graph.rst", "reference/networkx/generated/graphscope.nx.generators.duplication.partial_duplication_graph.rst", "reference/networkx/generated/graphscope.nx.generators.ego.ego_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.chordal_cycle_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.margulis_gabber_galil_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.paley_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.geographical_threshold_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.soft_random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.thresholded_random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.waxman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hkn_harary_graph.rst", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hnm_harary_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.general_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.k_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.uniform_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.joint_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielski_graph.rst", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielskian.rst", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees.rst", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees.rst", "reference/networkx/generated/graphscope.nx.generators.small.LCF_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.bull_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.chvatal_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.cubical_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.desargues_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.diamond_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.dodecahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.frucht_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.heawood_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.house_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.house_x_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.icosahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.krackhardt_kite_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.make_small_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.moebius_kantor_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.octahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.pappus_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.petersen_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.sedgewick_maze_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.tetrahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.truncated_cube_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.truncated_tetrahedron_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.tutte_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.davis_southern_women_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.florentine_families_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.karate_club_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.les_miserables_graph.rst", "reference/networkx/generated/graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge.rst", "reference/networkx/generated/graphscope.nx.generators.sudoku.sudoku_graph.rst", "reference/networkx/generated/graphscope.nx.generators.trees.prefix_tree.rst", "reference/networkx/generated/graphscope.nx.generators.trees.random_tree.rst", "reference/networkx/generated/graphscope.nx.generators.triads.triad_graph.rst", "reference/networkx/generated/networkx.generators.internet_as_graphs.random_internet_as_graph.rst", "reference/networkx/generated/networkx.generators.stochastic.stochastic_graph.rst", "reference/networkx/generators.rst", "reference/networkx/graphs.rst", "reference/networkx/index.rst", "reference/networkx/io.rst", "reference/networkx/transformation.rst", "reference/operation.rst", "reference/python_index.rst", "reference/selector.rst", "reference/session.rst", "resources_estimator.md", "storage_engine/gart.md", "storage_engine/getting_started.md", "storage_engine/graphar.md", "storage_engine/grin.md", "storage_engine/groot.md", "storage_engine/vineyard.md", "tutorial/builtin.rst", "tutorial/scaling.rst", "user_guide_and_examples_of_gae.md", "user_guide_and_examples_of_gle.md", "utilities/error_codes.md", "utilities/gs.md", "utilities/how_to_find_logs.md", "utilities/monitoring.md", "zh/analytics_engine.rst", "zh/deployment.rst", "zh/developer_guide.rst", "zh/frequently_asked_questions.rst", "zh/getting_started.rst", "zh/graph_transformation.rst", "zh/index.rst", "zh/installation.rst", "zh/interactive_engine.rst", "zh/learning_engine.rst", "zh/loading_graph.rst", "zh/tutorials.rst"], "titles": ["Built-in Algorithms", "Customized Algorithms", "Deployment for GAE", "Design of Analytical Engine", "Dev and Test", "FAQs", "Programming Model: FLASH", "Getting Started", "Guide and Examples", "Ingress: Incrementalize Graph Algorithms", "Key Concepts", "NetworkX Compatibility", "Overview and Architecture", "Performance Tuning", "Programming Model: PIE", "Tutorial: Develop Your Algorithms in C++ with FLASH Model", "Tutorial: Develop your Algorithm in C++ with PIE Model", "Tutorial: Develop your Algorithm in Java with PIE Model", "Tutorial: Develop algorithms in Python", "Tutorial: Graph Algorithms with NetowrkX APIs", "Tutorial: Graph Operations with NetowrkX APIs", "Tutorial: Running Builtin Algorithms", "Tutorial: Run Giraph Applications on GraphScope", "Tutorial: Run GraphX Applications on GraphScope", "Vertex-Centric Model", "Contact Us", "Deploy GraphScope on Clouds", "Use an existing vineyard cluster with multiple GraphScope sessions", "Deploy GraphScope on K8s cluster", "Deploy GraphScope with <code class=\"docutils literal notranslate\"><span class=\"pre\">helm</span></code>", "Install GraphScope on Local", "Design of GAE", "Code Style Guide", "Development Guide", "How to Contribute", "Debugging on local deployment", "Install GraphScope in offline mode", "How to Submit Pull-requests", "How to Test", "Introduction to ArrowFragment", "Frequently Asked Questions", "Getting Started for GLE", "Graph Workloads", "GraphScope for Data Scientists", "How to Load Graphs", "How to Report Bugs", "GraphScope: A One-Stop Large-Scale Graph Computing System from Alibaba", "Standalone Deployment for GIE", "Design of GIE", "Dev and Test", "FAQs for GIE Gremlin Usage", "Getting Started", "Guide and Examples", "Supported Gremlin Steps", "Tutorial: LDBC Gremlin", "Tutorials for Java Users", "Key Features", "Design of GLE", "Dev and Test", "Getting Started", "Graph Sampling", "Guide and Examples", "Tutorial: Training a Node Classification Model on K8s Cluster", "Tutorial: Training a Node Classification Model on Your Local Machine", "Design of GraphScope", "Getting Started", "Glossary", "Graph Analytics Workloads", "Graph Interactive Workloads", "Graph Learning Workloads", "Introducing GraphScope", "Positioning of GraphScope", "Performance and Benchmark", "Tutorials for Python Users", "Analytical Engine API Reference", "Analytical App", "Context", "Cython SDK API", "About Grape JDK", "Java Reference (javadoc)", "graphscope.Vertex", "graphscope.declare", "graphscope.framework.app.load_app", "graphscope.framework.dag_utils.add_column", "graphscope.framework.dag_utils.add_labels_to_graph", "graphscope.framework.dag_utils.arrow_to_dynamic", "graphscope.framework.dag_utils.bind_app", "graphscope.framework.dag_utils.clear_edges", "graphscope.framework.dag_utils.clear_graph", "graphscope.framework.dag_utils.context_to_dataframe", "graphscope.framework.dag_utils.context_to_numpy", "graphscope.framework.dag_utils.copy_graph", "graphscope.framework.dag_utils.create_app", "graphscope.framework.dag_utils.create_graph", "graphscope.framework.dag_utils.create_graph_view", "graphscope.framework.dag_utils.create_loader", "graphscope.framework.dag_utils.create_subgraph", "graphscope.framework.dag_utils.create_unload_op", "graphscope.framework.dag_utils.dynamic_to_arrow", "graphscope.framework.dag_utils.fetch_gremlin_result", "graphscope.framework.dag_utils.get_context_data", "graphscope.framework.dag_utils.graph_to_dataframe", "graphscope.framework.dag_utils.graph_to_numpy", "graphscope.framework.dag_utils.gremlin_query", "graphscope.framework.dag_utils.gremlin_to_subgraph", "graphscope.framework.dag_utils.modify_edges", "graphscope.framework.dag_utils.modify_vertices", "graphscope.framework.dag_utils.output", "graphscope.framework.dag_utils.project_arrow_property_graph", "graphscope.framework.dag_utils.project_to_simple", "graphscope.framework.dag_utils.report_graph", "graphscope.framework.dag_utils.run_app", "graphscope.framework.dag_utils.to_data_sink", "graphscope.framework.dag_utils.to_directed", "graphscope.framework.dag_utils.to_undirected", "graphscope.framework.dag_utils.to_vineyard_dataframe", "graphscope.framework.dag_utils.to_vineyard_tensor", "graphscope.framework.dag_utils.unload_app", "graphscope.framework.dag_utils.unload_context", "graphscope.framework.dag_utils.unload_graph", "graphscope.framework.operation.Operation.__init__", "graphscope.framework.operation.Operation.as_op_def", "graphscope.framework.operation.Operation.eval", "graphscope.framework.operation.Operation.evaluated", "graphscope.framework.operation.Operation.key", "graphscope.framework.operation.Operation.signature", "graphscope.g", "graphscope.get_default_session", "graphscope.get_option", "graphscope.graphlearn", "graphscope.gremlin", "graphscope.has_default_session", "graphscope.session", "graphscope.set_option", "Developing Your Own Model", "Data Source", "Graph Object", "Graph Query", "Graph Sampling", "Graph Traversal", "Graph Sampling Language\uff08GSL)", "Install from pip", "Graph Learning Model", "Negative Sampling", "Defining Your Own Operator", "Integrating Other Data Sources", "Quick Start", "System configuration", "Graph", "Interactive Query", "Graph Learning", "Builtin algorithms", "Functions", "graphscope.nx.classes.function.add_cycle", "graphscope.nx.classes.function.add_path", "graphscope.nx.classes.function.add_star", "graphscope.nx.classes.function.all_neighbors", "graphscope.nx.classes.function.common_neighbors", "graphscope.nx.classes.function.create_empty_copy", "graphscope.nx.classes.function.degree", "graphscope.nx.classes.function.degree_histogram", "graphscope.nx.classes.function.density", "graphscope.nx.classes.function.edge_subgraph", "graphscope.nx.classes.function.edges", "graphscope.nx.classes.function.freeze", "graphscope.nx.classes.function.induced_subgraph", "graphscope.nx.classes.function.info", "graphscope.nx.classes.function.is_directed", "graphscope.nx.classes.function.is_empty", "graphscope.nx.classes.function.is_frozen", "graphscope.nx.classes.function.is_negatively_weighted", "graphscope.nx.classes.function.is_weighted", "graphscope.nx.classes.function.neighbors", "graphscope.nx.classes.function.nodes", "graphscope.nx.classes.function.nodes_with_selfloops", "graphscope.nx.classes.function.non_edges", "graphscope.nx.classes.function.non_neighbors", "graphscope.nx.classes.function.number_of_edges", "graphscope.nx.classes.function.number_of_nodes", "graphscope.nx.classes.function.number_of_selfloops", "graphscope.nx.classes.function.selfloop_edges", "graphscope.nx.classes.function.subgraph", "graphscope.nx.classes.function.to_directed", "graphscope.nx.classes.function.to_undirected", "graphscope.nx.generators.atlas.graph_atlas", "graphscope.nx.generators.atlas.graph_atlas_g", "graphscope.nx.generators.classic.balanced_tree", "graphscope.nx.generators.classic.barbell_graph", "graphscope.nx.generators.classic.binomial_tree", "graphscope.nx.generators.classic.circulant_graph", "graphscope.nx.generators.classic.circular_ladder_graph", "graphscope.nx.generators.classic.complete_graph", "graphscope.nx.generators.classic.complete_multipartite_graph", "graphscope.nx.generators.classic.cycle_graph", "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph", "graphscope.nx.generators.classic.empty_graph", "graphscope.nx.generators.classic.full_rary_tree", "graphscope.nx.generators.classic.ladder_graph", "graphscope.nx.generators.classic.lollipop_graph", "graphscope.nx.generators.classic.null_graph", "graphscope.nx.generators.classic.path_graph", "graphscope.nx.generators.classic.star_graph", "graphscope.nx.generators.classic.trivial_graph", "graphscope.nx.generators.classic.turan_graph", "graphscope.nx.generators.classic.wheel_graph", "graphscope.nx.generators.community.LFR_benchmark_graph", "graphscope.nx.generators.community.caveman_graph", "graphscope.nx.generators.community.connected_caveman_graph", "graphscope.nx.generators.community.gaussian_random_partition_graph", "graphscope.nx.generators.community.planted_partition_graph", "graphscope.nx.generators.community.random_partition_graph", "graphscope.nx.generators.community.relaxed_caveman_graph", "graphscope.nx.generators.community.ring_of_cliques", "graphscope.nx.generators.community.stochastic_block_model", "graphscope.nx.generators.community.windmill_graph", "graphscope.nx.generators.degree_seq.configuration_model", "graphscope.nx.generators.degree_seq.degree_sequence_tree", "graphscope.nx.generators.degree_seq.directed_configuration_model", "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph", "graphscope.nx.generators.degree_seq.expected_degree_graph", "graphscope.nx.generators.degree_seq.havel_hakimi_graph", "graphscope.nx.generators.degree_seq.random_degree_sequence_graph", "graphscope.nx.generators.directed.gn_graph", "graphscope.nx.generators.directed.gnc_graph", "graphscope.nx.generators.directed.gnr_graph", "graphscope.nx.generators.directed.random_k_out_graph", "graphscope.nx.generators.directed.scale_free_graph", "graphscope.nx.generators.duplication.duplication_divergence_graph", "graphscope.nx.generators.duplication.partial_duplication_graph", "graphscope.nx.generators.ego.ego_graph", "graphscope.nx.generators.expanders.chordal_cycle_graph", "graphscope.nx.generators.expanders.margulis_gabber_galil_graph", "graphscope.nx.generators.expanders.paley_graph", "graphscope.nx.generators.geometric.geographical_threshold_graph", "graphscope.nx.generators.geometric.random_geometric_graph", "graphscope.nx.generators.geometric.soft_random_geometric_graph", "graphscope.nx.generators.geometric.thresholded_random_geometric_graph", "graphscope.nx.generators.geometric.waxman_graph", "graphscope.nx.generators.harary_graph.hkn_harary_graph", "graphscope.nx.generators.harary_graph.hnm_harary_graph", "graphscope.nx.generators.intersection.general_random_intersection_graph", "graphscope.nx.generators.intersection.k_random_intersection_graph", "graphscope.nx.generators.intersection.uniform_random_intersection_graph", "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph", "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree", "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree", "graphscope.nx.generators.joint_degree_seq.joint_degree_graph", "graphscope.nx.generators.mycielski.mycielski_graph", "graphscope.nx.generators.mycielski.mycielskian", "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees", "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees", "graphscope.nx.generators.small.LCF_graph", "graphscope.nx.generators.small.bull_graph", "graphscope.nx.generators.small.chvatal_graph", "graphscope.nx.generators.small.cubical_graph", "graphscope.nx.generators.small.desargues_graph", "graphscope.nx.generators.small.diamond_graph", "graphscope.nx.generators.small.dodecahedral_graph", "graphscope.nx.generators.small.frucht_graph", "graphscope.nx.generators.small.heawood_graph", "graphscope.nx.generators.small.house_graph", "graphscope.nx.generators.small.house_x_graph", "graphscope.nx.generators.small.icosahedral_graph", "graphscope.nx.generators.small.krackhardt_kite_graph", "graphscope.nx.generators.small.make_small_graph", "graphscope.nx.generators.small.moebius_kantor_graph", "graphscope.nx.generators.small.octahedral_graph", "graphscope.nx.generators.small.pappus_graph", "graphscope.nx.generators.small.petersen_graph", "graphscope.nx.generators.small.sedgewick_maze_graph", "graphscope.nx.generators.small.tetrahedral_graph", "graphscope.nx.generators.small.truncated_cube_graph", "graphscope.nx.generators.small.truncated_tetrahedron_graph", "graphscope.nx.generators.small.tutte_graph", "graphscope.nx.generators.social.davis_southern_women_graph", "graphscope.nx.generators.social.florentine_families_graph", "graphscope.nx.generators.social.karate_club_graph", "graphscope.nx.generators.social.les_miserables_graph", "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge", "graphscope.nx.generators.sudoku.sudoku_graph", "graphscope.nx.generators.trees.prefix_tree", "graphscope.nx.generators.trees.random_tree", "graphscope.nx.generators.triads.triad_graph", "networkx.generators.internet_as_graphs.random_internet_as_graph", "networkx.generators.stochastic.stochastic_graph", "Graph generators", "Graph types", "NetworkX-style API", "Reading graphs", "Graph Transformation", "Operation", "Python API Reference", "Selector", "Session", "Resources Estimator", "GART: Bridging the Gap between Relational OLTP and Graph Workloads", "Getting Started", "GraphAr: Standard Graph Data File Format", "GRIN: Graph Retrieval INterface", "Groot: Persistent Graph Store", "In-memory immutable graphs on Vineyard", "Applications and algorithms", "Scaling and repartitioning", "User Guide and Examples of GAE", "User Guide and Examples of GLE", "Error Codes", "Command-line Utility <code class=\"docutils literal notranslate\"><span class=\"pre\">gs</span></code>", "How to Find logs", "Monitoring", "\u56fe\u5206\u6790\u5f15\u64ce", "\u90e8\u7f72", "\u5f00\u53d1\u8005\u6307\u5357", "\u5e38\u89c1\u95ee\u9898", "\u5feb\u901f\u4e0a\u624b", "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c", "GraphScope: \u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf", "\u5b89\u88c5", "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce", "\u56fe\u5b66\u4e60\u5f15\u64ce", "\u8f7d\u56fe", "\u5165\u95e8\u6559\u7a0b"], "terms": {"The": [0, 1, 2, 4, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 22, 24, 27, 28, 29, 30, 31, 33, 34, 36, 38, 40, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 84, 99, 103, 104, 105, 106, 109, 117, 119, 120, 127, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 155, 156, 160, 161, 162, 165, 166, 168, 170, 171, 176, 179, 184, 185, 186, 187, 188, 189, 192, 195, 198, 201, 203, 204, 205, 207, 208, 210, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 271, 272, 273, 275, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 289, 292, 293, 295, 298, 299, 300, 301, 302, 303, 307, 309], "graph": [0, 3, 4, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 22, 23, 24, 28, 29, 33, 34, 40, 47, 48, 49, 50, 51, 53, 55, 59, 61, 66, 70, 73, 74, 75, 76, 77, 83, 84, 85, 86, 87, 88, 91, 93, 94, 96, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 119, 126, 129, 130, 135, 141, 144, 145, 149, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 287, 290, 291, 292, 293, 302, 303, 309, 313, 314, 315, 317, 318, 319], "analyt": [0, 1, 5, 8, 12, 14, 15, 16, 17, 18, 23, 28, 30, 31, 33, 38, 40, 54, 55, 65, 66, 68, 70, 71, 73, 77, 78, 81, 86, 148, 286, 291, 293, 299, 302, 303, 309], "engin": [0, 1, 2, 5, 8, 16, 17, 23, 28, 30, 31, 38, 40, 43, 44, 47, 48, 49, 50, 52, 54, 57, 61, 62, 65, 66, 67, 68, 69, 71, 75, 78, 86, 103, 104, 129, 130, 134, 142, 148, 149, 150, 286, 292, 293, 295, 299, 300, 301, 302, 312, 313], "gae": [0, 3, 10, 12, 14, 15, 30, 40, 46, 55, 56, 64, 67, 71, 72, 73, 78, 103, 104, 149, 310, 311], "graphscop": [0, 1, 2, 3, 4, 6, 8, 9, 11, 12, 18, 24, 31, 32, 34, 35, 39, 40, 42, 44, 47, 49, 52, 53, 54, 55, 56, 58, 61, 62, 63, 65, 66, 68, 72, 73, 75, 76, 78, 148, 149, 150, 151, 286, 288, 289, 290, 291, 292, 293, 294, 298, 299, 300, 301, 302, 303, 307, 309, 310, 312, 313, 314, 317, 319, 320], "offer": [0, 2, 9, 12, 20, 31, 46, 49, 56, 57, 64, 65, 66, 70, 71, 298], "mani": [0, 6, 10, 12, 14, 24, 30, 31, 33, 34, 40, 43, 48, 51, 58, 65, 67, 69, 135, 142, 189, 233, 235, 286, 298, 303], "which": [0, 2, 6, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 36, 38, 40, 43, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 77, 78, 82, 85, 98, 109, 111, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 148, 149, 150, 151, 165, 190, 192, 205, 206, 207, 215, 217, 234, 235, 236, 243, 245, 246, 264, 276, 278, 280, 284, 285, 286, 288, 289, 290, 292, 293, 295, 297, 298, 299, 300, 301, 303], "enabl": [0, 6, 15, 17, 18, 23, 36, 40, 54, 57, 62, 63, 64, 65, 69, 70, 71, 72, 74, 145, 151, 286, 293, 298, 299, 302, 303, 307], "user": [0, 2, 6, 9, 11, 12, 14, 15, 17, 18, 22, 23, 24, 28, 29, 31, 34, 36, 38, 40, 46, 48, 50, 53, 54, 56, 60, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 134, 136, 137, 138, 139, 140, 141, 143, 146, 149, 286, 292, 293, 295, 298, 299, 302, 313, 317], "analyz": [0, 7, 19, 28, 64, 65, 67, 70, 140, 298], "data": [0, 2, 3, 6, 9, 11, 12, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 31, 36, 40, 44, 46, 48, 49, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 81, 83, 89, 90, 95, 101, 102, 107, 115, 116, 134, 136, 137, 138, 139, 140, 144, 148, 158, 164, 180, 181, 196, 213, 229, 248, 278, 286, 288, 289, 292, 293, 295, 298, 300, 301, 303, 309, 310, 312, 313, 318], "least": [0, 6, 34, 54, 151, 185, 207], "effort": [0, 31, 72, 298], "cover": [0, 6, 15, 38, 60], "wide": [0, 11, 12, 24, 51, 55, 56, 60, 64, 65, 67, 68, 69, 71, 138, 297, 303], "rang": [0, 18, 50, 53, 54, 56, 59, 60, 62, 63, 64, 65, 68, 71, 74, 76, 77, 89, 90, 101, 102, 107, 115, 116, 134, 139, 143, 191, 193, 195, 198, 201, 213, 219, 233, 234, 235, 236, 264, 286, 291, 298, 309, 312, 313, 317, 318], "applic": [0, 6, 8, 10, 11, 14, 24, 31, 40, 46, 47, 48, 56, 57, 66, 67, 68, 69, 72, 74, 75, 77, 86, 138, 217, 241, 297, 307], "commun": [0, 6, 8, 9, 12, 15, 16, 18, 24, 28, 46, 56, 64, 65, 66, 67, 70, 74, 75, 78, 136, 144, 237, 278, 283, 287, 297], "detect": [0, 6, 8, 9, 56, 64, 65, 67, 68, 70, 71, 75, 205, 209, 210, 211], "etc": [0, 6, 7, 15, 29, 43, 48, 57, 60, 65, 66, 68, 69, 72, 76, 134, 137, 138, 139, 142, 153, 165, 174, 179, 180, 286, 288, 299], "ar": [0, 2, 4, 6, 8, 9, 10, 12, 14, 15, 16, 17, 20, 22, 23, 24, 28, 29, 30, 31, 32, 34, 35, 40, 43, 46, 47, 48, 49, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 81, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 151, 160, 161, 162, 175, 176, 181, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 204, 205, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 225, 229, 231, 232, 233, 234, 235, 236, 237, 241, 243, 245, 247, 248, 251, 269, 278, 279, 280, 281, 282, 286, 289, 292, 293, 295, 297, 298, 299, 300, 302, 307, 319], "implement": [0, 1, 8, 9, 12, 16, 18, 22, 24, 31, 43, 46, 48, 53, 56, 57, 60, 64, 68, 71, 74, 75, 78, 134, 136, 138, 139, 140, 142, 145, 146, 148, 149, 151, 227, 228, 232, 233, 235, 237, 238, 239, 280, 281, 289, 309], "pie": [0, 1, 3, 8, 12, 31, 46, 54, 55, 56, 67, 78, 81, 291, 303, 313, 315], "program": [0, 3, 9, 15, 16, 17, 18, 20, 23, 24, 46, 55, 56, 60, 64, 66, 67, 69, 71, 72, 78, 134, 139, 140, 298, 299, 303], "model": [0, 1, 3, 8, 9, 18, 43, 46, 48, 54, 55, 56, 59, 60, 61, 64, 65, 67, 68, 71, 78, 136, 138, 140, 141, 205, 209, 213, 215, 217, 219, 225, 227, 228, 233, 234, 235, 236, 237, 241, 242, 276, 283, 293, 297, 303, 313], "highli": [0, 12, 31, 54, 56, 66, 67, 297], "optim": [0, 9, 12, 14, 31, 46, 48, 54, 56, 57, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 134, 146, 298, 300, 313], "best": [0, 16, 64, 66, 68, 71, 72, 75, 286, 309], "perform": [0, 3, 6, 9, 12, 14, 17, 22, 23, 24, 38, 46, 48, 53, 54, 55, 57, 64, 66, 67, 69, 70, 71, 76, 136, 140, 142, 243, 248, 278, 290, 292, 295, 299, 301, 303], "can": [0, 1, 2, 4, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 43, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 62, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 82, 84, 99, 110, 111, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 151, 160, 161, 164, 168, 189, 192, 205, 206, 207, 214, 215, 217, 233, 234, 235, 236, 243, 247, 248, 255, 257, 259, 264, 267, 272, 273, 278, 280, 286, 289, 290, 292, 293, 295, 297, 298, 299, 300, 301, 303, 307, 309], "us": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 22, 23, 24, 29, 32, 33, 34, 35, 36, 38, 40, 43, 44, 46, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 83, 84, 110, 111, 120, 125, 134, 135, 136, 137, 138, 140, 142, 145, 147, 148, 149, 150, 151, 170, 171, 180, 192, 195, 199, 205, 206, 207, 213, 215, 219, 220, 222, 224, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 243, 247, 251, 264, 269, 278, 280, 283, 284, 286, 288, 289, 291, 293, 297, 298, 301, 302, 303, 307, 309, 313, 319], "them": [0, 1, 2, 6, 8, 12, 14, 15, 17, 24, 27, 28, 31, 33, 38, 40, 43, 48, 53, 54, 62, 64, 65, 67, 69, 71, 72, 73, 83, 134, 137, 146, 191, 278, 292, 298, 299, 309], "out": [0, 6, 9, 12, 28, 29, 31, 34, 44, 50, 57, 65, 66, 67, 68, 71, 75, 77, 134, 137, 138, 140, 148, 151, 208, 217, 218, 225, 226, 229, 243, 244, 280, 284, 286, 298, 299, 300, 302, 313, 317], "box": [0, 66, 279], "manner": [0, 2, 17, 18, 30, 33, 65, 67, 68], "here": [0, 4, 10, 14, 16, 17, 18, 20, 23, 28, 33, 34, 35, 38, 40, 47, 48, 49, 50, 51, 53, 54, 56, 58, 59, 62, 63, 68, 69, 72, 75, 135, 136, 140, 143, 145, 146, 148, 151, 205, 217, 232, 233, 235, 244, 264, 286, 289, 297, 298, 299, 313], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 43, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 110, 120, 122, 126, 127, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 157, 159, 161, 163, 165, 166, 167, 168, 169, 170, 171, 180, 181, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 278, 279, 280, 281, 282, 283, 284, 286, 288, 289, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 307, 309, 312, 313, 317, 318, 319], "full": [0, 12, 16, 17, 18, 22, 31, 50, 56, 57, 60, 64, 69, 71, 75, 134, 137, 138, 140, 196, 299, 303, 309, 318], "list": [0, 16, 19, 20, 31, 34, 35, 36, 47, 50, 53, 54, 56, 62, 66, 68, 69, 73, 75, 77, 95, 96, 105, 106, 120, 135, 138, 140, 148, 151, 160, 162, 165, 172, 174, 180, 181, 184, 185, 189, 191, 192, 210, 213, 215, 217, 218, 219, 220, 221, 233, 237, 240, 243, 244, 249, 251, 264, 280, 286, 287, 289, 293, 299, 302, 307, 314, 317], "support": [0, 3, 6, 9, 10, 12, 17, 18, 20, 22, 24, 29, 30, 31, 34, 40, 43, 46, 47, 48, 50, 51, 54, 55, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 75, 76, 78, 84, 134, 135, 136, 138, 139, 140, 142, 143, 145, 148, 151, 286, 289, 292, 293, 295, 297, 299, 300, 302, 303, 312], "bf": [0, 15, 17, 31, 72, 75, 309], "df": [0, 31], "hit": [0, 31, 33, 75, 76, 151, 287, 292, 309], "lpa": [0, 7, 31, 65, 75, 309], "sssp": [0, 7, 8, 9, 14, 17, 18, 22, 24, 31, 39, 65, 72, 75, 76, 82, 292, 293, 301, 302, 309], "thi": [0, 2, 4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 43, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 76, 77, 92, 107, 110, 125, 134, 135, 136, 138, 139, 140, 141, 142, 144, 146, 148, 151, 168, 182, 183, 184, 185, 186, 187, 192, 195, 197, 198, 205, 206, 207, 209, 210, 213, 214, 215, 217, 219, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 245, 247, 264, 266, 269, 274, 278, 280, 281, 283, 284, 285, 286, 288, 290, 292, 293, 294, 295, 297, 298, 299, 303, 309], "find": [0, 4, 8, 9, 22, 33, 34, 36, 38, 40, 43, 46, 49, 50, 51, 53, 54, 62, 65, 67, 68, 72, 74, 82, 128, 133, 151, 156, 175, 176, 205, 293, 298, 299], "problem": [0, 2, 6, 9, 11, 14, 15, 24, 34, 35, 36, 40, 42, 43, 48, 54, 67, 69], "from": [0, 2, 3, 4, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 22, 23, 24, 27, 28, 29, 31, 33, 34, 35, 40, 43, 44, 47, 48, 49, 50, 51, 53, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 82, 99, 104, 105, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 165, 184, 186, 191, 193, 195, 198, 205, 208, 212, 213, 214, 215, 217, 220, 225, 226, 228, 229, 233, 234, 235, 236, 237, 238, 245, 252, 261, 273, 278, 280, 281, 285, 286, 288, 289, 292, 293, 298, 300, 309, 313, 314, 317, 319], "given": [0, 7, 9, 14, 20, 31, 43, 47, 48, 49, 53, 54, 60, 65, 68, 69, 71, 75, 138, 140, 143, 146, 148, 150, 185, 192, 203, 215, 216, 217, 218, 219, 220, 221, 229, 237, 238, 239, 243, 244, 245, 246, 250, 278, 281, 282, 285, 286, 292, 293, 297, 298, 301, 302], "weight": [0, 7, 19, 20, 39, 53, 54, 60, 65, 67, 72, 75, 105, 134, 136, 137, 138, 139, 140, 143, 146, 151, 153, 154, 155, 159, 170, 171, 213, 225, 229, 233, 236, 276, 284, 285, 286, 288, 293, 318], "As": [0, 7, 12, 15, 16, 18, 20, 22, 24, 28, 40, 48, 51, 54, 59, 60, 64, 68, 134, 136, 142, 143, 144, 215, 297, 298], "result": [0, 2, 4, 6, 7, 9, 12, 14, 15, 16, 17, 18, 19, 24, 34, 43, 48, 49, 53, 54, 56, 60, 64, 65, 67, 68, 69, 74, 75, 76, 83, 89, 90, 99, 100, 107, 109, 111, 112, 115, 116, 128, 134, 137, 138, 140, 142, 143, 145, 148, 149, 151, 215, 217, 220, 239, 286, 299, 301, 309, 313], "comput": [0, 3, 6, 9, 14, 15, 16, 17, 18, 19, 22, 23, 24, 31, 34, 36, 48, 49, 53, 54, 56, 57, 60, 65, 66, 67, 68, 69, 70, 71, 74, 75, 77, 138, 139, 142, 144, 151, 232, 235, 236, 240, 245, 254, 277, 278, 290, 293, 299, 300, 309], "minimum": [0, 6, 40, 49, 53, 54, 75, 205, 293], "distanc": [0, 7, 15, 17, 18, 65, 75, 151, 186, 225, 229, 233, 234, 235, 236, 237, 255, 267, 309], "ani": [0, 2, 17, 19, 20, 22, 24, 28, 31, 33, 34, 35, 47, 48, 50, 51, 53, 54, 64, 67, 68, 71, 73, 74, 76, 84, 91, 138, 148, 149, 150, 151, 162, 166, 181, 205, 210, 212, 215, 217, 233, 235, 237, 286, 289, 292, 298], "vertex": [0, 2, 3, 6, 9, 12, 14, 15, 16, 17, 18, 19, 22, 27, 31, 39, 46, 47, 50, 53, 55, 56, 57, 60, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 77, 81, 104, 135, 136, 137, 138, 139, 140, 143, 146, 148, 150, 151, 225, 230, 247, 248, 264, 289, 291, 295, 297, 299, 300, 303, 309, 314], "other": [0, 3, 6, 8, 9, 10, 12, 14, 16, 20, 23, 24, 27, 29, 31, 33, 34, 40, 43, 46, 48, 50, 53, 54, 56, 57, 60, 62, 64, 66, 67, 68, 69, 70, 71, 75, 77, 134, 136, 138, 140, 144, 147, 148, 149, 151, 155, 186, 188, 192, 195, 205, 214, 220, 226, 235, 236, 278, 286, 288, 289, 292, 293, 297, 298, 299, 302], "vertic": [0, 6, 7, 9, 12, 14, 15, 16, 17, 18, 19, 22, 24, 39, 44, 47, 48, 50, 51, 53, 57, 60, 64, 65, 67, 68, 69, 74, 75, 76, 77, 106, 135, 136, 137, 138, 139, 140, 143, 146, 148, 209, 220, 230, 232, 247, 248, 259, 261, 272, 273, 279, 292, 293, 295, 297, 298, 299, 300, 309, 313, 314], "all_pairs_shortest_path_length": [0, 31], "refer": [0, 2, 4, 9, 10, 12, 16, 17, 23, 24, 27, 31, 34, 38, 40, 47, 49, 50, 51, 53, 54, 57, 58, 60, 67, 68, 69, 71, 75, 93, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 151, 184, 185, 196, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 285, 286, 299, 303, 317], "tendenc": [0, 20], "similar": [0, 10, 12, 20, 34, 47, 48, 50, 54, 57, 60, 64, 67, 71, 75, 134, 135, 136, 137, 140, 143, 148, 278, 286], "over": [0, 9, 12, 15, 16, 18, 22, 24, 31, 40, 43, 53, 55, 60, 64, 66, 67, 71, 72, 75, 77, 137, 151, 173, 174, 180, 232, 286, 295, 303], "dissimilar": 0, "measur": [0, 6, 20, 48, 67, 69, 75, 135, 151, 229, 230, 263], "extent": [0, 6], "same": [0, 2, 6, 10, 15, 17, 20, 22, 29, 34, 44, 48, 53, 54, 57, 67, 68, 72, 135, 136, 140, 141, 144, 146, 148, 150, 151, 179, 180, 201, 209, 210, 215, 217, 243, 244, 246, 279, 280, 286, 293, 297, 298, 299, 300, 301], "properti": [0, 6, 7, 9, 12, 15, 17, 20, 39, 44, 46, 49, 65, 67, 69, 74, 75, 76, 77, 93, 109, 123, 124, 125, 137, 140, 148, 149, 233, 248, 278, 283, 286, 289, 292, 293, 295, 297, 299, 300, 307, 313, 314, 317], "each": [0, 6, 9, 10, 12, 14, 15, 16, 19, 20, 24, 27, 31, 32, 33, 38, 44, 47, 48, 50, 53, 54, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 124, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 148, 151, 160, 162, 180, 181, 186, 190, 192, 197, 203, 205, 207, 208, 209, 211, 212, 214, 215, 217, 218, 220, 225, 228, 230, 233, 234, 235, 236, 237, 240, 241, 243, 245, 246, 251, 254, 266, 271, 276, 280, 282, 283, 284, 286, 292, 293, 295, 297, 298, 299, 300, 303, 307], "attribute_assort": [0, 31], "nearest": [0, 75], "neighbor": [0, 6, 9, 14, 17, 18, 39, 53, 54, 57, 60, 67, 68, 69, 75, 77, 134, 135, 137, 138, 140, 142, 143, 144, 146, 147, 151, 156, 157, 176, 228, 229, 243, 246, 279, 286, 295, 298, 309], "return": [0, 6, 9, 15, 18, 20, 39, 48, 53, 54, 60, 62, 68, 75, 76, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 126, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 140, 143, 144, 145, 146, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 288, 292, 293, 295, 298, 309, 318], "success": [0, 22, 78, 136, 220, 251], "0": [0, 9, 10, 14, 15, 16, 17, 18, 20, 22, 23, 24, 27, 28, 29, 32, 36, 40, 43, 47, 49, 51, 53, 54, 57, 59, 60, 62, 63, 65, 72, 74, 75, 76, 77, 90, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 151, 153, 154, 155, 157, 161, 162, 165, 166, 170, 180, 184, 185, 187, 188, 189, 190, 192, 195, 197, 198, 200, 201, 202, 204, 205, 208, 209, 210, 211, 213, 214, 215, 217, 218, 221, 224, 226, 233, 234, 235, 236, 237, 243, 244, 248, 251, 264, 269, 278, 280, 281, 286, 288, 289, 293, 295, 298, 299, 300, 301, 307, 309, 311, 312, 313, 314, 316, 317, 318, 319], "1": [0, 6, 7, 9, 10, 14, 15, 17, 19, 20, 22, 23, 24, 27, 31, 32, 34, 36, 43, 44, 47, 48, 49, 50, 51, 53, 54, 57, 59, 60, 62, 63, 65, 68, 69, 72, 75, 76, 134, 137, 139, 140, 141, 143, 148, 149, 150, 151, 153, 154, 155, 157, 161, 162, 165, 170, 171, 174, 179, 180, 184, 186, 187, 188, 189, 190, 192, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 286, 288, 289, 293, 298, 299, 300, 301, 307, 309, 313, 314, 316, 317, 318, 319], "2": [0, 6, 9, 10, 14, 17, 18, 19, 20, 22, 23, 31, 34, 36, 44, 47, 48, 49, 51, 53, 54, 57, 59, 60, 62, 63, 65, 68, 69, 72, 75, 76, 134, 137, 138, 139, 140, 141, 143, 151, 153, 154, 155, 157, 165, 166, 170, 171, 174, 179, 180, 187, 188, 189, 192, 197, 198, 203, 205, 207, 209, 211, 212, 213, 215, 216, 217, 219, 220, 221, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 253, 255, 257, 258, 259, 263, 264, 266, 268, 269, 271, 278, 279, 280, 281, 286, 288, 289, 293, 298, 299, 300, 301, 309, 310, 311, 313, 314, 316, 317, 318, 319], "average_degree_connect": [0, 75, 309], "source_degree_typ": 0, "target_degree_typ": 0, "paramet": [0, 2, 6, 9, 15, 16, 17, 27, 40, 44, 48, 53, 54, 60, 69, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 125, 128, 133, 135, 136, 138, 140, 143, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 162, 164, 165, 166, 168, 169, 170, 171, 175, 176, 180, 181, 184, 186, 188, 189, 191, 192, 193, 195, 196, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 278, 279, 280, 281, 282, 283, 284, 286, 288, 289, 293, 298, 299], "str": [0, 20, 62, 63, 75, 76, 77, 82, 83, 89, 90, 91, 93, 99, 101, 102, 103, 104, 107, 109, 110, 111, 112, 115, 116, 128, 146, 148, 149, 164, 166, 280, 286, 288, 292, 293, 299, 314, 319], "target": [0, 6, 17, 22, 24, 46, 49, 57, 58, 64, 65, 69, 71, 75, 77, 140, 142, 148, 151, 222, 224, 243, 246, 278, 299, 309], "base": [0, 6, 9, 11, 12, 14, 18, 30, 31, 43, 48, 49, 50, 53, 54, 56, 60, 64, 65, 67, 68, 69, 72, 74, 75, 76, 97, 105, 134, 136, 138, 140, 141, 142, 148, 151, 222, 261, 276, 286, 298, 299, 303, 309, 318], "v": [0, 2, 6, 7, 9, 10, 14, 15, 18, 20, 22, 24, 39, 43, 47, 50, 51, 54, 60, 65, 68, 69, 74, 75, 76, 77, 134, 137, 138, 139, 140, 143, 146, 148, 149, 150, 151, 157, 180, 205, 208, 213, 215, 219, 225, 228, 233, 236, 243, 246, 248, 280, 286, 292, 293, 298, 299, 309, 313, 317, 318], "sum": [0, 20, 50, 67, 75, 77, 151, 205, 210, 213, 215, 216, 217, 226, 233, 236, 237, 244, 245, 284, 286, 317], "fraction": [0, 75, 151, 205], "pass": [0, 2, 6, 9, 10, 14, 15, 16, 18, 20, 24, 28, 34, 48, 53, 54, 60, 68, 69, 75, 77, 81, 140, 144, 146, 195, 233, 235, 278, 286, 290, 299, 309, 314, 319], "through": [0, 2, 6, 12, 14, 15, 16, 19, 22, 24, 28, 30, 31, 34, 46, 47, 48, 51, 53, 54, 57, 60, 65, 67, 68, 69, 71, 76, 78, 135, 136, 138, 139, 140, 145, 146, 148, 151, 181, 195, 212, 251, 286, 298, 299], "betweenness_centr": [0, 31, 151], "normal": [0, 6, 28, 40, 54, 75, 140, 148, 151, 208, 298], "endpoint": [0, 9, 10, 28, 29, 47, 49, 53, 62, 65, 74, 140, 149, 151, 293, 295, 299, 309, 317, 319], "bool": [0, 6, 14, 15, 20, 39, 74, 75, 77, 122, 148, 151, 158, 168, 170, 171, 180, 209, 219, 225, 229, 245, 286, 288, 293, 298, 319], "whether": [0, 34, 47, 48, 53, 54, 64, 68, 74, 75, 135, 136, 140, 148, 208, 210, 213, 233, 244, 245, 286, 298, 299, 300], "should": [0, 6, 9, 16, 19, 20, 22, 23, 28, 34, 47, 48, 50, 51, 53, 54, 64, 69, 74, 75, 82, 85, 98, 109, 144, 145, 148, 150, 151, 181, 205, 233, 234, 235, 236, 286, 288, 295, 298, 299, 300, 301], "includ": [0, 3, 6, 7, 9, 12, 16, 17, 20, 22, 24, 28, 32, 33, 34, 43, 46, 48, 49, 53, 54, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 136, 137, 140, 142, 148, 151, 166, 205, 213, 219, 229, 278, 285, 286, 297, 298, 299, 307], "count": [0, 6, 47, 48, 50, 51, 54, 60, 65, 67, 74, 75, 138, 139, 143, 144, 147, 151, 161, 219, 286, 299, 313, 317], "an": [0, 6, 7, 8, 9, 10, 12, 15, 16, 17, 18, 19, 28, 29, 31, 34, 36, 38, 40, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 82, 85, 86, 87, 88, 89, 90, 92, 93, 95, 98, 99, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 115, 116, 117, 119, 120, 129, 130, 134, 135, 136, 138, 139, 140, 142, 143, 145, 146, 148, 150, 151, 162, 163, 168, 173, 174, 180, 181, 183, 184, 185, 187, 190, 191, 192, 193, 195, 196, 198, 200, 201, 204, 206, 207, 215, 217, 218, 219, 221, 222, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 242, 243, 244, 245, 246, 247, 251, 253, 259, 264, 268, 271, 272, 276, 278, 279, 280, 281, 283, 284, 286, 289, 290, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303], "travers": [0, 6, 15, 17, 46, 47, 48, 57, 64, 65, 66, 67, 134, 137, 140, 142, 146, 149, 280, 286, 295, 298, 299, 300, 309, 317], "It": [0, 2, 4, 6, 9, 10, 11, 12, 15, 16, 24, 28, 29, 31, 34, 38, 40, 43, 47, 48, 50, 51, 53, 54, 56, 57, 63, 65, 66, 67, 69, 70, 71, 74, 75, 78, 126, 134, 135, 136, 140, 142, 144, 148, 149, 151, 155, 210, 214, 238, 239, 243, 246, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 267, 270, 272, 273, 278, 286, 293, 297, 298, 299, 300, 307], "start": [0, 2, 6, 9, 16, 19, 20, 28, 29, 30, 34, 36, 46, 47, 53, 60, 62, 68, 70, 73, 74, 76, 134, 138, 140, 149, 150, 151, 186, 211, 215, 217, 218, 221, 237, 251, 280, 288, 293, 298, 299, 303], "root": [0, 4, 28, 30, 33, 40, 66, 186, 188, 279, 280, 297], "explor": [0, 17, 43, 49, 53, 54, 64, 65, 68, 298], "present": [0, 2, 20, 28, 54, 60, 61, 62, 63, 64, 65, 67, 78, 151, 162, 205, 286, 297, 298], "prior": [0, 12, 31, 54, 56, 64], "move": [0, 6, 66, 140, 243, 246, 293], "next": [0, 6, 9, 12, 14, 16, 24, 27, 29, 31, 46, 47, 54, 57, 60, 61, 64, 69, 134, 135, 138, 140, 142, 144, 145, 146, 212, 280, 292, 295, 298, 299, 301], "level": [0, 6, 12, 35, 43, 48, 64, 65, 66, 69, 75, 142, 196, 243, 244, 283, 298, 299], "int": [0, 14, 15, 16, 17, 18, 19, 20, 23, 24, 39, 62, 68, 74, 75, 76, 77, 110, 135, 136, 137, 138, 139, 140, 143, 146, 147, 148, 150, 151, 179, 184, 186, 188, 191, 193, 195, 196, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 221, 222, 223, 224, 225, 227, 228, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 247, 248, 249, 250, 281, 286, 288, 293, 295, 299, 309, 317, 319], "origin": [0, 6, 9, 12, 22, 48, 53, 57, 62, 63, 68, 69, 74, 76, 104, 134, 136, 148, 149, 205, 227, 233, 272, 280, 284, 286, 292, 293, 299, 300], "reciproc": [0, 151], "n": [0, 19, 20, 27, 35, 48, 53, 54, 56, 60, 69, 72, 75, 76, 138, 140, 143, 145, 151, 161, 165, 166, 168, 172, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 204, 205, 207, 208, 209, 214, 215, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 247, 248, 251, 264, 279, 280, 281, 283, 286], "reachabl": [0, 151], "node": [0, 10, 15, 18, 27, 28, 40, 43, 59, 60, 61, 64, 65, 67, 69, 71, 73, 75, 76, 77, 96, 100, 106, 109, 110, 129, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 172, 174, 176, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 298, 300, 309, 312, 313, 318], "wasserman": 0, "faust": 0, "propos": [0, 3, 6, 12, 14, 24, 31, 56, 64, 66, 67, 69, 71, 138, 144, 295, 298], "improv": [0, 6, 9, 17, 19, 23, 46, 50, 66, 69, 70, 71, 302], "formula": 0, "more": [0, 2, 3, 4, 6, 7, 9, 12, 14, 15, 16, 17, 20, 28, 29, 30, 31, 33, 34, 35, 38, 40, 43, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 64, 66, 67, 68, 69, 70, 71, 74, 75, 76, 78, 134, 135, 138, 139, 140, 144, 145, 148, 151, 184, 225, 232, 233, 247, 248, 280, 286, 288, 293, 297, 298, 299, 302, 303], "than": [0, 15, 18, 23, 24, 29, 34, 40, 44, 47, 48, 53, 54, 55, 60, 64, 67, 68, 70, 71, 75, 136, 138, 140, 147, 151, 161, 195, 203, 205, 207, 212, 214, 225, 227, 236, 293, 298, 299, 302, 303], "one": [0, 2, 6, 9, 10, 12, 14, 15, 19, 20, 22, 24, 27, 29, 33, 34, 38, 40, 43, 46, 47, 48, 53, 54, 57, 60, 65, 68, 69, 71, 74, 75, 77, 82, 83, 99, 125, 134, 135, 136, 137, 138, 140, 144, 148, 151, 160, 184, 185, 188, 189, 192, 201, 202, 205, 214, 215, 220, 222, 223, 224, 225, 226, 228, 243, 246, 254, 257, 261, 264, 270, 271, 272, 278, 280, 282, 286, 292, 293, 295, 297, 298, 299, 302, 313, 317], "compon": [0, 6, 12, 19, 29, 30, 31, 35, 38, 40, 46, 51, 64, 66, 67, 74, 75, 151, 219, 233, 292, 298, 299], "ratio": [0, 54, 278], "actor": [0, 54, 64, 263], "group": [0, 2, 40, 48, 65, 67, 68, 74, 142, 148, 209, 210, 211, 213, 230, 258, 276, 297, 299, 317, 319], "who": [0, 11, 29, 54, 64, 68, 141, 146, 299], "closeness_centr": [0, 31], "wf": 0, "quantifi": 0, "how": [0, 2, 8, 9, 12, 14, 16, 20, 27, 28, 31, 33, 35, 40, 42, 43, 46, 47, 49, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 67, 68, 69, 71, 73, 76, 78, 86, 135, 136, 140, 142, 293, 294, 298, 300, 302, 303, 313], "its": [0, 6, 7, 9, 10, 12, 14, 18, 24, 27, 31, 36, 43, 50, 53, 54, 57, 59, 60, 63, 64, 65, 67, 69, 75, 76, 77, 125, 134, 136, 140, 144, 146, 148, 151, 193, 196, 203, 205, 225, 230, 243, 246, 254, 273, 283, 293, 298, 299, 301], "being": [0, 60, 68, 148, 185, 215, 295, 298, 299, 300], "cliqu": [0, 6, 54, 64, 67, 206, 207, 211, 212, 214, 228], "complet": [0, 14, 31, 36, 44, 48, 54, 68, 134, 136, 140, 161, 186, 187, 189, 191, 192, 198, 203, 212, 243, 246, 270, 286, 299], "have": [0, 2, 4, 6, 8, 9, 11, 12, 15, 19, 20, 23, 24, 27, 28, 29, 33, 34, 36, 38, 40, 43, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 60, 64, 65, 67, 68, 69, 71, 75, 76, 78, 82, 134, 135, 136, 137, 138, 140, 141, 143, 144, 146, 148, 151, 161, 165, 168, 180, 186, 191, 196, 205, 215, 216, 217, 219, 225, 228, 243, 244, 246, 262, 266, 280, 286, 292, 293, 297, 298, 299, 301, 303, 307, 313], "edg": [0, 6, 7, 9, 12, 15, 17, 18, 19, 22, 24, 27, 34, 39, 44, 47, 48, 50, 53, 57, 59, 60, 62, 63, 64, 65, 67, 68, 69, 71, 74, 75, 76, 77, 87, 88, 91, 96, 105, 109, 110, 129, 134, 135, 136, 137, 138, 139, 140, 142, 143, 146, 147, 148, 149, 150, 151, 153, 154, 155, 158, 161, 162, 164, 165, 166, 168, 170, 171, 174, 175, 177, 179, 180, 181, 185, 187, 188, 189, 190, 191, 192, 195, 197, 198, 199, 202, 203, 205, 207, 210, 211, 213, 215, 216, 217, 219, 221, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 270, 271, 272, 273, 276, 280, 283, 284, 285, 286, 287, 289, 292, 293, 295, 297, 299, 300, 301, 309, 313, 314, 318], "u": [0, 6, 14, 16, 18, 20, 34, 39, 40, 50, 54, 65, 75, 140, 144, 146, 148, 151, 157, 180, 192, 205, 219, 225, 228, 233, 236, 248, 286, 298, 309, 319], "equal": [0, 10, 40, 53, 54, 59, 63, 65, 151, 203, 205, 236, 241, 279, 313], "degree_assortativity_coeffici": [0, 75, 309], "hold": [0, 10, 20, 53, 74, 75, 76, 77, 99, 103, 104, 112, 136, 148, 149, 151, 286, 292], "numer": [0, 20, 64, 66, 67, 75, 76, 151, 286, 292, 298], "valu": [0, 6, 9, 15, 18, 20, 24, 29, 33, 39, 40, 47, 48, 57, 62, 67, 69, 74, 75, 76, 77, 111, 120, 128, 133, 134, 136, 137, 138, 139, 140, 143, 145, 146, 147, 148, 150, 151, 160, 180, 195, 205, 233, 234, 235, 236, 243, 245, 246, 278, 279, 280, 286, 288, 289, 292, 293, 295, 298, 299, 300, 309, 317, 318, 319], "If": [0, 2, 6, 7, 8, 14, 15, 17, 20, 23, 27, 28, 29, 30, 33, 34, 40, 47, 49, 51, 53, 54, 59, 65, 71, 75, 76, 78, 128, 133, 135, 136, 140, 141, 144, 145, 147, 148, 149, 150, 151, 156, 157, 159, 166, 170, 171, 180, 181, 186, 187, 188, 189, 191, 192, 193, 195, 196, 198, 200, 201, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 246, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 278, 281, 282, 284, 286, 288, 289, 292, 293, 295, 298, 299, 300, 307], "fals": [0, 15, 17, 18, 19, 20, 44, 47, 74, 75, 77, 134, 135, 136, 140, 146, 148, 150, 151, 164, 168, 170, 171, 180, 182, 183, 208, 209, 210, 213, 219, 229, 244, 286, 289, 293, 299, 309, 318], "ha": [0, 2, 6, 8, 9, 10, 12, 14, 15, 17, 23, 29, 31, 34, 36, 38, 40, 43, 48, 49, 50, 51, 52, 54, 57, 60, 61, 62, 64, 65, 68, 69, 70, 71, 74, 75, 76, 77, 78, 125, 134, 135, 136, 137, 138, 140, 143, 144, 145, 146, 148, 149, 151, 168, 170, 171, 174, 179, 180, 186, 201, 203, 205, 216, 220, 225, 233, 234, 235, 236, 237, 243, 246, 252, 253, 257, 258, 262, 268, 270, 273, 276, 278, 280, 284, 286, 290, 292, 293, 301, 303, 313, 314, 317], "adjac": [0, 10, 16, 20, 24, 53, 54, 69, 75, 137, 142, 151, 174, 207, 231, 249, 264, 278, 279, 286, 287, 298], "direct": [0, 9, 10, 15, 44, 47, 54, 57, 60, 63, 65, 69, 74, 75, 94, 126, 134, 136, 140, 143, 146, 148, 151, 156, 161, 167, 182, 193, 206, 207, 208, 209, 210, 213, 217, 218, 220, 229, 230, 231, 232, 243, 244, 253, 280, 284, 286, 287, 289, 297, 298, 300, 314, 318, 319], "three": [0, 6, 10, 12, 14, 18, 27, 31, 38, 54, 64, 66, 71, 72, 78, 135, 138, 139, 140, 143, 144, 145, 146, 151, 180, 185, 192, 268, 273, 282, 286, 299, 303], "separ": [0, 6, 17, 27, 33, 47, 49, 54, 64, 71, 135, 136, 233, 288, 298, 299], "defin": [0, 6, 10, 12, 18, 20, 24, 28, 40, 46, 47, 50, 53, 54, 56, 59, 62, 64, 65, 66, 68, 74, 75, 78, 93, 134, 135, 138, 140, 143, 145, 146, 151, 188, 210, 212, 235, 292, 293, 297, 298, 299, 313], "name": [0, 2, 4, 6, 12, 16, 17, 20, 22, 23, 27, 28, 29, 30, 34, 35, 38, 40, 48, 49, 50, 53, 54, 64, 66, 68, 74, 75, 76, 77, 82, 120, 135, 137, 140, 142, 144, 146, 148, 149, 151, 170, 171, 185, 252, 259, 264, 276, 282, 286, 288, 289, 292, 293, 297, 298, 299, 307, 309, 310, 312, 317, 319], "both": [0, 2, 10, 12, 18, 19, 20, 31, 50, 51, 57, 63, 64, 65, 66, 67, 68, 69, 75, 77, 134, 135, 136, 148, 149, 150, 165, 174, 179, 180, 185, 205, 229, 232, 237, 243, 246, 293, 295, 297, 298, 299, 301, 302, 316, 317], "degree_centr": [0, 31, 43, 75, 151, 287, 309], "centrality_typ": [0, 75], "appli": [0, 6, 9, 10, 12, 24, 28, 46, 47, 48, 53, 55, 57, 64, 65, 67, 71, 228, 235, 251, 278, 295, 298, 299, 301, 303], "far": [0, 64, 135], "possibl": [0, 6, 15, 40, 48, 57, 68, 69, 75, 136, 142, 143, 151, 219, 227, 228, 243, 244, 245, 246, 278, 282, 298], "along": [0, 6, 10, 20, 24, 36, 50, 53, 57, 77, 136, 140, 146, 280, 286, 300], "branch": [0, 54, 140, 186, 196, 317], "befor": [0, 17, 22, 23, 27, 28, 29, 34, 54, 60, 62, 74, 75, 78, 134, 140, 147, 186, 188, 189, 191, 193, 196, 198, 200, 201, 204, 215, 217, 218, 220, 222, 223, 224, 230, 231, 232, 238, 239, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 281, 288, 295, 298, 299, 301], "backtrack": 0, "influenc": [0, 28, 151], "relationship": [0, 40, 48, 54, 57, 60, 64, 67, 69, 135, 136, 146, 298, 299], "high": [0, 6, 9, 43, 44, 48, 54, 65, 66, 67, 69, 70, 71, 72, 142, 220, 251, 293, 295, 299], "score": [0, 54, 69], "contribut": [0, 46, 298], "low": [0, 6, 7, 30, 48, 59, 64, 65, 69, 70, 71, 278, 299], "A": [0, 6, 7, 9, 10, 24, 28, 29, 34, 43, 49, 51, 54, 57, 59, 64, 66, 67, 68, 69, 72, 74, 75, 76, 77, 83, 84, 86, 87, 88, 91, 94, 96, 105, 106, 110, 111, 120, 138, 139, 140, 143, 145, 148, 149, 150, 151, 153, 154, 155, 157, 158, 160, 162, 164, 165, 166, 168, 169, 170, 171, 174, 179, 180, 181, 184, 185, 186, 188, 189, 191, 195, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 221, 225, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 252, 254, 263, 274, 278, 279, 280, 281, 283, 284, 286, 288, 293, 297, 298, 299, 300, 301], "mean": [0, 2, 20, 27, 29, 33, 34, 47, 48, 50, 62, 74, 76, 81, 122, 136, 139, 140, 150, 151, 191, 208, 215, 225, 234, 235, 236, 286, 289, 292, 293, 295, 298, 299, 301], "themselv": [0, 48, 54, 57, 280], "eigenvector_centr": [0, 31, 75, 151, 287, 309], "toler": [0, 75, 151, 205], "max_round": [0, 75, 309], "doubl": [0, 9, 14, 16, 17, 18, 39, 68, 72, 77, 135, 145, 256, 280, 301, 309, 317, 319], "error": [0, 2, 33, 34, 35, 40, 46, 48, 51, 74, 75, 140, 144, 148, 151, 185, 286, 299], "check": [0, 6, 12, 17, 27, 28, 29, 31, 32, 34, 35, 40, 47, 48, 54, 60, 62, 67, 68, 75, 144, 148, 151, 244, 245, 286, 293, 298, 299, 307, 312, 313], "converg": [0, 6, 9, 14, 17, 24, 69, 72, 75, 151], "maximum": [0, 47, 53, 54, 67, 75, 137, 151, 205, 221, 236, 237, 238, 239, 244, 285], "number": [0, 8, 9, 19, 20, 24, 27, 43, 47, 49, 51, 52, 53, 54, 57, 61, 62, 65, 67, 69, 72, 74, 75, 77, 136, 137, 138, 139, 140, 143, 147, 151, 161, 166, 168, 177, 178, 179, 184, 185, 187, 189, 192, 196, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 259, 264, 269, 276, 278, 279, 281, 283, 284, 285, 286, 293, 295, 298, 299, 300, 307, 313, 317], "iter": [0, 6, 9, 14, 16, 17, 19, 20, 24, 53, 57, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 75, 77, 134, 137, 146, 150, 151, 153, 154, 155, 156, 157, 162, 173, 174, 175, 176, 180, 181, 191, 192, 193, 195, 198, 200, 201, 204, 205, 233, 234, 235, 236, 237, 243, 246, 248, 280, 286, 309, 313, 318], "import": [0, 2, 7, 10, 15, 16, 17, 18, 19, 20, 22, 27, 28, 29, 33, 34, 35, 43, 46, 47, 48, 51, 54, 55, 57, 59, 60, 62, 63, 65, 67, 69, 75, 76, 126, 129, 130, 134, 135, 136, 138, 141, 143, 145, 146, 147, 148, 151, 205, 233, 234, 235, 236, 286, 293, 297, 301, 303, 307, 309, 310, 311, 313, 314, 317, 318, 319], "rate": [0, 64, 70, 75, 233, 235, 236], "two": [0, 2, 6, 9, 16, 17, 18, 19, 29, 34, 40, 43, 47, 48, 50, 54, 57, 58, 65, 67, 68, 69, 71, 72, 134, 135, 136, 137, 138, 140, 142, 144, 146, 148, 151, 157, 180, 187, 188, 190, 192, 193, 197, 214, 225, 226, 233, 234, 235, 236, 237, 241, 243, 246, 247, 252, 253, 261, 279, 280, 285, 286, 297, 298, 299, 313], "hub": [0, 29, 75, 76, 151, 204, 292], "author": [0, 28, 63, 65, 75, 151, 205, 293, 313], "estim": [0, 48, 54, 67, 68, 146, 151], "within": [0, 27, 33, 50, 53, 54, 58, 64, 65, 67, 69, 140, 149, 151, 205, 208, 209, 229, 235, 236, 293, 298, 307, 313, 317], "we": [0, 2, 4, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 40, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 76, 78, 82, 84, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 148, 149, 189, 203, 205, 215, 217, 243, 264, 286, 289, 292, 293, 298, 299, 301, 303, 313, 319], "need": [0, 2, 4, 6, 7, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 27, 28, 29, 30, 31, 33, 34, 36, 38, 40, 43, 44, 47, 48, 54, 56, 57, 58, 59, 62, 64, 65, 66, 68, 69, 71, 74, 75, 78, 134, 135, 136, 138, 140, 143, 144, 145, 147, 148, 220, 233, 238, 244, 264, 280, 286, 289, 295, 298, 299, 301, 302, 303, 309], "rel": [0, 28, 48, 49, 57, 69, 136, 140, 151, 299], "immedi": [0, 6, 48, 70, 75, 77, 140, 151, 289, 293, 299], "also": [0, 1, 2, 6, 9, 10, 12, 16, 17, 19, 20, 22, 23, 27, 28, 29, 30, 31, 33, 34, 40, 43, 47, 48, 54, 56, 59, 62, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 77, 78, 134, 135, 136, 138, 141, 142, 143, 146, 148, 149, 151, 186, 205, 230, 232, 233, 237, 256, 261, 266, 278, 280, 284, 286, 289, 292, 293, 295, 297, 298, 299, 302, 303, 309], "under": [0, 9, 10, 14, 17, 24, 35, 54, 59, 64, 66, 75, 78, 140, 142, 143, 151, 298], "consider": [0, 68, 151, 208], "katz_centr": [0, 31, 75, 151, 287, 309], "alpha": [0, 54, 75, 151, 225, 226, 237, 278], "beta": [0, 75, 151, 226, 237], "attenu": [0, 151], "factor": [0, 49, 54, 75, 151, 186, 196, 218, 220, 298], "neighborhood": [0, 6, 46, 64, 66, 69, 75, 140, 144, 151, 229], "maxim": [0, 6, 151, 239, 285], "subgraph": [0, 6, 9, 17, 46, 54, 56, 65, 66, 67, 75, 96, 104, 134, 140, 142, 148, 149, 151, 162, 165, 187, 198, 229, 286, 313, 317], "contain": [0, 2, 6, 8, 17, 20, 23, 28, 30, 34, 35, 40, 43, 47, 48, 52, 53, 54, 57, 60, 61, 64, 65, 67, 69, 71, 72, 74, 77, 78, 134, 135, 138, 140, 143, 144, 145, 146, 148, 151, 153, 154, 155, 162, 165, 166, 181, 191, 192, 193, 195, 198, 213, 238, 239, 243, 244, 286, 289, 290, 293, 298, 299, 307, 311, 317], "found": [0, 4, 9, 16, 17, 18, 33, 40, 47, 54, 57, 58, 66, 72, 126, 147, 205, 247, 248, 284, 286, 297, 298, 299, 303], "recurs": [0, 6, 140, 188], "prune": 0, "less": [0, 2, 6, 17, 28, 44, 47, 75, 140, 147, 151, 203, 214, 225, 227, 299], "kkore": [0, 31], "order": [0, 6, 31, 48, 56, 66, 68, 69, 75, 76, 135, 140, 146, 151, 153, 154, 160, 184, 185, 188, 193, 200, 213, 214, 217, 249, 250, 253, 278, 279, 286, 292, 295, 299, 317], "That": [0, 28, 75, 145, 203, 246, 289, 301], "kshell": [0, 31], "fast": [0, 9, 20, 48, 75, 144], "where": [0, 2, 6, 12, 14, 18, 24, 34, 38, 40, 50, 56, 57, 64, 65, 68, 69, 71, 75, 120, 135, 136, 138, 140, 144, 151, 161, 168, 186, 215, 219, 221, 230, 233, 234, 235, 236, 264, 286, 293, 297, 298, 299, 313, 317], "assign": [0, 7, 9, 15, 18, 20, 33, 47, 50, 58, 65, 67, 69, 74, 75, 77, 151, 205, 213, 215, 217, 219, 233, 236, 241, 286, 289, 292, 295, 298, 299, 319], "unlabel": 0, "dure": [0, 6, 9, 24, 40, 51, 53, 54, 66, 67, 69, 74, 135, 140, 205, 295, 299, 300, 301, 302], "wai": [0, 1, 6, 10, 14, 20, 29, 33, 34, 40, 43, 47, 48, 56, 66, 68, 69, 138, 140, 142, 144, 151, 205, 271, 278, 280, 286, 293, 297, 298, 300], "exist": [0, 2, 4, 6, 8, 9, 10, 12, 14, 15, 20, 28, 31, 34, 43, 46, 53, 57, 64, 66, 67, 68, 69, 71, 75, 77, 82, 84, 128, 131, 133, 135, 138, 140, 144, 145, 148, 151, 170, 171, 175, 217, 226, 240, 284, 286, 293, 295, 297], "variant": [0, 36, 69, 72], "follow": [0, 6, 7, 9, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 27, 28, 29, 31, 32, 33, 34, 36, 40, 47, 49, 50, 51, 53, 54, 55, 57, 59, 60, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 78, 82, 134, 135, 136, 137, 138, 140, 143, 144, 146, 148, 150, 185, 205, 215, 219, 225, 228, 238, 239, 245, 248, 269, 282, 286, 293, 295, 297, 298, 299, 300, 302, 303, 307], "networkx": [0, 3, 7, 8, 12, 20, 31, 43, 46, 56, 70, 73, 74, 75, 110, 151, 153, 154, 155, 156, 157, 158, 160, 162, 164, 165, 166, 168, 169, 170, 171, 175, 176, 180, 181, 185, 186, 188, 189, 191, 192, 193, 196, 198, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 226, 229, 230, 231, 232, 237, 238, 239, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 279, 281, 286, 288, 289, 291, 315, 320], "damp": 0, "set": [0, 2, 4, 6, 7, 9, 10, 14, 15, 16, 18, 20, 23, 28, 36, 38, 40, 43, 44, 47, 48, 49, 53, 54, 56, 59, 60, 64, 65, 66, 68, 69, 72, 73, 74, 75, 77, 126, 133, 134, 135, 136, 138, 140, 143, 146, 147, 148, 149, 150, 151, 165, 189, 205, 219, 220, 225, 229, 237, 240, 241, 242, 247, 248, 266, 281, 284, 286, 289, 293, 297, 298, 299, 300, 303, 311, 312, 316], "sampling_path": [0, 31], "source_id": [0, 14], "cutoff": 0, "fix": [0, 6, 53, 54, 57, 59, 69, 125, 278, 299, 301], "rank": [0, 6, 64, 74, 75, 76, 278, 292], "vote": [0, 75, 77], "scheme": [0, 6, 9, 47], "With": [0, 4, 12, 19, 24, 31, 33, 38, 49, 50, 53, 54, 56, 61, 62, 64, 66, 224, 297], "top": [0, 9, 12, 22, 31, 53, 54, 68, 71, 138, 260, 299, 317], "highest": [0, 54, 220], "elect": 0, "num_of_nod": [0, 75], "select": [0, 9, 15, 33, 48, 50, 57, 60, 64, 67, 69, 76, 83, 89, 90, 101, 102, 107, 115, 116, 134, 140, 148, 205, 214, 237, 249, 283, 286, 292, 293, 297, 298, 317], "influenti": 0, "extract": [0, 53, 64, 65, 66, 75, 82, 149, 293, 295, 299], "In": [1, 2, 6, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 29, 30, 31, 34, 40, 43, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 60, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 148, 151, 208, 237, 240, 243, 244, 246, 286, 289, 292, 295, 298, 299, 301, 303], "addit": [1, 6, 9, 10, 12, 15, 18, 20, 24, 30, 31, 43, 48, 49, 51, 53, 54, 55, 56, 57, 60, 68, 72, 93, 111, 135, 136, 137, 138, 148, 280, 286, 299, 303], "built": [1, 3, 4, 8, 9, 12, 15, 18, 20, 22, 30, 31, 33, 38, 40, 46, 49, 51, 54, 64, 65, 69, 70, 72, 73, 134, 148, 222, 223, 224, 295, 303], "provid": [1, 2, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 23, 27, 29, 30, 31, 32, 33, 36, 40, 43, 44, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 92, 134, 136, 140, 141, 142, 146, 151, 182, 183, 205, 233, 234, 235, 236, 283, 286, 288, 293, 295, 297, 298, 299, 300, 303, 309], "run": [1, 2, 4, 6, 8, 9, 12, 19, 20, 24, 27, 28, 29, 30, 35, 36, 40, 46, 47, 49, 53, 55, 58, 61, 62, 64, 65, 69, 71, 73, 74, 75, 76, 111, 122, 140, 144, 145, 146, 148, 149, 238, 239, 289, 290, 293, 298, 299, 300, 301, 302, 303, 307, 309, 311, 316], "your": [1, 2, 7, 8, 12, 14, 20, 23, 24, 27, 28, 29, 30, 33, 35, 36, 38, 40, 46, 49, 51, 57, 58, 59, 61, 62, 65, 71, 73, 75, 78, 136, 141, 145, 146, 195, 215, 286, 293, 295, 298, 309, 317], "own": [1, 6, 8, 12, 15, 24, 31, 33, 34, 46, 50, 55, 56, 67, 73, 78, 125, 138, 141, 146, 205, 215, 293, 298, 299, 303], "design": [1, 6, 7, 12, 15, 18, 28, 43, 46, 51, 54, 59, 60, 61, 62, 66, 68, 69, 70, 71, 74, 134, 136, 142, 151, 286, 299], "extens": [1, 6, 28, 33, 48, 60, 64, 135], "henc": [1, 2, 10, 30, 160, 283, 286, 299], "you": [1, 2, 4, 7, 8, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 29, 30, 33, 34, 36, 38, 40, 44, 47, 49, 50, 51, 52, 53, 54, 58, 59, 61, 62, 65, 70, 71, 73, 75, 78, 128, 133, 135, 136, 139, 140, 141, 144, 145, 148, 151, 164, 195, 205, 215, 217, 229, 234, 235, 236, 286, 293, 295, 298, 299, 301, 307, 309, 319], "flash": [1, 3, 8, 12, 46, 64], "java": [1, 8, 12, 14, 31, 46, 49, 56, 66, 67, 71, 75, 78, 82, 298, 309], "c": [1, 6, 8, 12, 14, 17, 18, 31, 36, 46, 53, 54, 56, 57, 64, 66, 67, 74, 75, 76, 78, 81, 93, 107, 136, 140, 144, 146, 151, 184, 185, 195, 215, 226, 239, 240, 243, 244, 278, 280, 282, 283, 286, 298, 301, 307, 309, 311, 317], "python": [1, 7, 8, 11, 12, 14, 16, 17, 20, 22, 23, 27, 28, 29, 30, 31, 40, 43, 46, 47, 51, 54, 57, 59, 62, 64, 65, 67, 68, 70, 71, 74, 75, 81, 134, 137, 141, 144, 146, 149, 150, 286, 288, 289, 297, 298, 307, 309, 310, 312, 313, 315, 316, 317, 319], "alreadi": [2, 8, 20, 23, 24, 27, 28, 29, 33, 34, 38, 43, 49, 54, 60, 134, 284, 286, 319], "deploi": [2, 15, 40, 46, 48, 49, 51, 56, 59, 64, 66, 71, 136, 293, 295, 300], "local": [2, 4, 6, 10, 14, 22, 24, 27, 28, 31, 34, 40, 46, 47, 54, 61, 64, 65, 69, 74, 75, 78, 110, 135, 136, 144, 145, 146, 148, 293, 300, 316, 317], "machin": [2, 6, 7, 11, 14, 20, 24, 27, 28, 30, 33, 34, 35, 40, 47, 49, 51, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 75, 134, 146, 293, 298], "take": [2, 4, 6, 9, 14, 15, 18, 24, 27, 28, 29, 33, 38, 40, 48, 54, 56, 57, 65, 66, 69, 78, 95, 135, 138, 139, 140, 144, 146, 148, 151, 214, 235, 266, 284, 286, 290, 292, 298, 299, 300, 301], "advantag": [2, 48, 56, 70, 71, 302], "3": [2, 6, 9, 10, 14, 17, 19, 20, 22, 23, 27, 28, 30, 31, 36, 38, 40, 43, 47, 48, 49, 50, 51, 53, 54, 57, 60, 65, 68, 69, 72, 75, 76, 137, 138, 139, 140, 143, 148, 149, 151, 153, 154, 155, 157, 162, 166, 170, 171, 187, 189, 192, 195, 201, 205, 206, 207, 209, 210, 211, 213, 217, 220, 221, 225, 226, 230, 232, 243, 244, 246, 248, 251, 254, 259, 263, 264, 267, 270, 273, 275, 278, 279, 280, 281, 286, 288, 289, 298, 299, 301, 310, 313, 316, 317], "gie": [2, 30, 44, 46, 51, 54, 56, 64, 68, 71, 72, 73, 103, 104, 310, 311, 320], "gle": [2, 30, 46, 56, 59, 60, 61, 64, 69, 71, 73, 310, 311, 318], "address": [2, 9, 14, 17, 23, 36, 40, 50, 64, 69, 299, 317], "differ": [2, 6, 9, 10, 12, 15, 17, 18, 20, 23, 27, 28, 31, 32, 33, 34, 38, 43, 46, 48, 53, 54, 56, 57, 60, 64, 65, 66, 67, 68, 69, 71, 72, 75, 93, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 205, 209, 210, 211, 233, 236, 243, 263, 278, 286, 291, 295, 297, 298, 300, 301, 302, 303], "complex": [2, 6, 12, 22, 31, 34, 43, 48, 49, 50, 51, 52, 53, 56, 57, 64, 66, 67, 68, 69, 70, 71, 75, 137, 151, 215, 219, 234, 235, 236, 298], "relat": [2, 23, 24, 28, 35, 40, 46, 48, 53, 57, 60, 63, 64, 65, 66, 68, 69, 74, 136, 140, 146, 242, 278, 283, 298, 299], "show": [2, 14, 19, 20, 28, 29, 35, 40, 48, 49, 54, 56, 61, 62, 65, 67, 68, 69, 137, 138, 146, 289, 293, 295, 298], "kubernet": [2, 29, 40, 43, 46, 47, 56, 61, 65, 70, 293, 299, 310, 312, 313, 315, 319, 320], "cluster": [2, 6, 7, 10, 14, 15, 17, 18, 19, 20, 22, 23, 29, 31, 40, 43, 46, 49, 54, 56, 59, 61, 64, 65, 66, 67, 68, 69, 70, 75, 136, 146, 151, 208, 287, 293, 299, 300, 307, 309, 316], "howev": [2, 6, 9, 11, 15, 20, 24, 27, 34, 40, 43, 47, 48, 51, 54, 57, 64, 68, 69, 71, 135, 136, 137, 142, 151, 215, 286, 298, 299], "scenario": [2, 6, 8, 12, 38, 44, 48, 53, 54, 57, 60, 64, 68, 69, 71, 135, 136, 138], "quit": [2, 205], "common": [2, 6, 12, 15, 48, 54, 57, 60, 64, 66, 67, 68, 69, 71, 134, 135, 142, 143, 157, 278, 280, 286, 298, 307], "intend": [2, 33, 278, 292], "analysi": [2, 7, 8, 11, 48, 54, 56, 69, 70, 72, 73, 75, 239], "offlin": [2, 46, 56, 57, 66, 69, 70, 295], "everi": [2, 6, 23, 54, 60, 69, 74, 140, 151, 153, 154, 155, 170, 171, 189, 203, 266, 273, 286, 292, 298], "dai": [2, 20, 54, 286, 289], "export": [2, 4, 23, 29, 36, 40, 49, 58, 297, 312], "warehous": 2, "without": [2, 6, 9, 14, 22, 27, 28, 29, 31, 34, 50, 53, 64, 66, 71, 78, 91, 135, 137, 138, 139, 140, 161, 198, 212, 219, 225, 226, 233, 234, 235, 236, 237, 286, 289, 293, 298, 301, 317], "real": [2, 6, 9, 12, 31, 43, 47, 53, 56, 64, 65, 67, 68, 69, 278, 299], "time": [2, 6, 9, 12, 14, 17, 19, 20, 23, 28, 29, 31, 34, 40, 48, 53, 54, 56, 60, 65, 68, 69, 72, 75, 135, 136, 140, 151, 184, 185, 221, 222, 223, 224, 234, 235, 236, 238, 239, 248, 251, 286, 298, 299, 301, 313, 317], "queri": [2, 7, 9, 14, 19, 22, 29, 31, 40, 43, 46, 47, 49, 51, 52, 53, 55, 56, 57, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 83, 89, 90, 99, 103, 104, 107, 111, 115, 116, 120, 130, 134, 136, 138, 140, 142, 146, 148, 150, 170, 171, 291, 293, 298, 301, 303, 307, 313], "sampl": [2, 27, 29, 36, 46, 47, 56, 57, 64, 65, 71, 78, 135, 136, 137, 139, 142, 144, 147, 150, 225, 245, 278, 299, 318], "case": [2, 6, 8, 10, 14, 15, 18, 28, 34, 38, 40, 43, 44, 46, 47, 48, 50, 51, 54, 60, 68, 72, 77, 135, 136, 140, 142, 144, 147, 151, 205, 213, 219, 243, 254, 270, 292, 293, 298, 299, 303], "unnecessari": [2, 6, 9, 54, 298], "capabl": [2, 6, 11, 16, 20, 53, 64, 71, 286], "independ": [2, 6, 64, 71, 135, 149, 162, 165, 213, 240, 286], "document": [2, 4, 10, 28, 29, 32, 33, 35, 40, 46, 49, 53, 56, 58, 69, 75, 134, 135, 141, 294, 299], "walk": [2, 30, 47, 51, 54, 64, 65, 68, 140, 187, 198], "process": [2, 3, 6, 9, 11, 12, 14, 15, 16, 19, 22, 23, 24, 27, 28, 29, 30, 31, 32, 34, 43, 46, 47, 49, 51, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 74, 84, 135, 136, 138, 140, 144, 146, 215, 217, 220, 248, 254, 286, 293, 295, 297, 298, 301, 303], "standalon": [2, 23, 28, 30, 40, 46, 49, 54, 64, 300, 319], "self": [2, 47, 54, 120, 134, 137, 140, 151, 161, 174, 213, 215, 217, 219, 225, 233, 234, 235, 236, 237, 286, 287, 289, 293, 299, 314, 318, 319], "manag": [2, 10, 12, 14, 16, 27, 28, 29, 40, 43, 47, 54, 56, 60, 61, 62, 64, 66, 67, 69, 70, 71, 72, 74, 293, 299, 300, 309], "k8": [2, 7, 17, 22, 35, 38, 40, 43, 46, 47, 56, 59, 61, 71, 73, 293, 299, 309, 310, 311, 313, 316, 319], "7": [2, 10, 20, 23, 27, 28, 30, 36, 40, 51, 54, 72, 135, 141, 146, 153, 154, 166, 189, 251, 257, 259, 263, 264, 267, 269, 281, 286, 301, 312, 316, 317], "To": [2, 6, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 27, 28, 29, 30, 31, 33, 34, 40, 43, 47, 48, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 69, 71, 72, 75, 78, 134, 135, 136, 138, 140, 141, 142, 144, 146, 151, 164, 215, 217, 222, 224, 233, 236, 276, 280, 286, 288, 292, 293, 295, 297, 298, 299, 302, 303, 307], "get": [2, 4, 6, 12, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 35, 36, 38, 40, 46, 47, 48, 49, 53, 54, 57, 60, 68, 70, 73, 75, 76, 77, 94, 128, 130, 134, 137, 138, 139, 140, 143, 148, 149, 150, 151, 184, 205, 276, 286, 292, 293, 295, 298, 299, 303, 307, 309, 312, 313], "instal": [2, 4, 15, 16, 19, 23, 32, 38, 40, 47, 49, 65, 75, 78, 144, 286, 289, 293, 310, 311, 312, 313, 316], "client": [2, 17, 22, 23, 29, 38, 39, 46, 48, 56, 62, 74, 75, 146, 293, 295, 297, 298, 299, 300, 309, 311, 316], "prepar": [2, 33, 46, 47, 51, 57, 58, 59, 60, 62, 63, 65, 69, 73, 298, 313, 316], "continu": [2, 6, 15, 16, 20, 28, 46, 47, 48, 54, 56, 57, 64, 65, 69, 72, 134, 205, 243, 246, 298, 299, 300], "incas": [2, 47], "doesn": [2, 29, 30, 34, 38, 47, 54, 78, 140, 148, 215, 217, 219, 286, 292, 301], "t": [2, 6, 8, 17, 23, 27, 29, 30, 33, 34, 38, 39, 40, 47, 53, 54, 66, 68, 72, 74, 75, 77, 78, 84, 134, 139, 140, 146, 148, 150, 151, 164, 180, 215, 217, 219, 239, 243, 244, 278, 280, 283, 286, 292, 299, 301, 318], "could": [2, 4, 6, 9, 15, 22, 28, 29, 30, 33, 35, 36, 38, 44, 47, 49, 53, 56, 73, 75, 129, 136, 138, 139, 148, 214, 297, 298, 299, 300], "creat": [2, 9, 10, 12, 16, 17, 19, 23, 27, 28, 29, 31, 36, 40, 47, 49, 51, 53, 54, 64, 65, 69, 74, 75, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 104, 105, 106, 110, 113, 114, 120, 126, 127, 129, 130, 138, 140, 143, 145, 148, 149, 164, 186, 188, 189, 191, 192, 193, 195, 196, 198, 200, 201, 203, 204, 205, 207, 208, 210, 213, 215, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 234, 235, 236, 238, 239, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 280, 281, 286, 288, 289, 290, 293, 299, 300, 301, 302, 307, 309, 312], "distinct": [2, 53, 64, 191, 253, 279, 298], "method": [2, 15, 16, 17, 18, 20, 22, 23, 29, 54, 60, 62, 67, 69, 74, 75, 77, 97, 110, 125, 134, 138, 142, 143, 148, 149, 151, 214, 222, 224, 233, 235, 286, 289, 291, 293, 298, 299, 303, 309], "entir": [2, 9, 31, 48, 54, 65, 69, 140, 151, 286], "discret": [2, 57, 69, 134, 205, 218, 220, 226, 230, 241], "util": [2, 4, 6, 9, 15, 30, 33, 38, 54, 56, 58, 63, 64, 65, 66, 67, 70, 74, 75, 77, 150, 251, 297, 298, 299, 302], "either": [2, 27, 31, 40, 47, 50, 54, 60, 75, 136, 140, 148, 149, 189, 192, 205, 232, 243, 276, 286, 300], "aforement": [2, 67, 69, 135, 140, 299], "per": [2, 47, 298], "prefer": [2, 28, 33, 298], "session": [2, 7, 8, 16, 17, 22, 28, 29, 40, 43, 46, 51, 52, 54, 56, 59, 61, 73, 75, 76, 93, 126, 127, 128, 129, 130, 131, 133, 148, 149, 286, 290, 291, 299, 301, 307, 309, 310, 311, 313, 314, 317, 319], "class": [2, 9, 15, 17, 18, 20, 22, 23, 54, 60, 63, 65, 69, 74, 75, 76, 77, 81, 134, 135, 148, 149, 150, 151, 195, 264, 286, 290, 293, 298, 299, 300, 309, 318], "option": [2, 4, 6, 15, 28, 29, 30, 36, 38, 47, 49, 50, 53, 54, 56, 58, 68, 71, 75, 76, 78, 81, 103, 104, 110, 111, 112, 122, 128, 133, 135, 138, 140, 148, 149, 151, 153, 154, 155, 170, 171, 180, 186, 188, 189, 191, 193, 195, 196, 198, 200, 201, 204, 208, 209, 210, 213, 215, 217, 218, 220, 221, 222, 223, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 278, 281, 284, 286, 288, 289, 292, 293, 299, 300], "control": [2, 6, 28, 64, 66, 74, 151, 286, 298], "subset": [2, 6, 20, 50, 53, 63, 65, 192, 203, 292, 293], "upon": [2, 9, 14, 71, 148, 299, 300], "launch": [2, 8, 9, 17, 22, 29, 33, 38, 40, 43, 47, 52, 59, 61, 62, 65, 73, 126, 145, 290, 293, 299, 300, 313], "For": [2, 6, 9, 10, 12, 15, 16, 17, 20, 22, 29, 32, 34, 38, 40, 43, 44, 47, 48, 50, 53, 54, 56, 57, 60, 62, 64, 65, 67, 68, 69, 75, 77, 82, 134, 135, 136, 137, 140, 142, 144, 146, 151, 163, 184, 187, 189, 192, 215, 217, 219, 220, 225, 228, 229, 233, 234, 235, 236, 237, 248, 251, 280, 286, 290, 292, 293, 299, 301, 302, 307], "exampl": [2, 7, 10, 15, 16, 18, 19, 20, 28, 36, 38, 43, 46, 47, 50, 51, 53, 54, 56, 57, 59, 60, 62, 63, 64, 65, 67, 68, 69, 75, 76, 81, 82, 126, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 151, 153, 154, 155, 157, 162, 164, 165, 170, 171, 174, 179, 180, 185, 187, 189, 191, 192, 195, 198, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 221, 222, 224, 226, 229, 233, 234, 235, 236, 237, 243, 246, 251, 276, 278, 279, 280, 281, 284, 286, 288, 289, 290, 292, 293, 297, 298, 299, 300, 301, 307, 309, 313, 318], "set_opt": [2, 7, 15, 17, 19, 29, 35, 40, 51, 59, 62, 63, 65, 293, 307, 312], "show_log": [2, 7, 15, 17, 19, 29, 35, 40, 51, 59, 62, 63, 65, 128, 133, 293, 307, 312], "true": [2, 6, 7, 9, 15, 16, 17, 18, 19, 20, 27, 29, 35, 40, 47, 51, 53, 54, 59, 60, 62, 63, 65, 74, 75, 77, 78, 122, 126, 131, 134, 135, 136, 140, 143, 146, 148, 151, 158, 167, 168, 169, 170, 171, 180, 182, 183, 189, 191, 209, 213, 215, 219, 225, 229, 232, 244, 284, 286, 288, 289, 293, 299, 300, 307, 309, 312, 317, 318, 319], "sess": [2, 16, 17, 22, 27, 28, 29, 43, 44, 62, 63, 75, 76, 122, 126, 148, 149, 293, 301, 307, 309, 310, 311, 313, 314, 317, 319], "enabled_engin": [2, 128, 133, 293], "g": [2, 4, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 29, 30, 31, 33, 38, 40, 43, 44, 46, 47, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 82, 129, 130, 134, 136, 137, 138, 139, 140, 141, 143, 144, 146, 148, 149, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 185, 186, 188, 189, 191, 192, 195, 196, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 224, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 242, 243, 246, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 278, 279, 283, 284, 286, 288, 289, 292, 293, 295, 297, 298, 299, 300, 302, 303, 307, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319], "custom": [2, 3, 7, 8, 22, 29, 32, 33, 46, 48, 56, 60, 64, 67, 69, 70, 134, 135, 138, 140, 142, 143, 144, 233, 235, 236, 283, 303], "command": [2, 4, 7, 16, 23, 28, 29, 30, 32, 33, 36, 38, 40, 46, 49, 58, 59, 74, 135, 299, 300, 307], "line": [2, 4, 6, 7, 17, 33, 35, 38, 46, 48, 58, 59, 66, 71, 134, 135, 286, 288, 299, 300, 307, 318], "releas": [2, 28, 30, 32, 36, 40, 46, 62, 68, 72, 243, 246, 292, 293, 299, 312, 316], "replac": [2, 17, 19, 22, 23, 29, 48, 49, 53, 66, 72, 137, 138, 139, 148, 286, 293], "my": [2, 18, 29, 286, 289, 293, 299], "illustr": [2, 29, 54, 57, 63, 67, 69, 137, 263], "Then": [2, 9, 14, 15, 16, 17, 19, 22, 23, 27, 28, 29, 43, 47, 48, 54, 60, 62, 64, 65, 134, 140, 280, 295, 301], "connect": [2, 6, 15, 17, 19, 20, 28, 34, 38, 40, 46, 47, 48, 54, 56, 60, 62, 64, 65, 66, 67, 69, 75, 76, 77, 135, 136, 138, 140, 143, 149, 151, 155, 172, 187, 189, 191, 193, 197, 198, 200, 201, 203, 204, 205, 207, 208, 209, 210, 212, 214, 219, 220, 225, 226, 228, 233, 235, 236, 237, 238, 239, 240, 242, 251, 261, 262, 264, 266, 268, 285, 286, 293, 300, 301, 309, 317], "servic": [2, 28, 29, 35, 46, 56, 62, 64, 67, 69, 74, 293, 299, 300], "see": [2, 4, 19, 20, 27, 28, 29, 33, 34, 35, 40, 47, 51, 54, 56, 68, 70, 75, 76, 78, 126, 129, 130, 135, 136, 138, 143, 146, 148, 184, 194, 199, 205, 208, 209, 210, 211, 213, 215, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 235, 236, 237, 240, 241, 242, 243, 246, 251, 278, 281, 283, 286, 288, 292, 293, 297, 298, 299, 302], "detail": [2, 6, 7, 9, 12, 14, 17, 20, 27, 28, 29, 31, 35, 40, 42, 46, 47, 51, 54, 56, 59, 60, 67, 69, 71, 74, 75, 76, 126, 128, 129, 130, 133, 135, 136, 138, 139, 142, 143, 144, 146, 243, 286, 293, 297, 299, 302, 303], "addr": [2, 29, 77, 293], "ip": [2, 29, 47, 49, 293, 299, 317], "port": [2, 23, 29, 35, 40, 47, 49, 74, 293, 299, 317, 319], "mai": [2, 4, 6, 7, 8, 14, 15, 18, 20, 22, 24, 27, 28, 29, 30, 33, 34, 35, 36, 40, 43, 44, 47, 48, 50, 51, 53, 54, 57, 59, 62, 64, 65, 68, 69, 70, 71, 84, 135, 140, 142, 143, 144, 145, 148, 185, 208, 215, 217, 225, 286, 289, 292, 293, 298, 299, 301, 303], "would": [2, 4, 20, 29, 33, 34, 36, 38, 40, 49, 54, 64, 74, 75, 140, 146, 289, 292, 293, 299], "previou": [2, 9, 15, 19, 28, 29, 36, 38, 54, 65, 75, 83, 134, 138, 140, 224, 299], "wcc_result": 2, "wcc": [2, 72, 75, 309, 314], "print": [2, 7, 16, 20, 27, 29, 40, 43, 47, 51, 54, 59, 60, 62, 63, 65, 75, 76, 137, 139, 140, 143, 146, 148, 149, 151, 164, 213, 281, 286, 289, 299, 307, 314, 317, 319], "to_datafram": [2, 7, 15, 43, 65, 76, 148, 292, 309], "id": [2, 7, 9, 15, 17, 18, 27, 39, 40, 43, 44, 46, 47, 48, 49, 57, 60, 65, 68, 69, 72, 74, 75, 76, 77, 104, 110, 112, 134, 135, 136, 137, 138, 139, 140, 143, 144, 146, 147, 148, 150, 243, 244, 283, 286, 289, 292, 293, 299, 300, 307, 309, 310, 312, 313, 317, 318, 319], "r": [2, 6, 7, 15, 16, 17, 22, 32, 36, 43, 47, 65, 66, 69, 75, 76, 186, 196, 203, 209, 213, 225, 233, 242, 274, 279, 292, 293, 299, 309, 313, 314], "tip": [2, 271], "encount": [2, 34, 40, 67, 84], "fail": [2, 34, 40, 48, 53, 69, 151, 286, 299], "project": [2, 7, 15, 17, 23, 34, 48, 65, 66, 68, 74, 75, 76, 109, 141, 148, 293, 299, 309, 313, 314, 317], "simpl": [2, 7, 9, 15, 16, 17, 20, 27, 28, 30, 40, 46, 48, 50, 51, 53, 54, 59, 64, 65, 68, 75, 76, 109, 134, 136, 149, 151, 215, 217, 220, 221, 243, 244, 245, 246, 248, 260, 278, 286, 292, 299, 309, 312, 313, 317], "empti": [2, 19, 29, 38, 39, 53, 54, 75, 77, 168, 192, 195, 225, 226, 264, 280, 286, 289, 299], "load": [2, 7, 10, 12, 15, 16, 17, 18, 19, 20, 22, 23, 29, 40, 43, 46, 47, 48, 49, 51, 59, 65, 66, 67, 69, 72, 73, 74, 75, 82, 84, 86, 117, 134, 136, 145, 146, 148, 293, 298], "dataset": [2, 4, 7, 15, 16, 17, 18, 19, 20, 22, 23, 28, 40, 43, 46, 51, 54, 59, 62, 63, 65, 69, 72, 75, 76, 134, 140, 146, 293, 309, 311, 313, 317, 319], "load_modern_graph": [2, 7, 27, 51, 65, 75, 149], "modern": [2, 6, 7, 47, 49, 51, 54, 56, 65, 66, 67, 295, 299, 300], "current": [2, 7, 11, 12, 16, 17, 22, 28, 29, 30, 34, 43, 47, 48, 50, 53, 54, 56, 60, 62, 65, 67, 68, 70, 75, 77, 127, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 148, 278, 281, 286, 293, 298, 299, 309, 316], "e": [2, 6, 9, 10, 12, 14, 17, 18, 19, 20, 22, 23, 30, 31, 39, 43, 49, 50, 54, 55, 56, 59, 60, 62, 64, 65, 66, 67, 68, 69, 71, 72, 75, 76, 84, 136, 137, 138, 139, 140, 143, 146, 148, 149, 150, 151, 187, 205, 215, 217, 219, 220, 222, 223, 224, 227, 232, 233, 240, 241, 242, 243, 246, 248, 264, 269, 275, 277, 286, 288, 289, 292, 293, 295, 297, 298, 300, 302, 303, 309, 313, 316, 317, 319], "path": [2, 4, 6, 7, 9, 17, 19, 22, 23, 24, 27, 28, 36, 46, 47, 48, 49, 56, 57, 60, 65, 67, 68, 71, 75, 82, 135, 136, 138, 140, 145, 146, 148, 151, 154, 187, 193, 197, 198, 200, 217, 280, 286, 288, 290, 292, 293, 297, 299, 301, 309, 310, 313, 314, 317], "store": [2, 10, 12, 16, 17, 31, 40, 44, 46, 47, 53, 54, 56, 64, 66, 67, 68, 70, 71, 76, 77, 89, 90, 107, 115, 116, 136, 142, 148, 149, 205, 210, 233, 234, 235, 236, 237, 286, 288, 295, 297, 298, 300, 307, 309, 312], "pod": [2, 27, 28, 29, 35, 38, 40, 43, 47, 62, 293, 299, 307, 310, 312, 313, 319], "elimin": [2, 6, 14, 136], "extran": 2, "resourc": [2, 28, 29, 35, 40, 43, 62, 64, 71, 75, 82, 205, 238, 293, 299, 302, 312], "fewer": 2, "inconveni": 2, "requir": [2, 6, 15, 17, 20, 30, 32, 34, 36, 40, 43, 44, 48, 50, 51, 53, 54, 57, 60, 62, 64, 65, 69, 71, 75, 78, 92, 134, 135, 136, 138, 139, 143, 144, 145, 146, 147, 184, 232, 233, 237, 286, 293, 298, 299, 302, 316], "equival": [2, 20, 40, 50, 53, 54, 140, 205, 242, 286], "function": [2, 6, 9, 12, 14, 16, 17, 19, 20, 24, 31, 40, 51, 53, 54, 57, 64, 66, 68, 69, 71, 74, 140, 144, 151, 184, 185, 192, 195, 215, 217, 222, 233, 234, 235, 236, 237, 245, 281, 284, 285, 286, 287, 288, 291, 297, 298, 303, 309], "when": [2, 6, 9, 10, 20, 23, 24, 28, 29, 34, 36, 40, 43, 44, 47, 48, 53, 54, 57, 60, 62, 64, 66, 67, 69, 71, 72, 75, 76, 77, 84, 120, 126, 135, 136, 137, 138, 139, 140, 143, 144, 145, 147, 148, 150, 151, 195, 205, 225, 233, 234, 235, 236, 242, 286, 288, 289, 293, 295, 297, 298, 299, 301, 307], "close": [2, 6, 27, 28, 29, 60, 62, 64, 75, 136, 146, 149, 288, 293, 299, 313], "free": [2, 9, 34, 40, 60, 71, 226, 233, 243, 246, 248, 279, 285, 293], "delet": [2, 9, 27, 28, 29, 40, 105, 145, 293, 295, 299, 312], "handl": [3, 6, 8, 9, 11, 12, 20, 28, 31, 34, 46, 47, 48, 51, 54, 56, 64, 67, 68, 69, 76, 107, 135, 147, 150, 286, 288, 298], "variou": [3, 4, 8, 12, 14, 15, 20, 24, 27, 31, 35, 38, 46, 48, 50, 54, 56, 57, 64, 65, 66, 67, 69, 70, 95, 148, 251, 298, 303], "algorithm": [3, 4, 7, 8, 12, 14, 20, 24, 27, 40, 43, 44, 46, 48, 55, 57, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 136, 139, 140, 142, 196, 205, 208, 209, 217, 218, 219, 220, 221, 225, 226, 227, 228, 233, 238, 239, 242, 243, 245, 246, 269, 278, 283, 286, 287, 289, 291, 292, 302], "deriv": [3, 12, 31, 65, 68, 74, 76, 148, 151, 295], "grape": [3, 15, 16, 22, 23, 31, 46, 55, 64, 70, 74, 82, 295, 298, 300, 301, 302, 303, 309, 315], "system": [3, 6, 8, 9, 12, 24, 27, 31, 33, 36, 40, 43, 47, 48, 50, 51, 54, 55, 56, 59, 64, 66, 67, 68, 69, 70, 72, 135, 136, 141, 144, 283, 285, 295, 297, 298, 299, 301, 303, 309, 317], "sigmod": [3, 12, 14, 24, 31, 64, 309, 315], "2017": [3, 12, 14, 31, 64, 243, 244, 309], "further": [3, 6, 10, 14, 20, 27, 28, 31, 43, 49, 50, 53, 54, 65, 66, 68, 76, 136, 148, 149, 164, 295, 298], "enhanc": [3, 9], "introduc": [3, 6, 10, 19, 20, 24, 46, 48, 53, 54, 55, 57, 64, 68, 71, 134, 137, 138, 140, 142, 151, 263, 285, 298, 303], "lot": [3, 34, 43, 51, 54, 55, 303], "new": [3, 4, 6, 9, 12, 14, 17, 20, 23, 27, 31, 34, 48, 51, 54, 58, 64, 65, 66, 74, 77, 83, 84, 127, 145, 148, 149, 151, 158, 164, 205, 217, 226, 228, 248, 277, 284, 286, 293, 295, 297, 298, 299, 301, 313], "featur": [3, 6, 9, 12, 23, 30, 31, 46, 55, 57, 59, 62, 63, 64, 65, 68, 69, 70, 71, 74, 78, 134, 135, 142, 146, 148, 286, 293, 298, 303, 313, 318], "type": [3, 6, 9, 12, 15, 16, 18, 19, 20, 27, 28, 29, 31, 33, 34, 35, 43, 44, 46, 47, 48, 49, 50, 53, 54, 57, 60, 62, 63, 64, 65, 67, 68, 69, 72, 74, 75, 76, 81, 82, 84, 85, 89, 90, 93, 94, 97, 98, 101, 102, 104, 105, 106, 107, 109, 110, 112, 115, 116, 120, 126, 129, 130, 134, 136, 137, 138, 139, 140, 143, 144, 145, 146, 148, 149, 150, 151, 156, 157, 160, 162, 165, 166, 168, 170, 171, 174, 175, 176, 179, 180, 181, 184, 185, 186, 188, 189, 191, 192, 193, 195, 196, 198, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 278, 279, 280, 281, 282, 283, 287, 288, 290, 291, 293, 295, 297, 298, 299, 301, 310, 313, 318], "storag": [3, 9, 40, 48, 49, 50, 54, 66, 69, 71, 112, 136, 148, 297, 299, 300], "languag": [3, 12, 16, 32, 43, 48, 51, 53, 54, 56, 57, 60, 64, 65, 66, 67, 68, 71, 78, 103, 149, 298, 299, 303], "pattern": [3, 6, 12, 23, 48, 49, 50, 53, 56, 60, 64, 67, 71, 75, 139, 144, 299], "better": [3, 8, 12, 20, 24, 29, 31, 47, 48, 54, 55, 69, 71, 293, 299, 303], "integr": [3, 9, 12, 23, 31, 46, 48, 55, 64, 66, 70, 71, 279, 298, 299, 301, 303], "big": [3, 6, 12, 34, 55, 66, 303, 316], "overview": [3, 23, 31, 54, 65, 295], "architectur": [3, 9, 46, 51, 64, 69, 75], "kei": [3, 20, 28, 46, 47, 53, 54, 68, 69, 70, 75, 76, 77, 109, 110, 111, 120, 128, 137, 140, 146, 148, 151, 180, 229, 233, 234, 235, 236, 284, 286, 288, 289, 292, 298, 299, 309, 319], "concept": [3, 46, 69, 134, 135], "centric": [3, 6, 9, 12, 14, 15, 17, 18, 31, 46, 55, 56, 64, 66, 67, 303], "ingress": [3, 12, 46], "increment": [3, 14, 16, 18, 20, 31, 46, 57, 66, 74, 303], "compat": [3, 7, 12, 15, 19, 20, 23, 31, 40, 43, 46, 56, 57, 59, 60, 62, 63, 65, 69, 70, 73, 75, 142, 292, 295, 297, 313], "tune": [3, 43, 44, 46, 64], "describ": [4, 6, 28, 33, 34, 35, 40, 47, 49, 54, 57, 58, 64, 68, 69, 76, 135, 138, 140, 145, 146, 185, 189, 205, 206, 207, 210, 215, 217, 218, 243, 244, 257, 264, 266, 280, 282, 283, 297, 298, 299, 307, 312], "sourc": [4, 6, 7, 8, 9, 14, 15, 18, 22, 23, 24, 29, 33, 34, 35, 39, 40, 46, 47, 49, 51, 54, 57, 58, 60, 65, 67, 68, 69, 71, 74, 75, 76, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 293, 295, 297, 298, 299, 301, 309, 310, 311, 317, 319], "code": [4, 6, 8, 14, 15, 16, 18, 29, 30, 31, 33, 36, 46, 48, 49, 54, 58, 64, 65, 66, 71, 72, 74, 75, 77, 81, 134, 135, 136, 137, 140, 141, 146, 205, 247, 290, 298, 299, 301], "prebuilt": [4, 38, 49], "docker": [4, 28, 30, 33, 35, 38, 40, 49, 56, 299, 310, 313, 315, 316], "imag": [4, 29, 33, 35, 40, 49, 56, 58, 72, 137, 293], "necessari": [4, 6, 23, 28, 34, 38, 44, 49, 85, 93, 98, 135, 136, 138, 140, 148, 298, 299, 307], "depend": [4, 17, 22, 27, 28, 32, 33, 38, 40, 46, 49, 54, 58, 59, 66, 69, 75, 140, 208, 213, 299, 309], "shm": [4, 30, 38, 49, 58, 311], "size": [4, 6, 10, 16, 17, 23, 24, 30, 38, 39, 40, 44, 49, 57, 58, 60, 69, 72, 77, 135, 137, 138, 140, 145, 147, 191, 192, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 217, 228, 237, 241, 243, 286, 293, 298, 299, 300, 311], "4096m": [4, 30, 38, 49, 58], "registri": [4, 28, 30, 38, 49, 58, 141, 293, 299, 311], "cn": [4, 23, 28, 29, 30, 36, 38, 49, 58, 141, 293, 299, 310, 311, 319], "hongkong": [4, 28, 30, 38, 49, 58, 293, 299, 311], "aliyunc": [4, 23, 28, 29, 30, 36, 38, 49, 58, 141, 293, 299, 310, 311, 319], "com": [4, 7, 17, 19, 22, 23, 27, 28, 29, 30, 32, 36, 38, 49, 51, 58, 59, 66, 67, 72, 75, 78, 141, 144, 151, 238, 247, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 266, 271, 293, 298, 299, 309, 310, 311, 312, 319], "latest": [4, 14, 30, 34, 38, 49, 58, 59, 293, 298, 299, 311, 316], "pleas": [4, 9, 12, 14, 16, 17, 23, 24, 27, 28, 31, 34, 38, 40, 49, 50, 51, 60, 62, 65, 134, 135, 136, 138, 139, 140, 141, 144, 146, 297, 299, 303, 313], "singl": [4, 6, 7, 11, 14, 15, 20, 24, 28, 33, 38, 40, 47, 50, 53, 54, 58, 59, 61, 62, 64, 65, 67, 75, 76, 134, 148, 159, 166, 188, 192, 197, 207, 212, 229, 235, 280, 282, 286, 293, 297, 301], "clone": [4, 22, 27, 29, 30, 33, 34, 36, 49, 78, 141, 299, 311], "repo": [4, 29, 49, 66, 299, 310, 311], "git": [4, 22, 27, 29, 30, 32, 34, 36, 49, 78, 144, 298, 311], "http": [4, 7, 19, 22, 23, 27, 28, 29, 30, 32, 36, 40, 47, 49, 51, 59, 62, 63, 65, 66, 67, 75, 78, 141, 144, 151, 205, 209, 210, 211, 225, 228, 235, 236, 238, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 270, 271, 272, 273, 278, 293, 298, 299, 309, 310, 311, 312, 313, 317, 319], "github": [4, 22, 27, 29, 30, 32, 36, 49, 66, 67, 75, 78, 141, 144, 236, 298, 299, 309, 311, 319], "alibaba": [4, 17, 22, 23, 29, 30, 36, 49, 56, 64, 66, 69, 70, 78, 141, 144, 299, 309, 311, 319], "cd": [4, 22, 29, 30, 32, 36, 47, 49, 78, 141, 144, 146, 299, 307, 309, 311, 317], "make": [4, 6, 9, 14, 15, 16, 23, 27, 28, 29, 30, 32, 33, 34, 36, 38, 46, 47, 48, 49, 54, 56, 58, 66, 67, 69, 72, 140, 141, 144, 146, 148, 164, 216, 280, 286, 293, 298, 299, 310, 311], "artifact": [4, 17, 23, 29, 33, 49, 58], "analytical_engin": [4, 15, 33, 36, 78, 309], "grape_engin": [4, 110, 307], "togeth": [4, 9, 10, 20, 38, 48, 51, 54, 62, 64, 72, 140, 144, 187], "share": [4, 6, 34, 36, 54, 58, 64, 66, 67, 293, 298, 300, 311], "librari": [4, 6, 12, 15, 16, 30, 36, 48, 49, 64, 74, 75, 78, 299], "bunch": [4, 38, 71, 74], "binari": [4, 15, 28, 36, 69], "choos": [4, 6, 12, 22, 31, 38, 48, 53, 54, 56, 57, 64, 69, 134, 135, 225, 226, 264], "locat": [4, 23, 28, 33, 47, 54, 68, 79, 136, 137, 148, 299, 300], "prefix": [4, 33, 34, 36, 40, 148, 280, 298, 317], "usr": [4, 299], "depth": [4, 49, 65, 134, 146, 151, 318], "view": [4, 20, 24, 64, 94, 159, 163, 182, 183, 286, 289, 295, 307], "cmakelist": 4, "txt": [4, 32, 36, 309], "look": [4, 15, 18, 20, 28, 47, 51, 54, 78, 147, 292, 295, 299, 300], "file": [4, 15, 17, 22, 23, 29, 32, 34, 40, 46, 47, 49, 74, 75, 82, 107, 134, 135, 141, 146, 148, 184, 185, 236, 286, 288, 293, 295, 299, 300, 307, 309, 319], "want": [4, 6, 7, 18, 20, 22, 27, 28, 29, 30, 50, 51, 54, 59, 70, 78, 84, 128, 133, 144, 148, 195, 229, 286, 292, 295, 299], "investig": [4, 6], "easili": [4, 12, 20, 22, 23, 24, 27, 28, 29, 31, 40, 47, 51, 54, 56, 64, 65, 68, 69, 71, 140, 142, 298], "work": [4, 8, 11, 14, 18, 20, 30, 31, 33, 34, 38, 43, 47, 48, 51, 53, 56, 60, 64, 65, 66, 67, 69, 74, 76, 138, 140, 148, 285, 286, 292, 301], "directori": [4, 22, 27, 28, 30, 33, 36, 40, 47, 56, 74, 79, 134, 145, 293, 297, 307, 310, 312, 313], "graphscope_hom": [4, 23, 311], "pwd": [4, 27, 146], "repositori": [4, 17, 29, 33, 34, 47, 78, 293, 299], "about": [4, 7, 12, 14, 17, 31, 34, 35, 47, 49, 51, 54, 58, 59, 64, 69, 70, 74, 75, 140, 144, 145, 292, 293, 297, 302, 309], "download": [4, 7, 17, 19, 22, 23, 27, 28, 29, 30, 32, 33, 47, 51, 58, 59, 72, 141, 146, 311], "tmp": [4, 18, 19, 40, 47, 49, 107, 112, 146, 293, 299, 307, 309, 312], "gstest": [4, 19, 22, 23, 27, 309, 311], "multipl": [4, 6, 12, 14, 17, 29, 38, 46, 47, 48, 53, 56, 57, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 135, 136, 140, 151, 248, 286, 292, 297, 298, 301, 307], "against": [4, 14, 34, 49, 75, 268], "compar": [4, 19, 46, 48, 50, 53, 54, 67, 72, 74, 75, 137, 205, 292], "ground": [4, 69], "truth": [4, 69], "distribut": [6, 10, 11, 12, 14, 15, 18, 20, 22, 23, 24, 28, 30, 31, 40, 46, 47, 48, 51, 53, 56, 57, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 75, 78, 134, 137, 139, 143, 145, 146, 150, 205, 208, 215, 217, 226, 233, 234, 235, 236, 237, 245, 299, 300], "broad": [6, 66], "spectrum": [6, 66, 151, 278], "central": [6, 15, 43, 56, 57, 65, 66, 69, 70, 75, 140, 151, 263], "match": [6, 15, 48, 49, 64, 66, 75, 185, 205, 213, 215, 217, 244, 280, 317], "mine": [6, 15, 64, 66, 67], "philosophi": [6, 24, 66], "step": [6, 9, 14, 15, 27, 28, 29, 30, 33, 34, 36, 46, 47, 48, 49, 51, 56, 57, 64, 65, 66, 68, 77, 134, 135, 136, 138, 140, 143, 146, 205, 213, 225, 278, 299, 307, 319], "stronger": [6, 66], "flexibl": [6, 12, 23, 54, 56, 64, 65, 66, 293, 297], "flow": [6, 66, 67, 134, 276], "oper": [6, 9, 12, 15, 27, 33, 36, 40, 43, 44, 46, 48, 50, 51, 53, 56, 57, 60, 64, 66, 67, 68, 69, 70, 75, 77, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 105, 106, 107, 109, 110, 113, 114, 115, 116, 135, 136, 137, 138, 139, 140, 142, 143, 145, 147, 148, 168, 247, 248, 286, 289, 291, 293, 295, 298, 299], "arbitrari": [6, 53, 54, 66, 138, 213, 217, 233, 234, 235, 236, 286, 289, 299, 317], "beyond": [6, 24, 66, 70, 246], "divers": [6, 10, 12, 31, 46, 48, 66, 67, 135, 295], "easi": [6, 7, 12, 43, 47, 48, 51, 54, 56, 59, 60, 64, 66, 70, 135, 140, 144], "write": [6, 8, 9, 12, 15, 17, 22, 24, 31, 34, 40, 43, 54, 56, 64, 65, 66, 67, 68, 73, 77, 78, 134, 140, 148, 149, 288, 289, 295, 298, 299, 303, 309, 313], "runtim": [6, 17, 23, 36, 40, 48, 64, 66, 67, 68, 74, 75, 78, 298, 311, 312], "onli": [6, 9, 12, 14, 15, 17, 18, 20, 22, 23, 27, 28, 29, 31, 33, 43, 46, 47, 48, 50, 51, 53, 54, 56, 57, 59, 60, 64, 65, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 82, 134, 135, 136, 138, 139, 140, 141, 148, 151, 170, 171, 180, 206, 207, 232, 233, 237, 245, 258, 279, 280, 286, 292, 293, 298, 299, 300, 303], "few": [6, 29, 40, 47, 66, 298], "satisfactori": [6, 66, 69], "major": [6, 12, 14, 67, 74], "recent": [6, 138, 299], "framework": [6, 9, 15, 16, 17, 18, 22, 23, 24, 40, 48, 57, 60, 64, 66, 67, 68, 69, 70, 71, 75, 76, 126, 138, 140, 142, 144, 148, 149, 290, 293, 295, 297, 309, 314, 319], "focu": [6, 38, 64, 68, 71, 144], "hand": [6, 27, 48, 50, 53, 266], "point": [6, 14, 22, 34, 48, 53, 60, 67, 134, 189, 214, 243, 246, 286, 299, 300, 301], "breadth": [6, 75, 151], "first": [6, 14, 15, 16, 17, 19, 20, 24, 29, 32, 34, 40, 43, 46, 48, 49, 51, 53, 54, 57, 61, 62, 65, 66, 68, 69, 75, 76, 134, 135, 140, 142, 144, 148, 151, 155, 185, 201, 204, 213, 226, 229, 240, 241, 242, 243, 244, 247, 280, 285, 286, 289, 292, 295, 298, 299, 300, 301], "search": [6, 34, 46, 57, 64, 67, 69, 71, 75, 151, 315], "pagerank": [6, 8, 9, 17, 22, 31, 43, 64, 67, 70, 72, 75, 76, 151, 289, 292, 309], "shortest": [6, 7, 19, 24, 48, 65, 67, 75, 151, 301], "leav": [6, 54, 148, 186, 196], "larg": [6, 7, 9, 11, 12, 14, 18, 20, 23, 28, 31, 34, 40, 43, 44, 47, 48, 51, 54, 56, 57, 60, 61, 62, 64, 70, 71, 75, 120, 135, 136, 138, 140, 142, 146, 147, 160, 184, 185, 205, 240, 298, 309], "varieti": [6, 12, 31, 43, 64, 71], "suffer": [6, 43], "effici": [6, 9, 12, 16, 18, 23, 31, 40, 43, 46, 50, 54, 56, 57, 60, 64, 65, 66, 67, 68, 69, 70, 71, 78, 138, 140, 142, 219, 240, 297, 298, 300, 302], "limit": [6, 9, 22, 40, 46, 50, 57, 67, 68, 69, 71, 72, 293, 312, 317], "well": [6, 8, 9, 12, 18, 20, 28, 29, 31, 48, 56, 57, 65, 67, 68, 69, 73, 140, 148, 156, 189, 237, 286, 295, 299, 302, 303, 307], "known": [6, 8, 9, 24, 46, 54, 67, 75, 168, 186, 189, 238, 239, 256, 280, 301], "phase": [6, 16, 23, 24, 135, 140], "propag": [6, 7, 9, 14, 33, 64, 65, 67, 69, 75, 140, 158, 248], "short": [6, 66, 71, 72, 166, 298, 299], "isvp": 6, "until": [6, 9, 14, 17, 24, 27, 28, 53, 54, 69, 145, 205, 228, 299, 317], "all": [6, 9, 10, 12, 15, 16, 17, 20, 22, 23, 24, 27, 28, 29, 32, 34, 40, 46, 47, 48, 50, 51, 53, 54, 58, 60, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 77, 99, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 155, 156, 158, 159, 163, 165, 180, 181, 185, 186, 189, 191, 192, 196, 205, 214, 223, 229, 243, 244, 246, 248, 272, 280, 281, 284, 286, 293, 297, 298, 299, 302, 307], "receiv": [6, 9, 14, 16, 17, 24, 34, 64, 67, 69, 77, 140, 144, 295, 309], "messag": [6, 10, 14, 15, 16, 17, 18, 24, 31, 33, 34, 35, 40, 48, 54, 60, 69, 74, 77, 147, 298, 309], "updat": [6, 9, 12, 14, 15, 17, 20, 24, 28, 29, 30, 31, 56, 57, 64, 67, 69, 71, 141, 144, 286, 293, 295, 299, 309, 310], "state": [6, 9, 10, 12, 24, 28, 31, 48, 56, 67, 68, 70, 72, 145, 148, 205, 208, 209, 210, 211, 213, 215, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 235, 236, 237, 240, 241, 242, 246, 278, 281, 283], "thei": [6, 20, 24, 28, 36, 43, 48, 54, 56, 62, 64, 67, 69, 71, 134, 135, 143, 148, 192, 200, 205, 233, 235, 236, 279, 280, 286, 292, 293, 295, 298, 299], "send": [6, 10, 18, 24, 49, 67, 77, 298, 309], "Such": [6, 68, 71, 107, 112, 245, 254], "abstract": [6, 43, 56, 60, 63, 64, 65, 66, 134, 135, 142, 144, 145, 300], "bring": [6, 38], "product": [6, 12, 30, 40, 60, 64, 68, 71, 77, 135, 136, 140, 317], "some": [6, 10, 12, 17, 20, 23, 29, 31, 33, 34, 36, 47, 48, 50, 51, 53, 57, 64, 67, 68, 69, 75, 134, 135, 136, 142, 144, 146, 147, 148, 149, 196, 205, 215, 217, 220, 239, 280, 285, 286, 298, 299, 300], "sacrific": 6, "while": [6, 12, 19, 20, 29, 31, 43, 47, 50, 53, 54, 57, 64, 67, 68, 70, 71, 135, 140, 146, 182, 183, 243, 246, 248, 280, 286, 295, 298, 299, 307], "specif": [6, 9, 12, 14, 15, 16, 20, 24, 31, 34, 35, 38, 40, 43, 47, 48, 50, 51, 54, 56, 63, 64, 65, 66, 67, 69, 71, 72, 74, 75, 76, 77, 138, 139, 140, 143, 146, 148, 205, 233, 237, 286, 292, 295, 297, 298], "almost": [6, 22, 54, 221, 298], "infeas": 6, "kind": [6, 9, 12, 15, 28, 31, 40, 54, 65, 66, 71, 74, 76, 138, 140, 144, 145, 283, 292, 297, 299, 301, 302, 310, 312, 316], "At": [6, 12, 14, 15, 20, 31, 34, 48, 54, 135, 145, 299, 301], "advanc": [6, 7, 15, 48, 59, 60, 232], "pose": 6, "challeng": [6, 9, 42, 46, 64, 298], "after": [6, 9, 14, 15, 17, 18, 20, 22, 24, 29, 30, 31, 43, 50, 53, 57, 66, 67, 69, 75, 76, 77, 86, 134, 135, 136, 137, 144, 145, 146, 151, 248, 259, 278, 286, 290, 292, 293, 295, 298, 299, 300, 309], "repres": [6, 9, 12, 15, 43, 48, 50, 54, 57, 59, 60, 63, 64, 65, 66, 67, 69, 72, 74, 75, 76, 82, 111, 135, 136, 137, 138, 140, 144, 146, 148, 192, 225, 233, 234, 235, 236, 237, 245, 252, 255, 259, 267, 276, 278, 280, 281, 286, 290, 293, 298, 299], "non": [6, 9, 28, 53, 71, 74, 77, 137, 175, 176, 196, 215, 217, 220, 244, 248, 255, 273, 286, 287], "ones": [6, 9, 70, 75, 142], "distil": 6, "critic": [6, 57, 75], "context": [6, 15, 17, 18, 20, 28, 36, 46, 50, 68, 75, 77, 81, 82, 83, 89, 90, 107, 112, 115, 116, 118, 127, 131, 144, 148, 149, 151, 276, 291, 293, 298, 309], "fall": 6, "meet": [6, 15, 18, 34, 43, 48, 51, 60, 64, 69, 138, 139, 205, 234, 235, 236, 301, 303], "therefor": [6, 12, 15, 43, 48, 50, 51, 53, 54, 57, 65, 134, 135, 140, 232, 298, 307], "fulfil": [6, 15, 18, 66], "ligra": 6, "inherit": [6, 9, 16, 48, 66, 74, 134, 144], "By": [6, 17, 20, 27, 33, 40, 43, 50, 53, 54, 59, 67, 68, 69, 70, 135, 136, 151, 286, 295, 298, 307], "sinc": [6, 23, 24, 27, 29, 48, 54, 58, 62, 64, 72, 84, 136, 140, 148, 184, 185, 215, 217, 264, 281, 288, 292, 298, 299], "parallel": [6, 12, 14, 15, 16, 24, 31, 43, 56, 64, 68, 74, 77, 136, 215, 217, 254, 286, 289, 299, 309], "must": [6, 24, 27, 28, 34, 40, 47, 53, 54, 64, 74, 76, 84, 135, 136, 138, 139, 140, 148, 150, 151, 164, 203, 205, 213, 216, 226, 228, 230, 233, 235, 237, 245, 248, 284, 286, 288, 292, 298, 299], "synchron": [6, 10, 12, 14, 15, 64, 298], "race": 6, "task": [6, 7, 14, 31, 38, 48, 51, 54, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 69, 135, 146, 298], "schedul": [6, 23, 33, 64, 293], "do": [6, 15, 16, 18, 20, 27, 29, 32, 36, 38, 40, 44, 46, 47, 48, 49, 50, 51, 54, 74, 75, 76, 92, 110, 136, 148, 205, 217, 229, 233, 243, 246, 264, 280, 286, 289, 292, 293, 298, 303], "so": [6, 12, 34, 38, 40, 47, 48, 51, 54, 57, 60, 62, 64, 66, 75, 78, 134, 140, 142, 161, 196, 201, 214, 215, 216, 219, 234, 235, 236, 247, 280, 286, 298, 299, 313], "middlewar": 6, "call": [6, 12, 16, 17, 19, 24, 40, 50, 53, 54, 60, 68, 74, 77, 134, 136, 140, 143, 144, 148, 149, 181, 195, 196, 226, 237, 266, 278, 286, 289, 293, 297, 298, 299], "flashwar": 6, "hide": [6, 43], "abov": [6, 7, 9, 14, 15, 16, 19, 22, 27, 28, 30, 43, 47, 50, 51, 54, 55, 59, 67, 68, 134, 135, 136, 140, 144, 189, 205, 225, 248, 282, 292, 299, 301, 303, 307], "automat": [6, 9, 12, 14, 31, 47, 48, 56, 64, 67, 68, 69, 71, 76, 146, 148, 286, 299, 301, 302, 319], "adapt": [6, 22, 48, 69, 71, 72, 301, 302], "70": [6, 15, 317], "40": [6, 15, 72, 136, 137, 139, 213, 279], "commonli": [6, 53, 56, 60], "now": [6, 7, 20, 23, 28, 47, 49, 54, 59, 75, 144, 217, 299, 301, 314], "much": [6, 19, 22, 40, 48, 51, 53, 54, 136, 140, 298], "succinct": [6, 68], "interfac": [6, 9, 11, 12, 17, 18, 19, 22, 23, 31, 40, 43, 46, 48, 51, 54, 55, 57, 60, 64, 67, 68, 69, 70, 71, 74, 78, 136, 137, 138, 140, 141, 142, 143, 286, 293, 303], "help": [6, 9, 12, 16, 17, 30, 34, 35, 53, 54, 67, 144, 298, 300, 310], "evalu": [6, 14, 15, 16, 18, 34, 56, 65, 66, 69, 72, 74, 75, 76, 86, 111, 120, 122, 126, 129, 130, 148, 149, 293, 303, 317], "demonstr": [6, 16, 47, 48, 56, 61, 63, 64, 65, 67, 69, 71, 76, 134, 146, 148, 293, 298], "": [6, 9, 14, 15, 17, 18, 19, 20, 23, 24, 28, 29, 32, 34, 38, 40, 46, 47, 49, 53, 54, 56, 57, 60, 62, 63, 64, 65, 67, 68, 69, 72, 75, 84, 101, 102, 120, 134, 136, 138, 140, 143, 145, 147, 148, 151, 187, 198, 205, 208, 210, 213, 217, 220, 222, 223, 224, 240, 248, 249, 250, 273, 276, 278, 286, 292, 293, 295, 297, 298, 299, 300, 317, 318], "up": [6, 20, 23, 34, 46, 53, 54, 56, 58, 60, 70, 77, 144, 147, 185, 189, 213, 280, 298, 299, 316], "92": [6, 151], "bulk": [6, 15], "bsp": [6, 15], "paradigm": [6, 15, 46, 56, 60, 64, 134, 140], "primari": [6, 15, 50, 64, 68, 71, 299], "constitut": [6, 63], "superstep": [6, 16, 17, 24, 77], "vertexsubset": [6, 15], "indic": [6, 24, 35, 47, 54, 66, 67, 68, 72, 82, 135, 137, 140, 148, 192, 195, 205, 208, 209, 210, 211, 213, 215, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 233, 234, 235, 236, 237, 240, 241, 242, 246, 276, 278, 281, 283, 288, 298], "maintain": [6, 10, 14, 32, 33, 50, 53, 64, 67, 68, 299], "onc": [6, 12, 15, 17, 20, 24, 27, 28, 29, 31, 33, 48, 49, 57, 75, 77, 136, 137, 140, 146, 148, 149, 151, 181, 286, 299], "vsize": [6, 15], "size_t": [6, 39, 74, 77, 145, 295, 298], "vertexmap": [6, 15, 39], "map": [6, 46, 50, 53, 54, 67, 68, 74, 135, 144, 148, 278, 299, 300, 314, 317], "condit": [6, 9, 14, 24, 28, 35, 48, 54, 60, 72, 205, 234, 235, 236, 244, 245, 298], "f": [6, 20, 47, 49, 59, 65, 140, 151, 238, 239, 285, 299, 307, 313], "output": [6, 14, 17, 24, 27, 28, 29, 31, 35, 43, 49, 50, 53, 54, 57, 59, 60, 63, 64, 65, 69, 72, 74, 104, 112, 120, 134, 140, 142, 146, 148, 149, 233, 235, 237, 278, 290, 292, 299, 309, 310, 313, 318], "form": [6, 20, 48, 50, 53, 54, 57, 60, 68, 69, 75, 134, 136, 137, 140, 187, 207, 237, 252, 254, 257, 260, 264, 286, 292], "special": [6, 20, 54, 64, 135, 254, 270, 280, 303], "m": [6, 7, 9, 18, 20, 23, 27, 28, 30, 32, 36, 47, 48, 51, 54, 59, 65, 75, 76, 151, 161, 192, 196, 198, 209, 215, 217, 219, 221, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 265, 274, 278, 279, 283, 286, 309], "omit": [6, 76, 159, 300, 319], "filter": [6, 15, 23, 44, 46, 48, 68, 75, 76, 278, 292, 298, 317], "semant": [6, 48, 60, 139, 298], "unchang": 6, "edgemap": [6, 15], "logic": [6, 9, 14, 16, 17, 48, 53, 54, 56, 66, 72, 137, 297, 298, 299, 307, 309], "satisfi": [6, 9, 24, 51, 54, 68, 71, 75, 78, 145, 151, 203, 233, 237, 244, 245, 303], "h": [6, 9, 15, 16, 20, 33, 38, 57, 58, 72, 82, 151, 162, 165, 186, 213, 217, 233, 278, 285, 286, 298, 310, 315], "conduct": [6, 15, 46, 54, 72, 140], "allow": [6, 11, 12, 20, 22, 24, 27, 28, 33, 43, 44, 47, 48, 50, 53, 54, 55, 56, 60, 64, 65, 67, 68, 69, 70, 71, 135, 140, 210, 215, 217, 220, 225, 228, 233, 278, 286, 295, 298, 303], "dynam": [6, 12, 31, 48, 56, 64, 66, 67, 69, 75, 85, 98, 206, 207, 289, 295, 299], "even": [6, 8, 20, 48, 54, 67, 142, 148, 151, 215, 225, 243, 245, 246, 286, 298], "virtual": [6, 9, 23, 51, 65, 74, 144, 145], "gener": [6, 9, 14, 17, 28, 31, 38, 43, 48, 54, 57, 60, 64, 65, 66, 67, 68, 69, 75, 83, 134, 135, 136, 140, 146, 148, 150, 151, 286, 287, 291, 293, 295, 297, 298, 299, 300, 301, 307], "execut": [6, 9, 12, 14, 15, 17, 23, 24, 28, 29, 38, 43, 47, 48, 49, 51, 53, 54, 56, 65, 66, 68, 69, 74, 75, 76, 103, 104, 130, 140, 144, 148, 149, 151, 246, 290, 293, 295, 299, 301, 307, 309, 313, 317], "index": [6, 12, 36, 39, 46, 57, 60, 68, 69, 74, 75, 76, 136, 137, 145, 148, 150, 151, 160, 184, 185, 215, 217, 218, 219, 221, 298, 315, 319], "pre": [6, 28, 29, 30, 40, 48, 54, 59, 63, 65, 68, 293, 312], "conveni": [6, 29, 40, 47, 54, 57, 66, 140, 284, 286], "revers": [6, 20, 54, 91, 94, 150, 151, 229, 237, 286], "exchang": [6, 14], "chosen": [6, 215, 222, 223, 224, 225, 226, 237, 241, 281], "temporari": 6, "sequenti": [6, 12, 14, 18, 31, 33, 64, 184, 185, 221, 298, 303, 309], "pull": [6, 12, 14, 28, 29, 30, 31, 35, 40, 46, 47, 67, 141, 144, 293, 299, 311], "mode": [6, 15, 28, 30, 33, 40, 46, 61, 74, 75, 76, 126, 130, 134, 138, 144, 146, 148, 149, 288, 293, 303, 307, 319], "push": [6, 12, 31, 34, 48, 67, 144], "anoth": [6, 9, 10, 20, 33, 46, 48, 53, 54, 64, 65, 69, 77, 215, 248, 286, 298, 301, 302], "final": [6, 9, 14, 17, 19, 24, 48, 54, 57, 62, 64, 68, 74, 134, 140, 142, 228, 248, 286, 300], "reduc": [6, 9, 14, 15, 17, 48, 60, 135, 138, 234, 235, 236, 286, 299], "associ": [6, 9, 29, 53, 69, 220, 232, 278, 280, 286, 293, 298, 299], "commut": 6, "ensur": [6, 9, 32, 33, 34, 48, 50, 71, 293], "correct": [6, 14, 35, 48, 140, 148, 151, 298], "alwai": [6, 54, 62, 76, 182, 183, 222, 224, 243, 246, 280, 298], "default": [6, 15, 20, 23, 27, 29, 30, 33, 38, 40, 43, 47, 49, 50, 53, 54, 59, 62, 72, 74, 75, 76, 77, 93, 99, 104, 126, 127, 131, 135, 136, 140, 147, 148, 150, 151, 153, 154, 155, 158, 180, 182, 183, 186, 188, 189, 191, 193, 195, 196, 198, 200, 201, 204, 205, 208, 209, 210, 211, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 278, 279, 281, 283, 284, 286, 288, 289, 293, 295, 299, 307, 319], "ctrue": 6, "doe": [6, 11, 12, 20, 31, 34, 44, 53, 60, 66, 68, 71, 137, 140, 145, 151, 170, 171, 213, 215, 217, 232, 243, 286, 288, 293, 298], "sometim": [6, 28, 54, 196, 256], "similarli": [6, 19, 20, 54, 67, 151, 189, 215, 217, 233, 236, 243, 286, 307], "suppli": [6, 40, 68, 235], "edgeset": 6, "d": [6, 9, 15, 17, 19, 20, 47, 54, 75, 138, 140, 143, 146, 151, 161, 206, 207, 215, 217, 218, 220, 221, 222, 224, 229, 233, 234, 235, 236, 237, 240, 277, 286, 288], "auxiliari": [6, 15, 16, 54], "union": [6, 148, 214, 314], "minu": [6, 189], "intersect": [6, 68, 287], "add": [6, 15, 19, 20, 23, 29, 34, 40, 54, 65, 66, 74, 77, 83, 84, 93, 135, 146, 148, 153, 154, 155, 205, 212, 225, 243, 246, 248, 264, 286, 289, 293, 298, 299, 310, 313, 314, 319], "getv": [6, 48], "besid": [6, 10, 145, 146], "combin": [6, 14, 18, 31, 46, 48, 54, 56, 64, 65, 134, 135, 136, 140, 286, 293, 302, 309], "primit": 6, "thu": [6, 12, 16, 20, 28, 31, 33, 40, 43, 54, 62, 69, 75, 139, 181, 189, 286, 298], "natur": [6, 12, 24, 43, 54, 68], "multi": [6, 36, 46, 50, 54, 56, 57, 60, 64, 66, 68, 69, 70, 71, 75, 138, 140, 142, 295, 299], "tradit": [6, 48, 50, 69, 263], "awkward": 6, "structur": [6, 9, 12, 15, 16, 17, 20, 24, 43, 47, 48, 54, 63, 65, 66, 67, 68, 69, 75, 135, 136, 137, 196, 215, 263, 278, 280, 286, 287, 297, 298, 299, 302], "supplement": 6, "perspect": [6, 24, 66], "whole": [6, 9, 12, 24, 31, 47, 48, 54, 57, 64, 66, 68, 69, 142, 299, 302], "pick": [6, 54, 72, 228, 243, 246], "transfer": [6, 43, 46, 56, 68, 70, 317], "intuit": [6, 48, 50, 56, 293], "sever": [6, 9, 15, 17, 20, 23, 27, 33, 34, 46, 48, 54, 56, 57, 60, 64, 67, 69, 70, 72, 76, 134, 140, 142, 144, 145, 151, 192, 286, 292, 293, 298, 299], "main": [6, 31, 34, 48, 50, 54, 71, 134, 143, 146, 151, 299, 318, 319], "shown": [6, 7, 9, 10, 12, 15, 16, 18, 24, 28, 31, 48, 51, 54, 59, 60, 67, 69, 72, 135, 136, 137, 140, 146], "figur": [6, 9, 12, 24, 28, 31, 48, 54, 57, 60, 65, 67, 68, 69, 136, 138, 269, 295], "input": [6, 9, 12, 15, 17, 22, 24, 43, 57, 59, 60, 63, 64, 65, 68, 69, 75, 93, 97, 120, 134, 135, 136, 137, 138, 140, 143, 146, 149, 151, 219, 233, 235, 237, 243, 244, 278, 286, 289, 290, 293, 298, 299, 313, 318], "second": [6, 28, 43, 54, 57, 68, 71, 72, 76, 142, 231, 232, 240, 241, 242, 243, 247, 285, 286, 293, 299, 300], "fundament": [6, 9, 48, 66], "modul": [6, 8, 9, 15, 19, 20, 23, 46, 48, 53, 56, 64, 65, 66, 68, 69, 147, 285, 315], "produc": [6, 35, 38, 48, 72, 75, 83, 134, 146, 148, 149, 151, 205, 219, 221, 229, 290, 299], "abil": [6, 12, 31, 50, 54, 60, 64], "activ": [6, 9, 23, 24, 51, 62, 65, 69, 146, 293], "dens": [6, 57, 67, 69, 137, 146], "spars": [6, 57, 69, 134, 137, 213, 286, 289], "dispatch": [6, 31, 64, 74], "kernel": [6, 222], "auto": [6, 14, 16, 31, 39, 54, 77, 295, 298, 300], "switch": [6, 12, 23, 31, 67, 243, 246, 298], "prove": [6, 24, 278], "world": [6, 9, 43, 53, 54, 64, 65, 67, 74, 151, 206, 207, 233], "dual": 6, "edgemapdens": 6, "edgemapspars": 6, "instead": [6, 16, 20, 23, 34, 44, 53, 54, 66, 136, 137, 138, 144, 145, 148, 212, 219, 224, 232, 233, 237, 243, 286, 292, 295, 298], "thread": [6, 36, 47, 49, 57, 72, 147], "co": [6, 23, 43, 65, 135, 313], "lead": [6, 17, 24, 40, 54, 69, 215, 217], "access": [6, 12, 14, 27, 28, 29, 35, 36, 40, 47, 49, 54, 57, 60, 64, 66, 67, 68, 69, 135, 136, 137, 138, 139, 140, 145, 146, 148, 286, 289, 293, 295, 297, 298, 299, 300, 307, 319], "master": [6, 19, 22, 23, 24, 36, 309], "broadcast": [6, 74, 298], "mirror": [6, 7, 10, 24, 28, 30, 51, 58, 59], "On": [6, 27, 28, 34, 48, 50, 53, 75, 220, 283, 298], "contrari": 6, "total": [6, 8, 12, 31, 43, 47, 48, 49, 54, 77, 161, 205, 228, 245, 251, 286, 293, 300, 313], "4": [6, 9, 10, 17, 19, 20, 22, 28, 36, 40, 47, 48, 49, 50, 53, 54, 65, 68, 72, 82, 134, 136, 137, 139, 140, 141, 151, 157, 162, 164, 165, 170, 171, 189, 191, 192, 201, 209, 212, 214, 221, 230, 232, 237, 246, 253, 256, 257, 263, 264, 270, 272, 279, 280, 281, 286, 288, 289, 293, 298, 299, 300, 301, 302, 309, 312, 313, 317], "redund": 6, "partit": [6, 9, 10, 12, 14, 15, 18, 24, 47, 48, 60, 64, 67, 68, 69, 75, 139, 144, 203, 208, 209, 210, 213, 244, 303], "programm": [6, 17, 64, 78], "scope": [6, 23, 148], "disabl": [6, 36, 49, 72, 293], "ad": [6, 9, 15, 17, 19, 29, 34, 56, 57, 69, 71, 72, 82, 83, 136, 148, 153, 154, 164, 222, 223, 224, 226, 280, 286, 295, 317, 319], "encourag": [6, 15, 24, 34], "develop": [6, 8, 9, 11, 12, 14, 24, 29, 31, 34, 43, 48, 49, 54, 55, 56, 57, 58, 64, 67, 68, 69, 71, 78, 138, 140, 141, 142, 144, 205, 298], "between": [6, 9, 10, 12, 18, 19, 40, 46, 48, 54, 57, 67, 69, 74, 75, 135, 136, 138, 140, 146, 151, 208, 209, 210, 213, 219, 225, 226, 228, 232, 233, 234, 235, 237, 240, 242, 243, 244, 246, 251, 281, 283, 286, 298, 299], "katz": [6, 75, 151], "eigenvector": [6, 75, 151, 278], "harmon": 6, "coeffici": [6, 19, 75, 151], "fluid": 6, "version": [6, 15, 17, 18, 20, 23, 28, 29, 34, 40, 47, 51, 59, 64, 66, 68, 71, 72, 75, 141, 148, 206, 207, 222, 224, 237, 243, 264, 286, 295, 297, 298, 299, 309, 312], "color": [6, 19, 20, 54, 286], "label": [6, 7, 15, 20, 39, 47, 50, 59, 63, 64, 65, 67, 68, 69, 74, 75, 76, 77, 84, 134, 137, 140, 146, 148, 151, 186, 190, 197, 201, 202, 204, 214, 215, 217, 218, 219, 220, 221, 263, 264, 286, 288, 289, 292, 293, 297, 299, 300, 313, 314, 317, 318], "biconnect": 6, "bridg": [6, 46, 66], "seven": [6, 146, 185], "strongli": [6, 33, 51, 54, 140, 225, 293], "cut": [6, 12, 24, 271], "core": [6, 12, 31, 40, 48, 51, 64, 65, 66, 75, 78, 146, 151, 293, 313], "k": [6, 20, 39, 49, 54, 57, 64, 65, 66, 68, 75, 76, 138, 151, 188, 196, 206, 207, 208, 209, 211, 213, 214, 215, 222, 225, 234, 235, 236, 238, 241, 242, 243, 244, 245, 246, 251, 286, 292, 298, 313, 317], "decomposit": [6, 65, 151], "degeneraci": 6, "onion": 6, "layer": [6, 48, 57, 60, 66, 69, 71, 134, 135, 138, 142, 146, 318], "minim": [6, 11, 67, 146, 237, 238, 259, 285], "domin": [6, 151, 298], "cycl": [6, 68, 71, 74, 153, 189, 190, 193, 204, 226, 230, 251, 253, 269, 273], "triangl": [6, 54, 65, 68, 75, 151, 248, 252, 256, 260, 272, 287, 309, 313], "acycl": [6, 280], "cyclic": [6, 64, 68, 193], "diamond": [6, 256], "rectangl": 6, "tail": [6, 53, 54, 66, 307], "approxim": [6, 205, 278], "densest": 6, "articlerank": 6, "hyperlink": [6, 75, 151], "induc": [6, 50, 53, 75, 96, 162, 165, 181, 229, 286], "topic": [6, 7, 51, 59, 65, 75], "person": [6, 7, 27, 47, 50, 51, 53, 54, 65, 148, 266, 275, 286, 289, 292, 298, 299, 300, 314, 319], "standard": [6, 32, 46, 48, 51, 54, 66, 149, 219, 234, 235, 236, 298], "diamet": 6, "span": [6, 20], "forest": 6, "center": [6, 54, 201, 204, 229], "four": [6, 9, 12, 20, 63, 65, 66, 74, 134, 137, 146, 233, 237, 298], "random": [6, 36, 60, 62, 64, 72, 138, 139, 140, 143, 146, 187, 198, 205, 208, 209, 210, 211, 213, 215, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 246, 278, 281, 283, 285, 293], "guid": [7, 9, 16, 28, 29, 30, 34, 38, 46, 47, 51, 53, 59, 62, 63, 65, 78, 313], "give": [7, 12, 31, 36, 51, 54, 59, 72, 140, 148, 213, 233, 253, 285, 286], "quick": [7, 46, 51, 59, 299], "ll": [7, 20, 29, 59], "python3": [7, 23, 27, 28, 30, 32, 36, 40, 51, 59, 65, 309, 311, 312], "pip": [7, 27, 28, 30, 36, 40, 47, 51, 59, 65, 144, 299, 312, 316], "upgrad": [7, 23, 30, 51, 59, 316], "occur": [7, 9, 14, 30, 40, 53, 59, 299], "veri": [7, 30, 43, 44, 48, 51, 54, 56, 59, 65, 69, 136, 138, 309], "speed": [7, 30, 54, 58, 59, 66, 147, 213, 286], "try": [7, 17, 23, 30, 33, 38, 40, 43, 47, 51, 58, 59, 62, 63, 65, 73, 75, 164, 205, 289, 293, 313], "site": [7, 30, 51, 59], "aliyun": [7, 28, 30, 51, 58, 59, 72, 293, 310], "pypi": [7, 28, 30, 40, 51, 59, 312], "trust": [7, 28, 30, 51, 59], "host": [7, 15, 17, 22, 23, 28, 30, 43, 47, 49, 51, 59, 72, 74, 75, 76, 289, 293, 299, 309, 317, 319], "packag": [7, 8, 11, 17, 18, 20, 22, 23, 27, 28, 29, 33, 40, 46, 47, 51, 59, 65, 144, 233, 235, 286, 289, 299, 311], "everyth": [7, 59, 65, 298], "job": [7, 23, 43, 48, 59, 64, 65, 70, 74, 110, 135, 299], "modern_graph": [7, 27, 47, 51, 65, 300], "gremlin": [7, 29, 40, 43, 46, 47, 48, 49, 51, 52, 57, 60, 64, 65, 66, 70, 71, 73, 99, 103, 104, 140, 149, 293, 299, 307, 312, 313, 315, 320], "apach": [7, 17, 22, 23, 36, 47, 55, 56, 64, 65, 68, 297, 299, 303, 309, 311, 315], "tinkerpop": [7, 43, 46, 47, 49, 51, 56, 65, 149, 299, 315], "org": [7, 17, 23, 40, 47, 59, 62, 63, 65, 67, 75, 151, 209, 210, 211, 225, 228, 235, 248, 252, 253, 254, 255, 257, 258, 259, 265, 266, 267, 268, 270, 271, 272, 273, 278, 299, 309, 312, 313, 317], "doc": [7, 16, 17, 27, 65, 66, 74, 79, 148, 235], "tutori": [7, 8, 12, 14, 24, 47, 49, 51, 52, 56, 61, 65, 67, 69, 146, 235, 303], "trigger": [7, 14, 15, 18, 34, 60, 65, 84, 301], "ret": [7, 18, 65, 309, 314], "selector": [7, 15, 35, 46, 65, 74, 76, 83, 89, 90, 101, 102, 107, 115, 116, 148, 291, 293, 309, 314], "homogen": [7, 57, 65, 69, 136], "pg": [7, 65, 75, 293, 298], "none": [7, 9, 20, 28, 36, 62, 65, 75, 76, 82, 89, 90, 93, 96, 101, 102, 103, 104, 105, 107, 110, 112, 115, 116, 120, 126, 129, 133, 134, 135, 140, 148, 149, 150, 151, 159, 163, 165, 166, 170, 171, 180, 181, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 278, 280, 281, 283, 286, 288, 289, 290, 293, 298, 299, 314, 318, 319], "know": [7, 8, 27, 47, 52, 53, 54, 61, 65, 68, 135, 136, 144, 148, 299, 300, 314, 317, 319], "src": [7, 15, 16, 17, 18, 27, 31, 39, 43, 50, 59, 60, 63, 65, 75, 76, 82, 134, 136, 148, 292, 295, 298, 299, 301, 309, 313, 318, 319], "our": [7, 12, 17, 30, 31, 33, 34, 38, 43, 48, 58, 65, 67, 68, 69, 71, 72, 73, 141, 142, 151, 299, 301, 309], "learn": [7, 28, 30, 33, 34, 38, 43, 48, 51, 56, 60, 61, 62, 66, 67, 70, 73, 129, 135, 138, 139, 140, 141, 144, 146, 291, 293, 313, 315], "technic": [7, 59, 142, 280, 286], "disaggreg": [7, 33, 46], "deploy": [7, 27, 29, 40, 43, 49, 54, 64, 70, 136, 146, 293, 299], "scale": [7, 11, 12, 20, 23, 28, 31, 34, 43, 47, 49, 54, 56, 57, 64, 65, 67, 69, 70, 71, 136, 138, 140, 142, 147, 215, 226, 233, 285, 298], "usag": [7, 17, 30, 33, 34, 36, 46, 51, 53, 54, 58, 59, 60, 76, 137, 138, 139, 143, 148, 205, 286, 293, 299, 300], "giraph": [7, 8, 12, 17, 23, 24, 55, 71, 303], "graphx": [7, 8, 12, 17, 24, 55, 71, 303], "section": [8, 28, 29, 52, 54, 57, 61, 64, 140, 141, 148, 185, 298, 299], "assum": [8, 23, 27, 28, 47, 52, 54, 61, 65, 135, 148, 184, 245, 284, 286, 293, 298, 313], "read": [8, 20, 24, 34, 43, 51, 52, 61, 64, 66, 134, 135, 140, 145, 146, 148, 184, 185, 284, 286, 287, 291, 293, 295, 297, 299, 317], "getting_start": [8, 52, 61], "most": [8, 9, 15, 22, 40, 44, 48, 51, 53, 54, 57, 65, 67, 69, 71, 72, 76, 134, 136, 140, 142, 144, 206, 207, 231, 234, 235, 236, 299], "suffici": [8, 17, 40, 64, 135], "louvain": [8, 67, 75, 309], "social": [8, 43, 49, 54, 64, 67, 69, 72, 213, 263, 278, 287], "scientist": [8, 56, 71], "familiar": [8, 14, 16, 29, 48], "api": [8, 15, 16, 18, 22, 24, 27, 31, 43, 46, 56, 64, 70, 73, 78, 84, 134, 136, 138, 139, 140, 144, 150, 286, 298, 300, 309, 320], "manipul": [8, 11, 19, 20, 53, 54, 56, 71, 73, 74, 286], "invok": [8, 9, 12, 14, 15, 17, 24, 31, 74, 138, 139, 143, 293, 309], "pydata": [8, 70], "eco": 8, "pregel": [8, 12, 17, 22, 31, 56, 64, 67, 291, 303, 313, 315], "still": [8, 24, 28, 31, 43, 54, 67, 164, 293, 298, 299], "jar": [8, 22, 23, 32, 75, 299, 309], "directli": [8, 12, 20, 24, 27, 30, 31, 33, 34, 35, 43, 50, 54, 55, 57, 60, 69, 74, 135, 138, 140, 141, 142, 143, 278, 286, 289, 293, 299, 303], "migrat": [8, 48, 59, 62, 63, 65, 66, 71, 295, 313], "transpar": [8, 64], "don": [8, 17, 23, 27, 33, 34, 40, 47, 54, 84, 180, 286, 299], "autom": [9, 29, 66], "abl": [9, 24, 28, 47, 66, 139, 243, 298, 299], "batch": [9, 12, 19, 49, 57, 60, 66, 69, 134, 137, 139, 140, 142, 144, 146, 150, 299, 318], "counterpart": [9, 56, 66], "redesign": [9, 66], "underli": [9, 43, 48, 54, 66, 142, 298], "equip": [9, 55, 56, 66, 72, 303], "polici": [9, 40, 66, 74, 293], "memori": [9, 12, 23, 24, 28, 31, 40, 43, 46, 56, 58, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 134, 135, 136, 142, 146, 286, 293, 299, 302, 311, 312], "todai": 9, "static": [9, 16, 36, 47, 74, 299, 301], "chang": [9, 11, 12, 14, 20, 23, 31, 33, 46, 54, 64, 68, 69, 71, 72, 75, 91, 125, 135, 148, 151, 164, 286, 293, 299], "recomput": 9, "costli": 9, "consum": [9, 40, 69, 142, 145], "especi": [9, 44], "trillion": 9, "commerc": [9, 64, 67], "constantli": 9, "issu": [9, 17, 34, 40, 43, 66, 67, 71, 209, 210, 211, 275, 312], "involv": [9, 34, 38, 43, 48, 54, 57, 60, 64, 67, 68, 69, 70, 71], "adjust": [9, 12, 40], "old": [9, 12, 14, 31], "respons": [9, 12, 16, 28, 31, 33, 34, 40, 48, 64, 74, 144, 147, 293, 295], "typic": [9, 24, 43, 46, 50, 53, 54, 64, 67, 68, 71, 135, 140, 215, 286, 292, 298], "small": [9, 11, 20, 43, 54, 67, 68, 71, 151, 206, 207, 233, 276, 287, 293, 299], "often": [9, 34, 43, 47, 64, 67, 68, 69, 71, 136, 137, 140, 286, 299, 307], "overlap": [9, 293], "manual": [9, 28, 40, 46, 64, 71, 148, 299], "intervent": 9, "burden": [9, 15, 136], "expert": 9, "light": 9, "overal": [9, 69], "verifi": [9, 28, 35, 43, 47, 49, 72, 140], "characterist": [9, 50, 60, 64, 69, 134, 139], "deduc": [9, 148, 319], "appropri": [9, 28, 38, 48, 57, 64, 69, 134], "record": [9, 47, 54, 145, 295, 299], "part": [9, 34, 43, 48, 53, 57, 60, 66, 140, 141, 144, 146, 269, 286, 298, 299], "intermedi": [9, 12, 17, 48, 54, 56, 64], "deliv": [9, 317], "There": [9, 10, 12, 31, 34, 40, 47, 48, 54, 65, 67, 68, 69, 75, 136, 139, 140, 142, 286, 292, 293, 298, 299], "reshap": [9, 146], "eas": [9, 12, 31, 69, 71, 72], "achiev": [9, 12, 20, 24, 28, 31, 54, 64, 67, 72, 295], "decid": [9, 136, 233], "round": [9, 14, 17, 24, 75, 77, 203, 213], "due": [9, 40, 64, 71, 140], "among": [9, 48, 54, 64, 71, 74, 145, 151, 280, 299], "identifi": [9, 24, 50, 53, 54, 64, 65, 67, 68, 75, 125, 213, 280, 283, 286, 293, 299, 319], "fetch": [9, 15, 17, 99, 293, 299, 309], "suffic": 9, "replai": [9, 60, 66, 295], "affect": [9, 33, 34, 286], "area": [9, 15, 237, 283], "readili": 9, "obtain": [9, 14, 17, 27, 29, 47, 48, 49, 56, 57, 60, 63, 65, 69, 135, 139, 140, 142, 261, 264, 280, 286, 293, 299], "simpli": [9, 17, 20, 47, 54, 140, 208, 212, 286], "coincid": 9, "idea": [9, 34, 57, 69, 78, 142], "strategi": [9, 10, 12, 16, 24, 47, 53, 54, 60, 68, 69, 72, 77, 138, 139, 140, 143, 144, 289, 302, 317], "invalid": [9, 148, 293], "miss": [9, 138, 148, 196, 293], "comparison": [9, 19, 53, 54, 56, 71, 72], "those": [9, 29, 47, 49, 50, 54, 73, 138, 148, 151, 162, 191, 193, 195, 286, 288, 292], "although": [9, 12, 14, 22, 31, 43, 65, 78, 185, 298, 299], "solut": [9, 36, 40, 68, 69, 71, 151, 312], "enough": [9, 60, 135, 138, 205, 297], "usual": [9, 19, 28, 35, 40, 43, 48, 53, 54, 57, 60, 61, 62, 69, 140, 144, 147, 214, 237, 280, 286, 298, 300, 301, 307], "caus": [9, 14, 22, 30, 34, 40, 59, 69, 136, 142, 185], "overwhelm": 9, "overhead": [9, 71, 135, 136], "mf": 9, "delta": [9, 12, 75], "php": 9, "mp": 9, "cc": [9, 298, 314], "sswp": 9, "mv": 9, "track": 9, "gcn": [9, 56, 60, 65, 69, 73, 134, 138, 142, 146, 313, 315, 318, 320], "commnet": 9, "me": 9, "keep": [9, 54, 60, 77, 140, 148, 243, 246, 299], "graphsag": [9, 56, 60, 69, 73, 134, 138, 140, 142, 146, 315, 318, 320], "gin": [9, 69], "vldb": [9, 309, 315], "paper": [9, 14, 24, 57, 59, 62, 63, 64, 65, 66, 72, 146, 151, 283, 293, 309, 313], "publish": [9, 14, 24, 29, 64, 65], "2021": 9, "templat": [9, 15, 39, 74, 298], "denot": [9, 53, 54, 139, 214, 299], "w": [9, 47, 75, 151, 213, 219, 233, 236, 238, 243, 246, 248, 276, 286, 288, 299, 317], "respect": [9, 16, 46, 48, 53, 64, 65, 68, 69, 75, 93, 112, 120, 137, 140, 151, 192, 205, 252, 286, 292, 298, 299], "initi": [9, 16, 18, 19, 49, 54, 67, 69, 74, 135, 136, 146, 148, 150, 151, 225, 227, 228, 286, 289, 299, 303, 309], "init_v": 9, "init_m": 9, "aggreg": [9, 46, 48, 69, 77, 134, 140, 142, 146, 298, 317], "simplic": 9, "vector": [9, 39, 57, 63, 65, 69, 74, 77, 134, 142, 144, 151, 233, 237], "element": [9, 53, 54, 67, 74, 135, 138, 140, 148, 151, 181, 213, 258, 280, 292, 293, 298], "specifi": [9, 16, 20, 23, 24, 27, 33, 44, 47, 50, 53, 56, 60, 65, 67, 75, 77, 82, 89, 90, 101, 102, 107, 111, 115, 116, 128, 133, 134, 135, 137, 140, 143, 148, 150, 151, 162, 170, 171, 192, 205, 215, 217, 218, 221, 222, 229, 233, 234, 235, 236, 237, 243, 246, 248, 251, 264, 283, 286, 288, 292, 293, 299, 300], "addition": [9, 12, 14, 33, 57, 63, 64, 66, 71, 142, 151, 298, 307], "correspond": [9, 10, 15, 17, 18, 38, 48, 50, 53, 54, 56, 60, 68, 71, 75, 110, 134, 135, 136, 137, 139, 140, 144, 148, 151, 184, 185, 215, 217, 218, 219, 220, 221, 233, 279, 280, 282, 286, 288, 289, 295, 299, 307], "iteratorkernel": 9, "void": [9, 14, 15, 16, 17, 24, 39, 74, 295, 298, 299, 300, 309], "m1": [9, 40, 51, 187, 312, 316], "m2": [9, 187], "below": [9, 10, 12, 20, 31, 32, 33, 34, 60, 64, 65, 67, 68, 69, 72, 135, 138, 140, 143, 146, 185, 215, 217, 251, 286, 293, 299], "ssspkernel": 9, "public": [9, 15, 16, 17, 28, 65, 72, 74, 144, 299, 309, 313], "dbl_max": 9, "backend": [9, 28, 29, 56, 59, 64, 69, 148, 286, 293, 300, 313], "seamless": [9, 43, 70, 299], "These": [9, 15, 20, 24, 47, 57, 64, 65, 67, 68, 69, 70, 140, 146, 298], "extend": [9, 17, 23, 50, 53, 54, 71, 76, 135, 143, 144, 232, 298, 309], "block": [9, 40, 48, 137, 213, 299], "spawn": 9, "worker": [9, 14, 23, 31, 46, 49, 60, 62, 136, 139, 146, 148, 293], "adopt": [9, 71, 138, 299], "csc": [9, 297], "csr": [9, 39, 148, 297, 300], "sent": [9, 10, 14, 16, 24], "reli": [9, 19, 141, 293, 298], "mainten": [9, 298], "preserv": [9, 76, 148, 248, 278], "effect": [9, 33, 34, 43, 53, 60, 64, 69, 138, 217, 286, 299], "readi": [9, 27, 30, 34, 40, 43, 47, 49, 64, 136, 138, 293, 299, 307], "accept": [9, 151, 233, 237, 299, 300], "insert": [9, 14, 48, 105, 299], "newli": [9, 38], "particular": [9, 34, 53, 75, 137, 140, 215], "incid": [9, 20, 50, 53, 54, 162, 163, 205, 227, 276, 286], "encod": [9, 68, 75, 135, 140, 146, 150, 288, 299, 318], "dummi": 9, "furthermor": [9, 54, 56, 64, 71], "proprieti": 9, "deduct": 9, "techniqu": [9, 31, 46, 51, 60, 67, 140], "cancel": 9, "compens": 9, "whose": [9, 24, 54, 138, 140, 151, 156, 176, 258, 262, 278, 280, 281, 297, 298], "proce": [9, 205, 299], "inner": [10, 16, 39, 46, 54, 77, 148, 298], "outer": [10, 14, 39, 77, 201, 298], "cross": [10, 50, 78, 261], "fragment": [10, 12, 14, 16, 17, 18, 39, 46, 48, 67, 69, 77, 110, 148, 149, 295, 300, 303, 309], "f_": 10, "instanc": [10, 15, 23, 27, 28, 29, 40, 47, 50, 54, 62, 64, 67, 68, 72, 74, 75, 76, 82, 84, 86, 99, 103, 104, 111, 129, 137, 148, 186, 188, 189, 191, 193, 195, 196, 198, 200, 201, 204, 215, 217, 218, 220, 222, 223, 224, 226, 230, 231, 232, 238, 239, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 281, 288, 293, 298, 299, 307], "5": [10, 19, 20, 36, 40, 49, 53, 54, 59, 60, 62, 63, 65, 68, 72, 134, 137, 139, 140, 141, 143, 146, 151, 157, 162, 164, 170, 189, 192, 205, 209, 210, 211, 213, 214, 222, 224, 231, 232, 233, 234, 236, 237, 251, 252, 254, 255, 256, 257, 259, 260, 263, 265, 267, 269, 270, 276, 281, 286, 292, 293, 299, 301, 307, 312, 313, 317], "6": [10, 17, 18, 22, 36, 43, 47, 51, 53, 54, 72, 75, 135, 140, 146, 151, 170, 189, 218, 219, 220, 237, 251, 253, 259, 260, 263, 266, 270, 271, 279, 281, 286, 299, 301, 309, 312, 313, 317], "9": [10, 36, 47, 51, 54, 65, 135, 151, 189, 191, 237, 255, 263, 276, 281, 316], "12": [10, 20, 30, 40, 51, 54, 72, 75, 135, 136, 137, 139, 141, 153, 154, 155, 191, 253, 254, 258, 262, 266, 272, 310, 312, 317], "split": [10, 53, 54, 62, 63, 135, 136, 293, 299], "roughli": 10, "across": [10, 14, 31, 32, 33, 64, 67, 68, 71, 298, 300], "divid": [10, 54, 57, 64, 75, 135, 138, 142, 143, 151, 297], "place": [10, 18, 19, 33, 47, 54, 144, 145, 148, 213, 233, 234, 235, 236, 237, 266, 284], "itself": [10, 20, 22, 34, 53, 54, 57, 64, 77, 134, 136, 292, 293, 298], "replic": [10, 49, 227], "resid": [10, 14], "j": [10, 36, 39, 75, 146, 151, 184, 185, 206, 207, 215, 217, 218, 220, 226, 237, 240, 241, 242, 264, 298], "outcom": 10, "outgo": [10, 16, 24, 53, 54, 68, 77, 140, 151, 286, 298], "incom": [10, 14, 16, 31, 53, 54, 74, 77, 151], "consid": [10, 15, 18, 28, 34, 54, 60, 67, 75, 76, 135, 136, 151, 215, 278, 295, 298], "vice": [10, 233], "versa": [10, 233], "compani": [10, 298], "syncstateonoutervertexastarget": 10, "certain": [10, 24, 43, 44, 71, 135, 136, 140, 143, 298, 299], "regardless": [10, 66, 135, 231, 298], "friendli": [11, 12, 34, 46, 56, 67, 69, 70, 71], "research": [11, 60, 69, 276, 293], "particularli": [11, 69, 278], "field": [11, 27, 28, 35, 47, 60, 62, 63, 65, 138, 142, 146, 148, 232, 293, 299, 310, 313], "scienc": [11, 240, 263], "environ": [11, 19, 20, 23, 24, 28, 29, 34, 40, 43, 46, 51, 56, 62, 65, 73, 75, 78, 141, 145, 151, 293, 298, 299, 300, 307, 312, 316], "solv": [11, 24, 34, 40, 42, 54, 67], "recast": [12, 14, 31], "ga": 12, "plug": [12, 31, 64], "minor": [12, 14, 31, 56, 64, 69, 72, 301], "cope": [12, 31], "life": [12, 30, 31, 47, 64], "fledg": [12, 64], "extrem": [12, 28, 64, 142, 187, 198, 298], "fashion": [12, 20], "consist": [12, 20, 24, 27, 31, 32, 33, 48, 50, 53, 54, 56, 57, 60, 67, 68, 69, 71, 72, 74, 75, 77, 137, 138, 140, 142, 188, 189, 190, 201, 204, 212, 258, 280, 295, 297, 298, 299, 300], "format": [12, 20, 22, 31, 32, 43, 46, 54, 57, 69, 70, 72, 75, 103, 104, 111, 134, 137, 140, 142, 145, 146, 148, 149, 286, 288, 293, 295, 311], "unifi": [12, 31, 43, 46, 48, 135, 295], "care": [12, 31, 54, 144, 145, 298], "written": [12, 20, 54, 64, 66, 103, 149, 264, 295, 298, 301, 309], "foreign": [12, 298], "ecosystem": [12, 55, 56, 68, 71, 303], "freedom": 12, "accord": [12, 19, 33, 40, 44, 47, 48, 53, 54, 57, 64, 68, 69, 74, 138, 140, 144, 205, 213, 225, 226, 295, 299], "demand": [12, 48, 67, 298, 299, 303], "sdk": [12, 18, 40, 46, 47, 55, 56, 67, 71, 78, 291, 299, 303, 309], "sub": [12, 14, 18, 54, 56, 76, 138, 140, 298, 303], "domain": [12, 64, 69, 233, 234, 235, 236, 237], "dedic": 12, "treat": [12, 14, 20, 31, 54, 148, 286, 288, 293], "immut": [12, 31, 46, 66, 68], "persist": [12, 15, 31, 40, 46, 47, 64, 66, 71, 297], "fortun": [12, 20, 43], "grin": [12, 46], "awar": [12, 34, 40, 47, 66], "introduct": [12, 31, 46, 67, 139, 140, 143, 151, 196, 278, 298], "foundat": [12, 64], "visit": [12, 29, 54, 68, 135], "meanwhil": [12, 43, 56, 69, 298], "compress": [12, 65, 75, 135, 251], "pipelin": [12, 31, 56, 64, 67, 71, 302], "balanc": [12, 136, 186], "link": [12, 34, 36, 40, 42, 48, 50, 57, 69, 72, 75, 148, 151, 188, 209, 211, 212, 222, 223, 224, 283, 286, 293], "popular": [12, 22, 29, 43, 69, 134, 146, 299], "freeli": [12, 24], "background": [12, 42], "interoper": [12, 298], "panda": [12, 43, 74, 76, 89, 101, 148, 286, 315], "mar": [12, 28, 43, 53, 66, 293], "fastffi": [12, 78], "via": [12, 14, 17, 18, 20, 22, 23, 24, 28, 30, 40, 47, 53, 55, 56, 64, 68, 71, 74, 187, 198, 205, 281, 284, 286, 293, 303, 309], "emploi": [12, 24, 31, 63, 66, 67], "captur": [12, 69], "20": [12, 28, 29, 30, 31, 47, 53, 54, 56, 72, 75, 76, 136, 137, 139, 205, 233, 234, 255, 257, 286, 309, 310, 316, 317], "100": [12, 31, 54, 59, 62, 63, 65, 75, 146, 151, 208, 215, 219, 226, 235, 286, 293, 313, 317], "build": [12, 15, 31, 32, 34, 36, 40, 46, 48, 56, 57, 66, 74, 75, 84, 86, 136, 140, 142, 144, 145, 148, 234, 235, 236, 278, 293, 295, 311, 318], "been": [12, 17, 23, 24, 29, 34, 40, 48, 49, 51, 53, 54, 55, 57, 64, 67, 68, 69, 71, 75, 125, 138, 140, 148, 149, 151, 205, 228, 278, 290, 293, 303], "misc": 13, "express": [14, 15, 24, 48, 50, 60, 66, 68, 76, 135, 137, 140, 237, 286, 317], "modifi": [14, 20, 24, 47, 87, 88, 105, 106, 141, 164, 217, 284, 297, 298], "adher": [14, 32, 298], "think": [14, 24], "like": [14, 15, 18, 19, 20, 23, 24, 28, 33, 34, 38, 40, 43, 46, 47, 48, 51, 54, 56, 58, 64, 65, 69, 70, 71, 73, 74, 75, 135, 140, 144, 146, 148, 205, 215, 217, 225, 286, 292, 293, 295, 298, 299, 300, 319], "principl": [14, 144], "privileg": 14, "experienc": 14, "inform": [14, 15, 16, 19, 28, 29, 35, 40, 48, 49, 63, 65, 67, 68, 69, 70, 78, 92, 134, 135, 136, 137, 140, 142, 144, 148, 151, 166, 184, 225, 247, 248, 276, 286, 293, 295, 299], "hop": [14, 48, 50, 53, 54, 56, 57, 60, 64, 68, 69, 134, 138, 140, 142, 143, 144, 146], "slow": [14, 51], "consequ": [14, 64, 67], "piec": [14, 46, 145, 293], "destin": [14, 47, 54, 57, 65, 74, 76, 91, 135, 136, 137, 139, 140, 146, 148, 150, 292, 297, 298, 299, 319], "abovement": 14, "peval": [14, 16, 17, 18, 31, 67, 74, 81, 303, 309], "incev": [14, 16, 17, 18, 31, 67, 74, 81, 303, 309], "assembl": [14, 31, 48, 66, 67, 74, 148], "unlik": [14, 17, 57, 60, 64, 286], "modif": [14, 22, 56, 64, 69, 148, 289], "convent": [14, 34, 40, 219, 245, 307], "taught": [14, 54], "colleg": 14, "textbook": 14, "answer": [14, 31, 34, 40, 64, 299], "collect": [14, 31, 53, 54, 68, 69, 70, 146, 286], "partial": [14, 16, 18, 31, 53, 74, 76, 135, 228, 303], "revis": [14, 72], "intricaci": 14, "fixpoint": 14, "monoton": 14, "guarante": [14, 47, 60, 71, 135, 143, 151, 221, 286], "accur": 14, "long": [14, 17, 27, 54, 66, 68, 71, 75, 140, 298, 299, 309, 317], "note": [14, 20, 28, 29, 48, 54, 57, 62, 63, 65, 67, 75, 76, 77, 84, 125, 127, 136, 140, 148, 151, 160, 161, 164, 168, 181, 182, 183, 184, 185, 186, 192, 193, 198, 201, 203, 205, 206, 207, 208, 210, 212, 214, 215, 217, 218, 219, 220, 221, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 263, 278, 279, 280, 281, 283, 286, 288, 289, 292, 293, 297, 299, 313, 319], "const": [14, 15, 16, 39, 74, 77, 144, 145, 298, 299, 300], "fragment_t": [14, 15, 16, 74], "frag": [14, 17, 18, 39, 81, 295, 300, 309], "context_t": [14, 15, 16, 74], "ctx": [14, 17, 22, 74, 309], "message_manager_t": [14, 16, 74], "vertex_t": [14, 16, 39, 74], "native_sourc": [14, 18, 309], "getinnervertex": [14, 74], "partial_result": 14, "getoutgoingadjlist": [14, 16, 17, 39, 74, 295, 309], "get_neighbor": 14, "std": [14, 15, 39, 74, 295, 300], "min": [14, 18, 24, 77, 309, 317], "static_cast": [14, 16, 39, 295], "get_data": [14, 39], "isoutervertex": [14, 74], "put": [14, 16, 17, 22, 144, 293], "channel": [14, 16, 34], "syncstateonoutervertex": 14, "els": [14, 16, 18, 39, 54, 136, 146, 148, 244, 298, 299, 309], "next_modifi": 14, "inner_vertic": [14, 16], "innervertic": [14, 16, 17, 39, 74, 295, 309], "parallelprocess": [14, 16], "thread_num": [14, 16], "tid": [14, 16], "msg": [14, 16, 24, 54, 77, 298], "atomic_min": 14, "curr_modifi": 14, "foreach": [14, 16], "distv": [14, 18, 309], "ndistu": 14, "outer_vertic": 14, "outervertic": [14, 39, 74], "dijkstra": [14, 18, 67, 151, 309], "checkout": [14, 34, 141], "seri": [15, 54, 69, 74, 140, 298], "strong": [15, 48, 67], "app": [15, 16, 17, 18, 46, 76, 77, 78, 83, 86, 111, 117, 120, 135, 148, 291, 292, 298, 309], "typenam": [15, 16, 39, 74], "frag_t": [15, 16, 74], "yourapp": 15, "flashappbas": 15, "v_type": 15, "install_flash_work": 15, "flashvertexdatacontext": 15, "v_res_typ": 15, "sync_all_": 15, "re": [15, 34, 47, 54, 68, 137, 140, 144, 146, 292, 301], "shared_ptr": [15, 39, 74, 295, 300], "fw_t": 15, "fw": 15, "Or": [15, 17, 19, 22, 29, 33, 38, 54, 293, 309, 319], "global": [15, 24, 48, 50, 53, 54, 69, 126, 148, 278, 293, 300, 317], "flashglobaldatacontext": 15, "g_res_typ": 15, "let": [15, 18, 19, 38, 47, 48, 54, 69, 248, 292], "bfsflash": 15, "bfs_type": 15, "value_t": 15, "di": 15, "oid_t": [15, 16, 39, 74], "o_sourc": 15, "vid_t": [15, 16, 39, 74], "oid2flashid": 15, "definemapv": 15, "init": [15, 16, 17, 18, 39, 62, 74, 75, 77, 81, 134, 136, 137, 141, 144, 146, 286, 289, 293, 295, 303, 309, 318, 319], "vset_t": 15, "ctruev": 15, "definefv": 15, "definemap": 15, "cond": [15, 194], "len": [15, 54, 62, 136, 151, 160, 191, 208, 210, 213, 215, 216, 220, 286], "ed": [15, 23, 219, 233, 240, 263, 269], "ctruee": 15, "rather": [15, 18, 54, 68, 70, 71, 151, 205, 247, 298], "py": [15, 134, 141, 146, 309, 310, 311, 318], "project_to_simpl": 15, "not_compatible_for": 15, "arrow_properti": [15, 27, 85, 289], "dynamic_properti": [15, 98, 289], "def": [15, 18, 23, 59, 62, 63, 65, 81, 134, 136, 137, 138, 139, 140, 143, 146, 192, 299, 309, 313, 314, 318, 319], "arg": [15, 62, 74, 75, 76, 77, 111, 137, 138, 139, 140, 143, 146, 150, 293, 299], "appasset": [15, 18, 81, 82, 86, 291, 309], "algo": [15, 16, 17, 22, 23, 75, 82], "flash_bf": 15, "vertex_data": [15, 16, 75, 82], "configur": [15, 16, 17, 23, 28, 32, 34, 35, 36, 40, 46, 49, 53, 54, 62, 64, 74, 75, 85, 86, 92, 93, 98, 125, 145, 146, 148, 205, 215, 217, 293, 295, 300], "coordin": [15, 28, 29, 32, 38, 51, 62, 74, 99, 148, 198, 293, 299, 307, 310, 311, 313], "gscoordin": [15, 33], "builtin": [15, 19, 20, 287, 289, 291], "gs_conf": [15, 16, 82], "yaml": [15, 16, 29, 35, 47, 75, 82, 297, 299, 317], "cpp_flash": 15, "class_nam": [15, 16, 82], "compatible_graph": [15, 16, 82], "immutableedgecutfrag": 15, "arrowprojectedfrag": [15, 16, 74, 82], "log": [15, 17, 35, 40, 46, 62, 63, 64, 66, 298, 300, 312], "p2p": [15, 17, 22, 23], "network": [15, 28, 40, 43, 46, 49, 54, 57, 61, 63, 64, 65, 67, 70, 71, 72, 73, 75, 134, 135, 136, 138, 140, 142, 146, 151, 206, 207, 213, 215, 219, 222, 223, 224, 227, 239, 263, 274, 275, 277, 278, 283, 287, 301, 312], "load_p2p_network": [15, 16, 17, 18, 43, 75, 76, 309], "attribut": [15, 19, 50, 60, 63, 65, 67, 69, 74, 75, 109, 120, 136, 137, 139, 142, 146, 147, 150, 151, 153, 154, 155, 170, 171, 180, 192, 205, 210, 229, 233, 234, 235, 236, 237, 240, 241, 242, 276, 278, 280, 283, 284, 286, 287, 289, 295], "convert": [15, 20, 23, 57, 75, 89, 90, 101, 102, 115, 116, 134, 135, 142, 146, 206, 207, 264, 281, 286, 288, 289, 295], "simple_graph": [15, 16], "dist": [15, 17, 75, 76, 141, 144, 233, 235, 237, 293, 309, 317], "codegen": [15, 48], "compil": [15, 30, 31, 36, 40, 48, 49, 64, 75, 86, 298, 299, 301, 307], "bit": [15, 51, 53, 54], "longer": [15, 62, 77, 293], "vineyard": [15, 16, 23, 36, 39, 40, 46, 47, 56, 61, 62, 64, 68, 70, 71, 74, 76, 107, 112, 115, 116, 148, 149, 293, 298, 299, 307, 309, 312, 313, 314, 317, 319], "object": [15, 49, 51, 53, 54, 57, 60, 64, 67, 69, 72, 74, 85, 98, 112, 126, 135, 137, 138, 139, 140, 143, 146, 149, 150, 164, 184, 185, 243, 283, 286, 288, 289, 291, 292, 297, 299, 309, 319], "retriev": [15, 46, 50, 53, 65, 66, 76, 89, 90, 101, 102, 107, 111, 115, 116, 137, 138, 140, 146, 151, 292, 299, 300], "displai": [15, 135], "vertex_rang": [15, 76, 89, 90, 101, 102, 107, 115, 116, 148, 292], "begin": [15, 16, 27, 39, 43, 52, 54, 65, 76, 77, 225, 292, 298], "end": [15, 16, 39, 43, 53, 54, 60, 61, 62, 63, 64, 65, 68, 71, 76, 77, 140, 145, 151, 165, 174, 179, 180, 193, 205, 288, 292, 298, 303], "10": [15, 16, 17, 20, 28, 36, 40, 42, 43, 48, 50, 53, 54, 59, 60, 62, 63, 65, 72, 75, 135, 136, 137, 139, 140, 146, 151, 153, 154, 155, 189, 195, 205, 208, 210, 219, 220, 221, 222, 224, 228, 233, 237, 241, 257, 263, 268, 281, 286, 293, 299, 307, 309, 312, 313, 317], "sort_valu": 15, "pip3": [16, 19, 23, 32, 34, 40, 310, 312, 316], "degre": [16, 19, 20, 39, 43, 54, 60, 75, 77, 137, 138, 143, 151, 160, 185, 186, 205, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 231, 243, 244, 245, 246, 280, 286, 287, 299], "libgrap": [16, 31, 36, 66, 78], "lite": [16, 31, 36, 66, 78], "vertexdatacontext": [16, 17, 74, 151, 309], "myappcontext": 16, "uint64_t": [16, 295], "explicit": [16, 74, 230, 286, 293], "parallelmessagemanag": [16, 17, 309], "param1": 16, "setvalu": [16, 17, 309], "vertex_array_t": [16, 74], "member": [16, 54, 74, 276], "variabl": [16, 29, 38, 40, 49, 53, 81, 205, 299, 300, 312], "And": [16, 18, 23, 29, 33, 36, 43, 48, 51, 53, 54, 72, 75, 76, 139, 144, 289, 292, 293], "zero": [16, 66, 75, 135, 140, 151, 168, 186, 195, 228, 280, 281, 300], "myapp": 16, "parallelappbas": [16, 17, 309], "parallelengin": [16, 17, 309], "install_parallel_work": 16, "constexpr": [16, 74], "messagestrategi": [16, 18, 74, 77, 309], "message_strategi": [16, 74], "ksynconoutervertex": [16, 18, 74, 77, 309], "loadstrategi": [16, 74], "load_strategi": [16, 74], "kbothoutin": [16, 74], "initchannel": 16, "noth": [16, 77, 92, 148, 150, 286], "forc": [16, 34], "forcecontinu": [16, 17, 309], "getincomingadjlist": [16, 39, 74], "basic": [16, 20, 46, 51, 53, 68, 134, 137, 142, 144, 145, 146, 205, 215, 220, 292], "counter": [16, 54], "runnabl": [16, 17, 23], "content": [16, 43, 54, 63, 65, 151, 283, 297, 319], "my_app": [16, 18, 309], "cpp_pie": [16, 75, 82], "context_typ": [16, 74, 75, 82], "dynamicprojectedfrag": 16, "arrowfrag": [16, 74, 300], "codebas": [16, 32], "my_app_context": 16, "zip": [16, 47, 82, 233, 237, 286, 317], "jr": 16, "load_app": [16, 17, 18, 22, 309], "_project_to_simpl": [16, 17, 22], "path_to_your_gar_resourc": 16, "to_numpi": [16, 17, 22, 75, 76, 148, 292, 309], "practic": [16, 48, 57, 60, 64, 68, 69, 135, 136, 138, 299], "demo": [17, 22, 23, 51, 78, 293, 297, 299, 307, 309], "turn": [17, 40, 72, 78, 280, 307], "verbos": [17, 23, 35, 40, 307], "lauch": [17, 22, 309], "cluster_typ": [17, 22, 75, 76, 293, 309, 319], "add_lib": [17, 22, 293], "home": [17, 22, 23, 43, 74, 141, 142, 144, 145, 147, 148, 151, 195, 307, 309, 311, 319], "19": [17, 22, 23, 40, 54, 72, 136, 137, 139, 307, 312, 316], "shade": [17, 22, 23, 309], "java_pi": [17, 75], "threadnum": [17, 309], "info": [17, 40, 51, 54, 77, 148, 286, 289, 293, 297, 298, 299, 300, 307], "maven": [17, 23, 78, 299, 309], "groupid": [17, 23, 299, 309], "artifactid": [17, 23, 299, 309], "shall": [17, 23], "fat": 17, "plugin": [17, 23, 299, 309], "spark": [17, 297], "drastic": 17, "great": [17, 23, 34, 299], "suppos": [17, 54, 148, 280, 298], "traversecontext": [17, 309], "overrid": [17, 74, 134, 144, 309], "ifrag": [17, 309], "parallelcontextbas": [17, 309], "messagemanag": [17, 309], "adjlist": [17, 74, 77, 297, 309], "nbr": [17, 20, 39, 74, 77, 286, 309], "dst": [17, 18, 27, 43, 50, 60, 76, 134, 137, 148, 150, 292, 295, 298, 309, 318, 319], "largest": [17, 54, 151, 231, 309], "vertexarrai": [17, 74, 77, 309], "math": [17, 59, 63, 65, 151, 235, 236, 313, 315], "max": [17, 77, 147, 151, 309, 317], "pars": [17, 48, 75, 135, 295, 299], "maxiter": [17, 309], "jsonobject": [17, 309], "gsvertexarrai": [17, 309], "createfficontext": [17, 309], "arrai": [17, 39, 57, 69, 74, 75, 76, 137, 138, 140, 143, 146, 286, 289, 301, 309], "avail": [17, 23, 27, 29, 38, 43, 47, 60, 66, 68, 72, 75, 128, 133, 146, 234, 235, 236, 286, 293, 295, 298, 299, 309], "containskei": [17, 309], "getinteg": [17, 309], "javadoc": [17, 32], "mvn": [17, 22, 78, 299], "proper": [17, 34], "javaapp": [17, 291, 309], "But": [17, 47, 54, 71, 78, 286, 292], "rememb": [17, 22, 23, 27], "singel": 17, "full_jar_path": [17, 75, 309], "pack": [17, 23, 309], "java_app_class": [17, 75, 309], "fullli": [17, 309], "qualifi": [17, 75, 309], "b": [17, 18, 22, 34, 53, 54, 140, 195, 213, 226, 232, 233, 237, 242, 243, 244, 246, 274, 282, 286, 309, 317], "param": [17, 23, 29, 40, 75, 94, 95, 111, 126, 128, 129, 130, 133, 140, 146, 148, 293, 299, 309], "string": [17, 23, 47, 68, 74, 75, 77, 81, 120, 135, 136, 137, 138, 139, 140, 143, 145, 146, 147, 148, 150, 151, 166, 170, 171, 180, 278, 280, 282, 286, 288, 295, 298, 299, 300, 309, 317, 319], "bother": 17, "click": [17, 33, 34, 60, 136, 137, 140, 310], "pure": [18, 74, 303], "just": [18, 19, 23, 28, 40, 43, 47, 53, 54, 71, 78, 144, 148, 286, 289, 293, 301], "udf": [18, 81, 292, 309], "decor": [18, 309], "vd_type": [18, 77, 81, 309], "md_type": [18, 77, 81, 309], "youralgorithm": [18, 309], "staticmethod": [18, 81, 309], "statu": [18, 27, 28, 29, 35, 40, 62, 144, 145, 151, 299, 303, 307], "cython": [18, 31, 40, 46, 111, 291, 309], "sssp_pie": [18, 309], "v_label_num": [18, 300, 309], "vertex_label_num": [18, 77, 295, 300, 309], "v_label_id": [18, 77, 309], "init_valu": [18, 77, 309], "1000000000": [18, 75, 309], "pieaggregatetyp": [18, 77, 309], "kminaggreg": [18, 77, 309], "register_sync_buff": [18, 77, 309], "get_config": [18, 77, 293, 309], "declar": [18, 48, 53, 54, 56, 68, 71, 136, 309], "get_inner_nod": [18, 77, 309], "break": [18, 146, 309], "set_node_valu": [18, 77, 309], "e_label_num": [18, 39, 300, 309], "edge_label_num": [18, 77, 295, 300, 309], "e_label_id": [18, 309], "get_outgoing_edg": [18, 77, 309], "third": [18, 46, 64, 68, 148, 271, 272], "column": [18, 39, 43, 44, 48, 50, 57, 65, 69, 74, 76, 77, 83, 135, 145, 148, 279, 295, 299, 300, 309, 313, 319], "get_int": [18, 77, 309], "get_node_valu": [18, 77, 309], "iv": [18, 309], "inner_nod": [18, 77, 309], "v_dist": [18, 309], "u_dist": [18, 39, 309], "classic": [18, 60, 139, 287], "yourpregelalgorithm": [18, 309], "sssp_pregel": [18, 309], "set_valu": [18, 77, 309], "src_id": [18, 39, 60, 135, 136, 137, 139, 140, 143, 146, 150, 309], "cur_dist": [18, 309], "new_dist": [18, 309], "outgoing_edg": [18, 77, 309], "vote_to_halt": [18, 77, 309], "sin": [18, 309], "m_pi": [18, 309], "translat": [18, 34, 64], "generate_eid": [18, 44, 47, 74, 126, 148, 300, 309, 319], "test": [18, 23, 29, 40, 46, 47, 51, 54, 56, 59, 62, 63, 65, 69, 134, 144, 146, 150, 170, 171, 205, 286, 288, 293, 298, 299, 310, 311, 313, 318], "save": [18, 29, 47, 136, 151, 299], "futur": [18, 53, 54], "to_gar": [18, 309], "my_sssp_pregel": [18, 309], "gar": [18, 75, 82, 148, 293, 297, 309], "later": [18, 20, 30, 51, 54, 68, 148, 293, 298, 299, 316], "construct": [19, 54, 57, 60, 64, 65, 74, 126, 134, 135, 136, 137, 138, 148, 149, 153, 154, 194, 215, 217, 218, 220, 226, 230, 231, 232, 240, 243, 244, 245, 246, 248, 264, 268, 272, 278, 280, 293, 297, 300], "expand": [19, 46, 48, 54, 138, 140, 287], "add_edges_from": [19, 20, 170, 286], "add_nod": [19, 20, 286, 289], "number_of_nod": [19, 20, 151, 195, 279, 286], "number_of_edg": [19, 20, 160, 195, 279, 286], "sort": [19, 20, 39, 48, 54, 151, 157, 185, 189, 192, 195, 220, 221, 279, 280, 286, 298], "connected_compon": [19, 151], "nx": [19, 20, 43, 85, 87, 88, 91, 94, 96, 98, 105, 106, 110, 113, 114, 148, 151, 286, 288, 289], "add_nodes_from": [19, 20, 286], "red": [19, 20, 34, 135, 286], "green": [19, 20, 33, 34], "add_edg": [19, 20, 43, 148, 164, 170, 171, 174, 179, 180, 286, 289, 313, 314, 319], "1415": [19, 20], "all_pairs_shortest_path": 19, "sp": 19, "dict": [19, 20, 28, 75, 76, 103, 104, 112, 133, 136, 137, 140, 148, 149, 233, 234, 235, 236, 243, 244, 264, 286, 292, 293, 299], "draw": [19, 54, 233, 236], "matplotlib": [19, 54], "with_label": 19, "font_weight": 19, "bold": [19, 72], "twitter": [19, 72], "wget": [19, 22, 23, 29, 32, 141, 317], "raw": [19, 22, 23, 47, 48, 57, 101, 102, 136, 142, 144, 145, 150], "githubusercont": [19, 22, 23], "p": [19, 20, 33, 36, 53, 54, 66, 75, 136, 146, 151, 209, 210, 211, 213, 222, 223, 224, 227, 228, 230, 232, 234, 235, 236, 237, 240, 242, 317], "netwrokx": 19, "o": [19, 22, 23, 27, 28, 35, 74, 146, 151, 168, 219, 221, 226, 234, 235, 236, 238, 239, 240, 286, 299, 310, 313], "gs_nx": 19, "g1": [19, 148, 290, 301, 302], "read_edgelist": [19, 288], "expandvar": [19, 22], "nodetyp": [19, 288], "create_us": [19, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 215, 216, 217, 218, 220, 222, 223, 224, 226, 230, 231, 232, 238, 239, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 281, 288], "g2": [19, 148, 286, 290, 301, 302], "ret_g": 19, "ret_nx": 19, "lack": [20, 30, 70, 151], "hashabl": [20, 166, 181, 243, 286, 288], "float": [20, 62, 68, 72, 75, 134, 135, 136, 137, 145, 146, 147, 151, 205, 208, 209, 210, 211, 213, 224, 225, 226, 227, 228, 233, 234, 235, 236, 237, 240, 241, 242, 278, 286, 288, 293, 301, 317, 318, 319], "tupl": [20, 54, 135, 136, 137, 146, 148, 151, 170, 171, 180, 192, 233, 237, 243, 282, 286, 288, 293], "though": [20, 205, 286, 299], "yield": [20, 140, 146, 233, 237, 286], "node_attribute_dict": 20, "discuss": [20, 40, 54, 151, 298, 312], "incorpor": 20, "path_graph": [20, 151, 162, 164, 165, 171, 286, 288], "grown": [20, 195, 228, 286], "unpack": [20, 47, 74, 286], "ebunch": [20, 286], "dictionari": [20, 75, 120, 151, 233, 234, 235, 236, 243, 244, 245, 246, 286, 288], "11": [20, 27, 28, 30, 36, 51, 54, 59, 72, 75, 135, 136, 137, 139, 153, 154, 155, 191, 286, 299, 307, 310, 316], "complaint": 20, "clear": [20, 34, 53, 54, 87, 88, 186, 188, 189, 191, 193, 195, 196, 198, 200, 201, 204, 215, 217, 218, 220, 222, 223, 224, 226, 230, 231, 232, 238, 239, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 281, 286, 288], "quietli": [20, 181, 286], "ignor": [20, 151, 162, 181, 286, 293], "spam": 20, "stage": [20, 40, 46, 57, 70, 71, 140, 298], "8": [20, 30, 32, 36, 40, 54, 56, 59, 72, 75, 135, 189, 212, 231, 254, 263, 265, 271, 275, 281, 283, 286, 288, 299, 301, 312, 317], "seen": [20, 48, 64, 298], "facilit": [20, 49, 56, 57, 60, 69, 135, 298, 299], "report": [20, 40, 46, 72, 110, 209, 210, 211, 286, 289], "adj": [20, 77, 151, 286], "item": [20, 29, 64, 135, 136, 137, 140, 146, 151, 286, 299], "One": [20, 48, 64, 69, 70, 71, 75, 138, 140, 217, 226, 280, 299], "nbunch": [20, 159, 163, 165, 181, 286], "remove_nod": [20, 286], "remove_nodes_from": [20, 286], "remove_edg": [20, 286], "remove_edges_from": [20, 215, 217, 286], "instanti": [20, 75, 146, 301], "digraph": [20, 148, 153, 163, 165, 170, 171, 174, 179, 180, 191, 208, 209, 210, 213, 217, 218, 220, 222, 223, 224, 225, 229, 280, 281, 282, 284, 287, 288, 289], "edgelist": [20, 264, 288], "subscript": [20, 286], "notat": [20, 251, 253, 255, 257, 259, 265, 267, 286], "yellow": [20, 135], "blue": [20, 135, 286], "pair": [20, 50, 54, 74, 75, 77, 133, 146, 185, 190, 191, 197, 213, 231, 237, 286, 289, 292, 298, 300], "undirect": [20, 44, 69, 75, 94, 136, 140, 148, 151, 157, 161, 183, 206, 207, 213, 215, 222, 224, 227, 229, 230, 231, 233, 234, 235, 236, 237, 243, 248, 252, 253, 256, 259, 260, 262, 268, 281, 283, 286, 300], "twice": [20, 264, 286], "fg": [20, 300], "add_weighted_edges_from": [20, 170, 286], "125": [20, 135, 219, 230], "75": [20, 54, 59, 62, 63, 65, 72, 151, 209, 210, 211, 213, 293, 313], "375": 20, "eattr": [20, 286], "wt": 20, "attach": [20, 74, 135, 222, 225], "fridai": [20, 286, 289], "mondai": 20, "5pm": [20, 286], "2pm": [20, 286], "room": [20, 286], "714": [20, 286], "to_direct": [20, 148, 206, 207, 222, 224, 286], "representaion": 20, "dg": [20, 56, 69], "represent": [20, 48, 64, 69, 148, 284, 286, 297], "dgv": 20, "as_view": [20, 182, 183, 286], "shallow": 20, "out_edg": [20, 163, 286], "in_degre": [20, 60, 62, 138, 140, 143, 146, 217, 243, 244, 286], "predecessor": [20, 156, 229, 280, 286], "successor": [20, 122, 156, 223, 224, 229, 286], "out_degre": [20, 217, 243, 244, 286], "feel": [20, 34, 40], "inconsist": [20, 72], "inde": [20, 22], "lump": 20, "danger": 20, "probabl": [20, 34, 53, 60, 69, 75, 138, 143, 208, 209, 210, 211, 213, 215, 219, 222, 224, 225, 226, 227, 228, 233, 234, 235, 236, 237, 240, 242], "to_undirect": [20, 148, 222, 224, 286], "theoret": 20, "load_ldbc": [20, 54, 317], "foo": [20, 286], "famou": [22, 23, 285], "hadoop": [22, 299], "cetric": 22, "aim": [22, 54, 63, 66, 67, 68, 69, 71], "stop": [22, 27, 28, 70, 74, 151], "intergr": 22, "open": [22, 33, 34, 47, 49, 60, 68, 71, 146, 288, 298], "actual": [22, 23, 49, 50, 53, 54, 60, 79, 139, 237, 286, 289, 297, 307], "loader": [22, 49, 74, 84, 95, 291, 300, 314, 315], "vertexinputformat": 22, "edgeinputformat": 22, "load_from": [22, 27, 148, 293], "vformat": [22, 148], "p2pvertexinputformat": 22, "eformat": [22, 148], "p2pedgeinputformat": 22, "gs_test_dir": 22, "graphscope_sess": [22, 148], "31": [22, 23, 43, 44, 136, 137, 139, 319], "v_prop": [22, 74, 109], "vdata": 22, "e_prop": [22, 74, 109], "giraph_sssp": 22, "sourceid": 22, "faster": [22, 151], "toward": [22, 299], "offici": [22, 47, 49, 51, 68], "pl": 22, "snapshot": [22, 68, 71, 295, 299], "writabl": 22, "degrad": [22, 71], "procedur": [22, 29, 47, 48, 54, 84, 228], "except": [22, 40, 59, 62, 63, 65, 70, 139, 146, 164, 181, 185, 196, 205, 215, 217, 266, 286, 293, 298, 313], "right": [22, 144, 187, 196, 198, 219, 284], "inputformat": 22, "sparksess": 23, "gssparksess": 23, "experi": [23, 30, 34, 43, 48, 56, 67, 69, 71, 72, 208], "proceed": [23, 28, 208, 226], "side": [23, 34, 48, 53, 75, 93, 136, 189, 298], "venv": [23, 51, 65], "virtualenv": 23, "pyspark_venv": 23, "bin": [23, 36, 47, 49, 51, 54, 64, 65, 160, 299, 307, 311, 317], "pyspark_venv_g": 23, "tar": [23, 29, 36, 299], "gz": [23, 36, 288, 299], "upload": [23, 47], "pyspark_driver_python": 23, "pyspark_python": 23, "archiv": [23, 64, 148, 317], "oss": [23, 29, 36, 74, 141, 148, 299, 309, 310, 319], "beij": [23, 29, 36, 57, 69, 135, 299, 310], "fixm": 23, "yuansi": 23, "env": [23, 40, 51, 65, 141], "var": [23, 146, 299, 307, 319], "gs_jar": 23, "l": [23, 29, 32, 60, 69, 138, 206, 207, 209, 210, 211, 218, 219, 220, 222, 223, 224, 227, 234, 235, 236, 237, 239, 243, 244, 245, 246, 275, 278, 286, 307], "lib": [23, 36, 49, 82, 299], "7077": 23, "master_url": 23, "conf": [23, 47, 49, 74, 299, 317], "executor": [23, 32, 47, 49, 64, 307], "driver": [23, 28, 47, 112, 148, 299, 317], "2g": 23, "10g": [23, 311], "minregisteredresourcesratio": 23, "bfstest": 23, "placehold": 23, "url": [23, 148, 149, 299, 317], "rdd": 23, "pom": [23, 299], "xml": [23, 74, 299], "classifi": [23, 57, 59, 63, 65, 69, 146, 309], "sure": [23, 27, 28, 38, 49, 54, 140, 144, 146, 299], "conflict": [23, 51, 54, 59, 148, 276], "correctli": [23, 34, 40, 56, 151, 299], "resolv": [23, 40, 148, 300], "goal": [23, 48, 57, 66, 69, 298], "reloc": 23, "shadedpattern": 23, "vineyardmemori": 23, "memorystr": 23, "builder": [23, 39, 48, 192, 299], "config": [23, 28, 36, 47, 49, 110, 120, 128, 133, 134, 147, 150, 290, 293, 295, 299, 300, 317, 318], "socket": [23, 49, 74, 300], "bound": [23, 53, 54, 68, 111, 205, 298, 301], "vineyardsock": 23, "filepath": 23, "sock": [23, 49], "gssubmitjar": 23, "grapegraph": 23, "togsgraph": 23, "vd": 23, "classtag": 23, "grapegraphimpl": 23, "loadgraphtog": 23, "vfilepath": 23, "efilepath": 23, "numpartit": 23, "observ": [23, 40], "argument": [23, 53, 54, 60, 151, 153, 154, 155, 184, 192, 222, 229, 233, 234, 235, 236, 237, 264, 286, 289, 292, 293, 299, 300, 309], "shell": [23, 32, 75], "grow": [24, 43, 56, 64, 205, 215, 222, 223, 224, 285, 298], "capac": [24, 49, 286], "indivis": 24, "succinctli": 24, "oppos": [24, 60], "orient": [24, 60, 71, 143, 299], "googl": [24, 32, 67, 311], "powergraph": [24, 71, 72], "wa": [24, 27, 29, 34, 53, 54, 66, 72, 140, 151, 205, 220, 233, 234, 235, 236, 285, 299], "2010": [24, 72, 75, 151, 211, 278, 283], "sequenc": [24, 53, 54, 75, 148, 185, 205, 215, 216, 217, 218, 219, 220, 221, 237, 243, 244, 247, 280, 281, 286, 287, 300], "conceptu": 24, "behavior": [24, 53, 54, 77, 293], "becom": [24, 43, 54, 60, 286, 298, 299], "inact": 24, "again": [24, 40, 301], "termin": [24, 33], "halt": [24, 68, 77, 225], "individu": [24, 46, 47, 49, 63, 65], "messageiter": [24, 77], "mindist": 24, "issourc": 24, "vertex_id": [24, 43, 319], "inf": 24, "done": [24, 57, 60, 135, 146, 151, 248, 300], "getvalu": [24, 39], "mutablevalu": 24, "outedgeiter": 24, "getoutedgeiter": 24, "sendmessageto": 24, "votetohalt": 24, "drop": [24, 40, 299], "dramat": 24, "face": [24, 36, 48, 54, 67, 271, 272], "power": [24, 54, 56, 75, 151, 205, 215, 263, 286], "law": [24, 205, 215], "gather": [24, 293], "scatter": [24, 136], "accumul": [24, 60, 280], "reus": [27, 57, 60, 66, 75, 146, 148, 293, 295], "instruct": [27, 28, 29, 47, 49, 51, 65, 68, 74, 86, 140], "linux": [27, 28, 33, 36, 47, 59, 72, 78, 316], "maco": [27, 28, 33, 40, 51, 310, 312, 313, 316], "recommend": [27, 28, 33, 34, 40, 47, 51, 54, 57, 64, 65, 69, 140], "minikub": [27, 28, 299], "simplifi": [27, 47, 64, 65, 66, 68, 70, 135, 140, 298], "etcd": [27, 40, 47, 293, 295, 310], "vineyard_replica": 27, "vineyard_etcd_replica": 27, "vineyardctl": 27, "vineyard_deploy": 27, "create_namespac": 27, "namespac": [27, 28, 29, 35, 293], "kubectl": [27, 28, 29, 35, 40, 47, 299, 307, 312], "restart": [27, 46, 307], "ag": [27, 48, 50, 53, 54, 57, 69, 134, 135, 148, 292, 307, 317, 318], "etcd0": 27, "73m": 27, "vineyardd": [27, 49, 293], "5db59987f": 27, "vr2fg": 27, "copi": [27, 28, 29, 47, 64, 66, 71, 91, 151, 158, 162, 164, 165, 223, 229, 284, 286, 289, 297, 298, 299, 300, 301], "mount": [27, 40, 48, 145, 293, 310, 312, 313], "onto": 27, "vm": [27, 28, 74], "stai": 27, "aliv": 27, "testingdata": [27, 28, 310, 313], "k8s_namespac": [27, 128, 133, 293], "k8s_vineyard_deploy": [27, 128, 133, 293], "reload": [27, 299], "k8s_volum": [27, 28, 128, 133, 293, 310, 313], "hostpath": [27, 28, 47, 293, 310, 313], "mountpath": [27, 28, 293, 310, 313], "vineyard_id": [27, 148, 307], "last": [27, 28, 54, 140, 145, 148, 208, 280, 307], "new_sess": 27, "22731319746904674": 27, "softwar": [27, 47, 53, 56, 64, 148, 300], "successfulli": [27, 49, 57, 62, 205, 299], "workload": [28, 33, 43, 46, 48, 49, 51, 52, 54, 56, 64, 66, 72, 299, 301, 302], "grpc": [28, 36, 40, 74, 310, 312], "interact": [28, 29, 33, 38, 43, 44, 47, 48, 49, 52, 54, 56, 64, 66, 67, 70, 71, 73, 99, 103, 104, 130, 148, 227, 276, 291, 293, 313, 317], "acceler": [28, 298], "skip": [28, 32, 36, 68, 78, 299], "platform": [28, 30, 34, 46, 47, 48, 59, 70, 71, 72, 78, 135, 277, 293], "desktop": [28, 299, 313], "server": [28, 29, 47, 48, 49, 56, 60, 64, 66, 68, 73, 139, 144, 145, 146, 298, 299, 311, 317], "kube": [28, 293], "apivers": 28, "v1": [28, 32, 40, 53, 54, 59, 62, 63, 65, 68, 134, 251, 264, 289, 312, 313, 318], "certif": 28, "ca": 28, "crt": 28, "16": [28, 36, 49, 54, 72, 134, 136, 137, 139, 141, 242, 265, 279, 318], "2023": [28, 307], "44": [28, 72, 136, 137, 139, 279], "05": [28, 213, 226], "cst": 28, "sig": [28, 309], "io": [28, 38, 66, 67, 75, 145, 148, 236, 299, 302], "28": [28, 54, 57, 69, 72, 136, 137, 139, 283], "cluster_info": 28, "172": [28, 72], "21": [28, 36, 43, 54, 72, 75, 136, 137, 139, 259, 299], "67": [28, 72, 75], "111": 28, "8443": 28, "context_info": 28, "profil": [28, 317], "encapsul": [28, 56, 57, 134, 140, 293], "serv": [28, 40, 56, 66, 69, 136, 299], "entranc": [28, 140], "tag": [28, 38, 53, 54, 72, 213, 293, 299, 311], "intranet": 28, "internet": [28, 29, 36, 54, 67, 283, 285], "might": [28, 40, 151, 243, 286, 302], "k8s_image_registri": [28, 293], "k8s_image_repositori": [28, 293], "k8s_image_tag": [28, 293], "cannot": [28, 40, 53, 54, 57, 69, 71, 74, 75, 136, 148, 205, 244, 245, 293, 299, 301, 312], "fit": [28, 43, 47, 61, 62, 78], "increas": [28, 35, 40, 43, 136, 184, 185, 193, 215, 217, 225, 243, 246, 248, 298], "cpu": [28, 40, 47, 141, 293, 302, 312], "num_work": [28, 128, 133, 293, 317], "k8s_engine_cpu": [28, 128, 133, 293], "32": [28, 53, 72, 136, 137, 139, 147, 151], "k8s_engine_mem": [28, 40, 128, 133, 293, 312], "256gi": 28, "vineyard_shared_mem": [28, 40, 128, 133, 293, 312], "k8s_client_config": [28, 293], "disk": [28, 40, 47, 64, 299], "test_data": [28, 59, 63, 65, 310, 313], "constructor": [28, 44, 186, 188, 189, 191, 193, 195, 196, 198, 200, 201, 204, 215, 217, 218, 220, 222, 223, 224, 226, 230, 231, 232, 238, 239, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 281, 288], "expandus": [28, 310, 313], "expect": [28, 31, 34, 40, 78, 215, 217, 219, 289, 293], "monitor": [28, 29, 46, 56], "wait": [28, 40, 293], "finish": [28, 39, 62, 77, 136, 139], "remov": [28, 29, 46, 53, 54, 75, 78, 141, 158, 164, 166, 212, 215, 217, 219, 261, 264, 280, 286, 299], "remain": [28, 53, 67, 135, 140, 220, 247], "statefulset": [28, 299], "svc": [28, 47], "left": [28, 33, 75, 148, 151, 187, 219], "ideal": [29, 34, 71], "deploy_graphscope_on_self_managed_k8": 29, "chart": [29, 40, 47, 49, 54, 299, 310, 312], "minut": [29, 40, 48], "succe": 29, "past": [29, 48, 301], "noteport": 29, "node_ip": [29, 299], "ojsonpath": 29, "hostip": 29, "node_port": 29, "spec": [29, 74, 146], "nodeport": [29, 293, 299, 313], "echo": [29, 36], "listen": [29, 49, 74], "statement": [29, 140, 299], "ident": [29, 76, 91, 148, 182, 183, 187, 258, 278, 280, 286], "reconnect": [29, 293], "disconnect": [29, 151, 227, 228, 243, 246, 293], "sess2": 29, "comment": [29, 34, 43, 54, 135, 286, 288, 289, 314, 319], "homepag": 29, "remot": [29, 33, 47, 78, 149, 293, 317], "cater": [29, 64], "tgz": 29, "unzip": [29, 47, 317], "zxvf": 29, "ubuntu": [30, 40, 47, 51, 141, 310, 312, 316], "04": [30, 40, 47, 51, 54, 72, 141, 310, 312, 316], "cento": [30, 36, 40, 51, 72, 312, 316], "intel": [30, 51, 310, 316], "appl": [30, 40, 51, 286, 310, 312, 316], "silicon": [30, 51, 310], "openjdk": 30, "wheel": [30, 40, 46, 204, 270, 312, 315], "wish": [30, 34], "nightli": [30, 40, 312], "clean": [30, 43, 46, 51, 65, 78, 144, 298], "tidi": 30, "quickli": [30, 33, 56, 65, 69, 71, 146, 293], "insid": [30, 35, 40, 53, 54, 75, 82, 135, 147, 148, 261, 292, 293, 317], "apt": [30, 141], "y": [30, 36, 54, 75, 232, 233, 237], "jdk": [30, 55, 303, 309], "ipython": 30, "tensorflow": [30, 56, 57, 59, 62, 63, 64, 65, 69, 70, 134, 135, 136, 139, 140, 142, 146, 313], "tool": [30, 32, 33, 43, 47, 56, 58, 64, 233, 235, 295, 298, 299, 300, 316], "script": [30, 46, 71, 72, 103, 104, 134, 135, 146, 149, 310, 316], "dep": [30, 32, 310, 311], "easier": [30, 33, 34, 53, 66, 67, 140, 293], "fly": [30, 65], "clang": [30, 32, 51, 311], "essenti": [30, 53, 56, 70], "cmake": [30, 33, 36, 40, 141], "arm": 30, "preliminari": 30, "yet": [30, 53, 76, 243, 246, 286, 292, 299], "nativ": [31, 48, 64, 70, 71], "behind": [31, 62, 298, 301, 307], "scene": [31, 48, 62, 143], "lower": [31, 48, 53, 54, 68, 205, 212, 225], "cost": [31, 48, 54, 64, 68, 151, 299], "ownership": 31, "cach": [31, 57, 67, 71, 286], "layout": [31, 67, 299], "were": [31, 34, 54, 72, 237, 299], "ldbc": [31, 47, 49, 50, 51, 52, 56, 67, 71, 72, 314, 319], "benchmark": [31, 50, 54, 56, 67, 69, 71, 205], "outperform": [31, 56, 67, 69, 70, 71], "art": [31, 56, 67, 70, 72], "voderank": 31, "average_degree_assort": 31, "degree_assort": 31, "guidelin": [32, 34, 46], "promot": 32, "readabl": [32, 286], "qualiti": [32, 34, 69], "black": [32, 311], "lang": 32, "enforc": 32, "rule": [32, 48, 54, 60, 67, 138, 144, 148, 185, 295], "cpplint": 32, "flake8": 32, "fmt": 32, "lint": [32, 34], "makefil": 32, "graphscope_clformat": 32, "graphscope_cpplint": 32, "dev": [32, 46, 310, 311], "pushd": 32, "isort": 32, "diff": 32, "popd": 32, "interactive_engin": [32, 33, 49], "check_format": 32, "sh": [32, 36, 47, 141, 299, 316, 317], "13": [32, 36, 54, 72, 135, 136, 137, 139, 191, 232], "files_to_format": 32, "aosp": 32, "toolchain": [33, 58], "devcontain": 33, "json": [33, 47, 49, 293, 295, 299, 300], "setup": [33, 34, 40, 148, 293, 311], "visual": [33, 34, 64], "studio": 33, "collabor": [33, 64, 298], "stabl": [33, 75, 148, 295, 299, 316], "haven": [33, 54], "navig": [33, 298], "icon": 33, "bottom": [33, 196], "corner": 33, "window": [33, 54, 316], "reopen": 33, "marketplac": 33, "prompt": 33, "shift": [33, 54, 151, 251], "ctrl": 33, "suit": [33, 43, 49, 57, 69], "made": [33, 34, 47, 60, 72, 135, 138, 144, 151, 246, 298], "rebuild": 33, "subcommand": [33, 58], "assembli": [33, 49], "learning_engin": 33, "graphlearn": [33, 57, 59, 62, 63, 65, 134, 135, 136, 140, 141, 146, 147, 150, 293, 307, 313, 318], "opt": [33, 36, 48, 146], "compos": [33, 57, 60, 65, 67, 71], "alon": [33, 48, 50], "circul": [33, 189], "edit": [33, 34, 232, 269], "entrypoint": [33, 313], "plai": [33, 48, 55, 73, 145, 150, 303], "thank": [34, 43, 64], "interest": [34, 54, 56, 67, 299], "focus": [34, 54, 64, 70, 72, 140, 278, 299], "eager": [34, 75, 76, 126, 129, 130, 148, 149, 293], "contributor": [34, 279], "welcom": 34, "engag": [34, 64], "good": 34, "particip": 34, "join": [34, 54, 136, 146, 187, 190, 198, 205, 214, 215, 228, 230, 233, 234, 235, 236, 237, 245, 246, 286, 298], "ask": [34, 46], "question": [34, 46, 54, 312], "ve": [34, 47, 64], "hasn": [34, 54], "confirm": 34, "concis": [34, 50, 149], "descript": [34, 48, 60, 135, 138, 143, 144, 243, 251, 299], "relev": [34, 141, 180, 286, 297], "reproduc": [34, 286], "yourself": 34, "why": [34, 40, 46, 54, 75], "becaus": [34, 48, 54, 68, 69, 134, 137, 151, 281, 298, 299], "saw": 34, "incomplet": 34, "inaccur": 34, "knowledg": [34, 43, 57, 69, 142], "gain": 34, "submiss": 34, "fact": [34, 48, 243, 246], "page": [34, 46, 66, 75, 79, 196, 211, 275, 315], "button": 34, "tbf": [34, 45, 65, 72, 294, 305, 308], "isn": [34, 68, 139], "someon": 34, "approach": [34, 50, 56, 57, 64, 66, 69, 139, 215, 228, 283, 298], "spend": 34, "_": [34, 75, 148, 151, 286, 289, 309, 312, 314, 319], "secret": [34, 293, 310, 319], "accident": 34, "hook": 34, "titl": [34, 54, 63, 65], "grammar": 34, "spell": 34, "500": [34, 205], "word": [34, 54, 63, 65, 68, 69, 146, 148, 286], "42": [34, 54, 72, 136, 137, 139, 209, 211, 221, 279], "ticket": 34, "chines": 34, "everyon": 34, "beginn": 34, "patch": 34, "rest": [34, 286, 299], "attain": 34, "feedback": [34, 43], "discourag": 34, "rebas": 34, "workflow": [34, 43, 46, 64, 69, 70, 74], "upstream": [34, 140], "leas": 34, "ping": [34, 309], "await": 34, "unfamiliar": 34, "acronym": 34, "glossari": [34, 46, 279], "ci": 34, "approv": 34, "extra": [34, 40, 47, 49, 151, 247, 312], "date": [34, 54, 298, 299], "todo": [34, 66, 144], "dongz": 34, "potenti": [34, 57, 64, 298], "concern": [34, 64, 71, 298], "reach": [34, 40, 50, 54, 68, 140, 145, 148, 151, 228, 243, 246, 298], "action": 34, "realiti": [34, 140], "uncommon": 34, "infrastructur": 34, "vital": 34, "inspect": [34, 293], "determin": [34, 48, 53, 54, 57, 60, 67, 68, 74, 75, 136, 140, 231, 234, 235, 236, 293], "failur": [34, 71], "event": [35, 205], "involvedobject": 35, "warn": [35, 286], "pinpoint": 35, "log_level": [35, 128, 133, 293], "exec": [35, 299, 307], "diagnost": 35, "forward": [35, 57, 59, 60, 62, 63, 65, 69, 140, 313], "browser": [35, 54], "explain": [35, 54, 135, 293, 298, 317], "folder": [36, 298], "82": [36, 72], "boost": [36, 56, 64, 74], "perl": 36, "v3": [36, 68, 72], "24": [36, 47, 54, 72, 136, 137, 139, 253, 271, 279], "openmpi": [36, 72], "gflag": 36, "glog": 36, "arrow": [36, 39, 74, 85, 98, 148, 289], "74": [36, 72, 277], "openssl": [36, 40, 312], "zlib": 36, "protobuf": 36, "49": [36, 54, 72, 136, 137, 139], "libclang": 36, "curl": [36, 47], "lo": [36, 47], "czf": 36, "mkdir": [36, 40, 146, 312], "workdir": 36, "xzf": 36, "yum": 36, "scl": 36, "rh": [36, 39], "devtoolset": 36, "python38": 36, "bash": [36, 307, 311], "euxo": 36, "pipefail": 36, "dir": [36, 299], "ld_library_path": 36, "lib64": 36, "py2": 36, "py3": [36, 311], "manylinux2010_x86_64": 36, "whl": [36, 141, 144], "x86_64": 36, "licens": [36, 311], "dbuild_shared_lib": 36, "ON": 36, "dcmake_prefix_path": 36, "dcmake_install_prefix": 36, "boost_1_74_0": 36, "bootstrap": 36, "filesystem": [36, 135], "program_opt": 36, "regex": 36, "chrono": 36, "atom": [36, 299], "date_tim": 36, "b2": 36, "openssl_1_1_1h": 36, "fpic": 36, "cpp": 36, "darrow_comput": 36, "darrow_with_utf8proc": 36, "off": [36, 48, 64, 271, 299], "darrow_csv": 36, "darrow_filesystem": 36, "darrow_ipc": 36, "darrow_build_benchmark": 36, "darrow_build_exampl": 36, "darrow_build_integr": 36, "darrow_build_util": 36, "darrow_build_test": 36, "darrow_enable_timing_test": 36, "darrow_fuzz": 36, "darrow_jemalloc": 36, "darrow_build_shar": 36, "darrow_build_stat": 36, "mpi": [36, 74], "cxx": 36, "dlopen": 36, "nproc": 36, "dgrpc_instal": 36, "dgrpc_build_test": 36, "dgrpc_build_csharp_ext": 36, "dgrpc_build_grpc_csharp_plugin": 36, "dgrpc_build_grpc_node_plugin": 36, "dgrpc_build_grpc_objective_c_plugin": 36, "dgrpc_build_grpc_php_plugin": 36, "dgrpc_build_grpc_python_plugin": 36, "dgrpc_build_grpc_ruby_plugin": 36, "dgrpc_backwards_compatibility_mod": 36, "dgrpc_protobuf_provid": 36, "dgrpc_zlib_provid": 36, "dgrpc_ssl_provid": 36, "dopenssl_root_dir": 36, "dcmake_cxx_flag": 36, "fpermiss": 36, "v6d": [36, 46, 47], "dbuild_vineyard_test": 36, "dbuild_vineyard_python_bind": 36, "j4": 36, "dnetworkx": 36, "denable_java_sdk": 36, "dbuild_test": 36, "compris": [38, 63, 64, 68, 139], "busi": [38, 44, 48, 51, 54, 57, 64, 65, 71], "e2": [38, 265], "coupl": [38, 66, 71, 266, 295], "sai": 38, "\u6807\u7b7e": 39, "\u8868\u793a\u67d0\u4e00\u7c7b\u9876\u70b9\u6216\u8005\u8fb9": 39, "\u5c5e\u6027": [39, 317, 319], "\u8868\u793a\u9876\u70b9\u6216\u8fb9\u6240\u5173\u8054\u7684\u6570\u636e": 39, "\u539f\u59cbid": 39, "oid": [39, 74, 76, 77], "\u539f\u59cb\u6570\u636e\u96c6\u4e2d\u7684id": 39, "\u4e0d\u540c\u6807\u7b7e\u7684\u9876\u70b9\u5141\u8bb8\u6709\u76f8\u540c\u7684oid": 39, "\u5b50\u56feid": 39, "fid": [39, 74, 77, 110, 295], "\u5b50\u56fe\u7684\u552f\u4e00\u7f16\u53f7": 39, "\u5206\u533a\u5668": 39, "partition": [39, 144], "\u80fd\u591f\u786e\u5b9a\u9876\u70b9oid\u5230\u5206\u533aid": 39, "\u7684\u6620\u5c04": 39, "\u5b50\u56fe": 39, "\u901a\u8fc7\u5207\u8fb9\u5f97\u5230\u7684\u5b50\u56fe": 39, "\u5b58\u50a8\u4e86\u9876\u70b9": 39, "\u8fb9": [39, 309], "\u9876\u70b9\u6570\u636e": 39, "\u8fb9\u6570\u636e\u7b49\u4fe1\u606f": 39, "\u5185\u90e8\u70b9": 39, "\u5c5e\u4e8e\u672cfragment\u7684\u9876\u70b9": 39, "\u5916\u90e8\u70b9": 39, "\u4e0d\u5c5e\u4e8e\u672cfragment\u7684\u9876\u70b9": 39, "\u672c\u5730id": 39, "lid": [39, 74, 110], "\u53ea\u5728\u67d0\u4e2afragment\u5185\u90e8\u6709\u610f\u4e49": 39, "\u5168\u5c40id": 39, "gid": [39, 74, 110], "\u80fd\u591f\u8868\u793a\u4efb\u610f\u4e00\u4e2a\u9876\u70b9": 39, "\u88abfragment\u5171\u8bc6": 39, "\u7528\u4e8e\u5b58\u50a8gid": 39, "oid\u7684\u6620\u5c04\u5173\u7cfb": 39, "\u7684\u8282\u70b9": 39, "\u5b58\u5728\u4ee5\u4e0b\u7f16\u7801\u65b9\u5f0f": 39, "gid\u7f16\u7801": 39, "offset": [39, 74, 137, 145, 189], "\u5176\u4e2d": [39, 309, 314], "\u548c": [39, 140, 309, 311, 312, 313, 314, 316, 317, 318, 319], "\u5171\u540c\u7ec4\u6210": 39, "\u67d0\u4e00\u7c7b\u9876\u70b9\u5728\u67d0\u4e2a": 39, "\u7684\u9876\u70b9": 39, "\u5e8f\u53f7": 39, "lid\u7f16\u7801": 39, "\u586b\u5145": 39, "\u603b\u662f": 39, "\u6309\u7167\u6267\u884c\u6d41\u7a0b\u7f16\u53f7": 39, "\u63cf\u8ff0\u4e86\u8f7d\u56fe\u7684\u4e3b\u8981\u903b\u8f91": 39, "\u5206\u4e3ahashpartitioner\u548csegmentedpartiton": 39, "\u521d\u59cb\u5316\u4ed6\u4eec\u9700\u8981\u7ed9\u51fafragment\u7684\u6570\u91cf": 39, "segmentedpartitioner\u8fd8\u9700\u7ed9\u51fa\u5168\u90e8\u7684oid": 39, "\u6bcf\u4e2a\u8fdb\u7a0b\u8bfb\u53d6\u4e00\u90e8\u5206\u70b9": 39, "\u8fb9\u6587\u4ef6": 39, "\u5f97\u5230\u591a\u4e2avertex": 39, "\u548cedg": 39, "etabl": 39, "\u5176\u4e2dvtable\u6309\u7167\u9876\u70b9\u6807\u7b7e": 39, "\u5206\u7ec4": 39, "etable\u5148\u6309\u7167\u8fb9\u6807\u7b7e": 39, "\u540c\u4e00\u4e2a\u8fb9\u6807\u7b7e\u4e0b\u9762\u53c8\u6309\u7167src\u548cdst\u7684\u9876\u70b9\u6807\u7b7e\u5206\u7ec4": 39, "\u539f\u59cb\u7684\u9876\u70b9\u8868": 39, "\u8fb9\u8868": 39, "\u6bcf\u4e2a\u8fdb\u7a0b\u6301\u6709\u90e8\u5206\u7684\u6570\u636e": 39, "partial_v_t": 39, "partial_e_t": 39, "num": [39, 49, 53, 54, 147, 298], "table\u5305\u542boid": 39, "table\u5305\u62ecsrc\u548cdst\u7684oid": 39, "\u8bbf\u95eevtable\u7684oid\u5217": 39, "\u6839\u636eoid\u67e5\u8be2partit": 39, "\u5c06\u8868\u4e2d\u7684\u8bb0\u5f55\u5206\u53d1\u7ed9\u9876\u70b9\u7684\u62e5\u6709\u8005": 39, "\u4eceshuffle\u540e\u7684vtable\u53d6\u51faoid\u6267\u884cal": 39, "gather\u64cd\u4f5c": 39, "\u4f7f\u5f97\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u80fd\u591f\u83b7\u53d6\u7684\u6240\u6709oid": 39, "\u6839\u636efrag\u6570\u91cf": 39, "label\u6570\u91cf\u548c\u5168\u90e8oid": 39, "\u6bcf\u4e2a\u8fdb\u7a0b\u6784\u5efavertex": 39, "fid_t": [39, 74], "fnum_": 39, "label_id_t": [39, 74], "label_num_": 39, "hashmapbuild": 39, "oid_arrays_": 39, "cur_gid": 39, "id_parser_": 39, "generateid": 39, "\u8d77\u59cbgid": 39, "int64_t": [39, 47, 74, 75, 148, 301, 319], "vnum": 39, "length": [39, 43, 53, 54, 68, 75, 138, 151, 190, 192, 197, 219, 240, 244, 250, 272, 281, 286, 319], "\u904d\u5386\u5168\u90e8\u5185\u90e8\u70b9": 39, "\u751f\u6210gid": 39, "emplac": 39, "getview": 39, "\u6309\u7167elabel\u904d\u5386\u6bcf\u4e00\u5f20edg": 39, "\u83b7\u53d6\u5230src\u548cdst\u7684label": 39, "\u8bbf\u95ee\u6bcf\u4e2asrc\u7684oid": 39, "\u6839\u636epartitioner\u83b7\u53d6fid": 39, "\u6839\u636efid": 39, "id\u548coid\u67e5\u8be2gid": 39, "\u751f\u6210gid\u6570\u7ec4": 39, "\u5904\u7406dst\u7684\u903b\u8f91\u540c\u7406": 39, "\u5f97\u5230src\u548cdst\u4e24\u4e2agid\u6570\u7ec4\u540e": 39, "\u66ff\u6362\u6389\u539fetable\u7684oid\u6570\u7ec4": 39, "\u5bf9etable\u6267\u884cshuffl": 39, "\u5c06\u76f8\u5e94\u7684\u884c\u4f20\u8f93\u7ed9\u6b63\u786e\u7684\u8fdb\u7a0b": 39, "\u5c06shuffle\u8fc7\u7684vtable\u548cetable\u9001\u7ed9basicarrowfragmentbuilder\u6784\u5efacsr": 39, "\u5904\u7406\u9876\u70b9": 39, "\u521d\u59cb\u5316id": 39, "parser": [39, 48], "\u521d\u59cb\u5316ivnum": 39, "ovnum\u548ctvnum\u6570\u7ec4": 39, "\u6309\u7167vertex": 39, "label\u5206\u7ec4": 39, "\u904d\u5386\u6bcf\u4e00\u79cd\u9876\u70b9": 39, "\u5411vertex": 39, "map\u67e5\u8be2\u672cfragment\u7684\u5185\u90e8\u70b9\u6570\u91cf": 39, "\u5e76\u8bbe\u7f6e\u5bf9\u5e94\u7684ivnum": 39, "\u5c06vertex": 39, "table\u5408\u5e76\u6210\u4e00\u4e2achunk\u4fbf\u4e8e\u540e\u7eed\u8bbf\u95ee": 39, "vid_parser_": 39, "vertex_label_num_": 39, "vertex_tables_": 39, "resiz": 39, "ivnums_": 39, "ovnums_": 39, "tvnums_": 39, "combinechunk": 39, "default_memory_pool": 39, "vm_ptr_": 39, "getinnervertexs": [39, 74], "fid_": 39, "\u5904\u7406\u8fb9\u5305\u62ec\u4ee5\u4e0b5\u4e2a\u6b65\u9aa4": 39, "\u904d\u5386\u6bcf\u4e00\u79cd\u8fb9": 39, "\u901a\u8fc7src": 39, "gid\u5217\u548cdst": 39, "gid\u5217\u67e5\u8be2\u51fa\u672cfragment\u6240\u6709\u7684\u5916\u90e8\u70b9": 39, "\u5e76\u6309\u7167vertex": 39, "edge_t": [39, 135, 146], "table\u5408\u5e76\u6210\u4e00\u4e2achunk": 39, "\u627e\u51fa\u672cfragment\u5168\u90e8\u5916\u90e8\u70b9\u7684gid": 39, "collect_outer_vertic": 39, "dynamic_pointer_cast": [39, 300], "converttoarrowtyp": [39, 74], "arraytyp": [39, 74], "chunk": [39, 120], "\u6839\u636e\u5916\u90e8\u70b9\u7684gid": 39, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u6784\u5efagid\u5230lid\u7684\u6620\u5c04\u4e0e\u53bb\u91cd\u7684gid\u6570\u7ec4": 39, "\u5916\u90e8\u70b9\u7684lid\u7531label": 39, "id\u548c\u9876\u70b9\u5e8f\u53f7\u7ec4\u6210": 39, "\u9876\u70b9\u5e8f\u53f7\u4eceivnum\u5f00\u59cb\u8ba1\u6570": 39, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u586b\u5145ovnum\u548ctvnum": 39, "ovg2l_maps_": 39, "ovgid_lists_": 39, "cur_list": 39, "collected_ovgids_": 39, "\u6392\u5e8fgid": 39, "cur_map": 39, "buildertyp": 39, "vec_build": 39, "\u751f\u6210\u5916\u90e8\u70b9\u7684lid": 39, "\u5176\u4e2dfid\u4e3a0": 39, "offset\u4eceivnum\u5f00\u59cb\u7f16\u53f7": 39, "cur_id": 39, "\u5904\u7406\u7b2c\u4e00\u4e2a\u5143\u7d20": 39, "append": [39, 54, 62, 63, 65, 77, 134, 145, 146, 217, 280, 313, 318], "cur_list_length": 39, "\u627e\u5230\u4e0d\u91cd\u590d\u7684\u4e24\u4e2agid": 39, "\u6839\u636e\u4e0a\u4e00\u6b65\u6784\u6210\u7684gid\u5230lid\u7684\u6620\u5c04": 39, "\u5c06src\u548cdst\u7684gid\u90fd\u8f6c\u6362\u6210lid": 39, "\u5220\u9664edg": 39, "table\u7684src\u5217\u548cdst\u5217": 39, "gid\u5230lid\u8f6c\u6362\u51fd\u6570": 39, "generate_local_id_list": 39, "gid_list": 39, "lid_list": 39, "vec": 39, "getfid": 39, "\u751f\u6210\u5185\u90e8\u70b9lid": 39, "getlabelid": 39, "getoffset": 39, "\u67e5\u8be2g2l": 39, "\u901a\u8fc7gid\u627e\u5230\u5916\u90e8\u70b9lid": 39, "\u6839\u636esrc\u548cdst\u5217\u7684gid\u751f\u6210lid": 39, "edge_src_": 39, "edge_dst_": 39, "table\u7684src\u5217\u548cgid\u5217": 39, "\u53ea\u4fdd\u7559\u5c5e\u6027": 39, "tmp_table0": 39, "removecolumn": 39, "edge_tables_": 39, "\u6784\u5efacsr": 39, "\u5bf9\u4e8e\u6709\u5411\u56fe": 39, "\u6784\u5efa\u51fa\u8fb9\u548c\u5165\u8fb9\u4e24\u4e2acsr": 39, "\u9996\u5148\u6784\u5efa\u51fa\u8fb9csr": 39, "\u7edf\u8ba1\u6bcf\u79cd\u6e90\u9876\u70b9\u7684\u51fa\u5ea6": 39, "\u6784\u5efarow": 39, "offset\u6570\u7ec4": 39, "\u8bbf\u95ee\u6bcf\u6761\u8fb9": 39, "\u4f7f\u7528row": 39, "offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u76ee\u7684\u9876\u70b9nbr\u7684\u5730\u5740": 39, "\u586b\u5145dst": 39, "lid\u548ceid\u5230nbr": 39, "\u6309\u7167\u76ee\u7684\u9876\u70b9\u7684lid": 39, "\u5c06\u6bcf\u4e00\u4e2a\u6e90\u9876\u70b9\u7684\u76ee\u7684\u9876\u70b9\u6392\u5e8f": 39, "generate_directed_csr": 39, "vid_array_t": [39, 74], "src_list": 39, "dst_list": 39, "fixedsizebinaryarrai": 39, "int64arrai": 39, "edge_offset": 39, "actual_edge_num": 39, "v_label": [39, 74, 295], "edge_num": [39, 110, 313, 317], "src_list_ptr": 39, "raw_valu": 39, "dst_list_ptr": 39, "\u8ba1\u7b97\u6e90\u9876\u70b9\u7684\u5ea6": 39, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u6784\u5efarow": 39, "tvnum": 39, "offset_vec": 39, "degree_vec": 39, "int64build": 39, "podarraybuild": 39, "nbr_unit_t": [39, 74], "edge_build": 39, "v_offset": 39, "\u83b7\u53d6\u76ee\u7684\u9876\u70b9\u6307\u9488": 39, "ptr": 39, "mutablepoint": 39, "\u586b\u5145\u76ee\u7684\u9876\u70b9lid": 39, "eid": [39, 148, 299], "\u5176\u4e2deid\u7528\u4e8e\u4e4b\u540e\u83b7\u53d6\u8fb9\u4e0a\u7684\u5c5e\u6027": 39, "vid": [39, 74, 148], "eid_t": [39, 74], "\u66f4\u65b0offset": 39, "\u6307\u5411\u6e90\u9876\u70b9\u7684\u4e0b\u4e00\u6761\u51fa\u8fb9": 39, "\u5bf9\u4e34\u63a5\u70b9\u6309\u7167lid\u6392\u5e8f": 39, "offsets_ptr": 39, "lh": 39, "\u6784\u5efa\u5165\u8fb9csr\u548c\u51fa\u8fb9\u540c\u7406": 39, "\u5bf9\u4e8e\u65e0\u5411\u56fe": 39, "\u51fa\u8fb9\u548c\u5165\u8fb9\u5171\u7528\u4e00\u4e2acsr": 39, "\u903b\u8f91\u548c\u6709\u5411\u56fe\u7c7b\u4f3c": 39, "\u4f46\u662f\u8981\u540c\u65f6\u7edf\u8ba1\u6e90\u9876\u70b9\u548c\u76ee\u7684\u9876\u70b9\u7684\u5ea6\u6765\u6784\u5efarow": 39, "offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u6e90\u9876\u70b9\u7684nbr\u586b\u5145\u5165\u8fb9\u7684src": 39, "lid\u548ceid": 39, "\u540c\u65f6\u8fd8\u8981\u4f7f\u7528offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u76ee\u7684\u9876\u70b9\u7684nbr\u586b\u5145dst": 39, "\u5c01\u88c5": 39, "seal": [39, 56, 69], "\u51c6\u5907\u597d\u9876\u70b9\u6570\u91cf": 39, "ovgid\u548cg2l_map\u540e": 39, "\u5c06\u4ed6\u4eec\u5c01\u88c5\u6210\u5404\u79cdvineyardobject": 39, "\u6839\u636emetadata\u4ecevineyard\u67e5\u8be2\u548c\u6784\u5efa\u4ee5\u4e0b\u6570\u636e\u7ed3\u6784\u4f5c\u4e3aarrowfragment\u7684\u6210\u5458": 39, "\u4e5f\u5c31\u662f\u8bf4": [39, 310], "\u4ee5\u4e0b\u6570\u636e\u90fd\u662f\u5b58\u50a8\u5728vineyard\u4e2d\u7684": 39, "\u5f53\u524dfragment": 39, "fragment\u603b\u6570": 39, "directed_": 39, "\u662f\u5426\u4e3a\u6709\u5411\u56fe": 39, "\u9876\u70b9\u79cd\u7c7b\u6570\u91cf": 39, "edge_label_num_": 39, "\u8fb9\u79cd\u7c7b\u6570\u91cf": 39, "propertygraphschema": 39, "schema_": 39, "shcema": 39, "\u5185\u90e8\u548c\u5916\u90e8\u70b9\u603b\u6570": 39, "\u9876\u70b9\u5c5e\u6027\u8868": 39, "\u4e0d\u5305\u542bid\u5217": 39, "\u5916\u90e8\u70b9gid": 39, "hashmap": 39, "gid\u5230lid\u6620\u5c04": 39, "\u8fb9\u5c5e\u6027": 39, "ie_lists_": 39, "oe_lists_": 39, "csr\u7ed3\u6784\u7684column": 39, "\u5bf9\u4e8e\u65e0\u5411\u56fe\u53ea\u6709oe_lists_\u88ab\u4f7f\u7528": 39, "ie_offsets_lists_": 39, "oe_offsets_lists_": 39, "csr\u7ed3\u6784\u7684row": 39, "vertex_map_t": [39, 74], "\u5269\u4e0b\u7684\u6210\u5458\u5c06\u6839\u636e\u4ee5\u4e0a\u4fe1\u606f\u6765\u6784\u5efa": 39, "edge_tables_columns_": 39, "\u6bcf\u4e00\u79cd\u8fb9\u7684\u5c5e\u6027\u5217\u5730\u5740": 39, "flatten_edge_tables_columns_": 39, "\u540c\u4e0a": 39, "vertex_tables_columns_": 39, "\u6bcf\u4e00\u79cd\u9876\u70b9\u7684\u5c5e\u6027\u5217\u5730\u5740": 39, "ie_ptr_lists_": 39, "oe_ptr_lists_": 39, "\u6bcf\u4e00\u79cd\u9876\u70b9\u7684\u6bcf\u4e00\u79cd\u5165": 39, "\u51fa\u8fb9\u7684\u8d77\u59cb\u5730\u5740": 39, "\u4e5f\u5c31\u662fcolumn": 39, "index\u7684\u8d77\u59cb\u5730\u5740": 39, "ie_offsets_ptr_lists_": 39, "oe_offsets_ptr_lists_": 39, "\u51fa\u8fb9\u7684row": 39, "offset\u8d77\u59cb\u5730\u5740": 39, "offset\u7684\u8d77\u59cb\u5730\u5740": 39, "\u4ee5\u4e0b\u662f\u6bcf\u4e00\u79cd\u9876\u70b9": 39, "\u6bcf\u4e00\u79cd\u8fb9\u7684\u6e90\u9876\u70b9fid": 39, "\u76ee\u7684\u9876\u70b9fid": 39, "\u6e90\u9876\u70b9\u548c\u76ee\u7684\u9876\u70b9fid\u6784\u6210\u7684csr\u7ed3\u6784": 39, "idst_": 39, "odst_": 39, "iodst_": 39, "idoffset_": 39, "odoffset_": 39, "iodoffset_": 39, "\u4ee5\u4e0b\u5185\u5bb9\u63cf\u8ff0\u4e86\u8bbf\u95ee\u9876\u70b9": 39, "\u9876\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e\u7684api\u548c\u5b9e\u73b0": 39, "\u5185\u90e8\u70b9\u8303\u56f4\u7531\u8d77\u59cblid\u548c\u7ec8\u6b62lid\u6784\u6210": 39, "lid\u7684\u7f16\u7801\u5305\u542b\u4e86\u9876\u70b9label": 39, "id\u548c\u9876\u70b9\u5e8f\u53f7": 39, "\u5185\u90e8\u70b9\u7684\u9876\u70b9\u5e8f\u53f7\u8303\u56f4\u4e3a": 39, "ivnum": 39, "\u5916\u90e8\u70b9\u5e8f\u53f7\u8303\u56f4\u4e3a": 39, "\u5168\u90e8\u9876\u70b9\u5e8f\u53f7\u4e3a": 39, "vertex_range_t": [39, 74], "label_id": [39, 76, 77, 110], "\u751f\u6210lid\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u8303\u56f4": 39, "\u7ed3\u675f\u8303\u56f4\u662f\u5f00\u533a\u95f4": 39, "\u6839\u636e\u9876\u70b9lid\u83b7\u53d6\u9876\u70b9\u7c7b\u578b": 39, "\u5c5e\u6027id": 39, "\u5217\u53f7": 39, "\u83b7\u53d6\u5230\u5217\u6307\u9488": 39, "\u7136\u540e\u4ecelid\u83b7\u53d6\u5230\u9876\u70b9\u5e8f\u53f7": 39, "\u884c\u53f7": 39, "\u5373\u53ef\u8bbf\u95ee\u5230\u9876\u70b9\u7684\u67d0\u4e2a\u5c5e\u6027": 39, "getdata": [39, 74], "prop_id_t": [39, 74], "prop_id": 39, "property_graph_util": [39, 74], "valuegett": 39, "\u8bbf\u95ee\u51fa\u8fb9\u9700\u8981\u7ed9\u51fa\u6e90\u9876\u70b9lid\u548c\u67d0\u4e00\u79cd\u8fb9\u7684\u7c7b\u578b": 39, "\u800c\u6e90\u9876\u70b9\u7684\u7c7b\u578b\u5df2\u7ecf\u88ablid\u7f16\u7801\u6240\u5305\u542b": 39, "\u6240\u4ee5\u4e0d\u7528\u7ed9\u51fa": 39, "adj_list_t": [39, 74], "e_label": [39, 74], "\u83b7\u53d6\u6e90\u9876\u70b9lid": 39, "\u83b7\u53d6\u6e90\u9876\u70b9\u7c7b\u578b": 39, "\u83b7\u53d6\u6e90\u9876\u70b9\u5e8f\u53f7": 39, "offset_arrai": 39, "\u8bbf\u95eerow": 39, "oe": 39, "\u83b7\u53d6\u51fa\u8fb9\u8d77\u59cb\u5730\u5740": 39, "\u751f\u6210adjlist\u5bf9\u8c61": 39, "\u5206\u522b\u4e3a\u51fa\u8fb9\u8d77\u59cb\u5730\u5740": 39, "\u7ed3\u675f\u5730\u5740": 39, "\u8fb9\u5c5e\u6027\u5217\u5730\u5740": 39, "\u548c\u51fa\u8fb9\u540c\u7406": 39, "\u53ea\u9700\u8981\u628aoe\u76f8\u5173\u53d8\u91cf\u540d\u6362\u6210ie\u5373\u53ef": 39, "ie": 39, "\u56e0\u4e3a\u5728adjlist\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u51fa\u8fb9\u5c5e\u6027\u8868\u7684\u8d77\u59cb\u5730\u5740": 39, "\u6bcf\u6761\u51fa\u8fb9\u8fd8\u5305\u542b\u4e86\u8fb9id": 39, "\u5bf9\u5e94\u5230\u884c\u53f7": 39, "\u56e0\u6b64\u518d\u7ed9\u51fa\u5c5e\u6027\u7684\u5217\u53f7\u5c31\u80fd\u591f\u53bb\u5f97\u5230\u5177\u4f53\u7684\u6570\u636e": 39, "\u4f8b\u5982": [39, 309, 313, 317, 319], "\u83b7\u53d6edg": 39, "struct": [39, 74, 209, 242], "\u83b7\u53d6\u5c5e\u6027\u5217\u7684\u5730\u5740": 39, "\u548ceid\u5c31\u80fd\u591f\u83b7\u53d6\u5230\u5177\u4f53\u7684\u5c5e\u6027": 39, "edata_arrays_": 39, "nbr_": 39, "post": [40, 54, 140, 205, 319], "what": [40, 46, 47, 54, 68, 145, 232, 286, 292, 298], "mininum": 40, "8g": 40, "18": [40, 51, 54, 72, 136, 137, 139, 151, 209, 258, 263, 267, 269, 272, 278, 309, 312, 316], "15": [40, 54, 62, 63, 72, 136, 137, 139, 140, 246, 268, 279, 286, 293, 312], "depoly": 40, "enssenti": 40, "No": [40, 53, 286], "debug": [40, 46, 135, 140, 293, 299, 307], "silent": [40, 286, 307], "helm": [40, 46, 47, 299, 310, 312], "did": [40, 146], "role": [40, 48, 55, 66, 136, 145, 151, 237, 275, 283, 299, 303, 307, 312], "rolebind": [40, 312], "uninstal": [40, 46, 47, 312], "recycl": 40, "alloc": [40, 58, 62], "databas": [40, 46, 48, 54, 64, 66, 70, 72, 299, 309], "seem": [40, 54], "stuck": 40, "reason": [40, 50, 53, 57, 135, 136, 266], "consumpt": 40, "poor": [40, 142], "acquir": 40, "request": [40, 46, 74, 103, 104, 136, 144, 147, 149, 180, 286, 293, 312], "mostli": [40, 49, 111], "visibl": [40, 77], "engnin": 40, "volum": [40, 47, 209, 210, 211, 221, 230, 275, 293, 298], "cloud": [40, 46, 70, 71, 299], "k8s_vineyard_mem": [40, 128, 133, 293, 312], "metadata": [40, 74, 148, 286, 295, 299], "blob": [40, 309], "shape": [40, 59, 60, 63, 65, 74, 76, 137, 138, 139, 140, 143, 146, 150, 208, 313], "forth": 40, "smaller": [40, 54, 72, 149, 151, 207, 208, 212], "Its": [40, 66, 265, 298], "shared_mem": [40, 312], "grpcio": [40, 312], "grpc_python_build_system_openssl": [40, 312], "scipi": [40, 233, 234, 235, 236, 286, 289, 312], "anaconda": [40, 312], "workaround": 40, "openbla": 40, "tri": [40, 43, 62, 68, 215, 221], "pkgconfig": 40, "cmake_prefix_path": 40, "brew": 40, "permiss": [40, 82, 312], "deni": [40, 82, 312], "pv": [40, 47, 299, 312], "nf": [40, 145, 312], "appear": [40, 48, 54, 75, 191, 193, 195, 198, 200, 227, 228, 286, 312], "kafka": [40, 295, 312], "zookeep": [40, 312], "crashloopbackoff": [40, 312], "bitnami": [40, 312], "755": 40, "1001": [40, 299], "brutal": 40, "chmod": [40, 47, 312], "777": [40, 72, 312], "eleg": [40, 43], "grant": [40, 283], "timeout": [40, 49], "rais": [40, 48, 75, 82, 84, 120, 128, 133, 140, 148, 149, 151, 157, 166, 170, 171, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 225, 227, 230, 231, 232, 243, 246, 278, 281, 282, 286, 289, 293], "timeout_second": [40, 128, 133, 293, 312], "600": [40, 72, 293, 312], "enterpris": 40, "proxi": [40, 312], "properli": [40, 50], "wrong": 40, "resolut": [40, 299], "occup": 40, "hostnam": [40, 312], "no_proxi": [40, 312], "suffix": 40, "flush": 40, "stream": [40, 53, 54, 57, 140, 145, 148], "forcibli": 40, "contact": 40, "slack": [40, 312], "dingtalk": [40, 312], "happi": 40, "90": [42, 72], "brief": 42, "traffic": 43, "web": [43, 75, 151, 219, 233, 238, 279], "ever": [43, 60], "amount": [43, 58, 69, 138, 140, 142], "insight": [43, 67, 69], "hidden": [43, 67, 69, 134, 318], "attract": 43, "attent": [43, 69, 140], "compuatit": 43, "difficult": [43, 135, 145, 299], "obstacl": 43, "attempt": [43, 47, 67, 68, 71, 286], "curv": [43, 67], "hard": [43, 53, 61, 62, 247, 298], "complic": [43, 48, 54, 76], "sql": [43, 46, 48, 54], "deep": [43, 60, 64, 134, 139, 140, 142, 162, 165, 274, 286], "gnn": [43, 46, 57, 59, 60, 63, 64, 65, 70, 71, 134, 138, 139, 140, 142, 143, 293, 315, 318], "train": [43, 46, 57, 59, 60, 61, 64, 65, 70, 71, 73, 136, 139, 140, 142, 143, 146, 150, 293, 313, 318], "seamlessli": [43, 47, 51, 56, 64, 70, 71], "fist": 43, "establish": [43, 299], "interpret": [43, 64, 151], "mount_dataset": 43, "ran": [43, 62], "p2p_network": 43, "haslabel": [43, 50, 51, 54, 317], "embed": [43, 57, 63, 65, 69, 135, 142], "inter": [43, 147, 205, 208], "wherea": [43, 205, 298], "numpi": [43, 54, 57, 74, 76, 90, 102, 112, 137, 138, 140, 141, 142, 143, 146, 148, 150, 151, 278, 286, 289, 315], "datafram": [43, 76, 89, 101, 112, 115, 148, 286, 309, 319], "head": [43, 53, 54], "csv": [43, 47, 148, 286, 289, 297, 299, 300, 313, 314, 319], "creationd": [43, 54, 314, 319], "locationip": [43, 319], "browserus": [43, 54, 319], "618475290625": 43, "2011": [43, 54, 219], "08": [43, 72, 151], "17t14": 43, "26": [43, 54, 72, 136, 137, 139, 235], "59": [43, 72], "961": 43, "0000": [43, 54], "210": [43, 72, 282], "17": [43, 54, 72, 136, 137, 139, 309], "48": [43, 72, 136, 137, 139, 238, 239, 285], "chrome": [43, 54], "ye": [43, 286], "618475290626": 43, "17t11": 43, "570": 43, "comment_replyof_com": 43, "274877907301": 43, "274877907299": 43, "274877907302": 43, "pd": [43, 319], "df_v": [43, 309, 319], "read_csv": [43, 319], "sep": [43, 319], "df_e": [43, 319], "add_vertic": [43, 148, 286, 289, 290, 313, 314, 319], "direction": 44, "retain_oid": [44, 47, 74, 126, 148, 300, 319], "oid_typ": [44, 74, 75, 104, 126, 148, 319], "int32_t": [44, 148, 319], "exce": [44, 244, 245], "infer": [44, 47, 69, 70], "benefit": [44, 67, 298], "super": [44, 75, 136, 140], "precis": [44, 69, 278], "deal": [44, 67, 138], "technologi": [46, 48, 70], "graphcomput": [46, 317], "gl": [46, 60, 70, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147], "neural": [46, 57, 64, 65, 70, 71, 73, 134, 135, 138, 140, 142, 146], "constraint": [46, 54], "motiv": 46, "posit": [46, 54, 69, 70, 75, 134, 140, 151, 196, 215, 217, 218, 220, 221, 225, 233, 234, 235, 236, 237, 281, 284, 298, 301], "gart": 46, "graphar": 46, "groot": [46, 64, 68, 71], "gum": 46, "maxgraph": [46, 70, 315], "deprec": [46, 148, 166, 264, 293], "gaia": [46, 64, 317], "pegasu": [46, 49, 64], "frequent": [46, 64, 67, 299], "prerequisit": 46, "faq": 46, "syntact": [46, 51, 68], "sugar": [46, 51, 68], "neg": [46, 56, 57, 134, 138, 140, 142, 146, 151, 170, 248], "gsl": [46, 56, 57, 64, 136, 137, 138, 139, 143, 150], "gap": 46, "oltp": [46, 64, 66], "style": [46, 56, 64, 291], "rust": [46, 66, 298, 299], "linter": 46, "checker": 46, "bug": 46, "review": [46, 64, 75, 151, 215, 233], "gcc": [46, 51, 72, 316], "parti": [46, 64, 266], "too": [47, 54, 71, 136, 205, 286], "wonder": 47, "throughout": [47, 48, 53], "smoothli": 47, "easiest": 47, "websit": [47, 67, 205], "untar": 47, "cp": [47, 49, 283, 298], "tree": [47, 66, 186, 188, 196, 216, 222, 224, 234, 235, 236, 249, 250, 287, 299, 319], "claim": [47, 268, 298, 299], "pvc": [47, 293, 299], "your_release_nam": 47, "frontend": [47, 49, 51, 299, 307], "grep": 47, "awk": 47, "gremlinport": 47, "consol": [47, 49, 56, 68, 149, 299, 315], "sy": [47, 146], "gremlin_python": [47, 299], "graph_travers": 47, "__": [47, 53, 54, 65, 140, 313, 317], "driver_remote_connect": 47, "driverremoteconnect": [47, 299], "gremlin_endpoint": [47, 299], "remoteconn": [47, 299], "withremot": [47, 299], "assert": [47, 75, 298], "dlcdn": 47, "x": [47, 54, 72, 75, 134, 140, 146, 151, 189, 222, 230, 232, 233, 237, 261, 318], "submit": [47, 48, 54, 65, 135, 136, 149, 295, 299, 313], "subsequ": [47, 48, 49, 75, 135, 136], "pertain": 47, "littl": [47, 53, 54], "v6d_modern_load": [47, 49], "data_path": [47, 300], "store_data_path": [47, 49], "header_row": [47, 148, 300], "delimit": [47, 148, 288, 300, 314], "src_label": [47, 148, 289, 293, 299, 300, 313, 314], "dst_label": [47, 148, 289, 293, 299, 300, 313, 314], "thing": [47, 140], "notic": [47, 54, 64, 68, 140, 148, 279, 286, 301], "key1": 47, "value1": [47, 319], "key2": 47, "value2": 47, "header": [47, 148, 298, 299], "token": [47, 53, 293], "row": [47, 57, 69, 135, 148, 279, 299], "column_typ": 47, "filed1": 47, "filed2": 47, "unexpect": 47, "troubl": 47, "correspondingli": [47, 60, 243, 246], "v6d_ldbc_loader": 47, "physic": [47, 48, 64, 75, 151, 209, 210, 211, 233, 297], "scalabl": [47, 67, 68, 69, 70, 71, 283], "replicacount": [47, 299], "replica": 47, "hdf": [47, 112, 145, 148, 299, 309, 319], "8182": [47, 49, 299], "pegasusworkernum": 47, "obvious": 47, "pegasustimeout": 47, "durat": [47, 53], "000": [47, 54, 72], "inher": 48, "massiv": [48, 68], "cypher": [48, 64, 66, 70, 71], "manufactur": 48, "upcom": 48, "gql": [48, 64, 71], "entri": [48, 53, 54, 60, 62, 150, 151, 198, 215, 217, 218, 243, 245, 246, 264], "sticki": 48, "peopl": [48, 54, 286, 299], "shelv": 48, "intellig": [48, 51, 54, 64, 71, 243, 246], "throughput": [48, 64, 70, 71, 299], "hybrid": [48, 298, 299], "dedupl": 48, "higher": [48, 70, 151, 161, 225, 299], "latenc": [48, 64, 70, 71], "unit": [48, 54, 68, 144, 234, 235, 236, 299], "hope": [48, 54, 299], "trade": [48, 64, 299], "inevit": 48, "realist": [48, 278], "valid": [48, 62, 63, 69, 81, 134, 181, 205, 227, 233, 282, 293, 295], "lengthi": 48, "ir": [48, 49, 64], "verif": [48, 64], "repeatedli": [48, 67], "account": [48, 68, 284, 317], "80": [48, 72, 265], "decoupl": [48, 64, 71], "upper": [48, 53, 54, 57, 68, 205, 298], "briefli": [48, 69], "regist": [48, 74, 77, 107, 293], "plan": [48, 64, 66, 67, 68, 78, 299, 307], "algebra": [48, 275], "edgeexpans": 48, "pathexpans": 48, "enter": 48, "legal": 48, "predic": [48, 54], "schema": [48, 49, 50, 54, 62, 63, 68, 75, 135, 136, 145, 148, 286, 295, 297, 298, 299, 300, 314, 317, 319], "arithmet": [48, 53, 54], "aspect": [48, 54, 71], "firstli": [48, 50, 54, 71], "rbo": 48, "down": [48, 203], "slice": [48, 76, 148, 292], "cbo": 48, "statist": [48, 54, 137], "glogu": 48, "suggest": [48, 54, 66, 205], "calcul": [48, 53, 54, 75, 77, 137, 151, 205, 237], "shuffl": [48, 53, 140, 146, 150], "align": [48, 60, 134, 137, 138, 237, 298], "transform": [48, 54, 74, 85, 98, 278, 286, 287, 291, 297], "mainli": [48, 54, 71, 142], "uniqu": [48, 50, 64, 65, 68, 75, 124, 125, 135, 139, 144, 145, 148, 151, 253, 259, 292, 299, 300], "plu": [48, 54, 189, 261], "unaccept": 48, "come": [48, 54, 56, 65, 69, 70, 72, 137, 252, 289], "kubenet": 49, "end2end": 49, "sf": [49, 54], "outlin": 49, "v6d_object_id": 49, "unsur": 49, "assist": [49, 67], "vineyard_ipc_socket": [49, 300], "meta": [49, 57, 74, 137, 138, 148, 297, 299], "gie_test_hom": 49, "graph_nam": 49, "rpc": [49, 74, 147, 293, 299], "1234": 49, "127": [49, 72, 299], "11234": 49, "gaia_executor": 49, "log4r": [49, 299], "yml": [49, 297, 299], "240000": 49, "1024": 49, "localhost": [49, 293, 319], "authent": [49, 70, 299], "usernam": [49, 299], "password": [49, 299], "auth": [49, 151, 299], "djna": 49, "kill": [49, 293], "pkill": 49, "intern": [50, 67, 186, 309, 311], "entiti": [50, 54, 63, 65, 69, 135], "council": [50, 72], "birthdai": [50, 319], "differenti": 50, "123456": [50, 57, 69, 299], "hasid": 50, "expos": [50, 55, 138, 149, 293, 303], "secondli": [50, 71], "triplet": 50, "path_expand": 50, "desir": [50, 148, 205, 227, 247, 249, 250], "concret": [50, 75, 76, 148], "endv": [50, 54, 68, 317], "repeat": [50, 68, 69, 140, 146, 220, 225, 228, 248, 251, 317], "path_opt": [50, 53, 54, 68, 317], "pathexpand": 50, "expr": [50, 53, 54, 68, 317], "marko": [50, 53, 54], "27": [50, 53, 54, 72, 136, 137, 139, 267], "OR": [50, 77, 286], "hasstep": 50, "shortcom": [50, 54], "groupcount": [50, 317], "BY": 50, "age_cnt": 50, "age_sum": 50, "AS": [50, 283, 287], "significantli": [50, 67, 70], "scan": [50, 298], "propertyidvalu": 50, "avoid": [50, 298], "tabl": [50, 54, 57, 72, 134, 136, 148, 295, 297, 298, 300], "therebi": 50, "larger": [50, 54, 63, 233], "inE": [50, 140, 317], "sub_graph": [50, 65, 313, 314], "64": [51, 60, 139, 140, 217, 317], "chip": [51, 316], "fairli": 51, "straightforward": 51, "hereaft": [51, 54], "q1": [51, 54], "q2": [51, 54], "someth": [51, 286], "453": 51, "xxx": [51, 144, 293, 309], "pppp": 51, "op_executor": 51, "455": 51, "entr": 51, "ee": 51, "conquer": 52, "retain": [53, 227, 300], "syntax": [53, 60, 76, 140, 286, 292], "situat": [53, 54, 56, 135, 136, 299], "meant": [53, 54], "moreov": [53, 64, 70, 298], "vertexid": 53, "inject": 53, "integ": [53, 151, 186, 189, 190, 191, 192, 193, 195, 197, 198, 200, 201, 204, 205, 208, 209, 210, 211, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 264, 278, 279, 280, 281, 283, 286, 299], "edgeid": 53, "edgelabel": [53, 95], "histori": [53, 54, 68], "elementid": 53, "propertykei": 53, "accessor": 53, "eq": [53, 54, 68, 75, 317], "neq": [53, 317], "gt": [53, 54, 317], "lt": [53, 54, 317], "gte": [53, 54, 65, 313, 317], "lte": [53, 65, 313, 317], "outsid": [53, 317], "textp": [53, 317], "startingwith": [53, 317], "endingwith": [53, 317], "rko": 53, "ark": 53, "notstartingwith": [53, 317], "notendingwith": [53, 317], "notcontain": [53, 317], "unequ": 53, "nest": 53, "wheretravers": 53, "act": [53, 134, 283, 286, 318], "startkei": 53, "alter": [53, 286], "opposit": [53, 140, 214, 261], "nottravers": 53, "duplic": [53, 54, 213, 215, 217, 286, 287], "deduplabel": 53, "composit": [53, 54], "de": [53, 62], "impli": 53, "flat": 53, "selectkei": 53, "roll": [53, 54, 56], "averag": [53, 63, 65, 75, 151, 205], "organ": [53, 54, 56, 57, 69, 73, 134, 136, 138, 142, 143, 222, 224, 263], "accompani": 53, "aggregatefunc": 53, "emit": [53, 54, 134, 137, 140, 146, 318], "ascend": [53, 54], "asc": [53, 54], "desc": [53, 54], "bias": 53, "toss": 53, "merg": [53, 140], "uniontravers": 53, "sentenc": [53, 54], "matchsent": 53, "serial": [53, 74, 148, 298, 317], "binder": 53, "graphnam": 53, "lengthrang": 53, "keyvaluepair": 53, "kept": [53, 54, 74], "result_opt": [53, 54, 317], "end_v": [53, 54, 317], "all_v": [53, 54, 317], "connector": [53, 54], "exponenti": [53, 54, 69, 233, 235, 236], "vada": 53, "lop": 53, "josh": 53, "rippl": 53, "peter": 53, "alias": 53, "k1": 53, "k2": 53, "v2": [53, 54, 59, 68, 134, 264, 318], "35": [53, 54, 72, 136, 137, 139, 146, 213, 263, 279], "29": [53, 54, 136, 137, 139], "unsupport": [53, 68], "unrol": 53, "linear": [53, 220, 222, 278, 298], "simplepath": [53, 317], "imper": [53, 68], "reflect": [53, 298], "latter": [53, 54, 67], "mix": [53, 75, 298], "sack": [53, 317], "regard": [54, 63, 298], "realm": 54, "audit": 54, "toolsuit": 54, "primarili": [54, 68, 298], "snb": [54, 314, 319], "qp": [54, 70], "simul": [54, 110, 146], "conclus": 54, "confid": 54, "profici": 54, "intric": 54, "permit": [54, 286], "3k": 54, "gremlin_queri": 54, "190376": 54, "787074": 54, "sf1": 54, "432345564227583365": 54, "504403158265495622": 54, "576460752303435306": 54, "432345564227579434": 54, "hastyp": 54, "504403158265495612": 54, "144115188075855941": 54, "issubclassof": 54, "504403158265495553": 54, "confus": [54, 234, 235, 236], "mechan": [54, 66, 69, 71, 295, 303], "belong": [54, 69, 75, 76, 77, 148, 276, 279, 286, 292, 299], "distinguish": [54, 64, 134, 135, 136, 298], "worri": 54, "portion": [54, 67, 68, 76, 148], "havelabel": 54, "veritc": 54, "216172782113783808": 54, "216172782113784710": 54, "label1": 54, "label2": 54, "forum": 54, "72057594037936036": 54, "mention": [54, 297, 298, 307], "360287970189718653": 54, "360287970189718655": 54, "joseph": 54, "joeseph": 54, "firstnam": [54, 314, 319], "yacin": 54, "year": [54, 65, 67, 313], "q3": 54, "01": [54, 59, 63, 65, 75, 135, 151, 210, 313], "01t00": 54, "00": 54, "curiou": 54, "property_nam": [54, 76, 77, 292], "38416": 54, "mayb": 54, "pyplot": 54, "plt": 54, "comment_cont": 54, "comment_length": 54, "histogram": 54, "hist": [54, 160], "lambda": [54, 68, 134, 140, 146, 151, 222, 233, 235, 236, 237, 318], "50": [54, 72, 233, 235, 236], "607c8e": 54, "grid": [54, 279], "axi": [54, 74, 75, 76, 90, 116, 146, 292], "xlabel": 54, "ylabel": 54, "gender": [54, 319], "person_gend": 54, "male": 54, "femal": 54, "male_count": 54, "female_count": 54, "216172782113784483": 54, "around": [54, 149], "432345564227569033": 54, "288230376151712472": 54, "144115188075856168": 54, "144115188075860911": 54, "72057594037934114": 54, "hasmoder": 54, "studyat": 54, "workat": 54, "islocatedin": 54, "432345564227582847": 54, "hasinterest": 54, "504403158265496227": 54, "864691128455136658": 54, "1008806316530991636": 54, "360287970189645858": 54, "en": [54, 67, 75, 248, 252, 253, 254, 255, 257, 258, 259, 265, 266, 267, 268, 270, 271, 272, 273], "e1": 54, "summar": [54, 57], "citi": [54, 57, 67, 69], "ispartof": 54, "countri": 54, "288230376151711797": 54, "understand": [54, 60, 134, 140, 148, 298], "simpler": [54, 286], "216172782113784555": 54, "14": [54, 72, 136, 137, 139, 191, 251, 259, 271, 286], "exactli": [54, 57, 68, 75, 151, 196, 205, 219, 264, 292, 299], "432345564227569357": 54, "432345564227570524": 54, "288230376151712984": 54, "144115188075861043": 54, "replyof": [54, 314], "vertiv": 54, "54336": 54, "33411": 54, "360287970189700805": 54, "59465": 54, "33403": 54, "awai": 54, "ineffect": 54, "otherwis": [54, 67, 75, 135, 139, 140, 141, 151, 168, 205, 225, 235, 284, 286, 293, 298, 299], "illeg": 54, "simple_path": 54, "unfold": [54, 75], "hascreat": 54, "nation": 54, "china": 54, "np": [54, 137, 140, 146, 150, 301], "market": 54, "japan": 54, "browsers_us": 54, "browser_list": 54, "firefox": 54, "safari": 54, "browser_count": 54, "autopct": 54, "1f": 54, "univers": [54, 64, 151, 184, 185, 232, 242, 274, 278], "previous": [54, 82, 222, 223, 224, 297, 298], "purpos": [54, 64, 298], "person1": 54, "person2": 54, "university1": 54, "university2": 54, "studi": [54, 63, 65, 71, 232, 234], "216172782113784481": 54, "216172782113784279": 54, "144115188075858884": 54, "216172782113784361": 54, "216172782113784291": 54, "144115188075858879": 54, "216172782113784642": 54, "216172782113784473": 54, "216172782113784328": 54, "144115188075858700": 54, "216172782113784700": 54, "216172782113784331": 54, "144115188075860619": 54, "216172782113784375": 54, "216172782113784333": 54, "144115188075858813": 54, "216172782113784593": 54, "216172782113784688": 54, "144115188075860870": 54, "216172782113784047": 54, "216172782113784692": 54, "144115188075862429": 54, "isomorph": [54, 69, 136, 140, 265, 287], "22": [54, 72, 136, 137, 139, 279, 293], "23": [54, 136, 137, 139], "216172782113784192": 54, "216172782113784107": 54, "216172782113784171": 54, "regular": [54, 225, 230, 231, 232, 254, 259, 262, 267, 270, 271, 272, 273], "squar": [54, 213, 232, 260, 261, 264, 279], "butterfli": 54, "notion": 54, "matchanalyticsalgorithm": 54, "matchoptimizationalgorithm": 54, "216172782113784587": 54, "216172782113784363": 54, "144115188075860919": 54, "216172782113784532": 54, "216172782113784400": 54, "144115188075861858": 54, "216172782113784491": 54, "216172782113784401": 54, "144115188075858086": 54, "216172782113784598": 54, "216172782113784629": 54, "144115188075858881": 54, "216172782113783931": 54, "216172782113784657": 54, "144115188075858708": 54, "repli": 54, "pa": 54, "pb": 54, "216172782113783809": 54, "216172782113784011": 54, "360287970189640007": 54, "360287970189640008": 54, "360287970189640009": 54, "34": [54, 72, 136, 137, 139, 279], "2012": [54, 245], "216172782113783812": 54, "216172782113783882": 54, "36": [54, 72, 136, 137, 139, 191, 271, 279, 311], "360287970189640010": 54, "37": [54, 72, 136, 137, 139, 151, 279, 311], "216172782113784105": 54, "38": [54, 72, 136, 137, 139, 279, 311], "41": [54, 72, 136, 137, 139, 226, 279], "43": [54, 136, 137, 139, 151, 253, 279, 309], "216172782113783814": 54, "216172782113783962": 54, "360287970189640135": 54, "52": [54, 279], "216172782113784199": 54, "54": [54, 72, 226, 279], "216172782113784038": 54, "56": [54, 72, 185, 279], "216172782113783816": 54, "216172782113784144": 54, "175": 54, "360287970189640462": 54, "72057594037927936": 54, "144115188075855872": 54, "288230376151711744": 54, "432345564227567616": 54, "504403158265495555": 54, "india": 54, "hasmemb": 54, "8248": 54, "8101": 54, "imposs": 54, "back": [54, 56, 62, 144, 298], "2822": 54, "tag1": 54, "tag2": 54, "37164": 54, "432": 54, "vertinc": 54, "property1": 54, "properti2": 54, "lastnam": [54, 314, 319], "donati": 54, "luigi": 54, "hall": 54, "costa": 54, "carlo": 54, "khan": 54, "meera": 54, "mahinda": 54, "eli": 54, "94": 54, "228": [54, 72], "emb": [54, 134, 318], "th": [54, 138, 151, 264], "dom": 54, "pedro": 54, "ii": 54, "condariuc": 54, "bonomi": 54, "anyth": 54, "david": [54, 187, 198, 263], "silva": 54, "guliyev": 54, "tagclass": 54, "504403158265495552": 54, "504403158265495554": 54, "504403158265495556": 54, "504403158265495557": 54, "504403158265495558": 54, "504403158265495559": 54, "504403158265495560": 54, "504403158265495561": 54, "504403158265495562": 54, "504403158265495563": 54, "504403158265495564": 54, "504403158265495565": 54, "504403158265495566": 54, "504403158265495567": 54, "504403158265495568": 54, "504403158265495569": 54, "504403158265495570": 54, "504403158265495571": 54, "504403158265495572": 54, "504403158265495573": 54, "504403158265495574": 54, "504403158265495575": 54, "504403158265495576": 54, "504403158265495577": 54, "504403158265495578": 54, "504403158265495579": 54, "504403158265495580": 54, "504403158265495581": 54, "504403158265495582": 54, "504403158265495583": 54, "504403158265495584": 54, "504403158265495585": 54, "504403158265495586": 54, "504403158265495587": 54, "504403158265495588": 54, "504403158265495589": 54, "504403158265495590": 54, "504403158265495591": 54, "504403158265495592": 54, "504403158265495593": 54, "504403158265495594": 54, "504403158265495595": 54, "504403158265495596": 54, "504403158265495597": 54, "504403158265495598": 54, "504403158265495599": 54, "504403158265495600": 54, "504403158265495601": 54, "504403158265495602": 54, "504403158265495603": 54, "504403158265495604": 54, "504403158265495605": 54, "504403158265495606": 54, "504403158265495607": 54, "504403158265495608": 54, "504403158265495609": 54, "504403158265495610": 54, "504403158265495611": 54, "504403158265495613": 54, "504403158265495614": 54, "504403158265495615": 54, "504403158265495616": 54, "504403158265495617": 54, "504403158265495618": 54, "504403158265495619": 54, "504403158265495620": 54, "504403158265495621": 54, "q4": 54, "690": 54, "134313148716225": 54, "216172782113783811": 54, "216172782113783813": 54, "216172782113784707": 54, "216172782113784708": 54, "216172782113784709": 54, "216172782113783910": 54, "216172782113784104": 54, "216172782113784207": 54, "216172782113784318": 54, "216172782113784305": 54, "216172782113784597": 54, "216172782113784693": 54, "216172782113784018": 54, "216172782113784092": 54, "216172782113784108": 54, "216172782113784161": 54, "216172782113784162": 54, "73": [54, 72, 232], "216172782113783875": 54, "216172782113783932": 54, "216172782113784057": 54, "216172782113784068": 54, "216172782113784065": 54, "216172782113784235": 54, "216172782113784247": 54, "meaning": [54, 76, 148], "449": 54, "454": [54, 72], "216172782113783810": 54, "acsend": 54, "descend": [54, 280], "216172782113784082": 54, "216172782113784169": 54, "216172782113784267": 54, "216172782113784368": 54, "216172782113784376": 54, "216172782113783938": 54, "216172782113784405": 54, "216172782113783980": 54, "216172782113783844": 54, "216172782113783901": 54, "216172782113783935": 54, "216172782113784439": 54, "216172782113784315": 54, "216172782113784374": 54, "216172782113784601": 54, "216172782113784431": 54, "216172782113783815": 54, "216172782113783817": 54, "216172782113783971": 54, "216172782113784154": 54, "216172782113784381": 54, "216172782113783933": 54, "earlier": [54, 237, 299], "216172782113783819": 54, "216172782113783826": 54, "216172782113783836": 54, "bi": [54, 67, 70], "25": [54, 59, 63, 65, 72, 136, 137, 139, 208, 210, 213, 232, 279, 313], "query2": 54, "09": [54, 72], "200": [54, 134, 292, 302, 318], "07": [54, 62, 72, 205, 213], "hastag": 54, "count1": 54, "count2": 54, "jet_li": 54, "zhang_yim": 54, "faye_wong": 54, "tsui_hark": 54, "bruce_le": 54, "johnny_depp": 54, "tom_cruis": 54, "jackie_chan": 54, "query3": 54, "moder": 54, "infinit": [54, 247], "seriou": 54, "song": 54, "containerof": 54, "message_count": 54, "824633725780": 54, "08t02": 54, "334": [54, 72], "album": 54, "hao": 54, "wang": [54, 218, 220], "19791209300479": 54, "755914248304": 54, "02t20": 54, "03": [54, 72, 307], "344": 54, "wall": 54, "lin": 54, "lei": 54, "24189255811275": 54, "824633725045": 54, "02": [54, 213], "03t18": 54, "633": 54, "893353201782": 54, "28t23": 54, "53": [54, 72, 279], "251": 54, "1030792152809": 54, "03t09": 54, "47": [54, 72, 136, 137, 139], "414": 54, "chen": 54, "32985348833887": 54, "07t07": 54, "30": [54, 72, 136, 137, 139, 210, 255, 257, 262, 299, 317], "038": 54, "zhang": [54, 309], "yang": [54, 309], "15393162789707": 54, "query4": 54, "membercount": 54, "country_count": 54, "counri": 54, "personcount": 54, "72057594037932503": 54, "72057594037932473": 54, "72057594037932489": 54, "72057594037932494": 54, "72057594037932501": 54, "72057594037934803": 54, "72057594037934804": 54, "72057594037935005": 54, "72057594037928132": 54, "72057594037935879": 54, "288230376151711799": 54, "country_top100_forums_dict": 54, "personcountforum": 54, "72057594037935702": 54, "72057594037930685": 54, "72057594037932114": 54, "72057594037934231": 54, "72057594037935703": 54, "72057594037935730": 54, "72057594037935734": 54, "72057594037932509": 54, "72057594037935707": 54, "72057594037935708": 54, "72057594037935711": 54, "72057594037935714": 54, "72057594037935719": 54, "72057594037935729": 54, "72057594037935731": 54, "72057594037935724": 54, "72057594037929560": 54, "72057594037931546": 54, "72057594037931545": 54, "72057594037932479": 54, "72057594037932485": 54, "72057594037932505": 54, "72057594037932511": 54, "72057594037935710": 54, "72057594037935722": 54, "72057594037929246": 54, "72057594037928266": 54, "72057594037935713": 54, "72057594037934308": 54, "72057594037934313": 54, "72057594037934302": 54, "72057594037930430": 54, "72057594037934303": 54, "72057594037932482": 54, "72057594037935147": 54, "72057594037935148": 54, "72057594037935157": 54, "72057594037927973": 54, "72057594037929386": 54, "72057594037934315": 54, "72057594037935720": 54, "72057594037935015": 54, "72057594037934300": 54, "72057594037930861": 54, "72057594037934319": 54, "72057594037931542": 54, "72057594037929583": 54, "72057594037933324": 54, "72057594037929182": 54, "72057594037929739": 54, "72057594037934829": 54, "72057594037935658": 54, "72057594037935660": 54, "72057594037935674": 54, "72057594037935682": 54, "72057594037935683": 54, "72057594037935672": 54, "72057594037927978": 54, "72057594037935163": 54, "72057594037935014": 54, "72057594037931544": 54, "72057594037934297": 54, "72057594037927979": 54, "72057594037932474": 54, "72057594037934384": 54, "72057594037932639": 54, "72057594037934380": 54, "72057594037935146": 54, "72057594037935152": 54, "72057594037928134": 54, "72057594037928674": 54, "72057594037929248": 54, "72057594037931240": 54, "72057594037931247": 54, "72057594037931256": 54, "72057594037930958": 54, "72057594037930963": 54, "72057594037931259": 54, "72057594037931260": 54, "72057594037931262": 54, "72057594037929365": 54, "72057594037929419": 54, "72057594037929421": 54, "72057594037929431": 54, "72057594037929434": 54, "72057594037929437": 54, "72057594037929446": 54, "72057594037929447": 54, "72057594037929449": 54, "72057594037929450": 54, "72057594037935166": 54, "72057594037929519": 54, "72057594037929451": 54, "72057594037929452": 54, "72057594037935046": 54, "72057594037932339": 54, "72057594037932481": 54, "72057594037934294": 54, "72057594037932389": 54, "72057594037932976": 54, "72057594037930870": 54, "72057594037931266": 54, "72057594037928092": 54, "72057594037928495": 54, "72057594037929510": 54, "72057594037929517": 54, "72057594037929961": 54, "72057594037929965": 54, "72057594037930242": 54, "72057594037930248": 54, "72057594037930250": 54, "72057594037930313": 54, "72057594037931547": 54, "72057594037935686": 54, "72057594037929052": 54, "72057594037929053": 54, "72057594037929055": 54, "72057594037929057": 54, "72057594037929060": 54, "72057594037934811": 54, "72057594037934813": 54, "72057594037934816": 54, "72057594037934821": 54, "72057594037934822": 54, "72057594037934823": 54, "72057594037934828": 54, "72057594037934835": 54, "72057594037934837": 54, "72057594037934975": 54, "72057594037934976": 54, "72057594037935032": 54, "72057594037935038": 54, "72057594037935045": 54, "72057594037935664": 54, "72057594037935673": 54, "72057594037935678": 54, "72057594037935685": 54, "72057594037931549": 54, "72057594037931550": 54, "72057594037931552": 54, "72057594037931554": 54, "72057594037931557": 54, "72057594037931560": 54, "72057594037931566": 54, "72057594037935671": 54, "72057594037935670": 54, "72057594037934977": 54, "72057594037931543": 54, "72057594037929518": 54, "72057594037935679": 54, "72057594037931575": 54, "72057594037932438": 54, "72057594037932878": 54, "72057594037932886": 54, "72057594037932888": 54, "72057594037927982": 54, "72057594037930526": 54, "72057594037930535": 54, "72057594037930546": 54, "72057594037930976": 54, "72057594037930536": 54, "72057594037931358": 54, "72057594037930366": 54, "72057594037931574": 54, "72057594037932435": 54, "72057594037935020": 54, "72057594037935864": 54, "72057594037933861": 54, "72057594037932440": 54, "72057594037927981": 54, "72057594037931349": 54, "72057594037931366": 54, "72057594037932885": 54, "72057594037927980": 54, "72057594037930529": 54, "72057594037930532": 54, "72057594037931304": 54, "72057594037932433": 54, "72057594037932441": 54, "72057594037934547": 54, "query11": 54, "live": 54, "startdat": 54, "enddat": 54, "216172782113784091": 54, "216172782113784250": 54, "216172782113784403": 54, "216172782113784537": 54, "216172782113784122": 54, "query14": 54, "country1": 54, "country2": 54, "subscor": 54, "award": [54, 309], "chile": 54, "p1": 54, "p2": 54, "case1": 54, "case2": 54, "case3": 54, "case4": 54, "216172782113784153": 54, "216172782113784100": 54, "216172782113783956": 54, "216172782113784673": 54, "216172782113784252": 54, "216172782113784263": 54, "216172782113784193": 54, "216172782113784242": 54, "216172782113784623": 54, "216172782113784498": 54, "216172782113784251": 54, "216172782113784538": 54, "216172782113784167": 54, "216172782113783864": 54, "216172782113784613": 54, "216172782113784116": 54, "leverag": [55, 56, 66, 68, 78, 278, 295, 303], "jave": [55, 303], "javasdk": [55, 303], "creation": [56, 136, 210], "transit": [56, 255, 283], "magnitud": [56, 66], "wrapper": [56, 68, 74, 86, 92, 148, 149, 298], "superior": [56, 65, 67, 71], "rich": [56, 64, 67, 69, 136, 138], "gat": [56, 69, 134, 142, 318], "deepwalk": [56, 134, 318], "trans": [56, 134, 318], "pyg": [56, 57, 60, 69, 70, 71], "flexibli": [56, 64, 69, 71], "pytorch": [56, 57, 64, 69, 140, 142], "onlin": [56, 66, 69, 70, 295, 299], "fed": [56, 65, 69], "dockerfil": [56, 141], "ek": 56, "aw": [56, 72, 310], "ack": 56, "failov": [56, 71], "concentr": [56, 71, 190], "secur": [57, 69, 70], "industri": [57, 64, 69, 71, 72], "feasibl": [57, 69], "preprocess": [57, 146], "uniformli": [57, 223, 224, 225, 233, 234, 235, 236, 237, 281], "lookup": [57, 69, 146, 286], "topolog": [57, 136], "nn": [57, 59, 62, 63, 65, 69, 75, 134, 146, 313, 318], "ego": [57, 69, 142, 287, 318], "dimension": [57, 63, 65, 69, 135, 137, 138], "conv": [57, 60, 69], "edge_index": [57, 60], "carri": 57, "topologi": [57, 60, 66, 137, 142, 283, 295, 297, 298], "fulli": [57, 60, 75, 84, 228, 298], "predict": [57, 63, 64, 65, 69], "asynchron": 57, "tensor": [57, 60, 74, 75, 76, 116, 134, 138, 142, 144, 290, 292], "plaintext": 57, "clearli": [57, 69], "space": [57, 69, 135, 136, 140, 151, 185, 233, 234, 235, 236, 237], "dimens": [57, 59, 62, 63, 65, 69, 135, 233, 234, 235, 236, 278, 313], "term": 57, "batchgraph": 57, "mini": [57, 69], "loss": [57, 59, 62, 63, 65, 69, 146, 313, 318], "mind": 57, "categori": [57, 59, 60, 65, 69, 146], "classif": [57, 61, 65, 69, 73, 134, 135, 146], "trainer": [57, 59, 62, 63, 65, 134, 313, 318], "dependic": 58, "hk": 58, "rm": [58, 146], "go": [58, 146, 213, 266, 299], "4g": 58, "aarch64": 59, "processor": 59, "verion": 59, "egographsag": [59, 62, 65, 313], "349": [59, 63, 65, 313], "venu": [59, 65], "confer": [59, 65, 138, 309], "www": [59, 62, 63, 65, 151, 205, 259, 268, 271, 299, 313], "tf": [59, 60, 62, 63, 65, 134, 135, 140, 141, 146, 313, 318], "disable_v2_behavior": [59, 62, 63, 65, 313], "importerror": [59, 62, 63, 65, 313], "load_ogbn_mag": [59, 62, 63, 65, 313, 319], "egosagesuperviseddataload": [59, 63, 65, 313], "localtrain": [59, 62, 63, 65, 313], "node_typ": [59, 62, 63, 65, 134, 136, 137, 140, 143, 146, 150, 313, 318], "edge_typ": [59, 62, 63, 65, 134, 136, 137, 138, 139, 140, 143, 146, 150, 298, 313, 318], "class_num": [59, 63, 65, 134, 313, 318], "features_num": [59, 62, 63, 65, 134, 313, 318], "hops_num": [59, 63, 65, 134, 313, 318], "nbrs_num": [59, 62, 63, 65, 313], "epoch": [59, 60, 62, 63, 65, 134, 139, 313, 318], "hidden_dim": [59, 62, 63, 65, 134, 146, 313, 318], "256": [59, 63, 65, 72, 215, 275, 299, 313], "in_drop_r": [59, 63, 65, 313], "learning_r": [59, 62, 63, 65, 146, 313], "reset_default_tf_graph": [59, 63, 65, 313], "act_func": [59, 63, 65, 313], "relu": [59, 63, 65, 313], "dropout": [59, 62, 63, 65, 146, 313], "train_data": [59, 62, 63, 65, 313], "mask": [59, 63, 65, 150, 313], "train_embed": [59, 63, 65, 313], "src_ego": [59, 62, 63, 65, 313], "train_label": [59, 63, 65, 313], "reduce_mean": [59, 63, 65, 134, 146, 313, 318], "sparse_softmax_cross_entropy_with_logit": [59, 63, 65, 134, 146, 313, 318], "logit": [59, 63, 65, 146, 313], "adamoptim": [59, 62, 63, 65, 146, 313], "test_embed": [59, 63, 65, 313], "test_label": [59, 63, 65, 313], "test_indic": [59, 63, 65, 313], "argmax": [59, 63, 65, 313], "output_typ": [59, 63, 65, 120, 290, 313], "int32": [59, 63, 65, 135, 137, 145, 146, 313], "test_acc": [59, 63, 65, 313], "div": [59, 63, 65, 313], "reduce_sum": [59, 63, 65, 313], "cast": [59, 63, 65, 146, 298, 313], "float32": [59, 63, 65, 137, 146, 313], "obgn": [59, 63], "mag": [59, 63, 65, 313], "paper_featur": [59, 65, 313], "feat_": [59, 62, 63, 65, 313], "128": [59, 62, 63, 65, 146, 313], "lg": [59, 62, 63, 65, 129, 293, 307, 313], "cite": [59, 62, 63, 65, 313], "gen_label": [59, 62, 63, 65, 129, 293, 313], "val": [59, 62, 63, 65, 134, 150, 293, 313, 318], "85": [59, 62, 63, 65, 72, 75, 293, 313], "seed": [60, 75, 134, 142, 146, 205, 208, 209, 210, 211, 213, 215, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 235, 236, 237, 240, 241, 242, 243, 246, 278, 281, 283], "sampler": [60, 62, 139, 142, 144], "categor": 60, "perceptu": 60, "theori": [60, 138, 146], "extern": [60, 64, 293, 299], "unsupervis": [60, 62, 73, 134, 140, 142, 143, 293], "mainstream": [60, 138, 139], "putback": 60, "outofrangeerror": [60, 139, 140, 146], "evolv": [60, 64, 299], "neighborsampl": [60, 138], "edge_weight": [60, 138, 140], "random_with_replac": 60, "topk": [60, 138, 140], "pad": [60, 138], "expand_factor": [60, 138, 143], "sparsenod": [60, 137, 138, 140], "sparseedg": [60, 137, 138, 140], "layer1": [60, 138], "layer2": [60, 138], "neighbor_sampl": [60, 138], "bui": [60, 64, 137, 138, 139, 140, 143, 146], "i2i": [60, 138, 140], "batch_siz": [60, 62, 134, 138, 139, 140, 143, 146, 302, 318], "layer_nod": [60, 138], "int_attr": [60, 137, 138, 139, 143, 146], "layer_edg": [60, 138], "float_attr": [60, 137, 138, 139, 143, 146], "egograph": [60, 69, 134, 142, 318], "negativesampl": [60, 143], "node_weight": [60, 140, 143], "edge_sampl": [60, 139, 143], "negative_sampl": [60, 134, 143, 318], "neg_nod": [60, 143], "heterogen": [60, 63, 65, 67, 69, 135, 136, 137, 138, 140], "randomli": [60, 140, 205, 211, 215, 217, 226, 228, 233, 236, 241, 283], "outv": [60, 134, 138, 140, 146, 317, 318], "overs": 60, "citat": [61, 63, 65, 73, 146, 313], "revisit": [61, 62, 73], "with_dataset": [62, 128, 133, 293, 319], "k8s_service_typ": [62, 128, 133, 293, 313], "loadbalanc": [62, 293, 313], "k8s_image_pull_polici": [62, 128, 133, 293], "cell": [62, 279], "metainfo": 62, "obgn_mag": 62, "ogbn_mag_smal": [62, 313, 319], "chose": [62, 63], "i_featur": [62, 63], "argpars": 62, "tfg": 62, "egosageunsuperviseddataload": 62, "parse_arg": 62, "argumentpars": 62, "egosag": 62, "add_argu": 62, "output_dim": [62, 134, 318], "neg_num": 62, "0001": 62, "agg_typ": 62, "drop_out": 62, "neg_sampl": 62, "temperatur": 62, "dim": [62, 233, 234, 235, 236], "src_emb": [62, 134, 318], "dst_emb": 62, "dst_ego": 62, "neg_dst_emb": 62, "neg_dst_ego": 62, "unsupervised_softmax_cross_entropy_loss": 62, "ogbn": [63, 65, 313], "academ": [63, 65, 313], "microsoft": [63, 65, 313], "encompass": 63, "institut": [63, 65, 313], "accomplish": [63, 65, 205], "word2vec": [63, 65, 313], "worth": [63, 68, 140, 148, 286], "highlight": [64, 68], "modular": [64, 278], "rapidli": [64, 138], "seller": 64, "buyer": [64, 68], "fraudul": 64, "transact": [64, 68, 70, 71, 72, 295, 299, 309], "sell": 64, "suspici": 64, "anti": [64, 68, 71], "fraud": [64, 71], "feed": [64, 129, 134, 137, 140, 146, 150, 293, 318], "webui": 64, "necessit": 64, "comprehens": [64, 70, 72, 73], "diversifi": 64, "ingest": [64, 299], "rapid": 64, "hous": [64, 260, 261], "analyst": 64, "concurr": [64, 136], "crucial": 64, "resembl": [64, 278, 283, 285], "olap": 64, "gen": [64, 140], "dataflow": 64, "arriv": 64, "suitabl": [64, 71, 136, 140, 146, 205, 299, 302], "hiactor": 64, "financi": 64, "risk": 64, "billion": [64, 67, 71], "preval": 64, "definit": [64, 151, 232, 233, 235], "miniconda": 65, "scientif": 65, "field_of_studi": [65, 313], "subject": 65, "examin": 65, "4307": [65, 313], "proven": 65, "2014": [65, 151, 313], "2020": [65, 313], "simple_g": [65, 309, 313], "ret1": [65, 313], "k_core": [65, 75, 151, 287, 309, 313], "ret2": [65, 313], "add_column": [65, 74, 148, 309, 313, 314], "kcore": [65, 313], "tc": [65, 313], "downstream": [65, 140], "convolut": [65, 69, 142], "supervis": [65, 73, 135, 138, 146, 293, 313], "train_gcn": [65, 313], "130": [65, 313], "icde2023": 66, "indroduc": 66, "sigmod2017": [66, 309, 315], "gra": 66, "ph": 66, "arallel": 66, "ngine": 66, "opensourc": 66, "raph": 66, "nalysi": 66, "elat": 66, "ransact": 66, "loos": [66, 71, 295], "mysql": [66, 295], "nutshel": [66, 295], "exploit": [66, 295], "ahead": [66, 295], "wal": [66, 295], "etriev": 66, "IN": 66, "terfac": 66, "portabl": [66, 298], "handler": [66, 130, 293], "chive": 66, "movi": [66, 136], "guardian": 66, "galaxi": 66, "gpu": [66, 141], "steal": 66, "tackl": [66, 67], "imbal": 66, "nvlink": 66, "acut": 66, "asymmetr": 66, "holist": 66, "innov": 66, "signific": [66, 71], "speedup": 66, "mangement": 66, "cncf": 66, "sandbox": 66, "robin": [66, 184, 185], "memoiz": 66, "vldb2021": 66, "artial": 66, "ncrement": 66, "transport": 67, "protein": [67, 227], "uncov": 67, "vari": [67, 135], "former": 67, "unless": [67, 138, 286], "discov": 67, "discoveri": [67, 69, 293], "rough": 67, "accordingli": [67, 125], "snap": 67, "stanford": [67, 277], "cs224w": 67, "constitu": 67, "bellman": [67, 151], "ford": [67, 151], "wikipedia": [67, 75, 248, 252, 253, 254, 255, 257, 258, 259, 265, 266, 267, 268, 270, 271, 272, 273, 279], "wiki": [67, 75, 248, 252, 253, 254, 255, 257, 258, 259, 265, 266, 267, 268, 270, 271, 272, 273], "s_algorithm": 67, "towardsdatasci": 67, "9bd8951e7da": 67, "interconnect": [67, 136], "road": [67, 301], "logist": 67, "deliveri": 67, "media": 67, "ten": [67, 71, 138], "nontrivi": [67, 258], "steep": 67, "sought": 67, "occurr": 68, "monei": [68, 71], "launder": [68, 71], "exact": [68, 215, 217, 313], "exclud": 68, "expans": [68, 69, 143, 317], "heurist": [68, 213], "purchas": 68, "bolder": 68, "border": 68, "sens": [68, 278, 293], "worst": 68, "websocket": [68, 317], "mutat": 68, "groovi": 68, "currenttimemilli": [68, 317], "secondari": 68, "rocksdb": [68, 299], "isol": [68, 151, 247, 299], "therein": 68, "drug": 69, "accuraci": 69, "likelihood": 69, "biologi": 69, "valuabl": 69, "frame": 69, "bioinformat": 69, "chemic": 69, "promis": 69, "driven": [69, 278, 298], "carefulli": 69, "rewind": 69, "stack": 69, "weigh": 69, "choic": [69, 298, 299], "matrix": [69, 75, 142, 151, 213, 231, 246, 249, 278, 286, 289], "huge": [69, 301], "unseen": [69, 301], "plain": 69, "text": [69, 77, 187], "backward": [69, 140, 237], "gradient": 69, "metric": [69, 233, 234, 235, 236, 237], "recal": 69, "f1": [69, 148], "assess": [69, 146, 263], "irregular": 69, "unstructur": 69, "pool": 69, "hardwar": [69, 302], "undergo": 69, "perceiv": 69, "2x": 70, "soon": [70, 71, 72, 137], "excel": 70, "elast": [70, 299], "versatil": [70, 298], "acid": 70, "encrypt": 70, "stand": [71, 138, 139, 298], "summari": [71, 166], "simultan": [71, 295], "elabor": 71, "geminigraph": [71, 72], "plato": [71, 72], "empir": 71, "graphalyt": 71, "enjoi": 71, "neo4j": [71, 72, 297], "janusgraph": 71, "nebula": 71, "dbm": 71, "relaunch": [71, 299], "recoveri": 71, "protocol": [71, 293], "coars": 71, "grain": 71, "emphas": 71, "invest": 71, "trace": [71, 75], "dgl": 71, "accommod": 71, "nebular": 71, "movement": [71, 140], "trivial": [71, 202], "grade": 72, "r6": 72, "8xlarg": 72, "alibabacloud": 72, "ec": 72, "xl": 72, "commit": [72, 295, 299], "a038f97": 72, "170e7d3": 72, "21009d6": 72, "v4": 72, "mpich": 72, "fair": 72, "huge_pag": 72, "jemalloc": 72, "o3": 72, "stub": [72, 79, 215, 243, 246], "determinist": [72, 77, 293, 299], "cdlp": [72, 75, 309], "load_direct": 72, "load_undirected_from_direct": 72, "reformat": 72, "mark": [72, 151], "datagen": 72, "9_0": 72, "fb": 72, "62": 72, "9_1": 72, "78": [72, 205, 279], "9_2": 72, "zf": 72, "88": [72, 218, 220], "60": [72, 151, 279], "61": 72, "176": [72, 242], "87": [72, 277], "graph500": 72, "71": [72, 151, 223, 227, 233], "79": [72, 218, 220], "friendster": 72, "97": 72, "39": [72, 136, 137, 139, 151, 279, 309, 311], "86": 72, "57": 72, "126": [72, 219], "98": 72, "83": 72, "66": 72, "1695": 72, "2742": 72, "3600": 72, "425": 72, "55": [72, 185], "lcc": 72, "521": 72, "51": [72, 279], "296": 72, "1859": 72, "201": [72, 282], "842": 72, "68": 72, "competitor": 72, "didn": 72, "pagerank_loc": 72, "65": 72, "72": 72, "84": 72, "63": [72, 222, 224], "gunrock": 72, "0c9a96": 72, "v0": [72, 141, 289], "grout": 72, "5ce160": 72, "v7": 72, "cuda": 72, "v10": 72, "gn6v": 72, "c8g1": 72, "16xlarg": 72, "8x": 72, "16gb": 72, "nvidia": 72, "v100": 72, "gb": 72, "devic": 72, "millisecond": 72, "soc": [72, 206, 207], "livejournal1": 72, "89": 72, "9345": 72, "215": [72, 275], "560": 72, "3029": 72, "129": [72, 241], "389": 72, "155": 72, "0549": 72, "sinaweibo": 72, "168": 72, "1649": 72, "647": 72, "orkut": 72, "105": [72, 206, 207], "121": 72, "193": 72, "658": 72, "3201": 72, "7677": 72, "137": [72, 213], "2139": 72, "319": 72, "261": 72, "69": [72, 273, 279], "235": 72, "567": 72, "283": 72, "073": 72, "6619": 72, "45": [72, 136, 137, 139, 215], "150": 72, "87299": 72, "162": 72, "60403": 72, "9676": 72, "141": 72, "347": 72, "7772": 72, "0118": 72, "306": 72, "8618": 72, "9134": 72, "467": 72, "60801": 72, "8666": 72, "3501": 72, "870": 72, "6451": 72, "198": 72, "829": 72, "5036": 72, "229": 72, "024": 72, "483": 72, "178": 72, "5593": 72, "807": 72, "367": 72, "6946": 72, "2339": 72, "jupyt": [73, 293], "notebook": [73, 293], "jupyterlab": 73, "playground": [73, 320], "bipartit": [73, 134, 136, 192, 240, 241, 242, 274, 318], "grapeengin": 74, "vineyardserv": 74, "grapeinst": 74, "graphscopeserv": 74, "inlin": 74, "dag_fil": 74, "dagfil": 74, "rundagfil": 74, "subscrib": 74, "charg": 74, "commspec": [74, 295, 298, 300], "comm_spec": [74, 295, 298, 300], "vineyard_socket": 74, "bl": 74, "dispatchresult": 74, "onrec": 74, "commanddetail": 74, "cmd": 74, "gsobject": 74, "objectmanag": 74, "subclass": [74, 286], "appentri": 74, "icontextwrapp": 74, "ifragmentwrapp": 74, "projector": 74, "propertygraphutil": 74, "objecttyp": 74, "tostr": [74, 300], "putobject": 74, "obj": 74, "removeobject": 74, "getobject": [74, 299, 300], "hasobject": 74, "analyticalserv": 74, "startserv": 74, "stopserv": 74, "engineconfig": 74, "tojsonstr": 74, "vineyard_rpc_endpoint": 74, "enable_java_sdk": 74, "setcommand": 74, "wrap": [74, 78], "enum": 74, "aggregatepolici": 74, "enumer": 74, "kpickfirst": 74, "kpickfirstnonempti": 74, "krequireconsist": 74, "kconcat": 74, "kpickfirstnonemptygraphdef": 74, "kmergegraphdef": 74, "worker_id": [74, 148], "error_cod": 74, "ok": 74, "set_error": 74, "has_large_data": 74, "set_graph_def": 74, "graphdefpb": 74, "graph_def": 74, "set_data": 74, "large_data": 74, "inarch": 74, "arc": 74, "aggregate_polici": 74, "fragmentwrapp": 74, "addcolumn": 74, "vdata_t": 74, "edata_t": 74, "arrowvertexmap": 74, "internaltyp": 74, "arrowprojectedfragmentbas": 74, "bareregist": 74, "internal_oid_t": 74, "property_graph_typ": 74, "eid_typ": 74, "vertexrang": [74, 77], "inner_vertices_t": 74, "outer_vertices_t": 74, "vertices_t": 74, "sub_vertices_t": 74, "nbr_t": 74, "arrow_projected_fragment_impl": 74, "nbrunit": 74, "const_adj_list_t": 74, "property_vertex_map_t": 74, "arrowprojectedvertexmap": 74, "label_id_typ": 74, "prop_id_typ": 74, "property_graph_t": 74, "eid_array_t": 74, "data_t": 74, "inner_vertex_array_t": 74, "outer_vertex_array_t": 74, "objectmeta": 74, "preparetorunapp": 74, "prepareconf": 74, "fnum": [74, 77], "vertex_label": [74, 77], "edge_label": [74, 77, 293], "vertex_prop_id": 74, "edge_prop_id": 74, "mirrorvertic": 74, "getvertex": 74, "getid": 74, "getinternalid": 74, "getfragid": 74, "typedarrai": 74, "value_typ": 74, "gid2vertex": 74, "vertex2gid": 74, "getinnerverticesnum": 74, "getouterverticesnum": 74, "getverticesnum": 74, "getedgenum": [74, 300], "getinedgenum": [74, 300], "getoutedgenum": [74, 300], "getoutgoingedgenum": 74, "getincomingedgenum": 74, "gettotalverticesnum": 74, "isinnervertex": 74, "getoutervertex": 74, "getinnervertexid": 74, "getinnervertexinternalid": 74, "getoutervertexid": 74, "getoutervertexinternalid": 74, "gid2oid": 74, "oid2gid": 74, "innervertexgid2vertex": 74, "outervertexgid2vertex": 74, "getoutervertexgid": 74, "getinnervertexgid": 74, "getincominginnervertexadjlist": 74, "getoutgoinginnervertexadjlist": 74, "getincomingoutervertexadjlist": 74, "getoutgoingoutervertexadjlist": 74, "src_fid": 74, "dst_fid": 74, "getlocaloutdegre": 74, "getlocalindegre": 74, "destlist": 74, "iedest": 74, "oedest": 74, "ioedest": 74, "getvertexmap": 74, "get_out_edges_ptr": 74, "get_in_edges_ptr": 74, "get_oe_offsets_begin_ptr": 74, "get_oe_offsets_end_ptr": 74, "get_ie_offsets_begin_ptr": 74, "get_ie_offsets_end_ptr": 74, "get_edata_array_accessor": 74, "get_vdata_array_accessor": 74, "get_arrow_frag": 74, "getoid": 74, "getgid": 74, "offset2lid": 74, "getoffsetfromlid": 74, "getlidfromgid": 74, "getfidfromgid": 74, "vid_typ": 74, "oid_t_": 74, "vid_t_": 74, "arrowfragmentload": 74, "efil": [74, 300], "vfile": [74, 300], "graph_info": 74, "leaf": [74, 76, 122, 151, 196, 280], "table_vec_t": 74, "loadvertexedget": 74, "loadvertext": 74, "loadedget": 74, "objectid": [74, 148, 298, 300], "loadfrag": 74, "loadfragmentasfragmentgroup": 74, "addlabelstofrag": 74, "frag_id": [74, 295, 300], "addlabelstofragmentasfragmentgroup": 74, "initpartition": 74, "doxygenclass": 74, "arrowfragmentappend": 74, "doxygen": 74, "runner": [74, 309], "_build": 74, "appbas": 74, "defaultmessagemanag": 74, "explicitli": [74, 136, 205, 293, 299], "need_split_edg": 74, "konlyout": 74, "propertyappbas": 74, "propertymessagemanag": 74, "propertyautoappbas": 74, "propertyautomessagemanag": 74, "app_t": 74, "defaultwork": 74, "parallelenginespec": 74, "pe_spec": 74, "defaultparallelenginespec": 74, "getcontext": 74, "ostream": 74, "parallelpropertywork": 74, "parallelpropertymessagemanag": 74, "propertyautowork": 74, "pointer": 74, "appfram": 74, "creatework": 74, "deletework": 74, "lib_path": 74, "worker_handl": 74, "queryarg": 74, "query_arg": [74, 120, 290], "context_kei": 74, "frag_wrapp": 74, "functiontyp": 74, "argsnum": 74, "argsunpack": 74, "proto": [74, 93, 120], "datatyp": 74, "argtypeat": 74, "defaultpropertywork": 74, "ctx_t": 74, "ctxwrapperbuild": 74, "contextwrapp": 74, "vertexpropertycontext": [74, 309], "contextbas": 74, "labeledvertexdatacontext": 74, "contextdatatyp": 74, "icolumn": 74, "get_column": 74, "get_typed_column": 74, "vertex_properti": [74, 75, 77], "properties_map": 74, "vertexdatacontextwrapp": 74, "ivertexdatacontextwrapp": 74, "fragment_wrapp": 74, "unique_ptr": 74, "tondarrai": 74, "todatafram": 74, "tovineyardtensor": 74, "tovineyarddatafram": 74, "toarrowarrai": 74, "tensorcontext": [74, 76], "set_shap": 74, "tensor_t": 74, "tensorcontextwrapp": 74, "itensorcontextwrapp": 74, "uint32_t": 74, "cmake_extra_opt": 75, "asset": 75, "dag": [75, 76, 93, 148, 286, 290, 293], "byte": [75, 82, 145], "labeled_vertex_data": 75, "dynamic_vertex_data": 75, "labeled_vertex_properti": 75, "cpp_pregel": 75, "cython_pi": 75, "cython_pregel": 75, "appdagnod": [75, 111, 117], "__init__": [75, 134, 141, 148, 149, 150, 286, 287, 289, 293, 299, 318], "bytesio": [75, 82], "is_compat": 75, "graphdagnod": [75, 86, 101, 102, 119, 126, 129, 148, 149, 293], "invalidargumenterror": [75, 293], "scannererror": 75, "incorrect": 75, "signatur": [75, 140, 286], "neccessari": 75, "resouc": 75, "__call__": 75, "kwarg": [75, 76, 82, 93, 107, 111, 112, 133, 143, 148, 150, 293], "app_asset": [75, 86, 92], "bind": [75, 298], "app_nod": 75, "__del__": 75, "unload": [75, 97, 117, 119], "attribute_assortativity_coeffici": [75, 309], "assort": 75, "ref": [75, 298], "joint": [75, 243, 244, 245, 246, 287], "newman": [75, 151, 215, 217, 278], "026126": 75, "2003": [75, 151, 208, 215, 226, 234], "numeric_assortativity_coeffici": [75, 309], "analog": 75, "k_": [75, 187, 251], "rac": 75, "s_i": 75, "sum_": [75, 151, 219], "w_": [75, 151, 219], "ij": [75, 151], "k_j": 75, "valueerror": [75, 128, 133, 148, 151, 225, 282, 293], "barrat": 75, "barth\u00e9lemi": 75, "pastor": 75, "satorra": 75, "vespignani": 75, "pna": 75, "101": [75, 315], "3747": 75, "3752": 75, "2004": [75, 240], "average_shortest_path_length": [75, 151, 287, 309], "frac": [75, 151, 161, 219], "vertexdatacontextdagnod": [75, 76], "avg_clust": [75, 309], "degree_threshold": 75, "greater": [75, 136, 151, 205, 236, 293, 298], "threshold": [75, 233, 234, 235, 236], "1e9": 75, "unweight": [75, 151], "foster": 75, "grassberg": 75, "paczuski": 75, "107": [75, 239], "10815": 75, "1e": [75, 146, 151, 205], "06": [75, 151], "html": [75, 151, 235, 238, 247, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 266, 268], "gv": 75, "hits_algorithm": 75, "vertexpropertycontextdagnod": [75, 76], "is_simple_path": [75, 309], "nonempti": 75, "explan": [75, 138], "biject": [75, 281], "smallest": [75, 238, 258, 268], "pairwis": 75, "boolean": [75, 77, 136, 140, 151, 170, 171, 208, 210, 213, 244, 284], "k_shell": [75, 309], "katz_centrality_numpi": [75, 151], "auttenu": 75, "maximun": 75, "min_progress": 75, "1000": [75, 136, 151, 283, 286, 299], "progress_tri": 75, "progress": [75, 230], "met": 75, "exit": [75, 317], "blondel": 75, "et": [75, 283], "al": [75, 283], "stat": [75, 233, 235], "mech": 75, "10008": 75, "2008": [75, 205, 228], "sotera": 75, "lpa_u2i": [75, 309], "labeledvertexpropertycontextdagnod": [75, 76], "evalut": 75, "dump": [75, 112, 148], "pagerank_nx": [75, 309], "max_it": [75, 151, 205], "tol": [75, 151, 205], "solver": 75, "voterank": [75, 309], "unsign": [75, 299], "weakli": [75, 151, 225], "basecontextdagnod": [76, 148], "bound_app": [76, 92], "contextdagnod": 76, "ndarrai": [76, 90, 102, 137, 138, 140, 143, 148, 150, 286, 319], "to_vineyard_tensor": [76, 292, 309], "to_vineyard_datafram": [76, 292, 309], "lazi": [76, 148, 293], "sg": 76, "r1": [76, 301, 302], "ramework": 76, "resultdagnod": [76, 112, 149], "r2": [76, 301, 302], "r3": [76, 301], "r4": [76, 301], "62586": 76, "comparis": 76, "alphabet": [76, 292], "tensorcontextdagnod": 76, "quer": [76, 103, 149, 292], "labeledvertexdatacontextdagnod": 76, "label_nam": [76, 292], "column_nam": [76, 292], "labeld": [76, 135], "context_nod": 76, "result_schema": 76, "referenc": 76, "dynamicvertexdatacontext": 76, "dag_nod": 76, "op": [76, 85, 87, 88, 89, 90, 92, 93, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 115, 116, 117, 119, 120, 144, 286, 290, 293], "get_str": 77, "property_id": 77, "get_doubl": 77, "edge_label_id": 77, "edge_label_nam": 77, "incoming_edg": 77, "register_aggreg": 77, "pregelaggregatortyp": 77, "aggr_typ": 77, "get_aggregated_valu": 77, "get_total_vertices_num": 77, "vertex_property_num": 77, "vertex_label_nam": 77, "vertex_label_id": 77, "edge_property_num": 77, "get_vertex_label_by_id": 77, "get_vertex_label_id_by_nam": 77, "get_edge_label_by_id": 77, "get_edge_label_id_by_nam": 77, "edge_properti": 77, "get_vertex_property_id_by_nam": 77, "vertex_property_nam": [77, 298], "get_vertex_property_by_id": 77, "vertex_property_id": 77, "get_edge_property_id_by_nam": 77, "edge_property_nam": 77, "get_edge_property_by_id": 77, "edge_property_id": 77, "queue": 77, "kboolandaggreg": 77, "AND": 77, "kbooloraggreg": 77, "kbooloverwriteaggreg": 77, "overwritten": 77, "kdoubleminaggreg": 77, "kdoublemaxaggreg": 77, "kdoublesumaggreg": 77, "kdoubleproductaggreg": 77, "kdoubleoverwriteaggreg": 77, "kint64minaggreg": 77, "int64": [77, 104, 126, 135, 137, 138, 143, 145, 146, 148, 319], "kint64maxaggreg": 77, "kint64sumaggreg": 77, "kint64productaggreg": 77, "kint64overwriteaggreg": 77, "ktextappendaggreg": 77, "kalongoutgoingedgetooutervertex": 77, "kalongincomingedgetooutervertex": 77, "kalongedgetooutervertex": 77, "sync": [77, 145, 298], "nerghbor": 77, "get_total_nodes_num": 77, "get_nodes_num": 77, "get_inner_nodes_num": 77, "get_outer_nodes_num": 77, "outer_nod": 77, "get_node_fid": 77, "is_inner_nod": 77, "is_outer_nod": 77, "get_nod": [77, 137], "get_outer_nod": 77, "get_node_id": 77, "get_incoming_edg": 77, "has_child": 77, "child": [77, 188, 280], "has_par": 77, "parent": [77, 78, 120, 125, 280], "get_indegre": 77, "get_outdegre": 77, "kmaxaggreg": 77, "ksumaggreg": 77, "kproductaggreg": 77, "koverwriteaggreg": 77, "subproject": 78, "scratch": 78, "readm": 78, "never": [78, 286], "hopefulli": 78, "inspir": [78, 286], "dskiptest": 78, "dmaven": 78, "antrun": 78, "moment": [78, 299], "jni": 78, "mac": [78, 311, 313], "gae_java": 79, "graphscope_typ": 81, "graphscopetyp": 81, "myalgorithm": 81, "filenotfounderror": 82, "permissionerror": 82, "typeerror": [82, 120, 293], "arrowproperti": 83, "subrang": 83, "loader_op": 84, "notimplementederror": 84, "implicitli": 84, "run_app": [89, 90, 107, 115, 116], "copy_typ": 91, "session_id": [93, 97, 120, 148, 149, 286, 290], "graph_typ": [93, 286], "graphtyp": [93, 286, 295, 300], "view_typ": 94, "vertex_or_edge_label_list": 95, "graph_util": 95, "vertexlabel": 95, "op_typ": [97, 120, 290], "uiliti": 97, "result_set": 99, "fetch_typ": 99, "raphscop": 99, "resultsetdagnod": 99, "resultset": [99, 299], "interactive_queri": [103, 104, 130, 293], "request_opt": [103, 104, 149], "interactivequerydagnod": [103, 104, 130], "gremlin_script": [104, 149], "modify_typ": [105, 106], "attr": [105, 106, 120, 140, 153, 154, 155, 286, 289], "type_pb2": [105, 106, 110], "nx_add_edg": 105, "nx_del_edg": 105, "nx_update_edg": 105, "nx_add_nod": 106, "nx_del_nod": 106, "nx_update_nod": 106, "fd": [107, 112, 309], "storage_opt": [107, 112], "write_opt": [107, 112], "adaptor": 107, "result_path": [107, 112], "vertex_collect": 108, "edge_collect": 108, "report_typ": 110, "variati": 110, "node_num": [110, 313, 317], "has_nod": [110, 286], "has_edg": [110, 286], "node_data": 110, "edge_data": [110, 301], "neighbors_by_nod": 110, "succs_by_nod": 110, "preds_by_nod": 110, "neighbors_by_loc": 110, "succs_by_loc": 110, "preds_by_loc": 110, "deg_by_nod": 110, "in_deg_by_nod": 110, "out_deg_by_nod": 110, "deg_by_loc": 110, "in_deg_by_loc": 110, "out_deg_by_loc": 110, "nodes_by_loc": 110, "loc": 110, "multigraph": [110, 151, 153, 161, 165, 174, 179, 180, 206, 207, 215, 217, 230, 231, 232, 286, 289], "multidigraph": [110, 153, 165, 174, 179, 180, 217, 225, 226, 284, 286], "large_attr": [120, 290], "types_pb2": [120, 286], "operationtyp": 120, "opdef": [120, 124], "attrvalu": [120, 148, 317], "largeattrvalu": 120, "op_def_pb2": 124, "incoming_data": [126, 148], "vertex_map": [126, 148], "as_default": [126, 293], "k8s_gs_imag": [128, 133, 293, 311], "k8s_etcd_imag": [128, 133], "k8s_image_pull_secret": [128, 133, 293], "k8s_coordinator_cpu": [128, 133, 293], "k8s_coordinator_mem": [128, 133, 293], "k8s_vineyard_cpu": [128, 133, 293], "k8s_mars_worker_cpu": [128, 133, 293], "k8s_mars_worker_mem": [128, 133, 293], "k8s_mars_scheduler_cpu": [128, 133, 293], "k8s_mars_scheduler_mem": [128, 133, 293], "with_mar": [128, 133, 293], "k8s_waiting_for_delet": [128, 133, 293], "dataset_download_retri": [128, 133], "interactivequeri": [130, 149, 291, 293, 317], "alia": [132, 134, 140, 286, 293, 318], "kv": 133, "cooper": [134, 148], "\u02bbegograph": 134, "\u02bbegotensor": 134, "sample_se": [134, 318], "positive_sampl": [134, 318], "receptive_fn": [134, 318], "egotensor": [134, 142, 318], "egoflow": [134, 142, 318], "cora": [134, 146, 318], "convers": [134, 135, 295], "node_t": [134, 135, 146, 318], "edge_table_with_self_loop": [134, 318], "train_tabl": [134, 318], "val_tabl": [134, 318], "test_tabl": [134, 318], "dataset_fold": [134, 318], "decod": [134, 135, 136, 146, 318], "attr_typ": [134, 135, 136, 146, 318], "1433": [134, 146, 318], "attr_delimit": [134, 135, 136, 318], "learningbasedmodel": [134, 318], "categorical_attrs_desc": [134, 318], "_sample_se": [134, 318], "_positive_sampl": [134, 318], "_receptive_fn": [134, 318], "ego_flow": [134, 318], "src_ego_spec": [134, 318], "pos_src_ego_tensor": [134, 318], "identityencod": [134, 318], "widendeepencod": [134, 318], "feature_encod": [134, 318], "gcnconv": [134, 318], "sparseegographencod": [134, 318], "_encod": [134, 318], "conv_lay": [134, 318], "_supervised_loss": [134, 318], "full_graph_mod": [134, 318], "localtftrain": [134, 318], "model_fn": [134, 146, 318], "batch_szi": [134, 318], "load_graph": [134, 318], "server_id": [134, 318], "server_count": [134, 136, 146, 318], "tracker": [134, 146, 318], "conclud": 134, "bought": 135, "saturdai": 135, "morn": 135, "bigint": 135, "dst_id": [135, 136, 137, 139, 140, 146, 150], "shanghai": 135, "mandatori": 135, "localfilesystem": 135, "pai": [135, 140, 141], "tab": 135, "s2": [135, 251], "hangzhou": [135, 319], "215340": 135, "933091": 135, "grei": 135, "362519": 135, "097545": 135, "chapter": [135, 136, 138, 232, 269], "comma": 135, "dscript": 135, "dentryfil": 135, "dtabl": 135, "odp": 135, "prj": 135, "flag": [135, 136], "define_str": 135, "node_sourc": 135, "edge_sourc": 135, "hash": 135, "bucket_s": 135, "greatli": [135, 136, 298], "your_attr_typ": 135, "you_delimit": 135, "weightd": 135, "scr_id": 135, "10001": [135, 136, 137, 139], "feature1": 135, "10002": [135, 136, 137, 139], "feature2": 135, "10003": [135, 136, 137, 139], "feature3": 135, "123": 135, "124": 135, "\u02bbitem_node_decod": 135, "\u02bbuser_node_decod": 135, "\u02bbedge_decod": 135, "item_node_decod": 135, "user_node_decod": 135, "edge_decod": [135, 146], "graph_object": 135, "commod": 136, "swing": [136, 137], "30001": [136, 137, 139], "30002": [136, 137, 139], "30003": [136, 137, 139], "table_1": 136, "table_2": 136, "dest": 136, "10004": [136, 137], "20001": [136, 137, 139], "20003": [136, 137, 139], "33": [136, 137, 139, 276, 279], "20004": [136, 137, 139], "46": [136, 137, 139, 151, 273], "ui_decod": 136, "uv_decod": 136, "table_3": 136, "table_4": 136, "click_v": 136, "task_index": [136, 146], "task_count": 136, "atyp": 136, "job_nam": [136, 146], "worker_host": 136, "respond": 136, "distributedli": [136, 142, 144, 145, 146], "necessarili": [136, 248], "serious": 136, "decreas": [136, 215, 217], "speak": 136, "client_count": [136, 146], "wait_for_clos": [136, 146], "matter": [136, 292], "infom": 137, "get_topologi": 137, "src_type": 137, "dst_type": 137, "figure1": 137, "topo": 137, "print_al": 137, "egde_typ": 137, "ravers": 137, "string_attr": 137, "src_node": 137, "dst_node": 137, "diment": 137, "dense_shap": 137, "arra": 137, "__next__": 137, "dimenti": 137, "table1": 137, "u_nod": 137, "traves": 137, "get_edg": 137, "inferfac": 137, "table2": 137, "table3": 137, "click_edg": 137, "table4": 137, "conduc": 138, "character": 138, "recept": [138, 142], "ai": 138, "meta_path": 138, "layer_id": 138, "famili": [138, 151, 189, 247, 275], "random_without_replac": 138, "q": [138, 140, 146, 228, 232], "ueri": 138, "default_neighbor_id": 138, "set_default_neighbor_id": [138, 147], "xx": 138, "set_padding_mod": 138, "circular": [138, 140, 190], "alogrithm": 139, "throw": 139, "nodesampl": 139, "node_sampl": 139, "by_ord": 139, "node_from": [139, 150], "edge_src": [139, 150], "edge_dst": [139, 150], "edgesampl": 139, "matur": 140, "dl": 140, "sheer": 140, "sink": 140, "generatortyp": [140, 150], "won": [140, 301], "cursor": 140, "inv": [140, 146, 317], "ingo": 140, "query\u5bf9\u8c61": 140, "outneg": [140, 143], "inneg": [140, 143, 146], "candid": [140, 143], "u2i": 140, "ouv": 140, "func": 140, "512": 140, "edeg": 140, "src_1hop": 140, "dst_1hop": 140, "neg_i": 140, "neg_i_1hop": 140, "parmas_list": 140, "bodi": [140, 144, 252], "params_list": 140, "compli": 140, "arrang": 140, "anonym": [140, 278], "src_attr": 140, "neg_attr": 140, "encode_fn": [140, 146], "src_atr": 140, "outnegv": 140, "gen1": 140, "gen2": 140, "circumst": 140, "sour": 140, "foewa": 140, "from_gener": [140, 146], "make_one_shot_iter": [140, 146], "get_next": [140, 146], "slightli": [141, 205, 292], "zhangjiak": 141, "cp27": 141, "cp27mu": 141, "linux_x86_64": 141, "sudo": [141, 310, 311], "autoconf": 141, "automak": 141, "libtool": 141, "submodul": [141, 144, 298], "your_wheel_nam": [141, 144], "test_cpp_ut": 141, "test_python_ut": 141, "fastgcn": [142, 318], "graphsaint": 142, "amd": 142, "oprat": 143, "object_typ": 143, "oprequest": 144, "req": 144, "oprespons": 144, "params_": 144, "scalar": [144, 151], "tensors_": 144, "redirect": [144, 224], "rewrit": 144, "till": [144, 293], "happen": [144, 298, 301], "stitch": 144, "myoper": 144, "register_oper": 144, "opnam": 144, "randomsampl": 144, "writ": 144, "xxxsampler": 144, "kubeflow": 145, "reader": 145, "seek": 145, "litestr": 145, "char": [145, 148, 298], "buffer": 145, "getfiles": 145, "getrecordcount": 145, "register_file_system": 145, "myfilesystem": 145, "registr": 145, "ppi": 146, "train_supervis": 146, "gen_test_data": 146, "getopt": 146, "argv": 146, "cur_path": 146, "elif": 146, "102": [146, 282], "__name__": 146, "__main__": 146, "dirnam": 146, "rf": 146, "\u4f60\u9700\u8981\u628agen_test_data": 146, "py\u653e\u5230shell\u811a\u672c\u540c\u4e00\u76ee\u5f55\u4e0b": 146, "fi": 146, "sleep": 146, "case_bas": 146, "genetic_algorithm": 146, "neural_network": 146, "probabilistic_method": 146, "reinforcement_learn": 146, "rule_learn": 146, "bag": 146, "1033": 146, "103482": 146, "103515": 146, "31336": 146, "1061127": 146, "05882353": 146, "1106406": 146, "n_featur": 146, "node_decod": 146, "n_class": 146, "140": [146, 209], "n_hop": 146, "n_epoch": 146, "tripl": 146, "graph_object_cn": 146, "md": 146, "sample_gen": 146, "input_fn": 146, "sample_input_fn": 146, "float64": 146, "tensorshap": 146, "layer_featur": 146, "aggregate_fn": 146, "self_vec": 146, "neigh_vec": 146, "raw_feat_layer_index": 146, "layer_index": 146, "variable_scop": 146, "_layer": 146, "auto_reus": 146, "neigh_weight": 146, "get_vari": 146, "self_weight": 146, "output_shap": 146, "get_shap": 146, "neigh_mean": 146, "from_neigh": 146, "matmul": 146, "from_self": 146, "add_n": 146, "leaky_relu": 146, "depth_to_encod": 146, "h_self_vec": 146, "h_neighbor_vec": 146, "features_column": 146, "feature_column": 146, "numeric_column": 146, "loss_fn": 146, "train_op": 146, "global_step": 146, "get_global_step": 146, "estimatorspec": 146, "modekei": 146, "set_xxx": 147, "set_yyi": 147, "other_model": 147, "fill": [147, 187, 198, 208, 242], "nbr_id": 147, "set_default_int_attribut": 147, "set_default_float_attribut": 147, "set_default_string_attribut": 147, "set_inter_threadnum": 147, "intra": [147, 205, 208], "set_intra_threadnum": 147, "16mb": 147, "reset": 147, "enlarg": 147, "set_rpc_message_max_s": 147, "del": [148, 286], "objectnam": 148, "_e": [148, 295, 319], "src_field": [148, 314], "dst_field": [148, 314], "unspecifi": [148, 163], "vid_field": [148, 314], "graph_nod": 148, "restor": 148, "deseri": [148, 298], "detach": 148, "varaibl": 148, "lexic": 148, "classmethod": 148, "broken": 148, "save_to": 148, "path_": 148, "s3": [148, 319], "graphschema": [148, 286], "schema_path": 148, "currrent": 148, "object_id": [148, 149, 150], "filetyp": 148, "ordinari": 148, "f0": 148, "orc": [148, 297], "parquet": [148, 297], "graph_build": 148, "admin": [148, 299], "group_id": 148, "member_s": 148, "leader_student_id": 148, "student": 148, "member_student_id": 148, "group_for_teacher_stud": 148, "group_nam": 148, "establish_d": 148, "teacher_in_charge_id": 148, "teacher": 148, "lesson_num": 148, "avg_scor": 148, "student_id": 148, "salari": 148, "teacher_id": 148, "both_in_out": 148, "unambigu": 148, "orign": 148, "frontend_endpoint": 149, "graph_url": [149, 299, 317], "lifetim": 149, "traversal_sourc": 149, "graphtraversalsourc": 149, "contruct": 149, "runtimeerror": 149, "modern_graph_data_dir": 149, "tolist": [149, 299], "dtype": 150, "pywrap": 150, "nodefrom": 150, "get_handl": 150, "worker_count": 150, "base64": 150, "nstart": 151, "poweriterationfailedconverg": 151, "langvil": 151, "meyer": 151, "survei": [151, 239], "cites": 151, "ist": 151, "psu": 151, "edu": 151, "713792": 151, "jon": 151, "kleinberg": 151, "authorit": 151, "journal": [151, 220, 228, 245, 276, 279, 283], "acm": [151, 226, 277, 309], "604": 151, "1999": [151, 206, 207], "doi": [151, 221, 228, 263], "1145": 151, "324133": 151, "324140": 151, "cornel": 151, "kleinber": 151, "pdf": [151, 233, 235, 236], "load_centr": 151, "loop": [151, 161, 174, 213, 215, 217, 219, 225, 233, 234, 235, 236, 237, 243, 246, 286, 287, 317], "in_degree_centr": [151, 287], "networkxnotimpl": 151, "out_degree_centr": [151, 287], "equat": 151, "ax": 151, "eigenvalu": [151, 231], "virtu": 151, "perron": 151, "frobeniu": 151, "theorem": [151, 230, 242], "0e": 151, "strength": 151, "2f": 151, "networkxpointlessconcept": [151, 281], "null": [151, 168, 184, 185, 192, 199, 251, 281, 286], "networkxerror": [151, 157, 164, 166, 170, 171, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 221, 227, 230, 231, 232, 243, 246, 278, 286, 289], "eigenvector_centrality_numpi": 151, "discern": 151, "phillip": 151, "bonacich": 151, "american": 151, "sociologi": 151, "1170": 151, "1182": 151, "1986": [151, 275], "leonidzhukov": 151, "net": [151, 205], "hse": 151, "socialnetwork": 151, "oxford": [151, 184, 185, 234, 278], "press": [151, 184, 185, 232, 274, 277, 278], "usa": [151, 238, 239, 285], "pp": [151, 215, 218, 219, 220, 233, 239, 240, 277, 283], "169": 151, "x_i": 151, "a_": 151, "x_j": 151, "lambda_": 151, "distant": 151, "penal": 151, "strictli": [151, 205], "invers": [151, 230], "phi": 151, "sqrt": [151, 231], "adjacency_spectrum": 151, "720": 151, "leo": 151, "sociometr": 151, "psychometrika": 151, "1953": 151, "springer": [151, 240], "1007": [151, 185, 221], "bf02289026": 151, "has_path": [151, 287], "djikstra": 151, "floyd": 151, "warshal": 151, "bfs_edg": [151, 287], "depth_limit": 151, "core_numb": 151, "vladimir": 151, "batagelj": 151, "matjaz": 151, "zaversnik": 151, "arxiv": [151, 194, 209, 210, 211, 225, 278], "ab": [151, 209, 210, 211, 225, 233, 237, 278, 280], "0310049": 151, "c_u": 151, "deg": [151, 205, 219, 286], "geometr": [151, 273, 287], "vw": 151, "hat": 151, "uv": [151, 219], "uw": 151, "tot": 151, "2deg": 151, "leftrightarrow": 151, "complete_graph": [151, 157, 286], "saram\u00e4ki": 151, "kivel\u00e4": 151, "onnela": 151, "kaski": 151, "kert\u00e9sz": 151, "027105": 151, "2007": [151, 233, 279], "jponnela": 151, "web_docu": 151, "a9": 151, "intens": 151, "coher": 151, "motif": 151, "065103": 151, "2005": [151, 227, 233], "sign": 151, "correl": 151, "costantini": 151, "perugini": 151, "plo": 151, "e88669": 151, "fagiolo": 151, "76": 151, "026107": 151, "average_clust": [151, 287], "count_zero": 151, "c_v": 151, "nonzero": [151, 215, 232], "avg": 151, "routin": [151, 286], "marcu": 151, "kaiser": 151, "0802": 151, "2512": 151, "g_to_add_to": [153, 154, 155], "nodes_for_cycl": 153, "keyword": [153, 154, 155, 222, 229, 233, 234, 235, 236, 237, 286, 289, 292, 293], "add_path": [153, 155, 286], "add_star": [153, 154], "nodes_for_path": 154, "add_cycl": [154, 155], "nodes_for_star": 155, "star": [155, 192, 201], "middl": 155, "cnbor": 157, "with_data": 158, "empty_graph": [158, 199], "frequenc": 160, "width": 160, "2m": [161, 239], "prevent": 164, "err": 164, "frozen": [164, 169], "unfreez": 164, "frozen_graph": 164, "unfrozen_graph": 164, "is_frozen": 164, "neighbour": 166, "freez": [169, 287], "signifi": [170, 171], "nodelist": [174, 213], "selfloop_edg": [174, 179, 215, 217], "number_of_selfloop": [174, 180], "selfloop": [179, 180, 213, 219], "nloop": 179, "nodes_with_selfloop": [179, 180], "datadict": [180, 286], "datavalu": 180, "attrnam": [180, 317], "edgeit": 180, "ekei": 180, "graph_atlas_g": 184, "linearli": [184, 200], "ronald": [184, 185, 275], "wilson": [184, 185], "1998": [184, 185], "111223": 185, "112222": 185, "automorph": [185, 258], "graph_atla": 185, "expens": 185, "popul": [185, 186, 188, 189, 191, 193, 196, 198, 200, 201, 204, 215, 217, 218, 220, 222, 223, 224, 230, 231, 232, 238, 239, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 281, 288], "book": 185, "violat": 185, "lexicograph": 185, "nondecreas": 185, "001111": 185, "000112": 185, "1008": 185, "3333444": 185, "3333336": 185, "1012": 185, "1213": 185, "1244555": 185, "1244456": 185, "perfectli": 186, "ari": [186, 196], "height": 186, "children": [186, 196, 280], "barbel": [187, 198], "bell": 187, "p_": [187, 219, 233], "mere": [187, 198], "aldou": [187, 198], "jim": [187, 198], "binomi": 188, "leftmost": 188, "ci_n": 189, "x_1": 189, "x_2": 189, "x_m": 189, "mod": [189, 203, 232, 251], "subfamili": 189, "ladder": [190, 197], "cl_n": 190, "k_n": 191, "is_direct": [191, 286], "subset_s": 192, "multipartit": [192, 203], "tripartit": 192, "bc": 192, "complete_bipartite_graph": 192, "c_n": 193, "hierarch": 194, "dorogovtsev": 194, "goltsev": 194, "mend": 194, "mat": 194, "0112143": 194, "kw": [195, 293], "unknown": [195, 298], "abc": 195, "rightmost": 196, "jame": 196, "andrew": 196, "storer": 196, "birkhaus": 196, "boston": 196, "2001": [196, 209, 217, 222, 224, 232, 241, 299], "225": [196, 286], "lollipop": 198, "k_m": 198, "p_n": [198, 200], "etext": 198, "turan": 203, "disjoint": [203, 214, 252], "2r": 203, "tau1": 205, "tau2": 205, "mu": 205, "average_degre": 205, "min_degre": 205, "max_degre": 205, "min_commun": 205, "max_commun": 205, "lfr": 205, "mathrm": 205, "expon": 205, "reassign": [205, 243], "interv": [205, 237, 293], "affili": [205, 313], "random_st": [205, 208, 209, 210, 211, 213, 215, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 235, 236, 237, 240, 241, 242, 246, 278, 281, 283], "exceededmaxiter": 205, "250": 205, "frozenset": [205, 288], "rewir": [205, 207, 211, 243, 246], "wire": 205, "robust": 205, "somewhat": 205, "narrow": 205, "andrea": 205, "lancichinetti": 205, "santo": [205, 209, 210, 211], "fortunato": [205, 209, 210, 211], "filippo": 205, "radicchi": 205, "phy": [205, 217, 222, 223, 224, 227], "rev": [205, 217, 222, 223, 224, 227], "046110": 205, "santofortunato": 205, "caveman": [206, 207, 211], "unclear": [206, 207], "connected_caveman_graph": [206, 212], "watt": [206, 207, 217], "phenomenon": [206, 207], "amer": [206, 207], "493": [206, 207], "527": [206, 207], "caveman_graph": 207, "p_in": [208, 209, 210], "p_out": [208, 209, 210], "gaussian": [208, 234, 235, 236], "drawn": [208, 236], "varianc": 208, "probabilti": [208, 211], "random_partition_graph": [208, 213], "ulrik": 208, "brand": 208, "marco": 208, "gaertler": 208, "dorothea": 208, "wagner": 208, "11th": 208, "europ": 208, "symp": 208, "plant": [209, 210], "random_partition_model": 209, "condon": 209, "karp": 209, "algor": 209, "116": 209, "486": [209, 210, 211], "174": [209, 210, 211], "0906": [209, 210, 211], "0612": [209, 210, 211], "relax": 211, "februari": 211, "num_cliqu": 212, "clique_s": 212, "ring": 212, "stochast": [213, 287], "densiti": [213, 215, 233, 235], "symmetr": [213, 232, 255, 259, 265, 267, 278], "300": [213, 282], "prob": 213, "450": 213, "quotient_graph": 213, "relabel": 213, "245": 213, "348": 213, "405": 213, "051": 213, "022": 213, "planted_partition_graph": 213, "gaussian_random_partition_graph": 213, "gnp_random_graph": [213, 240, 241, 242], "holland": 213, "laskei": 213, "leinhardt": 213, "blockmodel": 213, "109": 213, "1983": 213, "windmil": 214, "thought": 214, "contract": 214, "altern": [214, 233, 237, 286, 298, 299], "wd": 214, "deg_sequ": [215, 216, 217, 218, 220], "pseudograph": [215, 217], "nonneg": [215, 217], "is_graph": [215, 221], "graphic": [215, 217, 220, 221], "realiz": [215, 217, 220, 243, 244, 245, 246, 273, 298], "tend": 215, "poisson": 215, "constant": [215, 317], "siam": [215, 220, 226], "167": 215, "random_sequ": 215, "hundr": [215, 226], "random_powerlaw_tree_sequ": 215, "5000": 215, "actual_degre": 215, "in_degree_sequ": 217, "out_degree_sequ": 217, "directed_random": 217, "configuration_model": [217, 218, 221], "finit": [217, 219, 232], "strogatz": 217, "026118": 217, "din": 217, "dout": 217, "in_deg_sequ": 218, "out_deg_sequ": 218, "kleitman": [218, 220], "valenc": [218, 220], "mathemat": [218, 220, 228, 230, 232, 241], "1973": [218, 220], "w_0": 219, "w_1": 219, "ldot": 219, "w_u": [219, 233, 236], "w_v": [219, 233, 236], "sum_k": 219, "w_k": 219, "z": [219, 232, 233, 237], "mathcal": 219, "ne": 219, "uu": 219, "fan": [219, 233, 309], "chung": [219, 233], "lu": [219, 309], "ann": 219, "combinator": [219, 279], "145": 219, "2002": 219, "joel": 219, "miller": 219, "aric": [219, 233], "hagberg": [219, 233], "waw": [219, 233], "alan": 219, "friez": 219, "paul": 219, "horn": 219, "pawe\u0142": 219, "pra\u0142at": 219, "lnc": 219, "6732": 219, "115": 219, "havel": 220, "hakimi": 220, "networkxexcept": 220, "resort": 220, "496": 220, "506": 220, "1962": [220, 238, 239, 285], "d_m": 221, "uniform": [221, 233, 242], "networkxunfeas": 221, "moshen": 221, "bayati": 221, "jeong": 221, "han": 221, "kim": 221, "amin": 221, "saberi": 221, "algorithmica": 221, "58": 221, "860": 221, "910": 221, "s00453": 221, "009": 221, "9340": 221, "gn": [222, 285], "a_k": 222, "krapivski": [222, 223, 224, 227], "redner": [222, 223, 224], "066123": [222, 224], "gnc": 223, "growth": [223, 283], "036118": 223, "2005k": 223, "gnr": 224, "probabilii": 224, "self_loop": 225, "preferenti": 225, "proport": 225, "peterson": [225, 268], "nichola": 225, "bori": 225, "pittel": 225, "preprint": 225, "1311": 225, "5961": 225, "2013": [225, 245], "gamma": 226, "delta_in": 226, "delta_out": 226, "bia": 226, "bollob\u00e1": 226, "borg": 226, "chay": 226, "riordan": 226, "fourteenth": 226, "annual": 226, "symposium": 226, "132": [226, 241], "139": 226, "diverg": [227, 287], "retent": 227, "disallow": 227, "ispolatov": 227, "yuryev": 227, "061911": 227, "inclus": 228, "knudsen": 228, "michael": 228, "carsten": 228, "wiuf": 228, "markov": 228, "chain": 228, "1155": 228, "190836": 228, "radiu": [229, 234, 235, 236], "chordal": 230, "chord": [230, 244], "modulo": 230, "mildli": 230, "prime": [230, 232], "lubotzki": 230, "invari": 230, "birkh\u00e4us": 230, "verlag": 230, "basel": 230, "1994": 230, "marguli": 231, "gabber": 231, "galil": 231, "palei": 232, "pz": 232, "f_q": 232, "odd": 232, "bolloba": 232, "cambridg": 232, "theta": [233, 236], "po": [233, 234, 235, 236, 237], "p_dist": [233, 235], "geograph": [233, 236], "rectangular": [233, 237], "ge": [233, 237], "prone": 233, "le": [233, 237, 277], "euclidean": [233, 234, 235, 236, 237], "conceiv": 233, "apart": 233, "taxicab": [233, 237], "expovari": [233, 236], "masuda": 233, "miwa": 233, "konno": 233, "036108": 233, "milan": 233, "bradonji\u0107": 233, "allon": 233, "percu": 233, "giant": 233, "antoni": 233, "bonato": 233, "209": 233, "216": 233, "cube": [234, 235, 236, 254, 271], "kdtree": [234, 235, 236], "minkowski": [234, 235, 236], "infin": [234, 235, 236], "erd\u0151": [234, 235, 236], "r\u00e9nyi": [234, 235, 236], "twenti": 234, "2d": [234, 235, 236, 286, 289], "deviat": [234, 235, 236], "gauss": [234, 235, 236], "penros": [234, 235], "mathew": [234, 235], "soft": 235, "exp": [235, 237], "annal": 235, "2016": 235, "986": 235, "1028": 235, "summat": 236, "nodethr": 236, "cole": 236, "maclean": 236, "blog": 236, "thesi": [236, 242], "waxman": 237, "x_min": 237, "y_min": 237, "x_max": 237, "y_max": 237, "Their": 237, "incompat": [237, 298], "rout": 237, "multipoint": 237, "ieee": [237, 245, 246, 278, 283], "1988": 237, "1617": 237, "1622": 237, "harari": [238, 239, 287], "h_": [238, 239], "ceil": 238, "kn": 238, "hnm_harary_graph": 238, "weisstein": 238, "eric": 238, "mathworld": [238, 247, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 266], "wolfram": [238, 247, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 266], "hararygraph": 238, "proc": [238, 239, 243, 244, 285], "nat": [238, 239, 285], "acad": [238, 239, 285], "sci": [238, 239, 285], "1142": [238, 239, 285], "1146": [238, 239, 285], "floor": 239, "hkn_harary_graph": 239, "boesch": 239, "satyanarayana": 239, "suffel": 239, "reliabl": 239, "synthesi": 239, "99": [239, 317], "2009": [239, 279], "uniform_random_intersection_graph": [240, 241], "nikoletsea": 240, "raptopoulo": 240, "spiraki": 240, "icalp": 240, "\u0131az": 240, "karhum": 240, "aki": 240, "lepist": 240, "sannella": 240, "vol": [240, 283], "3142": 240, "lectur": 240, "1029": 240, "1040": 240, "godehardt": 241, "jaworski": 241, "electron": [241, 279], "singer": 242, "cohen": 242, "1995": 242, "phd": 242, "john": [242, 259], "hopkin": 242, "scheinerman": 242, "evolut": 242, "2000": 242, "156": 242, "nkk": [243, 244], "degree_seq": 243, "n_edges_add": 243, "li": [243, 246], "unsatur": 243, "proof": 243, "tillman": [243, 244, 246], "markopoul": [243, 244, 245, 246, 278], "butt": [243, 244, 278], "gjoka": [243, 244, 245, 246], "2k": [243, 244], "kdd": [243, 244], "seconnd": 244, "joint_degre": [245, 246], "diagon": [245, 261], "joint_degree_graph": 245, "kurant": 245, "5k": 245, "infocom": [245, 246, 278], "stanton": 245, "pinar": 245, "prescrib": 245, "experiment": [245, 293], "n_th": 247, "m_1": 247, "singleton": [247, 286], "m_2": 247, "m_i": 247, "mycielskian": 247, "m_": 247, "mycielskigraph": 247, "p_2": 247, "chromat": [248, 279], "2n": 248, "bigcup": 248, "nonisomporph": 249, "adjanc": 249, "matric": [249, 278], "nonisomorph": 250, "shift_list": 251, "cubic": [251, 254, 255, 258, 259, 265, 267, 268, 273], "lcf": [251, 253, 255, 257, 259, 265, 267], "lederberg": 251, "coxet": 251, "frucht": [251, 258], "hamiltonian": [251, 253, 258, 259, 262, 267, 273], "symmetri": [251, 258], "dodecahedral_graph": 251, "desargues_graph": 251, "heawood_graph": 251, "pappus_graph": 251, "s1": 251, "sk": 251, "v_current": 251, "shiftlist": 251, "heawood": [251, 259], "lcfnotat": 251, "bull": 252, "planar": [252, 255, 256, 258], "pendant": 252, "leg": 252, "chv\u00e1tal": 253, "370": 253, "chv": 253, "c3": [253, 265, 266], "a1tal_graph": 253, "chvatalgraph": 253, "platon": [254, 257, 262, 266, 270, 272], "skeleton": [254, 257, 271, 272], "hypercub": 254, "solid": [254, 271, 272], "aris": 254, "desargu": 255, "desarguesgraph": 255, "kite": [256, 263], "diamondgraph": 256, "dodecahedr": 257, "dodecahedron": 257, "regular_dodecahedron": 257, "dodecahedralgraph": 257, "fruchtgraph": 258, "cage": 259, "perci": 259, "nonplanar": 259, "girth": 259, "heawoodgraph": 259, "win": [259, 268], "tue": [259, 268], "nl": [259, 268], "aeb": [259, 268], "housegraph": [260, 261], "pentatop": 261, "icosahedr": 262, "icosahedron": 262, "icosahedralgraph": 262, "krackhardt": 263, "andr": 263, "beverlei": 263, "carol": 263, "dian": 263, "fernando": 263, "garth": 263, "heather": 263, "ik": 263, "jane": 263, "polit": 263, "landscap": 263, "cognit": 263, "administr": 263, "quarterli": 263, "342": [263, 286], "369": 263, "2307": 263, "2393394": 263, "jstor": 263, "june": 263, "1990": 263, "graph_descript": 264, "ltype": 264, "adjacencylist": 264, "from_dict_of_list": 264, "from_edgelist": 264, "xlist": 264, "c_4": 264, "w2": 264, "vk": 264, "wk": 264, "vj": 264, "wj": 264, "moebiu": 265, "kantor": 265, "m\u00f6biu": 265, "petersen": [265, 268], "b6biu": 265, "93kantor_graph": 265, "octahedr": 266, "octahedron": 266, "shake": 266, "hi": [266, 276, 285], "her": 266, "partner": 266, "handshak": 266, "cocktail": 266, "octahedralgraph": 266, "tur": 266, "a1n_graph": 266, "special_cas": 266, "pappu": 267, "juliu": 268, "counterexampl": [268, 273], "bridgeless": 268, "colour": 268, "drg": 268, "maze": 269, "sedgewick": 269, "3rd": 269, "tetrahedr": 270, "k4": 270, "w4": 270, "grpah": 270, "tetrahedron": [270, 272, 273], "truncat": [271, 272, 273, 278], "archimedean": [271, 272], "octagon": 271, "triangular": 271, "truncated_cub": 271, "coolmath": 271, "polyhedra": 271, "hexagon": 272, "equilater": 272, "truncated_tetrahedron": 272, "tutt": 273, "polyhedr": 273, "tait": 273, "conjectur": 273, "polyhedron": 273, "multipli": 273, "davi": 274, "southern": 274, "women": 274, "gardner": 274, "1941": 274, "south": 274, "chicago": 274, "il": 274, "florentin": 275, "breiger": 275, "philippa": 275, "pattison": 275, "cumul": 275, "dualiti": 275, "septemb": 275, "zachari": 276, "karat": 276, "club": 276, "mr": [276, 279], "offic": 276, "wayn": 276, "fission": 276, "anthropolog": 276, "452": 276, "473": 276, "1977": 276, "coappear": 277, "charact": [277, 282, 288], "novel": 277, "miser": 277, "knuth": 277, "1993": 277, "graphbas": 277, "combinatori": 277, "york": 277, "spectral": [278, 287], "forg": 278, "sgf": 278, "eigenstructur": 278, "synthes": 278, "sensit": 278, "percentag": 278, "telecommun": 278, "bernoulli": 278, "baldesi": 278, "1801": 278, "01715": 278, "karate_club_graph": 278, "sud": 279, "81": 279, "810": 279, "herzberg": 279, "murti": 279, "polynomi": 279, "am": 279, "708": 279, "717": 279, "sander": 279, "torsten": 279, "7pp": 279, "2529816": 279, "encyclopedia": 279, "dec": 279, "2019": 279, "letter": 280, "nil": 280, "arboresc": 280, "downward": 280, "synthet": 280, "trie": 280, "recov": [280, 293], "pr\u00fcfer": 281, "from_prufer_sequ": 281, "forest_str": 281, "triad_nam": 282, "003": 282, "012": 282, "021d": 282, "021u": 282, "021c": 282, "111d": 282, "111u": 282, "030t": 282, "030c": 282, "120d": 282, "120u": 282, "120c": 282, "triadic_censu": 282, "10000": 283, "autonom": [283, 285], "elmokashfi": 283, "tier": 283, "mid": 283, "adv": 283, "bidirect": 283, "peer": 283, "commerci": 283, "agreement": 283, "kvalbein": 283, "dovroli": 283, "bgp": 283, "1250": 283, "1261": 283, "octob": 283, "reweight": 284, "mathematician": 285, "frank": 285, "incoming_graph_data": [286, 289], "default_label": [286, 289], "to_networkx_graph": 286, "110": 286, "protect": 286, "bracket": 286, "shortcut": 286, "nbrsdict": 286, "persion": 286, "miscellan": 286, "__contains__": 286, "__getitem__": 286, "adj_dict": 286, "atlasview": 286, "__iter__": 286, "niter": 286, "__len__": 286, "nnode": 286, "u_of_edg": 286, "v_of_edg": 286, "ebunch_to_add": 286, "preced": 286, "wn2898": 286, "node_for_ad": 286, "nodes_for_ad": 286, "hello": 286, "k3": 286, "attrdict": 286, "behav": 286, "idiom": 286, "foovalu": 286, "adj_it": 286, "nbrdict": 286, "adjlist_inner_dict_factori": 286, "neighbordict": 286, "adjlist_outer_dict_factori": 286, "adjlistdict": 286, "clear_edg": 286, "deepcopi": 286, "fresh": [286, 295], "__class__": 286, "degreeview": 286, "nd_view": 286, "edge_attr_dict_factori": 286, "neighborattrdict": 286, "edge_subgraph": 286, "edgeview": 286, "edgedataview": 286, "ddict": 286, "get_edge_data": 286, "edge_dict": 286, "safe": 286, "graph_attr_dict_factori": 286, "graph_cache_factori": 286, "keyerror": 286, "edge_ind": 286, "data_dictionari": 286, "is_multigraph": 286, "corespond": 286, "nbunch_it": 286, "membership": 286, "exhaust": 286, "possibli": 286, "node_attr_dict_factori": 286, "nodeattrdict": 286, "node_dict_factori": 286, "nodedict": 286, "nodeview": 286, "nodedataview": 286, "nodedata": 286, "bar": 286, "Not": [286, 299], "nedg": 286, "Will": 286, "nodes_for_remov": 286, "set_edge_data": 286, "set_node_data": 286, "set_item": 286, "adjedgeattr": 286, "dd": 286, "nodeattr": 286, "netowrkx": 286, "to_undirected_class": 286, "taken": 286, "itertool": 286, "mg": 286, "nd_iter": 286, "outedgeview": 286, "in_edg": 286, "outedgedataview": 286, "has_predecessor": 286, "has_successor": 286, "indegreeview": 286, "inedgeview": 286, "outdegreeview": 286, "pred": 286, "succ": 286, "_convert_arrow_to_dynam": [287, 289], "atla": 287, "triad": 287, "mycielski": 287, "sudoku": 287, "edgetyp": 288, "utf": [288, 299], "filenam": [288, 299], "rb": 288, "bz2": 288, "uncompress": 288, "whitespac": 288, "obsolet": 288, "write_edgelist": 288, "fh": 288, "textlin": 288, "parse_edgelist": 288, "read_adjlist": 288, "marker": 288, "v_0": 289, "v_1": 289, "implicit": 289, "add_label": 290, "eval": 290, "talk": 292, "output_to_cli": [292, 309], "person_id": [292, 299], "400": 292, "preemptiv": 293, "ifnotpres": 293, "512mi": 293, "etcd_addr": 293, "etcd_listening_client_port": 293, "2379": 293, "etcd_listening_peer_port": 293, "2380": 293, "k8s_vineyard_imag": 293, "vineyardcloudn": 293, "1gi": 293, "4mi": 293, "2mi": 293, "k8s_coordinator_pod_node_selector": 293, "k8s_engine_pod_node_selector": 293, "dangling_timeout_second": 293, "deregist": 293, "256mi": 293, "4gi": 293, "5gi": 293, "__enter__": 293, "__exit__": 293, "exc_typ": 293, "exc_valu": 293, "exc_tb": 293, "unregist": 293, "default_config_fil": 293, "gs_config_path": 293, "overwrit": [293, 299], "burstabl": 293, "qo": 293, "preempt": 293, "fallback": 293, "bundl": 293, "half": 293, "etcd01": 293, "etcd02": 293, "etcd03": 293, "2gi": 293, "tinyurl": 293, "3nx6k7ph": 293, "bucket": [293, 309], "path1": 293, "path2": 293, "persistentvolumeclaim": [293, 299], "claimnam": 293, "heartbeat": 293, "dangl": 293, "kube_config": 293, "load_kube_config": 293, "eg": 293, "config_fil": 293, "client_configur": 293, "persist_config": 293, "current_context": 293, "gcp": 293, "refresh": 293, "reject": 293, "lost": 293, "resource_nam": 293, "sigint": 293, "sigterm": 293, "signal": 293, "engine_config": 293, "node_label": 293, "recreat": 293, "load_from_gar": [293, 297], "run_fetch": 293, "lock": 293, "describl": 294, "maxwel": 295, "binlog": 295, "buildgartfrag": 295, "etcd_endpoint": 295, "gartfrag": 295, "etcd_client": 295, "make_shar": 295, "mpi_comm_world": 295, "schema_kei": 295, "gart_schema_p": 295, "to_str": 295, "edge_config_str": 295, "as_str": 295, "gart_blob_m": 295, "_p": 295, "config_str": 295, "edge_config": 295, "inner_vertices_it": 295, "elabel": [295, 300], "edge_it": 295, "hive": 297, "coo": [297, 319], "ordered_by_sourc": 297, "ordered_by_dest": 297, "graph_yaml_path": 297, "broader": 298, "ffi": 298, "agnost": 298, "grin_": 298, "partitioned_graph": 298, "edge_type_nam": 298, "boundari": 298, "sync_properti": 298, "grin_partitioned_graph": 298, "grin_partit": 298, "grin_graph": 298, "grin_get_local_graph_from_partit": 298, "grin_edge_typ": 298, "etyp": 298, "grin_get_edge_type_by_nam": 298, "grin_vertex_type_list": 298, "src_vtype": 298, "grin_get_src_types_from_edge_typ": 298, "dst_vtype": 298, "grin_get_dst_types_from_edge_typ": 298, "src_vtypes_num": 298, "grin_get_vertex_type_list_s": 298, "dst_vtypes_num": 298, "grin_vertex_typ": 298, "grin_get_vertex_type_from_list": 298, "grin_vertex_properti": 298, "dst_vp": 298, "grin_get_vertex_property_by_nam": 298, "grin_null_vertex_properti": 298, "NOT": 298, "grin_vertex_property_t": 298, "dst_vpt": 298, "grin_get_vertex_property_table_by_typ": 298, "grin_datatyp": 298, "dst_vp_dt": 298, "grin_get_vertex_property_data_typ": 298, "grin_vertex_list": 298, "__src_vl": 298, "grin_get_vertex_list": 298, "_src_vl": 298, "grin_select_type_for_vertex_list": 298, "src_vl": 298, "grin_select_master_for_vertex_list": 298, "src_vl_num": 298, "grin_get_vertex_list_s": 298, "grin_vertex": 298, "grin_get_vertex_from_list": 298, "ifdef": 298, "grin_trait_select_edge_type_for_adjacent_list": 298, "grin_adjacent_list": 298, "_adj_list": 298, "grin_get_adjacent_list": 298, "grin_direct": 298, "adj_list": 298, "grin_select_edge_type_for_adjacent_list": 298, "adj_lsit": 298, "endif": 298, "al_sz": 298, "grin_get_adjacent_list_s": 298, "ifndef": 298, "grin_edg": 298, "grin_get_edge_from_adjacent_list": 298, "grin_get_edge_typ": 298, "grin_equal_edge_typ": 298, "grin_get_neighbor_from_adjacent_list": 298, "grin_get_value_from_vertex_property_t": 298, "grin_vertex_ref": 298, "uref": 298, "grin_get_vertex_ref_for_vertex": 298, "recogin": 298, "u_master_partit": 298, "grin_get_master_partition_from_vertex_ref": 298, "send_valu": 298, "fragment_group_id": [298, 300], "get_partitioned_graph_by_object_id": 298, "local_partit": 298, "grin_get_local_partition_list": 298, "pnum": 298, "grin_get_partition_list_s": 298, "grin_get_partition_from_list": 298, "fold": [298, 317], "disclaim": 298, "sacrif": 298, "boilerpl": 298, "ineffici": 298, "enorm": 298, "grin_assume_all_vertex_property_local_complet": 298, "grin_assume_master_vertex_property_local_complet": 298, "grin_assume_by_type_all_vertex_property_local_complet": 298, "grin_assume_by_type_master_vertex_property_local_complet": 298, "assumpt": 298, "wider": 298, "undefin": 298, "tell": 298, "granular": 298, "grin_frag": 298, "storagespecif": 298, "vertexhandl": 298, "goe": 298, "grin_edge_list": 298, "grin_partition_list": 298, "grin_enable_": 298, "_list_arrai": 298, "vertexlist": 298, "grin_enable_vertex_list_arrai": 298, "vl": 298, "idx": 298, "sz": 298, "caller": 298, "_list_iter": 298, "grin_enable_vertex_list_iter": 298, "grin_vertex_list_iter": 298, "grin_get_vertex_list_begin": 298, "grin_get_next_vertex_list_it": 298, "vli": 298, "grin_is_vertex_list_end": 298, "grin_get_vertex_from_it": 298, "grin_get_vertex_type_by_nam": 298, "vtype": 298, "grin_vertex_property_list": 298, "grin_get_vertex_properties_by_nam": 298, "vprop": 298, "vpl": 298, "seperatedli": 298, "with_vertex_label": 298, "with_edge_label": 298, "facili": 298, "recogn": [298, 299], "grin_serialize_vertex_ref": 298, "grin_deserialize_to_vertex_ref": 298, "grin_get_vertex_from_vertex_ref": 298, "vref": 298, "recgon": 298, "reciev": 298, "borrow": 298, "vertexcut": 298, "centur": 298, "edgecut": 298, "repect": 298, "judgement": 298, "columnar": 299, "gear": 299, "compromis": 299, "timestamp": 299, "strict": 299, "foward": 299, "ingestor": [299, 307], "multitud": 299, "exemplifi": 299, "cat": [299, 307], "said": 299, "grpc_port": 299, "gremlin_port": 299, "grpc_endpoint": 299, "conn": 299, "add_vertex_label": 299, "v_label_nam": 299, "add_primary_kei": 299, "pk_name": 299, "prop_name_1": 299, "prop_name_2": 299, "add_edge_label": 299, "e_label_nam": 299, "prop_name_3": 299, "add_properti": 299, "gremlinpython": 299, "xmln": 299, "xsi": 299, "w3": 299, "xmlschema": 299, "schemaloc": 299, "xsd": 299, "modelvers": 299, "gremlinexampl": 299, "codehau": 299, "mojo": 299, "classpath": 299, "mainclass": 299, "compliancelevel": 299, "killaft": 299, "addcontactpoint": 299, "credenti": 299, "valuemap": [299, 317], "println": 299, "javascript": 299, "npm": 299, "catch": 299, "data_load": 299, "load_tool": 299, "xzvf": 299, "alic": 299, "bob": 299, "person_knows_person": 299, "person_id_1": 299, "20210611151923": 299, "seper": 299, "mapreduc": 299, "ldbc_sampl": [299, 317, 319], "data_output": 299, "55555": 299, "person_0_0": [299, 314, 319], "propertiescolmap": 299, "person_knows_person_0_0": [299, 314, 319], "srclabel": 299, "dstlabel": 299, "srcpkcolmap": 299, "dstpkcolmap": 299, "9000": [299, 319], "mb": 299, "columnidx": 299, "propertynam": 299, "_success": 299, "xxxxx": 299, "sst": 299, "00000": 299, "00001": 299, "00002": 299, "load_data": 299, "realtim": 299, "insert_vertex": 299, "vertexrecordkei": 299, "insert_vertic": 299, "update_vertex_properti": 299, "delel": 299, "delete_vertex": 299, "vertex_pk": 299, "delete_vertic": 299, "insert_edg": 299, "edgerecordkei": 299, "update_edge_properti": 299, "delete_edg": 299, "edge_pk": 299, "avaiabl": 299, "remote_flush": 299, "snapshot_id": 299, "primary_kei": 299, "src_vertex_kei": 299, "dst_vertex_kei": 299, "provis": 299, "persistentvolum": 299, "lapp": 299, "reinstal": 299, "pv_name": 299, "pod_nam": [299, 307, 312], "logback": 299, "period": 299, "arrowfragmentgroup": 300, "spread": 300, "ipc": 300, "docket": 300, "string_oid": 300, "local_vertex_map": 300, "ipcclient": 300, "writeout": 300, "nb": 300, "fragmentloc": 300, "instance_id": 300, "gettotalnodesnum": 300, "labeltyp": 300, "vlabel": 300, "vertex_data_t": 300, "edge_data_t": 300, "consolid": [300, 307], "willing": 301, "implic": 301, "polymorph": 301, "instant": 301, "aka": 301, "applciat": 301, "pygrap": [301, 302], "frist": 301, "from_numpi": 301, "bind_sssp1": 301, "delai": 301, "screen": 301, "bind_sssp2": 301, "vertex_bal": 302, "vcut": 302, "ecut": 302, "syoov": 307, "79b44f7b58": 307, "ctmqb": 307, "10m": 307, "9m53": 307, "9m46": 307, "6dd67c65fc": 307, "gn4mb": 307, "15334625083466732": 307, "33d": 307, "kubetl": 307, "\u7684\u56fe\u5206\u6790\u5f15\u64ce\u7ee7\u627f\u4e86": 309, "\u8be5\u7cfb\u7edf\u4e8e": 309, "\u4e0a\u9996\u6b21\u63d0\u51fa\u5e76\u83b7\u5f97\u6700\u4f73\u8bba\u6587\u5956": 309, "\u4e0e\u4ee5\u5f80\u7684\u7cfb\u7edf\u7684\u4e0d\u540c": 309, "\u652f\u6301\u5c06\u4e32\u884c\u56fe\u7b97\u6cd5\u81ea\u52a8\u5e76\u884c\u5316": 309, "\u5728": [309, 310, 311, 312, 313, 316, 317, 318, 319], "\u4e2d": [309, 311, 312, 313, 319], "\u53ea\u9700\u8fdb\u884c\u5f88\u5c0f\u7684\u66f4\u6539\u5373\u53ef\u8f7b\u677e\u5730\u5c06\u4e32\u884c\u7b97\u6cd5\u5373\u63d2\u5373\u7528": 309, "\u4f7f\u5176\u5e76\u884c\u5316\u7684\u8fd0\u884c\u5728\u5206\u5e03\u5f0f\u73af\u5883": 309, "\u5e76\u9ad8\u6548\u5730\u5904\u7406\u5927\u89c4\u6a21\u56fe\u6570\u636e": 309, "\u9664\u4e86\u6613\u4e8e\u7f16\u7a0b\u5916": 309, "\u8fd8\u88ab\u8bbe\u8ba1\u4e3a\u9ad8\u6548\u4e14\u53ef\u62d3\u5c55\u7684\u7cfb\u7edf": 309, "\u53ef\u7075\u6d3b\u5e94\u5bf9\u73b0\u5b9e\u4e2d\u56fe\u5e94\u7528\u591a\u53d8\u7684\u89c4\u6a21": 309, "\u591a\u6837\u6027\u548c\u590d\u6742\u6027": 309, "\u56fe\u5206\u6790\u5f15\u64ce\u5185\u7f6e\u4e86\u8bb8\u591a\u5e38\u7528\u7684\u56fe\u5206\u6790\u7b97\u6cd5": 309, "\u5305\u62ec\u8fde\u901a\u6027\u5206\u6790\u7b97\u6cd5": 309, "\u8def\u5f84\u5206\u6790\u7b97\u6cd5": 309, "\u793e\u533a\u68c0\u6d4b\u548c\u4e2d\u5fc3\u5ea6\u8ba1\u7b97\u7b49\u7c7b\u578b": 309, "\u5185\u7f6e\u7b97\u6cd5\u53ef\u4ee5\u5728\u56fe\u4e0a\u8f7b\u677e\u8c03\u7528": 309, "\u521b\u5efa\u9ed8\u8ba4": 309, "\u5e76\u52a0\u8f7d\u5c5e\u6027\u56fe": 309, "\u5927\u591a\u6570\u5185\u7f6e\u7b97\u6cd5\u53ea\u652f\u6301\u5728\u7b80\u5355\u56fe\u4e0a\u8fdb\u884c\u8ba1\u7b97": 309, "\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5148\u901a\u8fc7\u9876\u70b9\u548c\u8fb9\u7684\u7c7b\u578b\u6765\u751f\u6210\u4e00\u4e2a\u7b80\u5355\u56fe": 309, "result_lpa": 309, "result_sssp": 309, "\u5185\u7f6e\u7b97\u6cd5\u7684\u5b8c\u6574\u5217\u8868\u5982\u4e0b\u6240\u793a": 309, "\u5177\u4f53\u67d0\u4e2a\u7b97\u6cd5\u662f\u5426\u652f\u6301\u5c5e\u6027\u56fe\u4e5f\u5728\u5176\u6587\u6863\u8fdb\u884c\u4e86\u63cf\u8ff0": 309, "\u7b97\u6cd5\u7684\u652f\u6301\u5217\u8868\u4f1a\u968f\u7740\u4e0d\u65ad\u589e\u52a0\u6301\u7eed\u66f4\u65b0\u4e2d": 309, "\u5f53\u5b8c\u6210\u4e00\u6b21\u56fe\u8ba1\u7b97": 309, "\u8ba1\u7b97\u7ed3\u679c\u4f1a\u88ab\u5305\u88c5\u6210": 309, "\u7c7b": [309, 319], "\u4fdd\u5b58\u5728\u5206\u5e03\u5f0f\u96c6\u7fa4\u7684\u5185\u5b58\u4e2d": 309, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u5c06\u7ed3\u679c\u4f20\u5230\u5ba2\u6237\u7aef\u8fdb\u884c\u5904\u7406": 309, "\u6216\u662f\u5199\u5165\u4e91\u4e2d\u67d0\u4f4d\u7f6e\u6216\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf": 309, "\u652f\u6301\u7528\u6237\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u6765\u83b7\u53d6\u7ed3\u679c\u6570\u636e": 309, "\u8f6c\u5316\u4e3a\u76f8\u5e94\u6570\u636e\u7c7b\u578b": 309, "\u6216\u5199\u5165": 309, "\u6216\u672c\u5730\u76ee\u5f55\u4e2d": 309, "pod\u4e2d\u7684\u672c\u5730\u76ee\u5f55": 309, "\u6216\u5199\u5165\u672c\u5730\u7684": 309, "lpa_result": 309, "\u6570\u636e\u7ed3\u6784": 309, "\u6b64\u5916": [309, 313], "\u5982": [309, 312, 315, 317], "\u5feb\u901f\u4e0a\u624b": [309, 315], "\u4e2d\u6240\u793a": 309, "\u7528\u6237\u53ef\u4ee5\u5c06\u8ba1\u7b97\u7ed3\u679c\u52a0\u56de\u5230\u8be5\u56fe\u6570\u636e\u4e2d\u4f5c\u4e3a\u9876\u70b9": 309, "\u7684\u65b0\u5c5e\u6027": 309, "\u5217": 309, "\u5c06\u7ed3\u679c\u4f5c\u4e3a\u65b0\u5217\u6dfb\u52a0\u56de\u5c5e\u6027\u56fe": 309, "\u5217\u540d\u4e3a": 309, "\u5e76\u751f\u6210\u4e00\u5f20\u65b0\u56fe": 309, "new_graph": [309, 314], "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u5668": 309, "\u6765\u5b9a\u4e49\u5c06\u8ba1\u7b97\u7ed3\u679c\u4e2d\u7684\u54ea\u4e9b\u90e8\u5206\u5199\u56de\u56fe\u6570\u636e": 309, "\u9009\u62e9\u5668\u6307\u5b9a\u4e86\u8ba1\u7b97\u7ed3\u679c\u4e2d\u7684\u54ea\u4e00\u90e8\u5206\u4f1a\u88ab\u5904\u7406": 309, "\u7c7b\u4f3c\u7684": 309, "\u56fe\u6570\u636e\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u88ab\u5904\u7406\u6570\u636e\u7684\u4e00\u90e8\u5206": 309, "\u4f8b\u5982\u9876\u70b9id": 309, "\u6211\u4eec\u4e3a\u9009\u62e9\u5668\u4fdd\u7559\u4e86\u4e09\u4e2a\u5173\u952e\u5b57": 309, "\u4ee3\u8868\u7ed3\u679c": 309, "\u5206\u522b\u4ee3\u8868\u9876\u70b9\u548c\u8fb9": 309, "\u4ee5\u4e0b\u662f\u7ed3\u679c\u5904\u7406\u4e2d\u9009\u62e9\u5668\u7684\u4e00\u4e9b\u793a\u4f8b": 309, "\u83b7\u53d6\u9876\u70b9\u4e0a\u7684\u7ed3\u679c": 309, "\u8f6c\u6362\u4e3a": [309, 318], "\u4f7f\u7528\u9876\u70b9\u7684": 309, "\u4f5c\u4e3a\u540d\u4e3a": 309, "\u7684\u5217": 309, "df_vd": 309, "\u4f7f\u7528\u7ed3\u679c\u5217\u4f5c\u4e3a\u540d\u4e3a": 309, "df_result": 309, "property0": 309, "label0": 309, "\u5bf9\u4e8e\u5c5e\u6027\u56fe\u7684\u7ed3\u679c": 309, "\u4f5c\u4e3av\u548ce\u7684\u6807\u7b7e\u9009\u62e9\u5668": 309, "\u5c06": [309, 318], "\u9876\u70b9\u7684": 309, "\u4f5c\u4e3a": [309, 310, 319], "\u4f7f\u7528\u5199\u5728\u5e26\u6709label0\u7684\u9876\u70b9\u4e0a\u7684property0\u4f5c\u4e3a": 309, "gs_data": 309, "\u53ef\u4ee5\u67e5\u770b": 309, "\u83b7\u53d6\u66f4\u591a\u7ec6\u8282": 309, "\u5982\u679c\u5185\u7f6e\u7b97\u6cd5\u65e0\u6cd5\u6ee1\u8db3\u9700\u6c42": 309, "\u7528\u6237\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u7b97\u6cd5": 309, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7": 309, "\u5728\u7eaf": 309, "\u6a21\u5f0f": [309, 317], "\u4e0b\u4f7f\u7528": 309, "\u7f16\u7a0b\u6a21\u578b\u7f16\u5199\u7b97\u6cd5": 309, "\u4e3a\u4e86\u5b9e\u73b0\u81ea\u5df1\u7684\u7b97\u6cd5": 309, "\u7528\u6237\u9700\u8981\u5b9e\u73b0\u6b64\u7c7b": 309, "\u5982\u4ee3\u7801\u6240\u793a": 309, "\u7528\u6237\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u4ee5": 309, "\u88c5\u9970\u7684\u7c7b": 309, "\u5e76\u63d0\u4f9b\u4e09\u4e2a\u4e32\u884c": 309, "\u56fe\u7b97\u6cd5\u51fd\u6570": 309, "\u51fd\u6570\u7528\u4e8e\u8bbe\u7f6e\u7b97\u6cd5\u521d\u59cb\u72b6\u6001": 309, "\u51fd\u6570\u5b9a\u4e49\u7b97\u6cd5\u7684\u5c40\u90e8\u8ba1\u7b97": 309, "\u51fd\u6570\u5b9a\u4e49\u5bf9\u5206\u533a\u6570\u636e\u7684\u589e\u91cf\u8ba1\u7b97": 309, "\u4e0e": 309, "\u76f8\u5173\u7684\u5b8c\u6574": 309, "\u53ef\u4ee5\u53c2\u8003": 309, "\u4ee5\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5": 309, "\u4e3a\u4f8b": [309, 313], "\u7528\u6237\u5728": 309, "\u6a21\u578b\u4e2d\u5b9a\u4e49\u7684": 309, "\u7b97\u6cd5\u53ef\u5982\u4e0b\u6240\u793a": 309, "\u521d\u59cb\u5316\u6bcf\u4e2a\u9876\u70b9\u7684\u8ddd\u79bb": 309, "\u4ececontext\u4e2d\u83b7\u53d6\u6e90\u9876\u70b9": 309, "\u5728\u6e90\u9876\u70b9\u6240\u5728\u5206\u533a\u4e2d": 309, "\u8fd0\u884cdijkstra\u7b97\u6cd5\u4f5c\u4e3a\u90e8\u5206\u8ba1\u7b97": 309, "\u4f7f\u7528\u8fb9\u4e0a\u7b2c\u4e09\u5217\u6570\u636e\u4f5c\u4e3a\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb": 309, "\u589e\u91cf\u8ba1\u7b97": 309, "\u66f4\u65b0\u6700\u77ed\u8ddd\u79bb": 309, "\u7528\u6237\u4ec5\u9700\u8981\u8bbe\u8ba1\u548c\u5b9e\u73b0\u5355\u5206\u533a\u7684\u4e32\u884c\u7b97\u6cd5": 309, "\u800c\u4e0d\u9700\u8981\u8003\u8651\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\u7684\u5206\u533a\u901a\u4fe1\u548c\u6d88\u606f\u4f20\u9012": 309, "\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b": [309, 319], "\u7ecf\u5178\u7684": 309, "\u7b97\u6cd5\u53ca\u5176\u589e\u91cf\u7248\u672c\u5c31\u53ef\u4ee5\u7528\u4e8e\u5728\u96c6\u7fa4\u4e0a\u7684\u5927\u89c4\u6a21\u56fe\u6570\u636e\u8ba1\u7b97": 309, "\u9664\u4e86\u57fa\u4e8e\u5b50\u56fe\u7684": 309, "\u6a21\u578b\u4e4b\u5916": 309, "\u4e5f\u652f\u6301\u4ee5\u9876\u70b9\u4e3a\u4e2d\u5fc3\u7684": 309, "\u7f16\u7a0b\u6a21\u578b": 309, "\u60a8\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u4ee5\u4e0b\u7b97\u6cd5\u7c7b\u6765\u5728": 309, "\u6a21\u578b\u4e2d\u5f00\u53d1\u7b97\u6cd5": 309, "\u6a21\u578b\u4e0d\u540c": 309, "\u7b97\u6cd5\u7c7b\u7684\u88c5\u9970\u5668\u4e3a": 309, "\u8be5\u7c7b\u65b9\u6cd5\u662f": 309, "\u5b9a\u4e49\u5728\u9876\u70b9\u4e0a\u7684": 309, "\u800c\u4e0d\u540c\u4e8e": 309, "\u6a21\u578b\u4e2d\u5b9a\u4e49\u5728\u56fe\u5206\u533a\u4e0a": 309, "\u8fd8\u662f\u4ee5": 309, "\u6a21\u578b\u4e0b\u7684\u7b97\u6cd5\u5982\u4e0b\u6240\u793a": 309, "\u88c5\u9970\u5668": 309, "\u5b9a\u4e49\u9876\u70b9\u6570\u636e\u548c\u6d88\u606f\u6570\u636e\u7684\u7c7b\u578b": 309, "\u652f\u6301\u7528\u6237\u5728\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u901a\u8fc7": 309, "\u4e0a\u7684\u63a5\u53e3\u6765\u4f7f\u7528\u5b9a\u4e49\u5728": 309, "\u4e2d\u7684": [309, 310, 312], "\u51fd\u6570": [309, 317], "\u4e0b\u5217\u4ee3\u7801": 309, "\u4f1a\u88ab\u7ffb\u8bd1\u6210\u5982\u4e0b\u7684": 309, "\u4ee3\u7801\u4ee5\u9ad8\u6548\u5730\u6267\u884c": 309, "\u7528\u6237\u9700\u8981\u5728\u5b9a\u4e49\u7b97\u6cd5\u540e\u8c03\u7528\u7b97\u6cd5": 309, "\u52a0\u8f7d\u81ea\u5df1\u7684\u7b97\u6cd5": 309, "\u5728\u56fe\u4e0a\u8fd0\u884c\u81ea\u5df1\u7684\u7b97\u6cd5": 309, "\u5f97\u5230\u8ba1\u7b97\u7ed3\u679c": 309, "\u8fd9\u91cc": [309, 310, 319], "\u662f\u4e0e": 309, "\u76f8\u5bf9\u5e94\u7684": 309, "\u5728\u5f00\u53d1\u548c\u6d4b\u8bd5\u4e4b\u540e": 309, "\u60a8\u53ef\u4ee5\u901a\u8fc7": 309, "\u65b9\u6cd5\u5c06\u7b97\u6cd5\u4fdd\u5b58\u6210": 309, "\u5305\u4ee5\u5907\u5c06\u6765\u4f7f\u7528": 309, "\u5728\u6b64\u4e4b\u540e": 309, "\u60a8\u53ef\u4ee5\u4ece": 309, "\u5305\u52a0\u8f7d\u81ea\u5b9a\u4e49\u7684\u7b97\u6cd5": 309, "\u4ecegar\u5305\u4e2d\u52a0\u8f7d\u81ea\u5df1\u7684\u7b97\u6cd5": 309, "\u652f\u6301\u7528\u6237\u7f16\u5199java\u7684pi": 309, "\u5e76\u4e14\u8fd0\u884c\u5728\u56fe\u5206\u6790\u5f15\u64ce\u4e0a": 309, "\u6211\u4eec\u9996\u5148\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u6f14\u793a\u5982\u679c\u5728graphscop": 309, "\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8fd0\u884c\u4e00\u4e2ajava\u7684\u56fe\u7b97\u6cd5": 309, "\u7136\u540e\u6211\u4eec\u5c06\u5c55\u793a\u5982\u679c\u5b9e\u73b0\u5e76\u8fd0\u884c\u81ea\u5b9a\u4e49\u7684java\u56fe\u7b97\u6cd5": 309, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7ecf\u5178\u56fe\u5206\u6790\u7b97\u6cd5\u7684\u793a\u4f8b\u5b9e\u73b0": 309, "\u901a\u8fc7\u4e0b\u9762\u5c55\u793a\u7684\u4f8b\u5b50": 309, "\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u5728graphscope\u7684\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8bd5\u7740\u8fd0\u884c\u4ed6\u4eec": 309, "\u9996\u5148\u4f60\u9700\u8981\u4ece\u4e0b\u8f7d\u6211\u4eec\u63d0\u4f9b\u7684\u793a\u4f8bapp\u7684\u5408\u96c6": 309, "\u65e0\u9700\u4efb\u4f55\u66f4\u6539\u4f60\u5c31\u53ef\u4ee5\u5728": 309, "graphscope\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8fd0\u884c\u8fd9\u4e9b\u793a\u4f8b\u7b97\u6cd5": 309, "\u7136\u540e\u4f60\u9700\u8981\u6253\u5f00graphscope\u7684python": 309, "\u5c1d\u8bd5\u8f7d\u56fe\u5e76\u4e14\u8fd0\u884c\u4e00\u4e2a\u7b80\u5355\u7684bfs\u7684\u7b97\u6cd5": 309, "dist_0": 309, "\u4e3a\u4e86\u7f16\u5199java\u5b9e\u73b0\u7684\u56fe\u7b97\u6cd5": 309, "\u7528\u6237\u9700\u8981\u501f\u52a9\u4e8e": 309, "\u8bf7\u53c2\u8003": [309, 317], "\u6765\u5c06": 309, "\u5b89\u88c5\u5230\u4f60\u7684\u672c\u5730\u73af\u5883\u4e0a": 309, "\u5b89\u88c5\u5b8c\u6210\u540e": 309, "\u4f60\u9700\u8981\u5c06": 309, "\u7684\u4f9d\u8d56\u6dfb\u52a0\u5230\u4f60\u7684maven\u9879\u76ee\u4f9d\u8d56\u4e2d": 309, "\u7528\u6237\u5e94\u5f53\u6ce8\u610f\u5728": 309, "\u7684\u4f9d\u8d56\u914d\u7f6e\u4e0a\u5e94\u5f53\u6dfb\u52a0": 309, "\u6765\u786e\u4fdd": 309, "\u6240\u6709\u5fc5\u8981\u7684\u4f9d\u8d56\u90fd\u88ab\u5305\u62ec\u5230": 309, "\u7528\u6237\u5728\u5f00\u53d1\u81ea\u5df1\u7b97\u6cd5\u7684\u8fc7\u7a0b\u4e2d": 309, "\u53ef\u80fd\u4f1a\u7528\u5230\u5176\u4ed6\u7684\u7b2c\u4e09\u65b9jar\u5305": 309, "\u4e3a\u4e86\u89e3\u51b3\u4f9d\u8d56jar\u5305\u7684\u7248\u672c\u95ee\u9898": 309, "\u7528\u6237\u9700\u8981\u4f7f\u7528\u786e\u4fdd\u81ea\u5df1\u751f\u6210\u7684jar\u5305\u5305\u542b\u6240\u6709\u4f9d\u8d56\u7684jar\u5305": 309, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528maven\u63d2\u4ef6": 309, "pluge": 309, "\u7528\u6237\u5728\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5\u65f6": 309, "\u7528\u6237\u9700\u8981\u6309\u7167": 309, "\u6765\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7b97\u6cd5": 309, "\u5e76\u4e14\u9700\u8981\u6839\u636e\u9700\u8981\u7684app\u7c7b\u578b\u6765\u5b9e\u73b0": 309, "\u4e2d\u76f8\u5e94\u7684\u63a5\u53e3\u5e76\u4e14\u5b9e\u73b0\u63a5\u53e3": 309, "\u5982\u679c\u7528\u6237\u671f\u671b\u7b97\u6cd5\u8fd0\u884c\u5728\u5c5e\u6027\u56fe\u4e0a": 309, "\u90a3\u4e48\u5b9a\u4e49\u7684app\u5e94\u8be5\u5b9e\u73b0\u63a5\u53e3": 309, "defaultpropertyappbas": 309, "\u6216": [309, 310, 311, 312, 315, 317], "parallelpropertyappbas": 309, "\u5982\u679c\u7528\u6237\u671f\u671b\u7b97\u6cd5\u8fd0\u884c\u5728\u7b80\u5355\u56fe\u4e0a": 309, "\u90a3\u4e48\u5b9a\u4e49\u7684app\u5e94\u8be5\u5b9e\u73b0\u501f\u53e3": 309, "defaultappbas": 309, "\u540c\u65f6\u7528\u6237\u9700\u8981\u5b9e\u73b0app\u76f8\u5e94\u7684": 309, "\u6765\u4fdd\u5b58\u8de8superstep\u7684\u6570\u636e": 309, "\u5176\u5e94\u8be5\u662f": 309, "defaultpropertycontextbas": 309, "parallelpropertycontextbas": 309, "defaultcontextbas": 309, "\u6216\u8005": [309, 311, 318, 319], "\u7684\u7684\u5b50\u7c7b": 309, "\u901a\u8fc7\u7ee7\u627f": 309, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u5230\u4e0d\u540c\u7c7b\u578b\u7684context\u6240\u62e5\u6709\u7684\u7279\u6027": 309, "\u901a\u8fc7\u8fd9\u4e24\u79cdcontext\u63d0\u4f9b\u7684\u501f\u53e3\u6240\u5b58\u50a8\u7684\u6570\u636e\u5728\u7a0b\u5e8f\u6267\u884c\u5b8c\u4e4b\u540e\u53ef\u4ee5\u88ab\u7528\u6237\u8bbf\u95ee": 309, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5728python": 309, "client\u4e2dquery\u8fd4\u56de\u7684context": 309, "\u5bf9\u8c61\u6765\u8bbf\u95ee\u8fd9\u4e9b\u6570\u636e": 309, "\u8fd9\u91cc\u6211\u4eec\u5c55\u793a\u4e00\u4e2a\u7b80\u5355\u7684app\u7684\u5b9e\u73b0": 309, "\u5b83\u6240\u505a\u7684\u4e8b\u60c5\u53ea\u662f\u5bf9\u4e00\u4e2a\u7b80\u5355\u56fe\u7684\u6240\u6709\u8fb9\u8fdb\u884c\u4e86\u904d\u5386": 309, "\u8be5app\u5bf9\u5e94\u7684context\u7684\u5b9e\u73b0": 309, "\u5728\u5b9e\u73b0\u4e86\u81ea\u5df1\u7684\u7b97\u6cd5\u4e4b\u540e": 309, "\u7528\u6237\u53ef\u80fd\u4f1a\u60f3\u5728\u63d0\u4ea4\u5230graphscope\u7684\u56fe\u5206\u6790\u5f15\u64ce\u8fd0\u884c\u524d": 309, "\u5148\u5728\u672c\u5730\u9a8c\u8bc1\u7b97\u6cd5\u5b9e\u73b0\u7684\u6b63\u786e\u6027": 309, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u811a\u672c\u6765\u6ee1\u8db3\u7528\u6237\u7684": 309, "\u8fd9\u4e2a\u9700\u6c42": 309, "\u4e3a\u4e86\u9a8c\u8bc1\u7b97\u6cd5\u5b9e\u73b0\u7684\u6b63\u786e\u6027": 309, "\u7528\u6237\u53ea\u9700\u8981\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4": 309, "graphscope_repo": 309, "app_class_nam": 309, "java_path": 309, "path_to_your_jar": 309, "param_str": 309, "params_str": 309, "\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u7684java": 309, "app\u7684\u7c7b\u7684\u5168\u540d": 309, "\u6307\u5411\u5305\u542b\u7528\u6237\u60f3\u8981\u8fd0\u884c\u7684\u7b97\u6cd5\u7684jar\u5305": 309, "\u53ef\u4ee5\u901a\u8fc7": 309, "\u6765\u5236\u5b9acontext\u521d\u59cb\u5316\u9700\u8981\u7684\u53c2\u6570": 309, "\u4f8b\u5982\u5bf9\u4e8ebfs\u7b97\u6cd5\u53ef\u4ee5\u4f7f\u7528": 309, "\u6765\u6807\u8bb0\u521d\u59cb\u8282\u70b9\u662f6": 309, "\u5e76\u884c\u7ebf\u7a0b\u6570\u4e3a1": 309, "\u53ef\u4ee5": 309, "\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u6765\u8fd0\u884ctravers": 309, "jar_path": 309, "\u5728\u672c\u5730\u9a8c\u8bc1\u81ea\u5b9a\u4e49\u7b97\u6cd5\u7684\u6b63\u786e\u6027\u4e4b\u540e": 309, "\u4f60\u53ef\u4ee5\u901a\u8fc7graphscope\u7684python": 309, "client\u6765\u63d0\u4ea4\u8fd0\u884cjar\u5305": 309, "\u4e00\u4e2ajar\u5305\u4e2d\u53ef\u4ee5\u5305\u542b\u4e0d\u540c\u7684app\u5b9e\u73b0": 309, "\u7528\u6237\u53ef\u4ee5\u591a\u6b21\u63d0\u4ea4\u76f8\u540c\u7684jar\u5305\u4f46\u662f\u8fd0\u884c\u4e0d\u540c": 309, "\u7684app": 309, "\u8bf7\u8010\u5fc3\u7b49\u5f85\u8ba1\u7b97\u5b8c\u6210": 309, "\u5f53\u8ba1\u7b97\u5b8c\u6210\u540e": 309, "\u4f60\u53ef\u4ee5\u901a\u8fc7": [309, 310, 312], "\u5bf9\u8c61\u6765\u83b7\u53d6\u8ba1\u7b97\u7ed3\u679c": 309, "\u76f8\u5173\u8bba\u6587": 309, "wenfei": 309, "jingbo": 309, "xu": 309, "wenyuan": 309, "yu": 309, "jingren": 309, "zhou": 309, "xiaojian": 309, "luo": 309, "qiang": 309, "yin": 309, "cao": 309, "ruiqi": 309, "tod": [309, 315], "yinghui": 309, "wu": 309, "jiaxin": 309, "jiang": 309, "43rd": 309, "zeyu": 309, "zheng": 309, "bohan": 309, "chao": 309, "tian": 309, "\u4ee5": [310, 313, 314, 316, 319], "\u955c\u50cf\u7684\u65b9\u5f0f\u5206\u53d1\u5f15\u64ce\u7b49\u7ec4\u4ef6": 310, "\u9ed8\u8ba4\u60c5\u51b5\u4e0b": [310, 312], "\u5982\u679c\u8fd0\u884c": 310, "\u7684\u96c6\u7fa4\u673a\u5668\u4e0a\u4e0d\u5b58\u5728\u8be5\u955c\u50cf": 310, "\u5219\u4f1a\u62c9\u53d6\u5bf9\u5e94\u7248\u672c\u7684\u6700\u65b0\u955c\u50cf": 310, "\u56e0\u6b64": [310, 311, 313], "\u8bf7\u786e\u4fdd\u60a8\u7684\u96c6\u7fa4\u53ef\u4ee5\u8bbf\u95ee\u516c\u5171\u955c\u50cf\u4ed3\u5e93": 310, "\u4f1a\u8bdd": [310, 313], "\u5ba2\u6237\u7aef": [310, 311, 315], "\u5b83\u5c01\u88c5": 310, "\u7ba1\u7406\u7740": 310, "\u5f15\u64ce\u7684\u5404\u79cd\u7ec4\u4ef6": 310, "\u5e76": 310, "\u8fde\u63a5": 310, "\u64cd\u4f5c\u7528\u6237\u5728": 310, "\u96c6\u7fa4\u4e0a\u7684": 310, "\u5f15\u64ce": 310, "\u5982\u4e0a\u8ff0\u4ee3\u7801\u6240\u793a": 310, "\u7528\u6237\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u901a\u8fc7\u4f1a\u8bdd\u6765\u62c9\u8d77\u4e00\u4e2a": 310, "\u5b9e\u4f8b": 310, "\u7528\u6237\u6709\u65f6\u9700\u8981\u4f7f\u7528\u5728\u672c\u673a\u78c1\u76d8\u4e0a\u7684\u6570\u636e": 310, "\u6211\u4eec\u63d0\u4f9b\u4e86\u9009\u9879\u4f9b\u7528\u6237\u5c06\u672c\u673a\u7684\u76ee\u5f55\u6302\u8f7d\u5230\u96c6\u7fa4\u4e0a": 310, "\u5047\u5b9a\u6211\u4eec\u8981\u5c06\u672c\u673a\u7684": 310, "\u7684\u8def\u5f84\u6302\u8f7d\u5230": 310, "\u8def\u5f84": [310, 319], "\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5982\u4e0b\u4e00\u4e2a\u5b57\u5178": 310, "\u7136\u540e": [310, 318], "\u5c06\u5176\u901a\u8fc7": 310, "\u7684\u53c2\u6570\u4f20\u7ed9\u4f1a\u8bdd\u7684\u6784\u9020\u51fd\u6570": 310, "\u6ce8\u610f\u8fd9\u91cc\u7684\u672c\u673a\u8def\u5f84\u662f\u76f8\u5bf9\u4e8e": 310, "\u8282\u70b9\u7684\u6982\u5ff5": 310, "\u5982\u679c\u4f60\u662f\u901a\u8fc7": 310, "\u521b\u5efa\u7684\u96c6\u7fa4": 310, "\u90a3\u4e48\u4f60\u9700\u8981\u5c06\u8fd9\u4e2a\u76ee\u5f55\u62f7\u8d1d\u5230": 310, "\u7684\u865a\u62df\u4e3b\u673a\u7684\u76f8\u5e94\u8def\u5f84\u4e0a": 310, "\u6216\u8005\u5728\u914d\u7f6e\u4e2d\u5c06\u8def\u5f84\u63d0\u524d\u6302\u8f7d\u5230\u865a\u62df\u4e3b\u673a\u4e0a\u53bb": 310, "\u67e5\u770b\u66f4\u591a\u7ec6\u8282": 310, "\u4e0a\u7684\u4e00\u4e2a": 310, "\u5b9e\u4f8b\u5305\u542b": 310, "\u4e00\u4e2a\u8fd0\u884c": 310, "\u7684": [310, 311, 312, 315, 320], "\u8d1f\u8d23\u5143\u4fe1\u606f\u7684\u540c\u6b65": 310, "\u8d1f\u8d23\u5bf9": 310, "\u5f15\u64ce\u5bb9\u5668\u7684\u7ba1\u7406": 310, "\u4ee5\u53ca\u4e00\u7ec4\u8fd0\u884c": 310, "\u5f15\u64ce\u5bb9\u5668\u7684": 310, "replicaset": 310, "\u5bf9\u8c61": 310, "\u540e\u7aef\u670d\u52a1\u7684\u5165\u53e3": 310, "\u901a\u8fc7": [310, 313], "\u63a5\u6536\u6765\u81ea": 310, "\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u548c\u547d\u4ee4": 310, "\u5e76\u7ba1\u7406\u7740\u56fe\u5206\u6790\u5f15\u64ce": 310, "\u56fe\u67e5\u8be2\u5f15\u64ce": 310, "\u56fe\u5b66\u4e60\u5f15\u64ce": [310, 315], "\u7684\u751f\u547d\u5468\u671f": 310, "\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u914d\u7f6e\u5f15\u64ce\u955c\u50cf\u5730\u5740\u7b49\u53c2\u6570": 310, "\u8bf7\u5728": 310, "\u4e2d\u53c2\u9605\u66f4\u591a\u7684\u8be6\u7ec6\u4fe1\u606f": 310, "\u83b7\u53d6\u5e76\u6dfb\u52a0\u4ed3\u5e93\u4fe1\u606f": 310, "\u5b89\u88c5": [310, 315], "release_nam": 310, "\u68c0\u6d4bgraphscope\u670d\u52a1\u53ef\u7528\u6027": 310, "\u53c2\u8003": 310, "\u8be5\u94fe\u63a5": 310, "\u4ee5\u901a\u8fc7python\u5ba2\u6237\u7aef\u8fde\u63a5\u5230\u9884\u542f\u52a8\u7684graphscope\u670d\u52a1": 310, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u5728aws\u6216\u963f\u91cc\u4e91\u4e0a\u521b\u5efa": 310, "\u96c6\u7fa4\u7684\u4ea4\u4e92\u5f0f\u811a\u672c": 310, "\u8fd9\u4e00\u811a\u672c\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u4f7f\u7528\u5df2\u6709\u7684\u96c6\u7fa4\u6216\u521b\u5efa\u65b0\u7684": 310, "\u96c6\u7fa4": [310, 312, 316], "\u7136\u540e\u8f93\u51fa\u96c6\u7fa4\u7684\u914d\u7f6e\u6587\u4ef6": 310, "\u7528\u6cd5\u5982\u4e0b": 310, "\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7": 310, "launch_clust": 310, "\u83b7\u5f97\u66f4\u8be6\u7ec6\u7684\u5e2e\u52a9\u4fe1\u606f": 310, "pyyaml": 310, "boto3": 310, "your_access_key_id": 310, "your_access_key_secret": 310, "region": 310, "your_region_nam": 310, "kube_config_path": 310, "alibabacloud_cs20151215": 310, "alibabacloud_ecs20140526": 310, "alibabacloud_vpc20160428": 310, "your_region_id": 310, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u5728\u672c\u5730\u5b89\u88c5graphscope\u76f8\u5173\u4f9d\u8d56\u7684\u811a\u672c": 310, "\u8be5\u811a\u672c\u53ef\u4ee5\u8fd0\u884c\u5728": 310, "\u5e73\u53f0\u4e0a": 310, "\u4e3b\u8981\u7684\u7528\u6cd5\u5982\u4e0b": 310, "\u83b7\u53d6\u66f4\u8be6\u7ec6\u7684\u5e2e\u52a9\u4fe1\u606f": 310, "\u5f00\u53d1\u76f8\u5173\u4f9d\u8d56": 310, "\u672c\u5730\u90e8\u7f72": 310, "graphscope_env": [310, 311], "\u7684\u80cc\u540e\u6709\u4e00\u7fa4\u6d3b\u8dc3\u7684\u5de5\u7a0b\u4eba\u5458\u548c\u7814\u7a76\u4eba\u5458\u56e2\u961f\u6765\u63a8\u8fdb\u65e5\u5e38\u7684\u5f00\u53d1\u548c\u7ef4\u62a4": 311, "\u6211\u4eec\u70ed\u5ff1\u6b22\u8fce\u6765\u81ea\u5f00\u6e90\u793e\u533a\u7684": 311, "\u4e3a\u6539\u5584\u8be5\u9879\u76ee\u6240\u505a\u7684\u4efb\u4f55\u8d21\u732e": 311, "\u9075\u5faa": 311, "\u7684\u5f00\u6e90\u534f\u8bae": 311, "\u9700\u8981\u4e00\u4e9b\u7b2c\u4e09\u65b9\u7684\u5de5\u5177\u548c\u4f9d\u8d56": 311, "\u4e3a\u4e86\u8ba9\u5f00\u53d1\u8005\u66f4\u5bb9\u6613\u4e0a\u624b": 311, "\u6211\u4eec\u63d0\u4f9b\u4e86\u5b89\u88c5\u4e86\u6240\u9700\u4f9d\u8d56\u7684": 311, "\u955c\u50cf": 311, "\u5f00\u53d1\u8005\u9700\u8981\u901a\u8fc7": 311, "\u7684\u547d\u4ee4\u4ece\u6211\u4eec\u7684\u5f00\u6e90\u4ee3\u7801\u5e93": 311, "\u4e2d\u83b7\u5f97\u6700\u65b0\u7248\u7684\u4ee3\u7801": 311, "\u5728\u6b64\u57fa\u7840\u4e0a\u505a\u5f00\u53d1\u6216\u4ee3\u7801\u7684\u66f4\u6539": 311, "\u7136\u540e\u5728\u4ee3\u7801\u7684\u6839\u76ee\u5f55": 311, "\u6267\u884c": 311, "10240m": 311, "minitest": 311, "unittest": 311, "\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u6784\u5efa\u547d\u4ee4\u5f00\u53d1\u5e76\u6d4b\u8bd5\u5176\u4e2d\u67d0\u4e00\u4e2a\u6a21\u5757": 311, "\u6bd4\u5982": [311, 319], "\u56fe\u5206\u6790\u5f15\u64ce": [311, 315], "\u6a21\u5757": 311, "\u7136\u540e\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u6784\u5efa": 311, "\u8be5\u547d\u4ee4\u4f1a\u5f00\u59cb": 311, "\u7684\u6784\u5efa\u8fc7\u7a0b": 311, "\u8be5\u8fc7\u7a0b\u5c06\u5728": 311, "\u7684\u5bb9\u5668\u4e2d\u6784\u5efa\u5f53\u524d\u6e90\u4ee3\u7801": 311, "\u5e76\u5c06\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u590d\u5236\u5230": 311, "\u8fd0\u884c\u65f6\u57fa\u7840\u955c\u50cf": 311, "\u751f\u6210\u7684\u955c\u50cf\u5c06\u88ab\u6807\u8bb0": 311, "\u4e3a": [311, 312, 313], "shortsha": 311, "\u5ba2\u6237\u7aef\u4e0d\u5305\u542b\u5728\u8be5\u955c\u50cf\u4e2d": 311, "\u6784\u5efa\u4e5f\u4e0e\u5f15\u64ce\u6709\u6240\u4e0d\u540c": 311, "\u5982\u679c\u5f00\u53d1\u8005\u6b63\u5728\u5f00\u53d1": 311, "\u5ba2\u6237\u7aef\u5e76\u4e14\u672a\u4fee\u6539\u5f15\u64ce\u76f8\u5173\u7684\u6587\u4ef6": 311, "\u90a3\u4e48": 311, "\u955c\u50cf\u662f\u4e0d\u9700\u8981\u91cd\u5efa\u7684": 311, "\u5f00\u53d1\u8005\u53ea\u9700\u8981\u5728\u672c\u5730\u91cd\u65b0\u5b89\u88c5": 311, "\u5ba2\u6237\u7aef\u5373\u53ef": 311, "\u6d4b\u8bd5\u65b0\u6784\u5efa\u7684\u955c\u50cf": 311, "\u7528\u6237\u53ef\u4ee5\u624b\u52a8\u6253\u5f00\u4e00\u4e2a\u4f1a\u8bdd": 311, "\u6307\u5b9a\u7528\u65b0\u7f16\u8bd1\u7684\u955c\u50cf": 311, "\u4e0b\u7684": 311, "\u5206\u53d1\u5305\u662f\u57fa\u4e8e": 311, "manylinux2014": 311, "\u73af\u5883\u4e0b\u6784\u5efa\u7684": 311, "install_prefix": 311, "\u4e0b\u5206\u522b\u6784\u5efa": 311, "\u7531\u4e8e": 311, "\u4e0b\u7684\u6784\u5efa\u8fc7\u7a0b\u662f\u5728\u672c\u5730": 311, "\u975edocker": 311, "\u4e2d\u8fdb\u884c": 311, "\u56e0\u6b64\u9700\u8981\u672c\u5730\u4e8b\u5148\u5b89\u88c5": 311, "\u7684\u4f9d\u8d56": 311, "\u57fa\u4e8e\u5f53\u524d": 311, "\u73af\u5883\u4e0b\u7684": 311, "\u7248\u672c\u6784\u5efa": 311, "\u9700\u8981\u6ce8\u610f\u7684\u662f": [311, 313], "\u5982\u679c\u4f60\u9700\u8981\u8be5\u5206\u53d1\u5305\u80fd\u652f\u6301\u4e0d\u540c\u7684": 311, "\u7248\u672c": [311, 316], "\u4f60\u53ef\u80fd\u9700\u8981\u901a\u8fc7": 311, "conda": 311, "pyenv": 311, "\u5b89\u88c5\u591a\u4e2a": 311, "\u7684\u7248\u672c": 311, "\u98ce\u683c": 311, "\u5982\u679c\u4f60\u7684\u4ee3\u7801\u6ca1\u6709\u901a\u8fc7ci\u7684\u98ce\u683c\u68c0\u67e5": 311, "\u4f60\u53ef\u4ee5\u4f7f\u7528": 311, "\u683c\u5f0f\u5316\u4f60\u7684\u4ee3\u7801": 311, "\u6211\u4eec\u6536\u96c6\u4e86\u7528\u6237\u4f7f\u7528": 312, "\u8fc7\u7a0b\u4e2d\u7684\u5e38\u89c1\u95ee\u9898": 312, "\u5982\u679c\u5728\u4e0b\u9762\u7684\u5217\u8868\u4e2d\u4ecd\u7136\u65e0\u6cd5\u627e\u5230\u60a8\u9047\u5230\u7684\u95ee\u9898\u7684\u7b54\u6848": 312, "\u53ef\u901a\u8fc7\u63d0\u4ea4": 312, "\u6216\u8005\u5728": 312, "\u4e0e\u6211\u4eec\u8054\u7cfb": 312, "\u8fd0\u884c": 312, "\u7cfb\u7edf\u9700\u8981\u7684\u6700\u5c0f\u8d44\u6e90\u662f\u591a\u5c11": 312, "\u5728\u901a\u8fc7": 312, "\u5ba2\u6237\u7aef\u4f7f\u7528": 312, "\u8fc7\u7a0b\u4e2d": 312, "\u9700\u8981\u7684\u6700\u4f4e": 312, "\u7248\u672c\u662f3": 312, "\u6700\u4f4epip\u7248\u672c\u662f": 312, "\u7cfb\u7edf\u652f\u6301\u4ee5\u5355\u673a\u6216\u5206\u5e03\u5f0f\u7684\u65b9\u5f0f\u90e8\u7f72": 312, "\u5355\u673a\u60c5\u51b5\u4e0b": 312, "\u8d44\u6e90\u9700\u6c42": 312, "\u6838": 312, "\u5185\u5b58": 312, "\u5728\u652f\u6301\u4ee5\u4e0b\u73af\u5883\u4e2d\u8fd0\u884c": 312, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u90e8\u7f72": 312, "\u9700\u8981\u7528\u6237\u62e5\u6709\u4e00\u4e2a": 312, "\u7684\u73af\u5883\u4e0a\u6d4b\u8bd5\u901a\u8fc7": 312, "\u662f\u5426\u5f3a\u4f9d\u8d56": 312, "\u652f\u6301\u5728\u5355\u673a\u6a21\u5f0f\u5b89\u88c5\u8fd0\u884c": 312, "\u7684\u9884\u7f16\u8bd1\u5305\u4ee5": 312, "\u7684\u5f62\u5f0f\u5206\u53d1": 312, "\u53ef\u4ee5\u7528": 312, "\u5feb\u901f\u5b89\u88c5": 312, "\u5982\u4f55\u5982\u67e5\u770b": 312, "\u7684\u8fd0\u884c\u65f6\u4fe1\u606f": 312, "\u8fd0\u884c\u4e0d\u6253\u5370\u65e5\u5fd7\u4fe1\u606f": 312, "\u53c2\u6570\u5f00\u542f\u65e5\u5fd7\u8f93\u51fa": 312, "\u5982\u679c\u60a8\u7684graphscope\u8fd0\u884c\u5728k8s\u96c6\u7fa4\u4e0a": 312, "\u53ef\u4ee5\u4f7f\u7528": [312, 318], "\u6765\u67e5\u770b\u7cfb\u7edf\u7684\u5f53\u524d\u72b6\u6001": 312, "\u540c\u65f6\u5982\u679c\u4f60\u53ef\u4ee5\u8bbf\u95ee": 312, "\u7684\u78c1\u76d8": 312, "\u4e5f\u53ef\u5728": 312, "\u76ee\u5f55\u4e0b\u67e5\u770b\u8fd0\u884c\u65f6\u65e5\u5fd7": 312, "\u4e3a\u4ec0\u4e48\u5728\u4f7f\u7528": 312, "\u547d\u4ee4\u65f6": 312, "\u53d1\u73b0\u4e86\u4e00\u4e9b\u591a\u4f59\u7684": 312, "\u5bf9\u4e8e\u5176\u4e2d\u4e00\u4e9b\u5931\u8d25\u7684": 312, "\u53ea\u80fd\u901a\u8fc7\u624b\u52a8\u6267\u884c\u547d\u4ee4\u5982": 312, "\u8fdb\u884c\u5220\u9664": 312, "\u901a\u5e38\u60c5\u51b5\u4e0b": 312, "\u8be5\u95ee\u9898\u51fa\u73b0\u5728\u4f7f\u7528": 312, "\u90e8\u7f72": [312, 315], "\u65f6": [312, 313], "\u4f9d\u8d56\u4e00\u4e9b\u6743\u9650\u6765\u5220\u9664\u8fd0\u884c\u65f6\u7684\u8d44\u6e90": 312, "\u5982\u679c\u7528\u6237\u6ca1\u6709\u6b63\u786e\u8bbe\u7f6e": 312, "\u7b49\u6743\u9650": 312, "\u53ef\u80fd\u4e0d\u80fd\u6b63\u786e\u56de\u6536\u5206\u914d\u7684\u8d44\u6e90": 312, "\u8be6\u7ec6\u7ec6\u8282\u53ef\u4ee5\u67e5\u770b": 312, "\u662f\u56fe\u6570\u636e\u5e93\u5417": 312, "\u5e76\u4e0d\u662f\u4e00\u4e2a\u56fe\u6570\u636e\u5e93": 312, "\u4f46\u5176\u5305\u542b\u4e00\u4e2a\u6301\u4e45\u56fe\u5b58\u50a8\u7684\u7ec4\u4ef6": 312, "\u53ef\u4ee5\u88ab\u7528\u4f5c\u6570\u636e\u5e93": 312, "\u4e0a\u7684\u517c\u5bb9\u6027\u5982\u4f55": 312, "\u76ee\u524d": [312, 319], "graphscope\u652f\u6301gremlin\u8bed\u8a00\u4e2d\u7684\u5927\u90e8\u5206\u67e5\u8be2\u7b97\u5b50": 312, "\u53ef\u901a\u8fc7": 312, "\u8be5\u6587\u6863": 312, "\u67e5\u770b\u8be6\u7ec6\u7684\u652f\u6301\u4fe1\u606f": 312, "\u770b\u8d77\u6765\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5361\u4f4f\u4e86": 312, "\u5982\u679c": 312, "\u770b\u8d77\u6765\u50cf\u5361\u4f4f": 312, "\u53ef\u80fd\u7684\u539f\u56e0\u6709": 312, "\u5728\u4f1a\u8bdd\u7684\u62c9\u8d77\u9636\u6bb5": 312, "\u5982\u679c\u5f53\u524d\u7f51\u7edc\u4e0b\u8f7d\u955c\u50cf\u8fc7\u6162": 312, "\u6216\u5f53\u524d\u96c6\u7fa4\u8d44\u6e90\u65e0\u6cd5\u6ee1\u8db3\u8bf7\u6c42\u7684\u8d44\u6e90\u65f6": 312, "\u4f1a\u9020\u6210\u5361\u4f4f\u7684\u73b0\u8c61": 312, "\u8f7d\u56fe\u9636\u6bb5": 312, "\u53ef\u80fd\u4f1a\u7531\u4e8e\u6570\u636e\u91cf\u8fc7\u5927\u9020\u6210\u77ed\u6682\u7684\u5361\u4f4f\u73b0\u8c61": 312, "\u5728\u6267\u884c\u56fe\u7b97\u6cd5\u5206\u6790\u9636\u6bb5": 312, "\u6216\u8005\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u7b97\u6cd5": 312, "\u7f16\u8bd1\u6784\u5efa\u5e94\u7528\u7684\u5e93\u65f6\u4f1a\u82b1\u8d39\u4e00\u4e9b\u65f6\u95f4": 312, "\u4e3a\u4ec0\u4e48\u8f7d\u56fe\u65f6\u62a5\u627e\u4e0d\u5230\u6587\u4ef6\u7684\u9519\u8bef": 312, "\u8fd9\u901a\u5e38\u53d1\u751f\u5728\u4ee5\u96c6\u7fa4\u65b9\u5f0f\u90e8\u7f72\u8fd0\u884c": 312, "\u6570\u636e\u6587\u4ef6\u5fc5\u987b\u8981\u5bf9": 312, "\u53ef\u89c1": 312, "\u4f60\u4e5f\u8bb8\u9700\u8981\u6302\u8f7d\u78c1\u76d8\u6216\u8005\u4f7f\u7528\u4e91\u5b58\u50a8\u63d0\u4f9b\u5546\u7684\u670d\u52a1": 312, "\u5982\u679c\u4f60\u7684\u96c6\u7fa4\u662f\u4f7f\u7528": 312, "\u90e8\u7f72\u7684": 312, "\u4f60\u5e94\u8be5\u9700\u8981\u8bbe\u7f6e": 312, "\u6765\u628a\u672c\u673a\u76ee\u5f55\u6302\u8f7d\u5230": 312, "\u865a\u62df\u7684": 312, "\u6709\u4ec0\u4e48\u533a\u522b": 312, "\u5982\u4f55\u8bbe\u7f6e": 312, "\u5bb9\u5668\u5206\u914d\u7684\u5185\u5b58": 312, "\u5b83\u5b58\u50a8\u7531": 312, "\u7ba1\u7406\u7684\u539f\u59cb\u6570\u636e\u7684": 312, "\u7684\u5143\u4fe1\u606f": 312, "\u4f8b\u5982\u5f62\u72b6": 312, "\u540d\u79f0\u7b49": 312, "\u7531\u4e8e\u5143\u6570\u636e\u6bd4\u6570\u636e\u96c6\u5c0f\u5f97\u591a": 312, "\u56e0\u6b64\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u9ed8\u8ba4\u914d\u7f6e\u5c31\u8db3\u591f\u4e86": 312, "\u5b83\u76f8\u5f53\u4e8e": 312, "\u5b58\u50a8\u6570\u636e\u96c6\u7684\u5185\u5b58": 312, "\u6211\u4eec\u53d1\u73b0\u5c06\u5176\u8bbe\u7f6e\u4e3a\u6570\u636e\u96c6\u5728\u78c1\u76d8\u4e0a\u7684\u5927\u5c0f\u7684": 312, "\u500d\u901a\u5e38\u662f\u4e00\u4e2a\u5408\u7406\u7684\u503c": 312, "\u5bb9\u5668\u7684\u5185\u5b58\u5927\u5c0f": 312, "\u4e00\u822c\u5c06\u5176\u8bbe\u7f6e\u4e3a": 312, "\u7684\u540c\u6837\u5927\u5c0f": 312, "\u5bfc\u81f4\u5728": 312, "\u73af\u5883\u4e0b\u5b89\u88c5": 312, "\u5931\u8d25\u7684\u539f\u56e0\u53ef\u80fd\u6709\u54ea\u4e9b": 312, "\u7f16\u8bd1": 312, "\u5931\u8d25": 312, "\u6765\u5c1d\u8bd5\u4f7f\u7528\u7cfb\u7edf\u5b89\u88c5\u7684": 312, "\u8be6\u60c5\u53ef\u53c2\u8003": 312, "\u4f60\u53ef\u4ee5\u6839\u636e": 312, "\u6b64\u6559\u7a0b": 312, "\u6765\u6e90\u7801\u7f16\u8bd1": 312, "\u6216\u5c1d\u8bd5\u901a\u8fc7": 312, "\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898": 312, "\u4e0a\u5206\u914d": 312, "\u65f6\u9047\u5230\u4e86": 312, "\u95ee\u9898": 312, "\u5982\u4f55\u89e3\u51b3": 312, "\u901a\u5e38\u5f53\u4f7f\u7528": 312, "\u7684\u65b9\u5f0f\u5b89\u88c5": 312, "\u4f1a\u62a5": 312, "\u9519\u8bef": [312, 314], "\u6211\u4eec\u901a\u8fc7": 312, "\u6765\u67e5\u770b\u65e5\u5fd7": 312, "\u6b64\u65f6\u65e5\u5fd7\u663e\u793a": 312, "\u901a\u5e38\u6709\u4e24\u79cd\u89e3\u51b3\u65b9\u5f0f": 312, "\u5feb\u901f\u7684\u65b9\u5f0f\u662f\u5728\u6240\u6709\u76f8\u5173\u7684": 312, "\u76ee\u5f55\u4e0a\u4f7f\u7528": 312, "\u4f46\u4e0d\u5efa\u8bae\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528": 312, "\u4f18\u96c5\u7684\u65b9\u6cd5\u662f\u9996\u5148\u521b\u5efa": 312, "\u7528\u6237\u548c\u7528\u6237\u7ec4": 312, "\u7136\u540e\u5c06": 312, "\u4e0a\u7684\u8bbf\u95ee\u6743\u9650\u6388\u4e88\u76f8\u5173nfs\u76ee\u5f55": 312, "\u4e3a\u4ec0\u4e48\u5728": 312, "\u96c6\u7fa4\u4e0a\u62c9\u8d77": 312, "\u5b9e\u4f8b\u65f6": 312, "\u4ea7\u751f\u8d85\u65f6\u5f02\u5e38": 312, "\u5927\u591a\u6570\u60c5\u51b5\u4e0b": 312, "\u8d85\u65f6\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u5728": 312, "\u96c6\u7fa4\u62c9\u8d77": 312, "\u5b9e\u4f8b\u65f6\u9700\u8981\u4e0b\u8f7d\u5bf9\u5e94\u955c\u50cf": 312, "\u8fd9\u4e00\u6b65\u901a\u5e38\u9700\u8981\u51e0\u5206\u949f\u7684\u65f6\u95f4": 312, "\u9002\u5f53\u7684\u589e\u52a0\u8d85\u65f6\u7b49\u5f85\u65f6\u95f4\u6765\u89e3\u51b3\u8be5\u95ee\u9898": 312, "\u542f\u52a8graphscope\u65f6\u7531\u4e8e\u8fde\u63a5v6d": 312, "etcd\u7b49\u7ec4\u4ef6\u5931\u8d25\u800c\u5bfc\u81f4graphscope\u542f\u52a8\u5931\u8d25": 312, "\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u4f60\u6240\u4f7f\u7528\u7684\u673a\u5668": 312, "\u6216\u5bb9\u5668": 312, "\u6240\u5728\u7684\u4f01\u4e1a\u7f51\u7edc\u5185\u8981\u6c42\u76f8\u5e94\u7684\u4ee3\u7406\u8bbe\u7f6e\u65b9\u53ef\u6b63\u5e38\u4f7f\u7528\u7f51\u7edc": 312, "\u8fd9\u4e9b\u4ee3\u7406\u8bbe\u7f6e\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9519\u8bef\u7684\u5730\u5740\u89e3\u6790\u4ee5\u53ca\u7aef\u53e3\u5360\u7528": 312, "\u4e3a\u907f\u514d\u7c7b\u4f3c\u60c5\u51b5": 312, "\u53ef\u5728\u73af\u5883\u53d8\u91cf": 312, "\u4e2d\u52a0\u5165graphscope\u76f8\u5173\u7684\u5730\u5740": 312, "\u4ee5\u53ca": [312, 319], "\u8bf7\u6ce8\u610f": 312, "no_proxy\u7684\u524d\u540e\u7f00\u89c4\u5219": 312, "unix": 312, "stackexchang": 312, "23452": 312, "\u5176\u4ed6\u95ee\u9898": 312, "\u60a8\u53ef\u4ee5\u63d0\u4ea4": 312, "\u63d0\u51fa\u4f60\u7684\u95ee\u9898": 312, "\u540c\u65f6": [312, 317], "\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528": 312, "\u505a\u4e3a\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": 313, "\u53ef\u4ee5\u5904\u7406\u56fe\u7684\u4ea4\u4e92\u5f0f\u67e5\u8be2": 313, "\u56fe\u5206\u6790\u548c\u56fe\u5b66\u4e60\u4efb\u52a1": 313, "\u5e76\u4e14\u5177\u6709\u6613\u4e8e\u4f7f\u7528": 313, "\u9ad8\u6027\u80fd\u548c\u826f\u597d\u7684\u53ef\u6269\u5c55\u6027\u7b49\u7279\u70b9": 313, "\u672c\u7ae0\u8282\u5c06\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u4ecb\u7ecd\u5982\u4f55\u57fa\u4e8e": 313, "\u4f7f\u7528": [313, 315, 318, 319, 320], "\u5e76\u5e2e\u52a9\u6570\u636e\u79d1\u5b66\u5bb6\u6765\u9ad8\u6548\u7684\u5206\u6790\u5927\u56fe": 313, "\u6570\u636e\u96c6": 313, "\u662f\u7531\u5fae\u8f6f\u5b66\u672f\u5173\u7cfb\u56fe": 313, "\u7684\u5b50\u96c6\u7ec4\u6210\u7684\u5f02\u6784\u56fe\u7f51\u7edc": 313, "\u8be5\u56fe\u4e2d\u5305\u542b4\u79cd\u7c7b\u578b\u7684\u5b9e\u4f53": 313, "\u5373\u8bba\u6587": 313, "\u4f5c\u8005": 313, "\u673a\u6784\u548c\u7814\u7a76\u9886\u57df": 313, "\u4ee5\u53ca\u8fde\u63a5\u4e24\u4e2a\u5b9e\u4f53\u7684\u56db\u79cd\u7c7b\u578b\u7684\u6709\u5411\u5173\u7cfb\u8fb9": 313, "\u6211\u4eec\u9700\u8981\u5904\u7406\u7684\u4efb\u52a1\u662f": 313, "\u7ed9\u51fa\u5f02\u6784\u7684": 313, "\u6570\u636e": 313, "\u5728\u8be5\u56fe\u4e0a\u9884\u6d4b\u6bcf\u7bc7\u8bba\u6587\u7684\u7c7b\u522b": 313, "\u8fd9\u662f\u4e00\u4e2a\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 313, "\u8be5\u4efb\u52a1\u53ef\u4ee5\u5f52\u7c7b\u5728\u5404\u4e2a\u9886\u57df": 313, "\u5404\u4e2a\u65b9\u5411\u6216\u7814\u7a76\u5c0f\u7ec4\u7684\u8bba\u6587": 313, "\u901a\u8fc7\u5bf9\u8bba\u6587\u5c5e\u6027\u548c\u5f15\u7528\u56fe\u4e0a\u7684\u7ed3\u6784\u4fe1\u606f\u5bf9\u8bba\u6587\u8fdb\u884c\u5206\u7c7b": 313, "\u5728\u8be5\u6570\u636e\u4e2d": 313, "\u6bcf\u4e2a\u8bba\u6587\u8282\u70b9\u5305\u542b\u4e86\u4e00\u4e2a\u4ece\u8bba\u6587\u6807\u9898": 313, "\u6458\u8981\u62bd\u53d6\u7684": 313, "\u7ef4": 313, "\u5411\u91cf\u4f5c\u4e3a\u8868\u5f81": 313, "\u8be5\u8868\u5f81\u662f\u7ecf\u8fc7": 313, "\u9884\u8bad\u7ec3\u63d0\u524d\u83b7\u53d6\u7684": 313, "\u800c\u7ed3\u6784\u4fe1\u606f\u662f\u5728\u4ee5\u4e0b\u8fc7\u7a0b\u4e2d\u5373\u65f6\u8ba1\u7b97\u7684": 313, "\u4e0a\u56fe\u8868\u793a\u4e86\u7528\u6237\u901a\u8fc7": 313, "\u5ba2\u6237\u7aef\u8c03\u7528": 313, "\u89e3\u51b3\u8be5\u95ee\u9898\u7684\u5de5\u4f5c\u6d41\u7a0b": 313, "\u6b65\u9aa4": 313, "\u5efa\u7acb\u4e00\u4e2a\u4f1a\u8bdd": 313, "\u521b\u5efa\u4e00\u4e2a\u5de5\u4f5c\u7a7a\u95f4": 313, "\u5b9a\u4e49\u548c\u8f7d\u5165\u56fe": 313, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u56fe": 313, "\u6267\u884c\u56fe\u7b97\u6cd5\u505a\u56fe\u5206\u6790": 313, "\u6267\u884c\u57fa\u4e8e\u56fe\u6570\u636e\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1": 313, "\u7684\u7b2c\u4e00\u6b65": 313, "\u6211\u4eec\u9700\u8981\u5728": 313, "\u4e2d\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 313, "\u5bf9\u4e8e": [313, 316], "\u521b\u5efa\u4f1a\u8bdd\u9700\u8981\u4f7f\u7528": 313, "\u670d\u52a1\u7c7b\u578b": 313, "\u9ed8\u8ba4\u662f": 313, "\u53e6\u5916": [313, 319], "\u6ce8\u610f": [313, 316], "\u662f": 313, "\u4e3b\u673a\u4e0a\u7684\u8def\u5f84": 313, "\u5f53\u5728": 313, "\u4e0a\u4f7f\u7528": 313, "\u9700\u8981\u9996\u5148\u5c06\u6b64\u8def\u5f84\u52a0\u5165\u5230": 313, "\u7684\u5171\u4eab\u76ee\u5f55\u4e2d": 313, "\u901a\u5e38\u4e3a": 313, "\u66f4\u8be6\u7ec6\u7684\u6307\u5f15\u8bf7\u53c2\u770b": 313, "\u7684\u5efa\u7acb\u8fc7\u7a0b\u4e2d": 313, "\u9996\u9009\u4f1a\u5728\u80cc\u540e\u5c1d\u8bd5\u62c9\u8d77\u4e00\u4e2a": 313, "\u4f5c\u4e3a\u540e\u7aef\u5f15\u64ce\u7684\u5165\u53e3": 313, "\u8be5": 313, "\u8d1f\u8d23\u7ba1\u7406\u8be5\u6b21\u4f1a\u8bdd\u7684": 313, "\u6240\u6709\u8d44\u6e90": 313, "\u4ee5\u53ca\u4ea4\u4e92\u5f0f\u67e5\u8be2": 313, "\u56fe\u5b66\u4e60\u5f15\u64ce\u7684\u751f\u547d\u5468\u671f": 313, "\u540e\u7eed\u62c9\u8d77\u7684\u5176\u4ed6\u6bcf\u4e2a": 313, "\u90fd\u6709\u4e00\u4e2a": 313, "\u5b9e\u4f8b\u4f5c\u4e3a\u5185\u5b58\u7ba1\u7406\u5c42": 313, "\u5206\u5e03\u5f0f\u7684\u7ba1\u7406\u56fe\u6570\u636e": 313, "\u8f7d\u56fe": [313, 314, 315], "\u4ee5\u5c5e\u6027\u56fe": 313, "\u5efa\u6a21\u56fe\u6570\u636e": [313, 319], "\u5c5e\u6027\u56fe\u4e2d": 313, "\u70b9\u548c\u8fb9\u90fd\u6709\u4e00\u4e2a\u6807\u7b7e": 313, "\u4e0d\u540c\u7684\u6807\u7b7e\u6709\u4e0d\u540c\u7684\u5c5e\u6027": 313, "\u4e0b\u56fe\u5c55\u793a\u4e86\u5c5e\u6027\u56fe\u7684\u6a21\u578b": 313, "\u8be5\u56fe\u5177\u6709\u56db\u79cd\u9876\u70b9": 313, "\u5206\u522b\u6807\u8bb0\u4e3a": 313, "\u8bba\u6587": 313, "\u673a\u6784": 313, "\u7814\u7a76\u9886\u57df": 313, "\u6709\u56db\u79cd\u8fde\u63a5\u5b83\u4eec\u7684\u8fb9": 313, "\u6bcf\u79cd\u8fb9\u90fd\u6709\u4e00\u4e2a\u6807\u7b7e": 313, "\u5e76\u4e14\u8fb9\u7684\u4e24\u7aef\u9876\u70b9\u7684\u6807\u7b7e\u4e5f\u662f\u786e\u5b9a\u7684": 313, "\u5f15\u7528": 313, "\u8fd9\u79cd\u6807\u7b7e\u7684\u8fb9\u8fde\u63a5\u4e24\u4e2a": 313, "\u9876\u70b9": 313, "\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f\u6807\u8bb0\u4e3a": 313, "\u64b0\u5199": 313, "\u7684\u8fb9": [313, 319], "\u5b83\u8981\u6c42\u8be5\u8d77\u59cb\u70b9\u7684\u6807\u8bb0\u4e3a": 313, "\u7ec8\u6b62\u70b9\u7684\u6807\u8bb0\u4e3a": 313, "\u6240\u6709\u7684\u9876\u70b9": 313, "\u548c\u8fb9\u90fd\u53ef\u4ee5\u5177\u6709\u5c5e\u6027": 313, "\u9876\u70b9\u5177\u6709\u8bf8\u5982\u53d1\u5e03\u5e74\u4efd": 313, "\u4e3b\u9898\u6807\u7b7e\u7b49\u5c5e\u6027": 313, "\u8981\u5c06\u6b64\u56fe\u52a0\u8f7d\u5230": 313, "\u53ef\u4ee5\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4e0e": 313, "\u6570\u636e\u6587\u4ef6": 313, "\u7ed3\u5408\u4f7f\u7528": 313, "\u8bf7\u4e0b\u8f7d\u6570\u636e\u5e76\u5c06\u5176\u89e3\u538b\u7f29\u5230\u672c\u5730\u7684\u6302\u8f7d\u76ee\u5f55": 313, "\u5728\u672c\u4f8b\u4e2d\u4e3a": 313, "author_affiliated_with_institut": 313, "paper_has_topic_field_of_studi": 313, "hastop": 313, "paper_cites_pap": 313, "author_writes_pap": 313, "\u4e5f\u53ef\u901a\u8fc7\u6211\u4eec\u63d0\u4f9b\u7684\u5185\u7f6e\u6570\u636e\u96c6\u51fd\u6570\u5e2e\u52a9\u5b8c\u6210\u8f7d\u56fe\u6d41\u7a0b": 313, "\u8fd9\u91cc\u7684": 313, "\u5df2\u7ecf\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u5b58\u50a8\u5728": 313, "\u4e2d\u7684\u56fe": 313, "\u56fe\u6570\u636e\u5206\u5e03\u5728\u8fd9\u4e2a\u4f1a\u8bdd\u80cc\u540e\u62c9\u8d77\u7684": 313, "\u66f4\u591a\u7ec6\u8282\u8bf7\u67e5\u770b": 313, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u5141\u8bb8\u7528\u6237\u4ee5": 313, "\u63a2\u7d22\u6027": 313, "\u65b9\u5f0f\u6765\u63a2\u7d22": 313, "\u67e5\u770b\u548c\u663e\u793a\u56fe\u6570\u636e": 313, "\u4ee5\u65b9\u4fbf\u7684\u5b9a\u4f4d\u548c\u6d1e\u5bdf\u7279\u5b9a\u7684\u6df1\u5165\u4fe1\u606f": 313, "\u91c7\u7528\u79f0\u4e3a": 313, "\u7684\u9ad8\u7ea7\u8bed\u8a00\u8fdb\u884c\u56fe\u904d\u5386": 313, "\u5e76\u63d0\u4f9b\u5927\u89c4\u6a21\u7684\u9ad8\u6548\u6267\u884c": 313, "\u5728\u6b64\u793a\u4f8b\u4e2d": 313, "\u6211\u4eec\u4f7f\u7528\u56fe\u904d\u5386\u6765\u67e5\u770b\u4e24\u4f4d\u7ed9\u5b9a\u4f5c\u8005\u5171\u540c\u64b0\u5199\u7684\u8bba\u6587\u6570\u91cf": 313, "\u4e3a\u4e86\u7b80\u5316\u67e5\u8be2": 313, "\u6211\u4eec\u5047\u8bbe\u4f5c\u8005\u53ef\u4ee5\u5206\u522b\u7531id": 313, "\u552f\u4e00\u6807\u8bc6": 313, "\u56fe\u5206\u6790\u662f\u5728\u771f\u5b9e\u573a\u666f\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u4e00\u7c7b\u56fe\u8ba1\u7b97": 313, "\u4e8b\u5b9e\u8bc1\u660e": 313, "\u8bb8\u591a\u7b97\u6cd5": 313, "\u4f8b\u5982\u793e\u533a\u68c0\u6d4b": 313, "\u8def\u5f84\u548c\u8fde\u63a5\u6027": 313, "\u96c6\u4e2d\u6027": 313, "\u5728\u5404\u79cd\u4e1a\u52a1\u4e2d\u90fd\u975e\u5e38\u6709\u6548": 313, "\u5185\u5efa\u4e86\u4e00\u7ec4\u9884\u7f6e\u5e38\u7528\u7b97\u6cd5": 313, "\u65b9\u4fbf\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u5206\u6790\u56fe\u6570\u636e": 313, "\u4e0b\u9762\u6211\u4eec\u9996\u5148\u901a\u8fc7\u5728\u7279\u5b9a\u5468\u671f\u5185\u4ece\u5168\u56fe\u4e2d\u63d0\u53d6\u8bba\u6587": 313, "\u80cc\u540e\u57fa\u4e8e": 313, "\u6765\u5bfc\u51fa\u4e00\u4e2a\u5b50\u56fe": 313, "\u7136\u540e\u8fd0\u884c": 313, "\u5206\u89e3\u548c\u4e09\u89d2\u5f62\u8ba1\u6570\u4ee5\u751f\u6210\u6bcf\u4e2a\u8bba\u6587\u8282\u70b9\u7684\u7ed3\u6784\u7279\u5f81": 313, "\u7531\u4e8e\u8bb8\u591a\u7b97\u6cd5\u53ef\u80fd\u4ec5\u9002\u7528\u4e8e\u540c\u6784\u56fe": 313, "\u53ea\u6709\u4e00\u7c7b\u70b9\u548c\u4e00\u7c7b\u8fb9\u800c\u4e0d\u533a\u5206\u6807\u7b7e": 313, "\u8981\u5728\u5c5e\u6027\u56fe\u4e0a\u4f7f\u7528\u8fd9\u4e9b\u7b97\u6cd5": 313, "\u6211\u4eec\u9996\u5148\u9700\u8981\u5c06\u5176\u6295\u5f71\u5230\u4e00\u4e2a\u7b80\u5355\u7684\u540c\u6784\u56fe\u4e2d": 313, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5728": 313, "\u4e2d\u7f16\u5199\u81ea\u5df1\u7684\u7b97\u6cd5": 313, "\u5f53\u524d": 313, "\u652f\u6301\u7528\u6237\u4ee5": 313, "\u6a21\u578b\u548c": 313, "\u6a21\u578b\u81ea\u5b9a\u4e49\u56fe\u7b97\u6cd5": 313, "\u7ed3\u5408\u4e86\u56fe\u7ed3\u6784\u548c\u673a\u5668\u5b66\u4e60\u7684\u4f18\u52bf": 313, "\u53ef\u4ee5\u5c06\u56fe\u4e2d\u7684\u7ed3\u6784\u4fe1\u606f\u548c\u5c5e\u6027\u4fe1\u606f\u538b\u7f29\u4e3a\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7684\u4f4e\u7ef4\u5d4c\u5165\u5411\u91cf": 313, "\u8fd9\u4e9b\u5d4c\u5165\u548c\u8868\u5f81\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8f93\u5165\u5230\u4e0b\u6e38\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u4e2d": 313, "\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d": 313, "\u6211\u4eec\u8bad\u7ec3\u4e86": 313, "\u6a21\u578b": 313, "\u5c06\u8282\u70b9": 313, "\u5206\u7c7b\u4e3a349\u4e2a\u7c7b\u522b": 313, "\u6bcf\u4e2a\u7c7b\u522b\u4ee3\u8868\u4e00\u4e2a\u51fa\u5904": 313, "\u4f8b\u5982\u9884\u5370\u672c\u548c\u4f1a\u8bae": 313, "\u4e3a\u6b64": 313, "\u63a5\u7740\u4e0a\u4e00\u6b65": 313, "\u9996\u5148\u9700\u8981\u542f\u52a8\u5b66\u4e60\u5f15\u64ce\u5e76\u6784\u5efa\u4e00\u4e2a\u5177\u6709\u7279\u5f81\u7684\u6570\u636e\u56fe": 313, "\u7136\u540e\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u8bad\u7ec3\u8fc7\u7a0b\u5e76\u6267\u884c": 313, "\u6700\u540e": [313, 314, 317], "\u5f53\u6211\u4eec\u5b8c\u6210\u6240\u6709\u7684\u8ba1\u7b97\u8fc7\u7a0b\u540e": 313, "\u5173\u95ed\u5f53\u524d\u7684\u4f1a\u8bdd": 313, "\u8be5\u6b65\u9aa4\u4f1a\u544a\u77e5\u80cc\u540e\u7684": 313, "\u548c\u5f15\u64ce": 313, "\u91ca\u653e\u5f53\u524d\u6240\u6709\u7684\u8d44\u6e90": 313, "\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e00\u7cfb\u5217\u53ef\u4ee5\u5728\u56fe\u4e0a\u8fdb\u884c\u65b0\u589e": 314, "\u6295\u5f71\u7684\u65b9\u6cd5": 314, "\u4ee5\u53ca\u5982\u4f55\u5c06\u4e00\u4e2a\u590d\u6742\u7684\u56fe\u8f6c\u6362\u4e3a\u53ef\u4ee5\u9002\u914d\u666e\u901a\u7b97\u6cd5\u5e94\u7528\u7684\u65b9\u6cd5": 314, "\u6211\u4eec\u5c55\u793a\u5982\u4f55\u5c06\u7b97\u6cd5\u5f97\u5230\u7684\u7ed3\u679c\u52a0\u56de\u5230\u56fe\u4e2d\u53bb": 314, "\u5177\u4f53\u800c\u8a00": 314, "\u56fe": 314, "\u63d0\u4f9b\u4e86\u4e24\u4e2a\u589e\u52a0\u6807\u7b7e\u7684\u51fd\u6570": 314, "\u548c\u4e00\u4e2a\u6295\u5f71\u7684\u51fd\u6570": 314, "\u6211\u4eec\u5df2\u7ecf\u5728": 314, "\u4e00\u8282\u89c1\u5230\u8fc7": 314, "\u8fd9\u4e24\u4e2a\u51fd\u6570": 314, "\u5f53\u65f6\u6211\u4eec\u7528\u5b83\u6765\u6784\u5efa\u4e00\u5f20\u56fe": 314, "\u8fdb\u4e00\u6b65\u7684": 314, "\u5f53\u56fe\u6784\u5efa\u597d\u5e76\u8f7d\u5165\u4e86": 314, "\u4e2d\u4e4b\u540e": 314, "\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u7528\u5176\u589e\u52a0\u66f4\u591a\u7684\u6807\u7b7e": 314, "\u5f53\u7136\u8fd9\u4e00\u6b65\u5e76\u4e0d\u4f1a\u5728\u539f\u56fe\u4e0a\u4fee\u6539": 314, "\u800c\u662f\u4f1a\u8fd4\u56de\u57fa\u4e8e\u539f\u56fe\u4e4b\u4e0a": 314, "\u589e\u52a0\u4e86\u65b0\u7684\u6807\u7b7e\u7684\u65b0\u56fe": 314, "\u5c5e\u6027\u56fe\u4e3a\u4f8b": 314, "\u6211\u4eec\u73b0\u5728\u8f7d\u5165\u5176\u4e2d\u4e00\u90e8\u5206\u6807\u7b7e": 314, "\u4f5c\u4e3a\u63a5\u4e0b\u6765\u4e00\u7cfb\u5217\u8f6c\u6362\u64cd\u4f5c\u7684\u8d77\u59cb\u56fe": 314, "pathlib": 314, "\u5230\u8fd9\u91cc": 314, "\u6211\u4eec\u5df2\u7ecf\u8f7d\u5165\u4e86\u4e00\u5f20\u56fe": 314, "\u63a5\u4e0b\u6765\u6211\u4eec\u5728\u8fd9\u5f20\u56fe\u4e0a\u518d\u6dfb\u52a0\u51e0\u4e2a\u6807\u7b7e": 314, "graph1": 314, "comment_0_0": [314, 319], "graph2": 314, "comment_replyof_comment_0_0": [314, 319], "\u53ef\u4ee5\u770b\u5230\u6bcf\u6b21": 314, "\u90fd\u4f1a\u4ea7\u751f\u4e00\u5f20\u65b0\u7684\u56fe": 314, "\u5728\u5e95\u5c42": 314, "\u4ed6\u4eec\u5171\u6709\u7684\u90e8\u5206\u4f1a\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58": 314, "\u6240\u4ee5\u5e76\u4e0d\u4f1a\u5c06\u539f\u56fe\u7684\u6570\u636e\u590d\u5236\u4e00\u4efd": 314, "\u5728\u67d0\u4e9b\u573a\u666f\u4e0b": 314, "\u6211\u4eec\u9700\u8981\u5c06\u4ece\u4e00\u5f20\u590d\u6742\u7684\u56fe\u63d0\u53d6\u51fa\u4e00\u4e2a\u5b50\u56fe": 314, "\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u501f\u52a9": 314, "\u6765\u5b8c\u6210": 314, "\u5305\u542b\u4e24\u4e2a\u53c2\u6570": 314, "\u5176\u503c\u4e3a\u4e00\u4e2a\u5b57\u5178": 314, "\u5b57\u5178\u7684\u952e\u662f\u6807\u7b7e\u540d": 314, "\u503c\u662f\u8981\u53d6\u7684\u5c5e\u6027\u7684\u5217\u8868": 314, "\u503c\u53ef\u4ee5\u4e3a": 314, "\u4ee3\u8868\u9009\u62e9\u6240\u6709\u7684\u5c5e\u6027": 314, "\u7684\u8fd4\u56de\u503c\u4e5f\u662f\u4e00\u4e2a\u5c5e\u6027\u56fe": 314, "\u5e76\u4e14\u53ef\u4ee5\u88ab\u8fdb\u4e00\u6b65": 314, "\u4ee5\u4e0b\u662f\u51e0\u4e2a\u4f8b\u5b50": 314, "\u5305\u542b\u4e00\u4e2a\u70b9\u6807\u7b7e": 314, "\u548c\u4e00\u4e2a\u8fb9\u6807\u7b7e": 314, "\u4ee5\u53ca\u6240\u9009\u62e9\u7684\u5c5e\u6027": 314, "sub_graph2": 314, "\u73b0\u5728\u70b9\u4e0a\u6ca1\u6709\u5c5e\u6027": 314, "\u8fb9\u4e0a\u6709\u4e00\u4e2a\u5c5e\u6027": 314, "\u5f53\u6267\u884c\u4e00\u4e2a\u4ec5\u53ef\u4ee5\u8dd1\u5728\u7b80\u5355\u56fe\u4e0a\u7684\u7b97\u6cd5\u65f6": 314, "\u5176\u4f1a\u9ed8\u8ba4\u5c06\u5176\u53c2\u6570\u4e2d\u7684\u5c5e\u6027\u56fe\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 314, "\u5982\u679c\u4e0d\u80fd\u8fdb\u884c\u8fd9\u79cd\u8f6c\u6362": 314, "\u5373\u591a\u4e8e\u4e00\u4e2a\u70b9\u6807\u7b7e\u548c\u4e00\u4e2a\u8fb9\u6807\u7b7e": 314, "\u6216\u591a\u4e8e\u4e00\u4e2a\u5c5e\u6027": 314, "\u90a3\u4e48\u5c31\u4f1a\u62a5\u9519": 314, "\u8f6c\u6362\u4e0d\u5408\u6cd5": 314, "\u591a\u4e8e\u4e00\u4e2a\u70b9": 314, "\u8fb9\u6807\u7b7e": 314, "\u591a\u4e8e\u4e00\u4e2a\u5c5e\u6027": 314, "\u4e0a\u4e00\u6b65\u7b97\u6cd5\u7684\u8fd0\u884c\u7ed3\u679c\u53ef\u4ee5\u88ab\u52a0\u5165\u4e00\u5f20\u56fe\u4e2d": 314, "\u4f5c\u4e3a\u70b9\u7684\u4e00\u4e2a\u5c5e\u6027": 314, "\u4e0d\u4ec5\u53ef\u4ee5\u52a0\u5165\u8fd0\u7b97\u7ed3\u679c\u5230\u76f4\u63a5\u88ab\u67e5\u8be2\u7684\u56fe\u4e0a": 314, "\u8fd8\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u67e5\u8be2\u7ed3\u679c\u52a0\u5230\u88ab": 314, "\u800c\u5f97\u5230\u88ab\u67e5\u8be2\u7684\u56fe\u4e0a": 314, "\u53ea\u8981\u88ab\u52a0\u5165\u5c5e\u6027\u7684\u70b9\u6807\u7b7e\u76f8\u540c": 314, "\u662f\u963f\u91cc\u5df4\u5df4\u8fbe\u6469\u9662\u667a\u80fd\u8ba1\u7b97\u5b9e\u9a8c\u5ba4\u7814\u53d1\u5e76\u5f00\u6e90\u7684\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u5e73\u53f0": 315, "\u4f9d\u6258\u4e8e\u963f\u91cc\u6d77\u91cf\u6570\u636e\u548c\u4e30\u5bcc\u573a\u666f": 315, "\u4e0e\u8fbe\u6469\u9662\u7684\u9ad8\u6c34\u5e73\u7814\u7a76": 315, "\u81f4\u529b\u4e8e\u9488\u5bf9\u5b9e\u9645\u751f\u4ea7\u573a\u666f\u4e2d\u56fe\u8ba1\u7b97\u7684\u6311\u6218": 315, "\u63d0\u4f9b\u4e00\u7ad9\u5f0f\u9ad8\u6548\u7684\u89e3\u51b3\u65b9\u6848": 315, "\u63d0\u4f9b\u4e86": 315, "\u80fd\u5341\u5206\u65b9\u4fbf\u7684\u5bf9\u63a5\u4e0a\u4e0b\u6e38\u5de5\u4f5c\u6d41": 315, "\u5177\u6709\u4e00\u7ad9\u5f0f": 315, "\u5f00\u53d1\u4fbf\u6377": 315, "\u6027\u80fd\u6781\u81f4\u7b49\u7279\u70b9": 315, "\u5b83\u6574\u5408\u4e86\u667a\u80fd\u8ba1\u7b97\u5b9e\u9a8c\u5ba4\u591a\u4e2a\u91cd\u8981\u7684\u521b\u65b0\u6027\u6280\u672f": 315, "\u5305\u62ec": [315, 318], "\u652f\u6301\u4e86\u56fe\u5206\u6790": 315, "\u56fe\u7684\u4ea4\u4e92\u5f0f\u67e5\u8be2\u548c\u56fe\u5b66\u4e60": 315, "\u5176\u4e2d\u6838\u5fc3\u4f18\u52bf\u5305\u62ec\u5728\u4e1a\u754c\u9996\u6b21\u652f\u6301\u4e86": 315, "\u5206\u5e03\u5f0f\u7f16\u8bd1\u4f18\u5316": 315, "\u652f\u6301\u4e86\u7b97\u6cd5\u7684\u81ea\u52a8\u5e76\u884c\u5316": 315, "\u63d0\u4f9b\u4e86\u4f01\u4e1a\u7ea7\u573a\u666f\u4e0b\u7684\u6781\u81f4\u6027\u80fd\u7b49": 315, "\u5728\u963f\u91cc\u5df4\u5df4\u5185\u5916\u90e8\u5e94\u7528\u4e2d": 315, "\u5df2\u7ecf\u8bc1\u660e\u5728\u591a\u4e2a\u5173\u952e\u4e92\u8054\u7f51\u9886\u57df": 315, "\u5982\u98ce\u63a7": 315, "\u7535\u5546\u63a8\u8350": 315, "\u5e7f\u544a": 315, "\u7f51\u7edc\u5b89\u5168": [315, 318], "\u77e5\u8bc6\u56fe\u8c31\u7b49": 315, "\u5b9e\u73b0\u4e86\u91cd\u8981\u7684\u4e1a\u52a1\u65b0\u4ef7\u503c": 315, "\u6574\u5408\u4e86\u8fbe\u6469\u9662\u7684\u591a\u9879\u5b66\u672f\u7814\u7a76\u6210\u679c": 315, "\u5176\u4e2d\u7684\u6838\u5fc3\u6280\u672f\u66fe\u83b7\u5f97\u6570\u636e\u5e93\u9886\u57df\u9876\u7ea7\u5b66\u672f\u4f1a\u8bae": 315, "\u6700\u4f73\u8bba\u6587\u5956": 315, "vldb2017": 315, "\u6700\u4f73\u6f14\u793a\u5956": 315, "vldb2020": 315, "\u6700\u4f73\u8bba\u6587\u5956\u4e9a\u519b": 315, "\u4e16\u754c\u4eba\u5de5\u667a\u80fd\u521b\u65b0\u5927\u8d5bsail\u5956\u7b49": 315, "\u7684\u4ea4\u4e92\u67e5\u8be2\u5f15\u64ce\u7684\u8bba\u6587\u5df2\u88ab": 315, "nsdi": 315, "2021\u5f55\u7528": 315, "\u8fd8\u6709\u5176\u5b83\u56f4\u7ed5": 315, "\u7684\u5341\u591a\u9879\u7814\u7a76\u6210\u679c\u53d1\u8868\u5728\u9886\u57df\u9876\u7ea7\u7684\u5b66\u672f\u4f1a\u8bae\u6216\u671f\u520a\u4e0a": 315, "kdd\u7b49": 315, "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": 315, "\u57fa\u4e8e": [315, 320], "\u793a\u4f8b": 315, "\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 315, "\u521b\u5efa\u4f1a\u8bdd": 315, "\u4ea4\u4e92\u5f0f\u67e5\u8be2": 315, "\u56fe\u5206\u6790": 315, "\u56fe\u795e\u7ecf\u7f51\u7edc": 315, "\u5173\u95ed\u4f1a\u8bdd": 315, "\u4f7f\u7528helm\u90e8\u7f72graphscop": 315, "\u5728aw": 315, "\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": 315, "\u672c\u5730\u90e8\u7f72graphscop": 315, "\u5165\u95e8\u6559\u7a0b": 315, "\u8bba\u6587\u5f15\u7528\u5173\u7cfb\u7f51\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [315, 320], "\u4f7f\u7528\u517c\u5bb9": [315, 320], "\u8fdb\u884c\u56fe\u64cd\u4f5c": [315, 320], "\u7528": [315, 317, 320], "\u50cf": [315, 320], "\u4e00\u6837\u8fdb\u884c\u56fe\u5206\u6790": [315, 320], "\u8f7d\u5165\u56fe\u6570\u636e": [315, 320], "\u5185\u7f6e\u7684\u56fe\u5206\u6790\u7b97\u6cd5": [315, 320], "\u7f16\u5199\u81ea\u5b9a\u4e49\u56fe\u5206\u6790\u7b97\u6cd5": [315, 320], "\u4f7f\u7528\u67e5\u8be2\u8bed\u8a00": [315, 320], "\u8fdb\u884c\u4ea4\u4e92\u5f0f\u67e5\u8be2": [315, 320], "\u8fdb\u884c\u65e0\u76d1\u7763\u56fe\u5b66\u4e60": [315, 320], "bipartitegraphsag": [315, 320], "\u7684\u4e8c\u90e8\u56fe\u65e0\u76d1\u7763\u5b66\u4e60": [315, 320], "\u8fdb\u884c\u6709\u76d1\u7763\u56fe\u5b66\u4e60": [315, 320], "\u73af\u5883\u518d\u63a2\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [315, 320], "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": 315, "\u624b\u52a8\u914d\u7f6e\u56fe": 315, "\u9ad8\u7ea7\u7528\u6cd5": 315, "\u4ece": [315, 317], "\u4e2d\u8f7d\u56fe": 315, "\u7684\u53d8\u79cd": 315, "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": 315, "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": 315, "\u6295\u5f71": 315, "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 315, "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": 315, "\u5185\u7f6e\u7b97\u6cd5": 315, "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": 315, "\u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": 315, "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528": 315, "\u4e2d\u7684\u51fd\u6570": 315, "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": 315, "\u8fd0\u884cjava\u7f16\u5199\u7684\u7b97\u6cd5": 315, "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": 315, "\u5229\u7528python": 315, "\u8fde\u63a5graphscop": 315, "\u5229\u7528java": 315, "\u5f00\u53d1\u63a7\u5236\u53f0": 315, "gremlin\u7f16\u7a0b\u5165\u95e8": 315, "gremlin\u517c\u5bb9\u6027": 315, "\u5bf9\u6bd4tinkerpop": 315, "\u56fe\u5b66\u4e60\u6a21\u578b": 315, "\u81ea\u5b9a\u4e49\u7b97\u6cd5": 315, "\u5e38\u89c1\u95ee\u9898": 315, "\u5f00\u53d1\u8005\u6307\u5357": 315, "\u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5": 315, "\u6784\u5efa": 315, "\u4ee3\u7801\u98ce\u683c": 315, "\u76ee\u524d\u652f\u6301\u7684\u5e73\u53f0\u5982\u4e0b": 316, "sur": 316, "\u7a0b\u5e8f\u5305": 316, "\u7684\u5f62\u5f0f\u53d1\u5e03": 316, "\u53ef\u76f4\u63a5\u901a\u8fc7": 316, "\u9700\u8981\u6ee1\u8db3": 316, "\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u672c\u6587\u6863\u7684\u4ee5\u4e0b\u6b65\u9aa4\u90e8\u7f72\u4e00\u4e2a\u672c\u5730": 316, "\u5e76\u52a0\u8f7d\u9884\u7f16\u8bd1\u597d\u7684\u955c\u50cf": 316, "\u73af\u5883\u4e0b\u8fd0\u884c": 316, "\u9996\u5148\u9700\u8981\u9884\u5148\u5b89\u88c5\u4ee5\u4e0b\u4f9d\u8d56": 316, "\u7684\u7528\u6237": 316, "\u53ef\u901a\u8fc7\u5b98\u65b9\u6587\u6863\u6765\u5b89\u88c5\u4e0a\u8ff0\u4f9d\u8d56": 316, "\u5e76\u5728": 316, "\u4e2d\u5f00\u542f": 316, "\u529f\u80fd": 316, "\u53d1\u884c\u7248\u7528\u6237": 316, "\u6211\u4eec\u63d0\u4f9b\u4e86\u811a\u672c\u6765\u51c6\u5907\u8fd0\u884c\u65f6\u73af\u5883": 316, "\u60a8\u4e5f\u53ef\u4ee5\u5728": 316, "\u4e0a\u5b89\u88c5": 316, "wsl2": 316, "\u4ee5\u4f7f\u7528\u811a\u672c": 316, "install_dep": 316, "\u63a5\u4e0b\u6765": [316, 317, 318], "\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7": 316, "graphscope\u7684\u4ea4\u4e92\u67e5\u8be2\u5f15\u64ce": 317, "\u7b80\u79f0gie": 317, "\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf": 317, "\u5b83\u4e3a\u4e0d\u540c\u7ecf\u9a8c\u7684\u7528\u6237\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6613\u7528\u7684\u4ea4\u4e92\u5f0f\u73af\u5883": 317, "\u652f\u6301\u6d77\u91cf\u590d\u6742\u56fe\u6570\u636e\u4e0a\u7684": 317, "\u5b9e\u65f6\u5206\u6790\u4e0e\u4ea4\u4e92\u63a2\u7d22": 317, "\u8be5\u5f15\u64ce\u652f\u6301": 317, "\u8bed\u8a00\u8868\u8fbe\u7684\u4ea4\u4e92\u56fe\u67e5\u8be2": 317, "\u5e76\u63d0\u4f9b\u4e86\u81ea\u52a8\u5316\u548c\u7528\u6237\u900f\u660e\u7684\u5206\u5e03\u5f0f\u5e76\u884c\u6267\u884c": 317, "\u662f\u57fa\u4e8egremlin\u8bed\u8a00\u5f00\u53d1\u4ea4\u4e92\u5f0f\u56fe\u5e94\u7528\u7684\u4e00\u4e2a\u5f00\u6e90\u6846\u67b6\u548c\u4e8b\u5b9e\u6807\u51c6": 317, "gie\u901a\u8fc7tinkerpop\u63d0\u4f9b\u7684": 317, "\u63a5\u53e3": [317, 318], "\u5b9e\u73b0\u4e86\u4e0etinkerpop\u751f\u6001\u65e0\u7f1d\u96c6\u6210": 317, "\u4ece\u800c\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528\u8bf8\u5982": 317, "\u7684\u5f00\u53d1\u5de5\u5177\u6216\u901a\u8fc7java\u548cpython\u7b49\u591a\u79cd\u8bed\u8a00\u63a5\u53e3\u7f16\u5199\u5e94\u7528\u903b\u8f91": 317, "\u5982\u4e0b\u6240\u793a": 317, "\u7528\u6237\u53ef\u4ee5\u5f88\u7b80\u5355\u7684\u901a\u8fc7python\u8fde\u4e0a\u4e00\u4e2a\u8f7d\u5165graphscope\u7cfb\u7edf\u7684\u56fe\u5e76\u53d1\u8d77gremlin\u67e5\u8be2": 317, "\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4ea4\u4e92\u4f1a\u8bdd": 317, "\u8f7d\u5165ldbc\u793a\u4f8b\u56fe\u6570\u636e": 317, "\u968f\u540e\u8fd4\u56de\u4e00\u4e2agremlin\u67e5\u8be2\u63d0\u4ea4\u5165\u53e3": 317, "\u4e0b\u9762\u4e24\u53e5gremlin\u793a\u4f8b\u67e5\u8be2\u5206\u522b\u8ba1\u7b97\u56fe\u4e2d\u9876\u70b9\u548c\u8fb9\u7684\u603b\u6570": 317, "\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684": 317, "\u5bf9\u8c61\u4e8b\u5b9e\u4e0a\u662fpython\u7c7b": 317, "\u7684\u4e00\u4e2a\u5b9e\u4f8b": 317, "\u800c\u8fd9\u4e00\u7c7b\u5c01\u88c5\u4e86\u7528python\u5b9e\u73b0\u7684\u5b8c\u6574gremlin\u5ba2\u6237\u7aef\u7c7b\u5e93": 317, "\u6bcf\u4e00\u4e2a\u8f7d\u5165graphscope\u7684\u56fe\u90fd\u5305\u542b\u4e00\u4e2agremlin\u67e5\u8be2\u63d0\u4ea4\u5165\u53e3": 317, "\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u6837\u83b7\u5f97\u5177\u4f53\u7684\u8bbf\u95ee\u5730\u5740": 317, "\u4e0a\u9762\u7684\u8bed\u53e5\u4f1a\u4ea7\u751f\u5982\u4e0b": 317, "\u683c\u5f0f": 317, "\u7684\u8f93\u51fa": 317, "\u6709\u4e86\u8fd9\u4e00url\u4fe1\u606f": 317, "\u7528\u6237\u4e5f\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528gremlin": 317, "python\u8bbf\u95ee\u56fe\u6570\u636e": 317, "\u5177\u4f53\u53ef\u4ee5\u53c2\u8003": 317, "\u5b98\u65b9\u6587\u6863": 317, "tinkerpop\u540c\u65f6\u652f\u6301java\u8bed\u8a00\u6309\u7c7b\u4f3c\u65b9\u5f0f\u8bbf\u95ee": 317, "\u8be6\u89c1gremlin": 317, "java\u7684": 317, "\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0egraphscope\u5b58\u50a8\u7684\u56fe\u6570\u636e\u8fdb\u884c\u4ea4\u4e92\u7684\u63a7\u5236\u53f0": 317, "\u4e5f\u53eb\u505arepl\u73af\u5883": 317, "\u4e0b\u9762\u63cf\u8ff0\u5982\u4f55\u5229\u7528\u4e0a\u6587\u83b7\u5f97\u7684url": 317, "\u5b89\u88c5\u548c\u914d\u7f6egremlin": 317, "console\u4ee5\u8fde\u63a5graphscope\u7684\u6b65\u9aa4": 317, "\u5b89\u88c5gremlin": 317, "console\u4f9d\u8d56\u7684java\u8fd0\u884c\u65f6\u73af\u5883": 317, "\u7248\u672c\u9700\u8981\u6ee1\u8db3": 317, "\u4e0b\u8f7d\u9002\u5f53\u7248\u672c\u7684gremlin": 317, "\u89e3\u538b\u7f29\u4e0b\u8f7d\u7684\u6587\u4ef6": 317, "\u8fdb\u5165\u89e3\u538b\u7f29\u7684\u76ee\u5f55": 317, "\u5b50\u76ee\u5f55\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a": 317, "\u7684\u6587\u672c\u6587\u4ef6\u4ee5\u914d\u7f6eurl": 317, "\u5177\u4f53\u5185\u5bb9\u5982\u4e0b\u6240\u793a": 317, "\u5176\u4e2d\u7684": 317, "\u9700\u8981\u5206\u522b\u66ff\u6362\u4e3a\u4ecegraphscope\u4f1a\u8bdd\u5f97\u5230\u7684url\u4e2d\u5bf9\u5e94\u7684\u4e3b\u673a\u540d": 317, "\u6216ip": 317, "\u548c\u7aef\u53e3": 317, "classnam": 317, "ser": 317, "gryomessageserializerv1d0": 317, "serializeresulttostr": 317, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u542f\u52a8gremlin": 317, "\u63d0\u793a\u7b26\u4e0b": 317, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u8fde\u63a5\u5230\u5bf9\u5e94\u7684graphscope\u4f1a\u8bdd": 317, "\u7b2c\u4e8c\u6761\u547d\u4ee4\u5207\u6362\u5230\u8fdc\u7a0b\u6a21\u5f0f": 317, "\u4ece\u800c\u63a5\u4e0b\u6765\u8f93\u5165\u7684\u6240\u6709gremlin\u67e5\u8be2\u90fd\u88ab\u81ea\u52a8\u4f20\u8f93\u5230": 317, "\u8fdc\u7a0b": 317, "graphscope\u6267\u884c": 317, "\u73b0\u5728\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e9b\u7b80\u5355\u7684gremlin\u67e5\u8be2\u4e86": 317, "\u5f53\u4f60\u5b8c\u6210\u4ea4\u4e92": 317, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u53ef\u4ee5\u9000\u51fagremlin": 317, "gie\u4ee5\u5fe0\u5b9e\u4fdd\u7559gremlin\u7f16\u7a0b\u6a21\u578b\u4e3a\u8bbe\u8ba1\u76ee\u6807": 317, "\u4ece\u800c\u8ba9\u5df2\u6709\u7684\u5e94\u7528\u53ea\u9700\u6700\u5c0f\u5316\u7684\u4fee\u6539\u5c31\u53ef\u4ee5\u6269\u5c55\u5230\u5927\u89c4\u6a21\u8ba1\u7b97\u96c6\u7fa4": 317, "\u5728\u6b64\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2agremlin\u7684\u603b\u4f53\u4ecb\u7ecd": 317, "\u7279\u522b\u662f\u5176\u4e2d\u5305\u542b\u7684\u56fe\u6570\u636e\u6a21\u578b\u548c\u67e5\u8be2\u8bed\u8a00\u7b49\u5173\u952e\u6982\u5ff5": 317, "\u66f4\u8be6\u7ec6\u548c\u5b8c\u6574\u7684\u4ecb\u7ecd": 317, "gremlin\u5141\u8bb8\u7528\u6237\u5728\u5c5e\u6027\u56fe\u6a21\u578b\u4e0a\u5b9a\u4e49\u7279\u8bbe": 317, "hoc": 317, "\u904d\u5386\u67e5\u8be2": 317, "\u4e00\u4e2a\u5c5e\u6027\u56fe\u662f\u4e00\u4e2a\u6709\u5411\u56fe": 317, "\u5176\u4e2d\u7684\u9876\u70b9\u548c\u8fb9\u53ef\u4ee5\u62e5\u6709\u4e00\u7ec4\u5c5e\u6027": 317, "\u56fe\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61": 317, "\u70b9\u6216\u8fb9": 317, "\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6": 317, "\u548c\u4e00\u4e2a\u7c7b\u522b\u540d\u79f0": 317, "\u6307\u5b9a\u5176\u7c7b\u578b\u6216\u89d2\u8272": 317, "\u6bcf\u4e2a\u5c5e\u6027\u662f\u4e00\u4e2a\u5305\u542b\u5c5e\u6027\u540d\u548c\u5c5e\u6027\u503c\u7684": 317, "\u952e": 317, "\u503c": 317, "\u5bf9": 317, "\u5176\u6240\u5c5e\u5bf9\u8c61\u7684": 317, "\u52a0\u4e0a\u5c5e\u6027\u540d\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u5c5e\u6027\u503c": 317, "\u4e0a\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u5c5e\u6027\u56fe\u6a21\u578b\u793a\u4f8b": 317, "\u5b83\u5305\u542b": 317, "\u7528\u6237": 317, "\u5546\u54c1": 317, "\u5730\u5740": 317, "\u4e09\u7c7b\u70b9": 317, "\u5b83\u4eec\u901a\u8fc7": 317, "\u8d2d\u4e70": 317, "\u9012\u9001": 317, "belongs_to": 317, "\u5c5e\u4e8e": 317, "home_of": 317, "\u5bb6\u5ead\u5730\u5740": 317, "\u56db\u7c7b\u8fb9\u76f8\u4e92\u5173\u8054": 317, "\u56fe\u4e2d\u865a\u7ebf\u5c55\u793a\u7684\u4e00\u6761": 317, "\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684": 317, "\u8def\u5f841": 317, "\u4ee3\u8868\u4e86\u4e00\u4e2a\u7528\u6237": 317, "\u4e70\u5bb6": 317, "tom": 317, "\u8d2d\u4e70\u4e86\u4e00\u4e2a\u5356\u5bb6": 317, "jack": 317, "\u63d0\u4f9b\u7684\u6807\u4ef7": 317, "\u7684\u5546\u54c1": 317, "gift": 317, "\u4e00\u4e2agremlin\u67e5\u8be2\u6216\u56fe\u904d\u5386\u7684\u6267\u884c": 317, "\u53ef\u4ee5\u7528\u4e00\u7ec4": 317, "\u904d\u5386\u5668": 317, "\u6807\u8bc6": 317, "\u5b83\u4eec\u4f9d\u636egremlin\u67e5\u8be2\u63d0\u4f9b\u7684\u7528\u6237\u6307\u4ee4\u5728\u8f93\u5165\u56fe\u4e2d\u6e38\u8d70": 317, "\u6700\u7ec8\u6240\u6709\u505c\u6b62\u7684\u904d\u5386\u5668\u96c6\u5408": 317, "\u5305\u542b\u5b83\u4eec\u7684\u4f4d\u7f6e": 317, "\u4ee3\u8868\u4e86\u67e5\u8be2\u7684\u7ed3\u679c": 317, "\u4e00\u4e2a\u904d\u5386\u5668\u662fgremlin\u5f15\u64ce\u5904\u7406\u7684\u6700\u5c0f\u6570\u636e\u5355\u5143": 317, "\u6bcf\u4e2a\u904d\u5386\u5668\u90fd\u7ef4\u62a4\u5b83\u5bf9\u5e94\u7684\u56fe\u4e2d\u7684\u5f53\u524d\u4f4d\u7f6e": 317, "\u53ef\u4ee5\u662f\u88ab\u8bbf\u95ee\u7684\u70b9": 317, "\u8fb9\u6216\u5c5e\u6027": 317, "\u53ef\u9009\u7684\u5b83\u4e5f\u53ef\u4ee5\u5305\u542b\u8d70\u8fc7\u7684\u5b8c\u6574\u8def\u5f84\u5386\u53f2\u751a\u81f3\u5e94\u7528\u72b6\u6001": 317, "gremlin\u8bed\u8a00\u4e30\u5bcc\u7075\u6d3b\u7684\u8868\u8fbe\u80fd\u529b\u4e3b\u8981\u6765\u81ea\u4e8e\u5b83\u5bf9": 317, "\u5d4c\u5957\u904d\u5386": 317, "\u7684\u652f\u6301": 317, "\u5b83\u5141\u8bb8\u4e00\u4e2a": 317, "\u5b50": 317, "\u67e5\u8be2\u6216\u904d\u5386\u88ab\u5305\u542b\u5728\u53e6\u4e00\u4e2a\u64cd\u4f5c\u4e2d": 317, "\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u8c03\u7528\u7684\u51fd\u6570\u88ab\u5305\u88f9\u64cd\u4f5c\u7528\u4e8e\u5904\u7406\u5176\u6bcf\u4e00\u4e2a\u8f93\u5165": 317, "\u51fd\u6570\u7684\u58f0\u660e\u548c\u4f5c\u7528\u90fd\u7531\u5305\u88f9\u64cd\u4f5c\u7684\u8bed\u4e49\u51b3\u5b9a": 317, "\u8fc7\u6ee4": 317, "\u64cd\u4f5c\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u5d4c\u5957\u67e5\u8be2": 317, "\u4f5c\u4e3a\u8fc7\u6ee4\u6761\u4ef6\u8c13\u8bcd": 317, "\u800c": 317, "\u6620\u5c04": 317, "\u6392\u5e8f": 317, "\u64cd\u4f5c\u5404\u81ea\u53ef\u4ee5\u901a\u8fc7\u5d4c\u5957\u67e5\u8be2\u8bb2\u6bcf\u4e00\u4e2a\u8f93\u5165\u5355\u72ec\u6620\u5c04\u5230\u4ece\u5b83\u5f00\u59cb\u7684\u5b50\u904d\u5386\u5f97\u5230\u7684\u7ed3\u679c": 317, "\u6216\u4f9d\u636e\u7ed3\u679c\u503c\u4f5c\u4e3a\u6392\u5e8f\u4f9d\u636e": 317, "\u5d4c\u5957\u904d\u5386\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u5e94\u7528\u662f\u8868\u8fbe\u5faa\u73af": 317, "\u5728gremlin\u4e2d\u901a\u8fc7": 317, "\u5faa\u73af": 317, "\u64cd\u4f5c\u548c\u968f\u540e\u7684": 317, "\u7ec8\u6b62\u6761\u4ef6": 317, "\u8868\u8fbe": 317, "\u64cd\u4f5c\u5305\u542b\u4e00\u4e2a\u5d4c\u5957\u904d\u5386\u4f5c\u4e3a\u5faa\u73af\u4f53": 317, "\u6bcf\u4e00\u4e2a\u8f93\u5165\u90fd\u4f1a\u91cd\u590d\u9001\u5165\u8fd9\u4e00\u5b50\u67e5\u8be2": 317, "\u76f4\u5230\u7ec8\u6b62\u6761\u4ef6\u6ee1\u8db3": 317, "\u6761\u4ef6\u7ec8\u6b62": 317, "\u64cd\u4f5c\u7c7b\u4f3c": 317, "\u53ef\u4ee5\u8868\u8fbe\u4e00\u4e2a\u6761\u4ef6\u8c13\u8bcd": 317, "\u5b83\u88ab\u72ec\u7acb\u5e94\u7528\u4e8e\u5faa\u73af\u4f53\u7684\u6bcf\u4e00\u4e2a\u8f93\u51fa\u904d\u5386\u5668": 317, "\u6ee1\u8db3\u6761\u4ef6\u7684\u904d\u5386\u5668\u5c31\u4f1a\u79bb\u5f00\u5faa\u73af": 317, "\u53e6\u4e00\u4e2a\u5e38\u7528\u7684": 317, "\u8fed\u4ee3\u8f6e\u6b21\u7ec8\u6b62": 317, "\u64cd\u4f5c\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u6574\u578b\u5e38\u91cf": 317, "\u8868\u8fbe\u56fa\u5b9a\u8fed\u4ee3\u8f6e\u6b21\u540e\u7ec8\u6b62\u5faa\u73af": 317, "\u4e0b\u9762\u5c55\u793a\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684gremlin\u793a\u4f8b": 317, "\u5b83\u5c1d\u8bd5\u4ece\u4e00\u4e2a\u7ed9\u5b9a\u8d26\u6237": 317, "\u70b9\u5f00\u59cb\u627e\u5230\u957f\u5ea6\u4e3a": 317, "\u7684\u6709\u5411\u73af\u8def": 317, "\u9996\u5148": [317, 319], "\u8f93\u5165\u56fe\u64cd\u4f5c": 317, "\u5305\u542b\u4e00\u4e2a": 317, "\u8868\u8fbe\u7684\u7b80\u5355\u8fc7\u6ee4": 317, "\u8fd4\u56de\u56fe\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684": 317, "\u70b9": 317, "\u5373\u552f\u4e00\u6807\u8bc6\u4e3a": 317, "\u7684\u70b9": 317, "\u7d27\u968f\u5176\u540e\u7684": 317, "\u64cd\u4f5c\u662f\u4e00\u4e2a": 317, "\u4fee\u9970\u7b26": 317, "\u5b83\u4e0d\u6539\u53d8\u8f93\u5165\u904d\u5386\u5668\u96c6\u5408": 317, "\u4f46\u5bf9\u5176\u4e2d\u6bcf\u4e00\u4e2a\u904d\u5386\u5668\u7684\u5f53\u524d\u4f4d\u7f6e": 317, "\u6253\u4e0a\u4e00\u4e2a\u6709\u540d\u6807\u7b7e": 317, "\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u7684": 317, "\u4ece\u800c\u4eca\u540e\u53ef\u4ee5\u5f15\u7528": 317, "\u67e5\u8be2\u6cbf\u7740": 317, "\u7c7b\u578b\u7684\u51fa\u8fb9\u5faa\u73af\u6e38\u8d70": 317, "\u6b21": 317, "\u8f93\u51fahops\u5728": 317, "\u8303\u56f4\u5185\u7684\u90bb\u70b9": 317, "\u4e14\u6bcf\u4e00\u6b21\u90fd\u8fc7\u6ee4\u6216\u8df3\u8fc7\u8def\u5f84\u4e2d\u7684\u91cd\u590d\u70b9": 317, "\u901a\u8fc7\u5728": 317, "\u5185\u914d\u7f6e": 317, "\u9009\u9879\u5b9e\u73b0": 317, "\u64cd\u4f5c\u68c0\u67e5\u6b64\u65f6\u904d\u5386\u8def\u5f84\u7684\u4e0b\u4e00\u8df3\u662f\u5426\u53ef\u4ee5\u56de\u5230\u8d77\u70b9": 317, "\u6307\u4ee3": 317, "\u4ece\u800c\u5f62\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a": 317, "\u7684\u73af": 317, "\u5bf9\u4e8e\u68c0\u6d4b\u5230\u7684\u73af": 317, "\u67e5\u8be2\u8fd8\u901a\u8fc7": 317, "\u64cd\u4f5c\u5c55\u793a\u6bcf\u4e2a\u904d\u5386\u5668\u7684\u5b8c\u6210\u8def\u5f84\u4fe1\u606f": 317, "\u64cd\u4f5c\u7c7b\u4f3csql\u4e2d\u7684top": 317, "\u5b83\u8868\u8fbe\u4e86\u67e5\u8be2\u7ed3\u679c\u4ec5\u9700\u8981\u5305\u542b\u4e00\u4e2a\u8fd9\u6837\u7684\u8def\u5f84": 317, "\u5982\u679c\u6709\u7684\u8bdd": 317, "gie\u652f\u6301apach": 317, "tinkerpop\u5b9a\u4e49\u7684\u5c5e\u6027\u56fe\u6a21\u578b\u548cgremlin\u904d\u5386\u67e5\u8be2": 317, "\u4e14\u5b9e\u73b0\u4e86\u4e00\u4e2a\u4e0etinkerpop": 317, "3\u548c3": 317, "4\u7248\u672c\u517c\u5bb9\u7684": 317, "\u670d\u52a1\u63a5\u53e3": 317, "\u9664\u6b64\u4e4b\u5916": 317, "\u6211\u4eec\u6269\u5c55\u4e86\u4e00\u4e9b\u8bed\u6cd5\u7cd6\u6765\u8fdb\u4e00\u6b65\u5f15\u5165\u4e00\u4e9b\u7b80\u6d01\u660e\u4e86\u7684expression\u8868\u793a": 317, "\u4e0b\u9762\u6211\u4eec\u5217\u51fa\u5f53\u524d\u5b9e\u73b0\u548capach": 317, "tinkerpop\u89c4\u8303\u7684\u4e3b\u8981\u5dee\u4e00\u70b9": 317, "\u5176\u4e2d\u4e00\u4e9b\u5dee\u5f02\u4f1a\u6709\u673a\u4f1a\u6d88\u9664": 317, "\u53e6\u4e00\u4e9b\u662f\u76ee\u524dgraphscope\u5b9a\u4f4d\u7684\u573a\u666f\u5dee\u5f02\u9020\u6210\u7684\u4e0d\u540c\u8bbe\u8ba1\u9009\u62e9": 317, "\u76ee\u524d\u7684": 317, "\u6280\u672f\u9884\u89c8\u7248\u5229\u7528\u4e86": 317, "\u9879\u76ee\u63d0\u4f9b\u7684\u5206\u5e03\u5f0f\u5185\u5b58\u5b58\u50a8\u4f5c\u4e3a\u8f93\u5165\u56fe": 317, "\u5b83\u652f\u6301\u4e00\u6b21\u8f7d\u5165": 317, "\u4e0d\u53ef\u4fee\u6539": 317, "\u7684\u56fe\u6a21\u578b\u6570\u636e": 317, "\u548c\u56fe\u5206\u7247\u5b58\u50a8\u5728\u5206\u5e03\u5f0f\u96c6\u7fa4": 317, "\u5f53\u524d\u8bbe\u8ba1\u6709\u4e0b\u9762\u7684\u4e00\u4e9b\u9650\u5236": 317, "\u7ea6\u675f": 317, "\u6bcf\u4e2a\u56fe\u7684\u6570\u636e\u9700\u8981\u6ee1\u8db3\u4e8b\u5148\u5b9a\u4e49\u7684schema": 317, "\u5305\u62ec\u70b9": 317, "\u8fb9\u7684\u7c7b\u578b\u540d\u79f0": 317, "\u548c\u5c5e\u6027\u540d\u53ca\u503c\u7c7b\u578b": 317, "\u4e3b\u952e\u7ea6\u675f": 317, "\u6bcf\u4e2a\u9876\u70b9\u7c7b\u578b\u9700\u8981\u5305\u542b\u4e00\u4e2a\u7528\u6237\u53ef\u81ea\u5b9a\u4e49\u7684\u4e3b\u952e": 317, "\u540c\u65f6\u7cfb\u7edf\u4f1a\u4e3a\u6bcf\u4e2a\u70b9\u548c\u8fb9\u5bf9\u8c61": 317, "\u81ea\u52a8\u5206\u914d\u4ea7\u751f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u552f\u4e00\u6807\u8bc6": 317, "\u5bf9\u4e8e\u70b9\u6765\u8bf4": 317, "id\u7f16\u7801\u4e86\u7c7b\u578b": 317, "\u548c\u7528\u6237\u81ea\u5b9a\u4e49\u4e3b\u952e\u4fe1\u606f": 317, "\u6bcf\u4e2a\u70b9\u6216\u8fb9\u7684\u5c5e\u6027": 317, "\u53ef\u4ee5\u5305\u542b\u4e0b\u5217\u7c7b\u578b\u7684\u5c5e\u6027\u503c": 317, "\u56e0\u4e3a\u7cfb\u7edf\u7684\u5168\u5206\u5e03\u5f0f\u53ef\u6269\u5c55\u67b6\u6784": 317, "\u5f53\u524d\u5b9a\u4f4d\u7684\u573a\u666f\u548c\u5b9e\u73b0\u4e0d\u652f\u6301\u4e0b\u5217\u529f\u80fd": 317, "\u56fe\u4fee\u6539\u64cd\u4f5c": 317, "lambda\u548cgroovy\u8868\u8fbe\u5f0f\u6216\u81ea\u5b9a\u4e49\u51fd\u6570": 317, "\u7b49\u8868\u8fbe\u5f0f\u6216java\u8c03\u7528\u7b49\u7b49": 317, "\u5b9a\u5236gremlin\u56fe\u904d\u5386\u7b56\u7565": 317, "\u5373\u67e5\u8be2\u4f18\u5316\u7531graphscope\u7cfb\u7edf\u81ea\u52a8\u5b8c\u6210": 317, "\u4e8b\u52a1": 317, "\u4e8c\u7ea7\u7d22\u5f15\u76ee\u524d\u5c1a\u672a\u652f\u6301": 317, "\u7528\u6237\u5b9a\u4e49\u7684\u4e3b\u952e\u4f1a\u88ab\u81ea\u52a8\u7d22\u5f15": 317, "\u5f53\u524dgraphscope\u652f\u6301\u4e0b\u5217gremlin\u64cd\u4f5c": 317, "\u548c\u793a\u4f8b\u7528\u6cd5": 317, "\u8f93\u5165\u56fe": 317, "id1": 317, "id2": 317, "labelnam": 317, "labelname1": 317, "labelname2": 317, "\u901a\u8fc7expression\u5b9e\u73b0\u8fc7\u6ee4": 317, "\u8bed\u6cd5\u7cd6": 317, "\u4ee3\u8868head\u8282\u70b9\u7684age\u5c5e\u6027": 317, "\u4ee3\u8868": 317, "\u8282\u70b9\u7684age\u5c5e\u6027": 317, "head\u8282\u70b9\u7684a\u5c5e\u6027\u662f\u6574\u6570\u6570\u7ec4\u7c7b\u578b": 317, "\u901a\u8fc7expression\u5b9e\u73b0\u4f4d\u8fd0\u7b97": 317, "head\u8282\u70b9\u7684number\u5c5e\u6027\u662f\u6574\u578b": 317, "\u901a\u8fc7expression\u5b9e\u73b0\u7b97\u6570\u8fd0\u7b97": 317, "head\u8282\u70b9\u7684number\u548cage\u5c5e\u6027\u90fd\u662f\u6574\u578b": 317, "\u901a\u8fc7expression\u5b9e\u73b0\u6307\u6570\u8fd0\u7b97": 317, "dedup": 317, "substr": 317, "contant": 317, "aaa": 317, "otherv": 317, "flatmap": 317, "\u591a\u91cd\u6620\u5c04": 317, "bothv": 317, "\u627e\u5230\u6240\u6709\u4ece": 317, "\u5f00\u59cb\u901a\u8fc7": 317, "\u8fb9\u7c7b\u578b\u5411\u5916\u6269\u5c55": 317, "\u8df3\u7684\u6240\u6709\u7b80\u5355\u8def\u5f84": 317, "\u70b9\u4e0d\u91cd\u590d": 317, "\u5e76\u4e14\u53ea\u4fdd\u5b58path\u7684\u6700\u672b\u7aef\u70b9": 317, "\u8df3\u7684\u6240\u6709\u4efb\u610f\u8def\u5f84": 317, "\u70b9\u53ef\u91cd\u590d": 317, "\u8f93\u51fa\u6240\u6709\u5c5e\u6027": 317, "\u805a\u5408": 317, "groupbi": 317, "groupby\u591a\u4e2akei": 317, "\u5e76\u4e14\u4e3a\u6bcf\u4e2akey\u8bbe\u7f6e\u522b\u540d": 317, "groupby\u591a\u4e2avalu": 317, "\u5e76\u4e14\u4e3a\u6bcf\u4e2avalue\u8bbe\u7f6e\u522b\u540d": 317, "\u5373\u53d6\u524dk\u4e2a\u7ed3\u679c": 317, "graphscope\u6682\u65f6\u4e0d\u652f\u6301\u4e0b\u5217gremlin\u64cd\u4f5c": 317, "\u4f1a\u9010\u6b65\u652f\u6301": 317, "\u53ef\u4ee5\u901a\u8fc7path": 317, "expansion\u8bed\u6cd5\u7cd6\u5b9e\u73b0": 317, "\u57fa\u4e8e\u96c6\u5408\u7684local\u8ba1\u7b97": 317, "\u67e5\u8be2\u8ba1\u5212\u89e3\u91ca": 317, "\u67e5\u8be2\u6267\u884c\u6027\u80fd\u5206\u6790": 317, "\u81ea\u5b9a\u4e49\u72b6\u6001\u8ba1\u7b97": 317, "\u8ba1\u7b97\u5b50\u56fe": 317, "\u76ee\u524d\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5316\u7248\u672c": 317, "\u652f\u6301\u62bd\u53d6\u5b50\u56fe\u5199\u5165vineyard\u5b58\u50a8": 317, "cap": 317, "\u8bbf\u95ee\u81ea\u5b9a\u4e49\u72b6\u6001": 317, "\u4f8b\u5982pagerank\u548cshortestpath": 317, "\u8fd9\u90e8\u5206\u529f\u80fdgraphscope\u901a\u8fc7\u56fe\u5206\u6790\u5f15\u64ce\u548cnetworkx\u517c\u5bb9\u63a5\u53e3\u63d0\u4f9b": 317, "graphscope\u4e2d\u7684\u56fe\u5b66\u4e60\u5f15\u64ce": 318, "\u662f\u9762\u5411\u5927\u89c4\u6a21\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u7814\u53d1\u548c\u5e94\u7528\u800c\u8bbe\u8ba1\u7684\u4e00\u6b3e\u5206\u5e03\u5f0f\u6846\u67b6": 318, "\u5b83\u4ece\u5b9e\u9645\u95ee\u9898\u51fa\u53d1": 318, "\u63d0\u70bc\u548c\u62bd\u8c61\u4e86\u4e00\u5957\u9002\u5408\u4e8e\u5f53\u4e0b\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7684\u7f16\u7a0b\u8303\u5f0f": 318, "\u5e76\u5df2\u7ecf\u6210\u529f\u5e94\u7528\u5728\u963f\u91cc\u5df4\u5df4": 318, "\u5185\u90e8\u7684\u8bf8\u5982\u641c\u7d22\u63a8\u8350": 318, "\u77e5\u8bc6\u56fe\u8c31\u7b49\u4f17\u591a\u573a\u666f": 318, "gl\u6ce8\u91cd\u53ef\u79fb\u690d\u548c\u53ef\u6269\u5c55": 318, "\u5bf9\u4e8e\u5f00\u53d1\u8005\u66f4\u4e3a\u53cb\u597d": 318, "\u4e3a\u4e86\u5e94\u5bf9gnn\u5728\u5de5\u4e1a\u573a\u666f\u4e2d\u7684\u591a\u6837\u6027\u548c\u5feb\u901f\u53d1\u5c55\u7684\u9700\u6c42": 318, "\u57fa\u4e8egl": 318, "\u5f00\u53d1\u8005\u53ef\u4ee5\u5b9e\u73b0\u4e00\u79cdgnn\u7b97\u6cd5": 318, "\u6216\u8005\u9762\u5411\u5b9e\u9645\u573a\u666f\u5b9a\u5236\u5316\u4e00\u79cd\u56fe\u7b97\u5b50": 318, "\u4f8b\u5982\u56fe\u91c7\u6837": 318, "\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u5165\u95e8\u6559\u7a0b\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528": 318, "\u6765\u6784\u5efa\u7528\u6237\u81ea\u5df1\u7684cnn\u6a21\u578b": 318, "\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u5b9e\u73b0\u76ee\u524d\u4e3b\u8981\u6709\u4e24\u79cd\u65b9\u5f0f": 318, "\u7b2c\u4e00\u79cd\u662f\u76f4\u63a5\u4ee5\u5168\u56fe\u4e3a\u8ba1\u7b97\u5bf9\u8c61": 318, "\u539f\u59cb\u7684gcn": 318, "gat\u7b49\u7b97\u6cd5\u90fd\u662f\u8fd9\u79cd\u5b9e\u73b0\u601d\u8def": 318, "\u4e00\u822c\u4f1a\u76f4\u63a5\u7528\u90bb\u63a5\u77e9\u9635\u8fdb\u884c\u8ba1\u7b97": 318, "\u7136\u800c\u8fd9\u79cd\u65b9\u6cd5\u5728\u5927\u89c4\u6a21\u56fe\u4e0a\u4f1a\u6d88\u8017\u5927\u91cf\u5185\u5b58": 318, "\u5bfc\u81f4\u65e0\u6cd5\u9ad8\u6548\u8bad\u7ec3\u751a\u81f3\u65e0\u6cd5\u8bad\u7ec3": 318, "\u7b2c\u4e8c\u79cd\u601d\u8def\u662f\u5c06\u5168\u56fe\u5206\u6210\u82e5\u5e72\u5b50\u56fe": 318, "\u7528\u6df1\u5ea6\u5b66\u4e60\u91cc\u5e38\u7528\u7684\u6279\u6b21\u8bad\u7ec3\u65b9\u6cd5\u8fdb\u884c\u8bad\u7ec3": 318, "\u6bcf\u6b21\u8bad\u7ec3\u4e00\u4e2a\u5b50\u56fe": 318, "\u4ee3\u8868\u65b9\u6cd5\u662fgraphsag": 318, "graphsaint\u7b49": 318, "\u4e3b\u8981\u9762\u5411\u8d85\u5927\u89c4\u6a21\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u5f00\u53d1": 318, "\u5b83\u7531\u5e95\u5c42\u7684\u4e00\u4e2a\u56fe\u5f15\u64ce\u548c\u4e0a\u5c42\u7684": 318, "\u7b97\u6cd5\u6a21\u578b\u6784\u6210": 318, "\u56fe\u5f15\u64ce\u5206\u5e03\u5f0f\u5b58\u50a8\u56fe\u7684\u62d3\u6251\u548c\u5c5e\u6027\u4fe1\u606f\u5e76\u63d0\u4f9b\u9ad8\u6548\u7684\u56fe\u91c7\u6837\u67e5\u8be2": 318, "\u7b97\u6cd5\u6a21\u578b\u901a\u8fc7\u8c03\u7528\u56fe\u91c7\u6837\u548c\u67e5\u8be2\u63a5\u53e3\u83b7\u53d6\u5b50\u56fe\u5e76\u8fdb\u884c\u8ba1\u7b97": 318, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u7edf\u4e00\u7f16\u7a0b\u6846\u67b6": 318, "\u652f\u6301\u5e38\u89c1\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u5f00\u53d1": 318, "\u77e5\u8bc6\u56fe\u8c31\u6a21\u578b": 318, "\u56fe\u5d4c\u5165\u7b97\u6cd5\u7b49": 318, "\u5e76\u4e14\u548c\u4e3b\u6d41\u7684\u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5\u517c\u5bb9": 318, "\u5305\u62ectensorflow": 318, "\u548cpytorch": 318, "\u76ee\u524d\u6211\u4eec\u5b9e\u73b0\u4e86\u57fa\u4e8etensorflow\u7684\u6a21\u578b": 318, "\u57fa\u4e8epytorch\u7684\u6a21\u578b\u6b63\u5728\u5f00\u53d1\u4e2d": 318, "\u91c7\u7528\u91c7\u6837\u5b50\u56fe\u518d\u8ba1\u7b97\u7684\u65b9\u5f0f\u6784\u5efa\u548c\u8bad\u7ec3\u6a21\u578b": 318, "\u6211\u4eec\u9996\u5148\u4ecb\u7ecd\u4e00\u4e0b\u57fa\u672c\u7684\u6570\u636e\u6a21\u578b": 318, "\u662f\u56fe\u5b66\u4e60\u7b97\u6cd5\u7f16\u7a0b\u7684\u57fa\u672c\u6570\u636e\u5bf9\u8c61": 318, "\u5b83\u7531\u4e00\u4e2abatch\u7684\u79cd\u5b50\u70b9\u6216\u8005\u8fb9": 318, "\u79f0\u4e3a": 318, "\u4ee5\u53ca\u4ed6\u4eec\u7684": 318, "\u611f\u53d7\u91ce": 318, "\u591a\u8df3\u90bb\u5c45": 318, "\u7ec4\u6210": 318, "\u7531\u56fe\u91c7\u6837\u548c\u67e5\u8be2\u5230\u7684\u6570\u636e\u7ec4\u6210": 318, "\u6211\u4eec\u5b9e\u73b0": 318, "\u4e86\u5e38\u89c1\u7684\u90bb\u5c45\u91c7\u6837": 318, "\u56fe\u904d\u5386\u548c\u8d1f\u91c7\u6837\u65b9\u6cd5": 318, "\u91c7\u6837\u7684\u6570\u636e\u7ec4\u7ec7\u6210numpy\u683c\u5f0f\u7684": 318, "\u540e\u6839\u636e\u4e0d\u540c\u7684\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce\u8f6c\u6362\u6210\u5bf9\u5e94\u7684tensor\u683c\u5f0f": 318, "\u7136\u540e\u7528": 318, "\u7ba1\u7406": 318, "\u5230": 318, "\u7684\u8f6c\u6362": 318, "\u63d0\u4f9b\u8bad\u7ec3\u6240\u9700\u8981\u7684\u6570\u636e": 318, "\u6240\u6709\u7684\u56fe\u5b66\u4e60\u6a21\u578b\u53ef\u4ee5\u62bd\u8c61\u4e3a\u4f7f\u7528\u7f16\u7801\u5668\u5c06": 318, "\u7f16\u7801\u6210\u6700\u7ec8\u7684\u70b9": 318, "\u8fb9\u6216\u8005\u5b50\u56fe\u7684": 318, "\u5411\u91cf": 318, "\u9996\u5148\u5229\u7528\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801\u539f\u59cb\u7684\u70b9\u548c\u8fb9\u4e0a\u7684\u7279\u5f81": 318, "\u7136\u540e\u5c06\u7279\u5f81\u7f16\u7801\u5668\u7f16\u7801\u540e\u7684": 318, "\u539f\u59cb\u5411\u91cf\u7528\u4e0d\u540c\u7684\u56fe\u7f16\u7801\u5668\u8fdb\u884c\u7f16\u7801": 318, "\u5f97\u5230\u6700\u7ec8\u7684\u8f93\u51fa": 318, "\u5bf9\u4e8e\u5927\u591a\u6570gnn\u6a21\u578b": 318, "\u56fe\u7f16\u7801\u5668": 318, "\u63d0\u4f9b\u4e86\u5982\u4f55\u805a\u5408\u90bb\u5c45\u4fe1\u606f\u5230\u81ea\u8eab\u8282\u70b9\u6216\u8005\u8fb9\u7684\u62bd\u8c61": 318, "\u7528\u4e0d\u540c\u7684\u56fe\u5377\u79ef\u5c42\u5b9e\u73b0": 318, "\u57fa\u4e8e\u4e0a\u9762\u4ecb\u7ecd\u7684\u6570\u636e\u6a21\u578b\u548c\u7f16\u7801\u5668": 318, "\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5feb\u901f\u5730\u5b9e\u73b0\u4e0d\u540c\u7684\u56fe\u5b66\u4e60\u7b97\u6cd5": 318, "\u5728\u63a5\u4e0b\u6765\u4e00\u7ae0\u91cc": 318, "\u6211\u4eec\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u5f00\u53d1\u4e00\u4e2agnn\u6a21\u578b": 318, "\u8fd9\u7bc7\u6587\u6863\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u7528": 318, "\u63d0\u4f9b\u7684\u57fa\u672capi\u914d\u5408\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce": 318, "\u5982tensorflow": 318, "\u6765\u6784\u5efa\u56fe\u5b66\u4e60\u7b97\u6cd5": 318, "\u6211\u4eec\u4ee5\u56fe\u795e\u7ecf\u7f51\u7edc\u91cc\u6700\u6d41\u884c\u7684gcn\u6a21\u578b\u505a\u4e3a\u793a\u4f8b\u6765\u8bf4\u660e": 318, "\u901a\u5e38\u6765\u8bf4": 318, "\u5b9e\u73b0\u4e00\u4e2a\u7b97\u6cd5\u9700\u8981\u4e0b\u9762\u56db\u4e2a\u6b65\u9aa4": 318, "\u6307\u5b9a\u91c7\u6837\u6a21\u5f0f": 318, "\u7528\u56fe\u91c7\u6837": 318, "\u67e5\u8be2\u65b9\u6cd5\u91c7\u6837\u5b50\u56fe\u5e76\u7ec4\u7ec7\u6210": 318, "\u6211\u4eec\u62bd\u8c61\u4e864\u4e2a\u57fa\u672c\u7684\u51fd\u6570": 318, "\u7528\u6765\u904d\u5386\u56fe\u6570\u636e\u4ea7\u751f": 318, "positve_sampl": 318, "\u4ee5\u8fd9\u4e9b": 318, "\u4e3a\u8f93\u5165\u4ea7\u751f": 318, "\u8bad\u7ec3\u7684\u6b63\u6837\u672c": 318, "\u5bf9\u4e8e\u65e0\u76d1\u7763\u5b66\u4e60": 318, "\u4ea7\u751f\u8d1f\u6837\u672c": 318, "gnns\u9700\u8981\u805a\u5408\u90bb\u5c45\u4fe1\u606f": 318, "\u6211\u4eec\u62bd\u8c61\u4e86": 318, "\u6765\u91c7\u6837\u90bb\u5c45": 318, "\u6700\u540e\u5c06": 318, "\u4ea7\u751f\u7684": 318, "\u4ee5\u53ca\u91c7\u6837\u51fa\u7684\u90bb\u5c45\u7ec4\u6210": 318, "\u6784\u5efa\u56fe\u6570\u636e\u6d41": 318, "\u7b97\u6cd5\u6a21\u578b\u57fa\u4e8e\u7c7b\u4f3ctensorflow\u7684\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce\u6784\u5efa": 318, "\u6240\u4ee5\u91c7\u6837\u51fa\u7684": 318, "\u9700\u8981\u5148\u8f6c\u6362\u6210tensor\u683c\u5f0f": 318, "\u624d\u80fd\u4f7f\u7528": 318, "\u6765\u5c01\u88c5\u8fd9\u4e00\u8f6c\u6362\u8fc7\u7a0b": 318, "\u53ef\u4ee5\u4ea7\u751f\u4e00\u4e2a\u8fed\u4ee3\u5668\u6765\u8fdb\u884c\u6279\u6b21\u8bad\u7ec3": 318, "\u5b9a\u4e49\u7f16\u7801\u5668": 318, "\u7f16\u7801\u5668\u548c\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801": 318, "\u5f97\u5230": 318, "\u540e": 318, "\u6211\u4eec\u9996\u5148\u5c06\u539f\u59cb\u7684\u70b9": 318, "\u8fb9\u7279\u5f81\u7528\u4e00\u4e9b\u5e38\u89c1\u7279\u5f81\u7f16\u7801\u5668\u7f16\u7801\u6210\u539f\u59cb\u5411\u91cf": 318, "\u505a\u4e3agnns\u6a21\u578b\u7684\u7279\u5f81\u8f93\u5165": 318, "\u7136\u540e\u7528\u56fe\u7f16\u7801\u5668\u5904\u7406": 318, "\u5c06\u90bb\u5c45\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u6c47\u805a\u5e76": 318, "\u548c\u81ea\u8eab\u7279\u5f81\u8fdb\u884c\u7ec4\u5408": 318, "\u5f97\u5230\u6700\u540e\u7684\u70b9\u6216\u8005\u8fb9\u7684\u5411\u91cf": 318, "\u7f16\u5199\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": 318, "\u9009\u62e9\u9002\u5f53\u7684\u635f\u5931\u51fd\u6570": 318, "\u5e76\u7f16\u5199\u8bad\u7ec3\u8fc7\u7a0b": 318, "\u5185\u7f6e\u4e86\u4e00\u4e9b\u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570\u548c\u4f18\u5316\u5668": 318, "\u5e76\u5bf9\u8bad\u7ec3\u8fc7\u7a0b\u8fdb\u884c\u4e86\u5c01\u88c5": 318, "\u540c\u65f6\u652f\u6301\u5355\u673a\u548c\u5206\u5e03\u5f0f\u8bad\u7ec3": 318, "\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u635f\u5931\u51fd\u6570": 318, "\u4f18\u5316\u5668\u548c\u8bad\u7ec3\u8fc7\u7a0b": 318, "\u4e0b\u9762\u6211\u4eec\u6309\u7167\u4e0a\u9762\u4ecb\u7ecd\u76844\u4e2a\u6b65\u9aa4\u6765\u4ecb\u7ecd\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2agcn\u6a21\u578b": 318, "\u6211\u4eec\u4f7f\u7528cora\u6570\u636e\u96c6\u4ee5\u70b9\u5206\u7c7b\u4efb\u52a1\u505a\u4e3a\u793a\u4f8b": 318, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u636e\u8f6c\u6362\u811a\u672c": 318, "\u6765": 318, "\u5c06\u539f\u59cbcora\u8f6c\u6362\u6210": 318, "\u9700\u8981\u7684\u683c\u5f0f": 318, "\u8fd0\u884c\u5b8c\u8fd9\u4e2a\u811a\u672c\u540e\u4f60\u53ef\u4ee5\u5f97\u5230\u4e0b\u97625\u4e2a\u6587\u4ef6": 318, "\u5206\u522b\u662f\u70b9\u8868": 318, "\u8fb9\u8868\u4ee5\u53ca\u7528\u6765\u533a\u5206\u8bad\u7ec3": 318, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u7684\u70b9\u8868": 318, "\u7136\u540e\u53ef\u4ee5\u7528\u4e0b\u9762\u4ee3\u7801\u6765\u6784\u5efa\u56fe": 318, "\u540e\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u5c06\u56fe\u52a0\u8f7d\u8fdb\u5185\u5b58": 318, "gcn\u6a21\u578b\u7ee7\u627f\u81ea\u57fa\u672c\u7684\u5b66\u4e60\u6a21\u578b\u7c7b": 318, "\u53ea\u9700\u8981\u91cd\u5199\u57fa\u7c7b\u7684\u91c7\u6837": 318, "\u6a21\u578b\u6784\u5efa\u7b49\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b8c\u6210gcn\u7684\u6784\u5efa": 318, "\u524d\u4e24\u4e2a\u51fd\u6570\u7528\u6765\u91c7\u6837\u79cd\u5b50\u8282\u70b9\u548c\u6b63\u6837\u672c": 318, "\u91c7\u6837\u90bb\u5c45\u5e76\u7ec4\u7ec7": 318, "\u56de\u4e00\u8df3\u90bb\u5c45": 318, "\u56e0\u6b64\u4e0a\u9762\u4ee3\u7801\u662f\u91c7\u6837\u4e8c\u8df3\u90bb\u5c45": 318, "\u8fd9\u91cc\u53ef\u4ee5\u9009\u62e9\u4e0d\u540c\u7684\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5": 318, "\u5bf9\u4e8e\u539f\u59cbgcn\u6765\u8bf4\u56e0\u4e3a\u8981\u83b7\u5f97\u6bcf\u4e2a\u70b9\u7684\u6240\u6709\u90bb\u5c45": 318, "\u56e0\u6b64\u9009\u62e9": 318, "\u91c7\u6837\u5b8c\u540e\u5c06\u7ed3\u679c\u7ec4\u7ec7": 318, "\u6210": 318, "\u8fd4\u56de": 318, "\u51fd\u6570\u91cc\u6211\u4eec\u4f7f\u7528\u5c01\u88c5\u7684": 318, "\u6765\u628a": 318, "\u8f6c\u6362\u6210\u5bf9\u5e94\u7684": 318, "\u5305\u542b\u4e00\u4e2a\u6570\u636e\u6d41\u8fed\u4ee3\u5668\u548c\u82e5\u5e72": 318, "\u4f60\u53ef\u4ee5\u4ece": 318, "\u83b7\u53d6\u548c\u524d\u9762": 318, "\u5bf9\u5e94\u7684": 318, "\u9996\u5148\u4f7f\u7528\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801\u539f\u59cb\u7279\u5f81": 318, "\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528": 318, "\u5373\u8fd4\u56de\u81ea\u8eab\u5373\u53ef": 318, "\u56e0\u4e3a": 318, "cora\u7684\u7279\u5f81\u5df2\u7ecf\u662f\u5904\u7406\u8fc7\u7684\u5411\u91cf\u683c\u5f0f\u4e86": 318, "\u5bf9\u4e8e\u65e2\u6709\u79bb\u6563\u7279\u5f81\u7531\u4e8e\u8fde\u7eed\u7279\u5f81\u7684\u60c5\u51b5": 318, "\u66f4\u591aencoder\u8bf7\u53c2\u8003": 318, "\u5c42\u6784\u5efa\u56fe\u7f16\u7801\u5668": 318, "gcn\u6bcf\u4e2a\u8282\u70b9\u91c7\u6837\u5168\u90e8\u90bb\u5c45": 318, "\u90bb\u5c45\u4ee5\u7a00\u758f\u683c\u5f0f\u7ec4\u7ec7": 318, "\u6240\u4ee5\u8fd9\u91cc\u4f7f\u7528": 318, "\u90bb\u5c45\u5bf9\u9f50\u7684\u6a21\u578b\u53ef\u4ee5\u53c2\u8003graphsage\u7684\u5b9e\u73b0": 318, "\u5bf9\u4e8ecora\u70b9\u5206\u7c7b\u6a21\u578b": 318, "\u6211\u4eec\u9009\u62e9\u5bf9\u5e94\u7684tensorflow\u91cc\u7684\u5206\u7c7b\u635f\u5931\u51fd\u6570\u5373\u53ef": 318, "\u7136\u540e\u5728": 318, "\u51fd\u6570\u91cc\u5c06\u7f16\u7801\u5668\u548c\u635f\u5931\u51fd\u6570\u7ec4\u7ec7\u8d77\u6765": 318, "\u6700\u7ec8\u8fd4\u56de\u4e00\u4e2a\u6570\u636e\u8fed\u4ee3\u5668\u548c\u635f\u5931\u51fd\u6570": 318, "\u63a5\u7740\u4f7f\u7528\u5c01\u88c5\u7684\u5355\u673a\u8bad\u7ec3\u8fc7\u7a0b": 318, "\u6765\u8fdb\u884c\u8bad\u7ec3": 318, "\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u4e00\u4e2agcn\u6a21\u578b\u7684\u7f16\u5199": 318, "\u5b8c\u6574\u4ee3\u7801\u8bf7\u53c2\u8003": 318, "\u76ee\u5f55": 318, "\u6211\u4eec\u5b9e\u73b0\u4e86gcn": 318, "gat\u7b49\u6a21\u578b": 318, "\u4f60\u53ef\u4ee5\u53c2\u8003\u76f8\u4f3c\u7684\u6a21\u578b\u4ee3\u7801\u505a\u4e3a\u5f00\u59cb": 318, "\u5c5e\u6027\u56fe": 319, "\u56fe\u4e0a\u7684\u70b9": 319, "\u8fb9\u90fd\u5e26\u6709\u6807\u7b7e": 319, "\u6bcf\u4e2a\u6807\u7b7e\u90fd\u53ef\u80fd\u5e26\u6709\u8bb8\u591a\u5c5e\u6027": 319, "\u5185\u7f6e\u4e86\u4e00\u7ec4\u6d41\u884c\u7684\u6570\u636e\u96c6": 319, "\u4ee5\u53ca\u8f7d\u5165\u4ed6\u4eec\u7684\u5de5\u5177\u51fd\u6570": 319, "\u5e2e\u52a9\u7528\u6237\u66f4\u5bb9\u6613\u7684\u4e0a\u624b": 319, "\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50": 319, "\u5728\u5355\u673a\u6a21\u5f0f\u4e0b": 319, "\u4f1a\u5c06\u6570\u636e\u6587\u4ef6\u4e0b\u8f7d\u5230": 319, "\u5e76\u4e14\u4f1a\u4fdd\u7559\u4ee5\u4f9b\u5c06\u6765\u4f7f\u7528": 319, "\u96c6\u7fa4\u6a21\u5f0f\u4e0b": 319, "\u5c06\u6570\u636e\u6587\u4ef6\u4e0b\u8f7d\u5230": 319, "\u7684\u672c\u5730\u5b58\u50a8\u6bd4\u8f83\u590d\u6742": 319, "\u6240\u4ee5\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6302\u8f7d\u4e86": 319, "\u7684\u6570\u636e\u96c6\u6876\u7684\u4e00\u4e2a\u5bb9\u5668": 319, "\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u91cc": 319, "\u6211\u4eec\u5c06\u8f7d\u5165\u548c\u4e0a\u9762\u540c\u6837\u7684\u4e00\u5f20\u56fe": 319, "\u53ea\u4e0d\u8fc7\u8fd9\u6b21": 319, "\u90e8\u7f72\u5728\u96c6\u7fa4\u4e2d": 319, "\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 319, "\u7136\u540e\u5c06\u6570\u636e\u96c6\u6876\u6302\u8f7d\u5230": 319, "\u6b64\u8def\u5f84\u76f8\u5bf9\u4e8e": 319, "\u7684\u672c\u5730\u8def\u5f84": 319, "\u7136\u540e\u6211\u4eec\u5c06\u4f1a\u8bdd\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165": 319, "\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570": 319, "\u662f\u6211\u4eec\u901a\u8fc7": 319, "\u7684\u53c2\u6570\u6307\u5b9a\u7684\u6302\u8f7d\u8def\u5f84": 319, "\u662f\u8fd9\u4e2a\u6570\u636e\u96c6\u6240\u5728\u7684\u6587\u4ef6\u5939\u7684\u540d\u5b57": 319, "\u4f60\u53ef\u4ee5\u5728": 319, "\u627e\u5230\u6240\u6709\u76ee\u524d\u652f\u6301\u7684\u6570\u636e\u96c6": 319, "\u6587\u4ef6\u4e2d\u5305\u62ec\u8be6\u7ec6\u7684\u4ecb\u7ecd\u548c\u7528\u6cd5": 319, "\u7136\u800c": 319, "\u66f4\u5e38\u89c1\u7684\u60c5\u51b5\u662f\u7528\u6237\u9700\u8981\u4f7f\u7528\u81ea\u5df1\u7684\u6570\u636e\u96c6": 319, "\u5e76\u505a\u4e00\u4e9b\u6570\u636e\u5206\u6790\u7684\u5de5\u4f5c": 319, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u51fd\u6570\u7528\u6765\u5b9a\u4e49\u4e00\u4e2a\u5c5e\u6027\u56fe\u7684\u6a21\u578b": 319, "\u5e76\u4ee5\u5c06\u5c5e\u6027\u56fe\u8f7d\u5165": 319, "\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 319, "\u7136\u540e\u5728\u6b64\u4f1a\u8bdd\u5185\u521b\u5efa\u56fe": 319, "\u6709\u51e0\u4e2a\u65b9\u6cd5\u6765\u914d\u7f6e": 319, "\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u589e\u91cf\u7684\u6784\u5efa\u4e00\u4e2a\u5c5e\u6027\u56fe": 319, "\u6211\u4eec\u5c06\u4f7f\u7528": 319, "\u91cc\u7684\u6587\u4ef6\u505a\u5b8c\u6b64\u7bc7\u6559\u7a0b\u7684\u793a\u4f8b": 319, "\u627e\u5230\u6e90\u6570\u636e": 319, "\u4f60\u53ef\u4ee5\u968f\u65f6\u4f7f\u7528": 319, "\u6765\u67e5\u770b\u56fe\u7684\u6a21\u578b": 319, "\u6211\u4eec\u53ef\u4ee5\u5411\u56fe\u5185\u6dfb\u52a0\u4e00\u4e2a\u70b9\u6807\u7b7e": 319, "\u76f8\u5173\u7684\u53c2\u6570\u542b\u4e49\u5982\u4e0b": 319, "\u4ee3\u8868\u6570\u636e\u6e90": 319, "\u6307\u793a": 319, "\u53ef\u4ee5\u5728\u54ea\u91cc\u627e\u5230\u6e90\u6570\u636e": 319, "\u53ef\u4ee5\u4e3a\u6587\u4ef6\u8def\u5f84": 319, "\u6570\u7ec4\u7b49": 319, "\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50": 319, "\u8fd9\u5c06\u4f1a\u4ece\u6587\u4ef6": 319, "\u8f7d\u5165\u6570\u636e": 319, "\u5e76\u4e14\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a": 319, "\u4f46\u662f\u6709\u4e0d\u540c\u7684\u8d77\u59cb\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u6807\u7b7e": 319, "\u70b9\u6807\u7b7e\u7684\u540d\u5b57": 319, "\u9ed8\u8ba4\u4e3a": 319, "\u4e00\u5f20\u56fe\u4e2d\u4e0d\u80fd\u542b\u6709\u540c\u540d\u7684\u6807\u7b7e": 319, "\u6240\u4ee5\u82e5\u6709\u4e24\u4e2a\u6216\u4ee5\u4e0a\u7684\u6807\u7b7e": 319, "\u7528\u6237\u5fc5\u987b\u6307\u5b9a\u6807\u7b7e\u540d\u5b57": 319, "\u603b\u662f\u7ed9\u6807\u7b7e\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u540d\u5b57\u4e5f\u6709\u597d\u5904": 319, "\u53ef\u4ee5\u4e3a\u4efb\u4f55\u6807\u8bc6\u7b26": 319, "\u4e3e\u4e2a\u4f8b\u5b50": 319, "\u7ed3\u679c\u4e0e\u4e0a\u4e00\u6b65\u7ed3\u679c\u9664\u4e86\u6807\u7b7e\u540d\u5b8c\u5168\u4e00\u81f4": 319, "\u4e00\u7ec4\u5c5e\u6027\u540d\u5b57": 319, "\u53ef\u9009\u9879": 319, "\u5c5e\u6027\u540d\u5e94\u5f53\u4e0e\u6570\u636e\u4e2d\u7684\u9996\u884c\u8868\u5934\u4e2d\u7684\u540d\u5b57\u76f8\u4e00\u81f4": 319, "\u5982\u679c\u7701\u7565\u6216\u4e3a": 319, "\u9664id\u5217\u4e4b\u5916\u7684\u6240\u6709\u5217\u90fd\u5c06\u4f1a\u4f5c\u4e3a\u5c5e\u6027\u8f7d\u5165": 319, "\u5982\u679c\u4e3a\u7a7a\u5217\u8868": 319, "\u90a3\u4e48\u5c06\u4e0d\u4f1a\u8f7d\u5165\u4efb\u4f55\u5c5e\u6027": 319, "\u5176\u4ed6\u60c5\u51b5\u4e0b": 319, "\u53ea\u4f1a\u8f7d\u5165\u6307\u5b9a\u4e86\u7684\u5217\u4f5c\u4e3a\u5c5e\u6027": 319, "\u6bd4\u5982\u8bf4": 319, "\u5217\u7684\u5217\u540d": 319, "\u6b64\u5217\u5c06\u5728\u8f7d\u5165\u8fb9\u65f6\u88ab\u7528\u505a\u8d77\u59cb\u70b9": 319, "\u6216\u76ee\u6807\u70b9": 319, "\u5176\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32": 319, "\u6b64\u65f6\u6307\u4ee3\u5217\u540d": 319, "\u6216\u8005\u53ef\u4ee5\u662f\u4e00\u4e2a\u6b63\u6574\u6570": 319, "\u4ee3\u8868\u7b2c\u51e0\u5217": 319, "\u4ece0\u5f00\u59cb": 319, "\u9ed8\u8ba4\u4e3a\u7b2c0\u5217": 319, "\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5411\u56fe\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u8fb9\u6807\u7b7e": 319, "\u4e0e\u6784\u5efa\u70b9\u6807\u7b7e\u4e00\u8282\u4e2d\u7684": 319, "\u7c7b\u4f3c": 319, "\u4e3a\u6307\u793a\u53bb\u54ea\u91cc\u8bfb\u6570\u636e\u7684\u8def\u5f84": 319, "\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50": 319, "\u8fd9\u5c06\u4f1a\u8f7d\u5165\u4e00\u4e2a\u6807\u7b7e\u540d\u4e3a": 319, "\u6e90\u8282\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u8282\u70b9\u6807\u7b7e\u90fd\u4e3a": 319, "\u7b2c\u4e00\u5217\u4f5c\u4e3a\u8d77\u70b9\u7684\u70b9id": 319, "\u7b2c\u4e8c\u5217\u4f5c\u4e3a\u7ec8\u70b9\u7684\u70b9id": 319, "\u5176\u4ed6\u5217\u90fd\u4f5c\u4e3a\u5c5e\u6027": 319, "\u8fb9\u7684\u6807\u7b7e\u540d": 319, "\u63a8\u8350\u603b\u662f\u4f7f\u7528\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u6807\u7b7e\u540d": 319, "\u4e00\u5217\u5c5e\u6027": 319, "\u610f\u4e49\u4e0e\u884c\u4e3a\u90fd\u548c\u70b9\u4e2d\u7684\u4e00\u81f4": 319, "\u8d77\u70b9\u7684\u6807\u7b7e\u540d\u4e0e\u7ec8\u70b9\u7684\u6807\u7b7e\u540d": 319, "\u6211\u4eec\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u5df2\u7ecf\u770b\u5230\u8fc7\u4e86": 319, "\u5728\u90a3\u91cc\u5c06\u5176\u8d4b\u503c\u4e3a": 319, "\u8fd9\u4e24\u8005\u53ef\u4ee5\u53d6\u4e0d\u540c\u7684\u503c": 319, "\u4e3e\u4f8b\u6765\u8bf4": 319, "person_likes_comment_0_0": 319, "\u8d77\u70b9\u7684": 319, "\u5217\u540d\u4e0e\u7ec8\u70b9\u7684": 319, "\u5217\u540d": 319, "\u9ed8\u8ba4\u5206\u522b\u4e3a": 319, "\u610f\u4e49\u548c\u8868\u73b0\u4e0e\u70b9\u4e2d\u7684": 319, "\u4e0d\u540c\u7684\u662f\u9700\u8981\u4e24\u5217": 319, "\u4e00\u5217\u4e3a\u8d77\u70b9": 319, "\u4e00\u5217\u4e3a\u7ec8\u70b9": 319, "\u4ee5\u4e0b\u662f\u4e2a\u4f8b\u5b50": 319, "\u8fd9\u662f\u4e00\u4e9b\u7528\u6765\u5904\u7406\u7279\u522b\u7b80\u5355\u6216\u7279\u522b\u590d\u6742\u7684\u9ad8\u7ea7\u4e00\u4e9b\u7684\u7528\u6cd5": 319, "\u5982\u679c\u56fe\u4e2d\u53ea\u5b58\u5728\u4e00\u4e2a\u70b9\u6807\u7b7e": 319, "\u90a3\u4e48\u53ef\u4ee5\u7701\u7565\u6307\u5b9a\u70b9\u6807\u7b7e": 319, "\u5c06\u4f1a\u63a8\u65ad\u8d77\u59cb\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u6807\u7b7e\u4e3a\u8fd9\u4e00\u4e2a\u70b9\u6807\u7b7e": 319, "\u5982\u679c\u7528\u6237\u7684": 319, "\u53d6\u503c\u4e3a\u56fe\u4e2d\u4e0d\u5b58\u5728\u7684\u70b9\u6807\u7b7e": 319, "\u4f1a\u4ece\u8fb9\u7684\u7aef\u70b9\u4e2d\u805a\u5408\u51fa\u70b9\u8868": 319, "\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b": 319, "\u4e00\u79cd\u8fb9\u7684\u6807\u7b7e\u53ef\u80fd\u8fde\u63a5\u4e86\u4e24\u79cd\u53ca\u4ee5\u4e0a\u7684\u70b9": 319, "\u5728\u4e0b\u9762\u7684\u5c5e\u6027\u56fe\u4e2d": 319, "\u6709\u4e00\u4e2a\u540d\u4e3a": 319, "\u7684\u8fb9\u6807\u7b7e": 319, "\u8fde\u63a5\u4e86\u4e24\u79cd\u70b9\u6807\u7b7e": 319, "\u53ef\u4ee5\u6dfb\u52a0\u4e24\u6b21\u540d\u4e3a": 319, "person_likes_post_0_0": 319, "\u53ef\u4ee5\u4ece\u8f93\u5165\u6587\u4ef6\u4e2d\u63a8\u65ad\u70b9\u7684\u7c7b\u578b": 319, "\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u5de5\u4f5c\u7684\u5f88\u597d": 319, "\u7528\u6237\u6709\u65f6\u9700\u8981\u66f4\u591a\u7684\u81ea\u5b9a\u4e49\u80fd\u529b": 319, "\u4e3a\u4e86\u6ee1\u8db3\u6b64\u79cd\u9700\u6c42": 319, "\u53ef\u4ee5\u5728\u5c5e\u6027\u540d\u4e4b\u540e\u52a0\u5165\u4e00\u4e2a\u989d\u5916\u7c7b\u578b\u7684\u53c2\u6570": 319, "\u50cf\u8fd9\u6837": 319, "post_0_0": 319, "\u8fd9\u5c06\u4f1a\u5c06\u5c5e\u6027\u7684\u7c7b\u578b\u8f6c\u6362\u4e3a\u6307\u5b9a\u7684\u7c7b\u578b": 319, "\u6ce8\u610f\u5c5e\u6027\u540d\u5b57\u548c\u7c7b\u578b\u9700\u8981\u5728\u540c\u4e00\u4e2a\u5143\u7ec4\u4e2d": 319, "\u5728\u8fd9\u91cc": 319, "\u7684\u7c7b\u578b\u5c06\u4f1a\u662f": 319, "\u800c\u9ed8\u8ba4\u4e0d\u6307\u5b9a\u7684\u8bdd\u4e3a": 319, "\u5e38\u89c1\u7684\u4f7f\u7528\u573a\u666f\u662f\u6307\u5b9a": 319, "\u7b49\u7c7b\u578b": 319, "\u6709\u4e09\u4e2a\u914d\u7f6e\u5143\u4fe1\u606f\u7684\u53c2\u6570": 319, "\u5206\u522b\u4e3a": 319, "\u53ef\u4ee5\u4e3a": 319, "\u4f1a\u6709\u66f4\u5feb\u7684\u901f\u5ea6": 319, "\u548c\u4f7f\u7528\u66f4\u5c11\u7684\u5185\u5b58": 319, "\u5f53id\u4e0d\u80fd\u7528": 319, "\u8868\u793a\u65f6": 319, "\u624d\u5e94\u8be5\u4f7f\u7528": 319, "\u5982\u679c\u786e\u5b9a\u56fe\u70b9id\u8303\u56f4\u4e0d\u4f1a\u8d85\u8fc7": 319, "\u5efa\u8bae\u4f7f\u7528": 319, "\u6765\u964d\u4f4e\u5185\u5b58\u5f00\u9500": 319, "\u6307\u793a\u8f7d\u5165\u65e0\u5411\u56fe\u8fd8\u662f\u6709\u5411\u56fe": 319, "\u6307\u793a\u662f\u5426\u4e3a\u6bcf\u6761\u8fb9\u5206\u914d\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u7684id": 319, "\u6307\u793a\u662f\u5426\u662f\u5426\u5c06\u70b9\u539f\u59cbid\u4fdd\u7559\u4e3a\u5c5e\u6027": 319, "\u8ba9\u6211\u4eec\u5199\u4e00\u4e2a\u5b8c\u6574\u7684\u56fe\u7684\u5b9a\u4e49": 319, "\u8fd9\u91cc\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u8f7d\u5165": 319, "\u5c5e\u6027\u56fe\u7684": 319, "\u4f8b\u5b50": 319, "\u4e0a\u6587\u63d0\u5230\u7684\u6570\u636e\u6e90\u662f\u4e00\u4e2a": 319, "\u7684\u7c7b": 319, "\u5305\u542b\u6587\u4ef6\u8def\u5f84\u6216\u8005\u6570\u636e\u672c\u8eab": 319, "\u652f\u6301\u4ece": 319, "\u8fd9\u53ef\u4ee5\u4f7f\u7528\u6237\u4ec5\u901a\u8fc7": 319, "\u63a7\u5236\u53f0\u4fbf\u53ef\u4ee5\u521b\u5efa\u56fe": 319, "\u9664\u4e86": 319, "\u5916": 319, "\u5176\u4ed6\u5c5e\u6027": 319, "id\u5217": 319, "\u6807\u7b7e\u8bbe\u7f6e\u7b49\u90fd\u548c\u4e4b\u524d\u63d0\u5230\u7684\u4fdd\u6301\u4e00\u81f4": 319, "datasourc": 319, "col_0": 319, "col_1": 319, "\u6ce8\u610f\u6bcf\u4e2a\u6570\u7ec4\u90fd\u4ee3\u8868\u4e00\u5217": 319, "\u6211\u4eec\u5c06\u5176\u4ee5": 319, "\u77e9\u9635\u7684\u65b9\u5f0f\u4f20\u5165": 319, "array_v": 319, "col": 319, "array_": 319, "\u5f53": 319, "\u5305\u542b\u6587\u4ef6\u8def\u5f84\u65f6": 319, "\u5b83\u53ef\u80fd\u4ec5\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u4e32": 319, "\u6587\u4ef6\u8def\u5f84\u5e94\u9075\u5faa": 319, "uri": 319, "\u6807\u51c6": 319, "\u5f53\u6536\u5230\u5305\u542b\u6587\u4ef6\u8def\u5f84\u7684\u8f7d\u56fe\u8bf7\u6c42\u65f6": 319, "\u5c06\u4f1a\u89e3\u6790": 319, "\u8c03\u7528\u76f8\u5e94\u7684\u8f7d\u56fe\u6a21\u5757": 319, "\u652f\u6301\u591a\u79cd\u6570\u636e\u6e90": 319, "\u672c\u5730": 319, "\u6570\u636e\u7531": 319, "\u8d1f\u8d23\u8f7d\u5165": 319, "fsspec": 319, "\u89e3\u6790\u4e0d\u540c\u7684\u6570\u636e\u683c\u5f0f\u4ee5\u53ca\u53c2\u6570": 319, "\u4efb\u4f55\u989d\u5916\u7684\u5177\u4f53\u7684\u914d\u7f6e\u90fd\u53ef\u4ee5\u5728loader\u7684\u53ef\u53d8\u53c2\u6570\u5217\u8868\u4e2d\u4f20\u5165": 319, "\u8fd9\u4e9b\u53c2\u6570\u4f1a\u76f4\u63a5\u88ab\u4f20\u9012\u5230\u5bf9\u5e94\u7684\u5b58\u50a8\u7c7b\u4e2d": 319, "\u4e4b\u4e8e": 319, "\u6216\u8005\u662f": 319, "ds1": 319, "datafil": 319, "ds2": 319, "graphscope_bucket": 319, "ds3": 319, "extra_conf": 319, "conf1": 319, "d34": 319, "client_kwarg": 319, "region_nam": 319, "east": 319, "\u7528\u6237\u53ef\u4ee5\u65b9\u4fbf\u7684\u5b9e\u73b0\u81ea\u5df1\u7684driver\u6765\u652f\u6301\u66f4\u591a\u7684\u6570\u636e\u6e90": 319, "\u6bd4\u5982\u53c2\u7167": 319, "ossf": 319, "driver\u7684\u5b9e\u73b0\u65b9\u5f0f": 319, "\u7528\u6237\u9700\u8981\u7ee7\u627f": 319, "abstractfilesystem": 319, "\u7c7b\u7528\u6765\u505ascheme\u5bf9\u5e94\u7684resolv": 319, "abstractbufferedfil": 319, "\u7528\u6237\u4ec5\u9700\u8981\u5b9e\u73b0": 319, "_upload_chunk": 319, "_initiate_upload": 319, "_fetch_rang": 319, "\u8fd9\u51e0\u4e2a\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b9e\u73b0\u57fa\u672c\u7684read": 319, "write\u529f\u80fd": 319, "\u6700\u540e\u901a\u8fc7": 319, "register_implement": 319, "protocol_nam": 319, "protocol_file_system": 319, "\u6ce8\u518c\u81ea\u5b9a\u4e49\u7684resolv": 319, "\u6211\u4eec\u4e3agraphscope\u7684\u7528\u6237\u51c6\u5907\u4e86\u4e00\u7cfb\u5217\u8be6\u5c3d\u7684\u5165\u95e8\u6559\u7a0b": 320, "\u4ece\u8fd9\u4e9b\u5165\u95e8\u6559\u7a0b\u4e2d\u4f60\u53ef\u4ee5\u4e86\u89e3\u5230\u5982\u4f55\u542f\u52a8\u4e00\u4e2agraphscope\u4f1a\u8bdd": 320, "\u5982\u4f55\u8f7d\u56fe": 320, "\u4ee5\u53ca\u5982\u4f55\u5206\u522b": 320, "\u4f7f\u7528graphscope\u4e2d\u7684ga": 320, "gle\u5f15\u64ce\u6765\u5b8c\u6210\u56fe\u5206\u6790\u4efb\u52a1": 320, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u548c\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7684\u8bad\u7ec3": 320, "\u6211\u4eec\u7528jupyt": 320, "notebook\u6765\u7ec4\u7ec7\u8fd9\u4e9b\u6559\u7a0b": 320, "\u7528\u6237\u53ef\u4ee5\u5728\u4efb\u4f55\u4e00\u4e2ajupyt": 320, "notebook\u670d\u52a1\u4e2d\u5c1d\u8bd5\u6267\u884c": 320, "\u6211\u4eec\u8fd8\u63d0\u4f9b\u4e86\u5df2\u7ecf\u51c6\u5907\u597d\u7684jupyt": 320, "lab": 320, "\u73af\u5883": 320, "\u4ee5\u4fbf\u4e8e\u7528\u6237\u66f4\u5feb\u5730\u4e0a\u624bgraphscop": 320, "\u5165\u95e8\u6559\u7a0b\u5305\u62ec\u5982\u4e0b\u8fd9\u4e9b\u5185\u5bb9": 320}, "objects": {"": [[74, 0, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase"], [74, 1, 1, "_CPPv4N2gs7AppBase7AppBaseEv", "gs::AppBase::AppBase"], [74, 2, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase::CONTEXT_T"], [74, 2, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase::FRAG_T"], [74, 1, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval"], [74, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::context"], [74, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::graph"], [74, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::messages"], [74, 1, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval"], [74, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::context"], [74, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::graph"], [74, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::messages"], [74, 4, 1, "_CPPv4N2gs7AppBase13load_strategyE", "gs::AppBase::load_strategy"], [74, 5, 1, "_CPPv4N2gs7AppBase17message_manager_tE", "gs::AppBase::message_manager_t"], [74, 4, 1, "_CPPv4N2gs7AppBase16message_strategyE", "gs::AppBase::message_strategy"], [74, 4, 1, "_CPPv4N2gs7AppBase16need_split_edgesE", "gs::AppBase::need_split_edges"], [74, 1, 1, "_CPPv4N2gs7AppBaseD0Ev", "gs::AppBase::~AppBase"], [74, 0, 1, "_CPPv4N2gs8AppEntryE", "gs::AppEntry"], [74, 1, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry"], [74, 3, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry::id"], [74, 3, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry::lib_path"], [74, 1, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker"], [74, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::comm_spec"], [74, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::fragment"], [74, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::spec"], [74, 1, 1, "_CPPv4N2gs8AppEntry4InitEv", "gs::AppEntry::Init"], [74, 1, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query"], [74, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::context_key"], [74, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::frag_wrapper"], [74, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::query_args"], [74, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::worker_handler"], [74, 0, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt"], [74, 2, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt::FunctionType"], [74, 2, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt::index"], [74, 0, 1, "_CPPv4I0EN2gs7ArgsNumE", "gs::ArgsNum"], [74, 2, 1, "_CPPv4I0EN2gs7ArgsNumE", "gs::ArgsNum::FunctionType"], [74, 0, 1, "_CPPv4I0EN2gs12ArgsUnpackerE", "gs::ArgsUnpacker"], [74, 2, 1, "_CPPv4I0EN2gs12ArgsUnpackerE", "gs::ArgsUnpacker::T"], [74, 0, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader"], [74, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragment"], [74, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragment::frag_id"], [74, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragmentAsFragmentGroup"], [74, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragmentAsFragmentGroup::frag_id"], [74, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader"], [74, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader"], [74, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::client"], [74, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::client"], [74, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::comm_spec"], [74, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::comm_spec"], [74, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::directed"], [74, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::efiles"], [74, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::generate_eid"], [74, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::graph_info"], [74, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::retain_oid"], [74, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::vfiles"], [74, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader14LoadEdgeTablesEv", "gs::ArrowFragmentLoader::LoadEdgeTables"], [74, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader12LoadFragmentEv", "gs::ArrowFragmentLoader::LoadFragment"], [74, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader27LoadFragmentAsFragmentGroupEv", "gs::ArrowFragmentLoader::LoadFragmentAsFragmentGroup"], [74, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader20LoadVertexEdgeTablesEv", "gs::ArrowFragmentLoader::LoadVertexEdgeTables"], [74, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader16LoadVertexTablesEv", "gs::ArrowFragmentLoader::LoadVertexTables"], [74, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::OID_T"], [74, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::VERTEX_MAP_T"], [74, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::VID_T"], [74, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader15initPartitionerEv", "gs::ArrowFragmentLoader::initPartitioner"], [74, 1, 1, "_CPPv4N2gs19ArrowFragmentLoaderD0Ev", "gs::ArrowFragmentLoader::~ArrowFragmentLoader"], [74, 0, 1, "_CPPv4I00000EN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment"], [74, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedFragment::Construct"], [74, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedFragment::Construct::meta"], [74, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment6CreateEv", "gs::ArrowProjectedFragment::Create"], [74, 2, 1, "_CPPv4I00000EN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::EDATA_T"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t", "gs::ArrowProjectedFragment::GetData"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t", "gs::ArrowProjectedFragment::GetData::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10GetEdgeNumEv", "gs::ArrowProjectedFragment::GetEdgeNum"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t", "gs::ArrowProjectedFragment::GetFragId"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t", "gs::ArrowProjectedFragment::GetFragId::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t", "gs::ArrowProjectedFragment::GetId"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t", "gs::ArrowProjectedFragment::GetId::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12GetInEdgeNumEv", "gs::ArrowProjectedFragment::GetInEdgeNum"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingAdjListERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingAdjListERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::src_fid"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::v"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingAdjListERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingEdgeNumEv", "gs::ArrowProjectedFragment::GetIncomingEdgeNum"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingInnerVertexAdjList"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingInnerVertexAdjList::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingOuterVertexAdjList"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingOuterVertexAdjList::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex::oid"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexGid"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexGid::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexId"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexId::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexInternalId"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexInternalId::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetInnerVerticesNumEv", "gs::ArrowProjectedFragment::GetInnerVerticesNum"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInternalId"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInternalId::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalInDegree"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalInDegree::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalOutDegree"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalOutDegree::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetOutEdgeNumEv", "gs::ArrowProjectedFragment::GetOutEdgeNum"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex::oid"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexGid"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexGid::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexId"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexId::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexInternalId"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexInternalId::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetOuterVerticesNumEv", "gs::ArrowProjectedFragment::GetOuterVerticesNum"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingAdjListERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingAdjListERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::dst_fid"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::v"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingAdjListERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingEdgeNumEv", "gs::ArrowProjectedFragment::GetOutgoingEdgeNum"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingInnerVertexAdjList"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingInnerVertexAdjList::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingOuterVertexAdjList"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingOuterVertexAdjList::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetTotalVerticesNumEv", "gs::ArrowProjectedFragment::GetTotalVerticesNum"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex::oid"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex::v"], [74, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment12GetVertexMapEv", "gs::ArrowProjectedFragment::GetVertexMap"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12GetVertexMapEv", "gs::ArrowProjectedFragment::GetVertexMap"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetVerticesNumEv", "gs::ArrowProjectedFragment::GetVerticesNum"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t", "gs::ArrowProjectedFragment::Gid2Oid"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t", "gs::ArrowProjectedFragment::Gid2Oid::gid"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex::gid"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IEDests"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IEDests::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IOEDests"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IOEDests::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex::gid"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13InnerVerticesEv", "gs::ArrowProjectedFragment::InnerVertices"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsInnerVertex"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsInnerVertex::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsOuterVertex"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsOuterVertex::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t", "gs::ArrowProjectedFragment::MirrorVertices"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t", "gs::ArrowProjectedFragment::MirrorVertices::fid"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t", "gs::ArrowProjectedFragment::OEDests"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t", "gs::ArrowProjectedFragment::OEDests::v"], [74, 2, 1, "_CPPv4I00000EN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::OID_T"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t", "gs::ArrowProjectedFragment::Oid2Gid"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid::gid"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t", "gs::ArrowProjectedFragment::Oid2Gid::oid"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid::oid"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex::gid"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t", "gs::ArrowProjectedFragment::OuterVertices"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesEv", "gs::ArrowProjectedFragment::OuterVertices"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t", "gs::ArrowProjectedFragment::OuterVertices::fid"], [74, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp"], [74, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp::comm_spec"], [74, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp::conf"], [74, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_tEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project"], [74, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_tEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::e_label"], [74, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_tEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::e_prop"], [74, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_tEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::fragment"], [74, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_tEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::v_label"], [74, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_tEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::v_prop"], [74, 2, 1, "_CPPv4I00000EN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VDATA_T"], [74, 2, 1, "_CPPv4I00000EN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VERTEX_MAP_T"], [74, 2, 1, "_CPPv4I00000EN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VID_T"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t", "gs::ArrowProjectedFragment::Vertex2Gid"], [74, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t", "gs::ArrowProjectedFragment::Vertex2Gid::v"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8VerticesEv", "gs::ArrowProjectedFragment::Vertices"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10adj_list_tE", "gs::ArrowProjectedFragment::adj_list_t"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16const_adj_list_tE", "gs::ArrowProjectedFragment::const_adj_list_t"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8directedEv", "gs::ArrowProjectedFragment::directed"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment7edata_tE", "gs::ArrowProjectedFragment::edata_t"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10edge_labelEv", "gs::ArrowProjectedFragment::edge_label"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12edge_prop_idEv", "gs::ArrowProjectedFragment::edge_prop_id"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment11eid_array_tE", "gs::ArrowProjectedFragment::eid_array_t"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5eid_tE", "gs::ArrowProjectedFragment::eid_t"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment3fidEv", "gs::ArrowProjectedFragment::fid"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment4fnumEv", "gs::ArrowProjectedFragment::fnum"], [74, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment18get_arrow_fragmentEv", "gs::ArrowProjectedFragment::get_arrow_fragment"], [74, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment24get_edata_array_accessorEv", "gs::ArrowProjectedFragment::get_edata_array_accessor"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24get_ie_offsets_begin_ptrEv", "gs::ArrowProjectedFragment::get_ie_offsets_begin_ptr"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment22get_ie_offsets_end_ptrEv", "gs::ArrowProjectedFragment::get_ie_offsets_end_ptr"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16get_in_edges_ptrEv", "gs::ArrowProjectedFragment::get_in_edges_ptr"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24get_oe_offsets_begin_ptrEv", "gs::ArrowProjectedFragment::get_oe_offsets_begin_ptr"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment22get_oe_offsets_end_ptrEv", "gs::ArrowProjectedFragment::get_oe_offsets_end_ptr"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17get_out_edges_ptrEv", "gs::ArrowProjectedFragment::get_out_edges_ptr"], [74, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment24get_vdata_array_accessorEv", "gs::ArrowProjectedFragment::get_vdata_array_accessor"], [74, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE", "gs::ArrowProjectedFragment::inner_vertex_array_t"], [74, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE", "gs::ArrowProjectedFragment::inner_vertex_array_t::DATA_T"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16inner_vertices_tE", "gs::ArrowProjectedFragment::inner_vertices_t"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14internal_oid_tE", "gs::ArrowProjectedFragment::internal_oid_t"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10label_id_tE", "gs::ArrowProjectedFragment::label_id_t"], [74, 4, 1, "_CPPv4N2gs22ArrowProjectedFragment13load_strategyE", "gs::ArrowProjectedFragment::load_strategy"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5nbr_tE", "gs::ArrowProjectedFragment::nbr_t"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10nbr_unit_tE", "gs::ArrowProjectedFragment::nbr_unit_t"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5oid_tE", "gs::ArrowProjectedFragment::oid_t"], [74, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE", "gs::ArrowProjectedFragment::outer_vertex_array_t"], [74, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE", "gs::ArrowProjectedFragment::outer_vertex_array_t::DATA_T"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16outer_vertices_tE", "gs::ArrowProjectedFragment::outer_vertices_t"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment9prop_id_tE", "gs::ArrowProjectedFragment::prop_id_t"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16property_graph_tE", "gs::ArrowProjectedFragment::property_graph_t"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment21property_vertex_map_tE", "gs::ArrowProjectedFragment::property_vertex_map_t"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14sub_vertices_tE", "gs::ArrowProjectedFragment::sub_vertices_t"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment7vdata_tE", "gs::ArrowProjectedFragment::vdata_t"], [74, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE", "gs::ArrowProjectedFragment::vertex_array_t"], [74, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE", "gs::ArrowProjectedFragment::vertex_array_t::DATA_T"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12vertex_labelEv", "gs::ArrowProjectedFragment::vertex_label"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment12vertex_map_tE", "gs::ArrowProjectedFragment::vertex_map_t"], [74, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14vertex_prop_idEv", "gs::ArrowProjectedFragment::vertex_prop_id"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14vertex_range_tE", "gs::ArrowProjectedFragment::vertex_range_t"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment8vertex_tE", "gs::ArrowProjectedFragment::vertex_t"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10vertices_tE", "gs::ArrowProjectedFragment::vertices_t"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment11vid_array_tE", "gs::ArrowProjectedFragment::vid_array_t"], [74, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5vid_tE", "gs::ArrowProjectedFragment::vid_t"], [74, 1, 1, "_CPPv4N2gs22ArrowProjectedFragmentD0Ev", "gs::ArrowProjectedFragment::~ArrowProjectedFragment"], [74, 0, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap"], [74, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedVertexMap::Construct"], [74, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedVertexMap::Construct::meta"], [74, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap6CreateEv", "gs::ArrowProjectedVertexMap::Create"], [74, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetFidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetFidFromGid"], [74, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetFidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetFidFromGid::gid"], [74, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid"], [74, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid"], [74, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::fid"], [74, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::gid"], [74, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::gid"], [74, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::oid"], [74, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::oid"], [74, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap18GetInnerVertexSizeE5fid_t", "gs::ArrowProjectedVertexMap::GetInnerVertexSize"], [74, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap18GetInnerVertexSizeE5fid_t", "gs::ArrowProjectedVertexMap::GetInnerVertexSize::fid"], [74, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetLidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetLidFromGid"], [74, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetLidFromGidE5vid_t", "gs::ArrowProjectedVertexMap::GetLidFromGid::gid"], [74, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap16GetOffsetFromLidE5vid_t", "gs::ArrowProjectedVertexMap::GetOffsetFromLid"], [74, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap16GetOffsetFromLidE5vid_t", "gs::ArrowProjectedVertexMap::GetOffsetFromLid::lid"], [74, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid"], [74, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid::gid"], [74, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid::oid"], [74, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap19GetTotalVerticesNumEv", "gs::ArrowProjectedVertexMap::GetTotalVerticesNum"], [74, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::OID_T"], [74, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap10Offset2LidERK5vid_t", "gs::ArrowProjectedVertexMap::Offset2Lid"], [74, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap10Offset2LidERK5vid_t", "gs::ArrowProjectedVertexMap::Offset2Lid::offset"], [74, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project"], [74, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project::v_label"], [74, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project::vm"], [74, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::VERTEX_MAP_T"], [74, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::VID_T"], [74, 0, 1, "_CPPv4I00EN2gs17CtxWrapperBuilderE", "gs::CtxWrapperBuilder"], [74, 2, 1, "_CPPv4I00EN2gs17CtxWrapperBuilderE", "gs::CtxWrapperBuilder::CTX_T"], [74, 0, 1, "_CPPv4I0EN2gs21DefaultPropertyWorkerE", "gs::DefaultPropertyWorker"], [74, 2, 1, "_CPPv4I0EN2gs21DefaultPropertyWorkerE", "gs::DefaultPropertyWorker::APP_T"], [74, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker"], [74, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker::app"], [74, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker::graph"], [74, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker8FinalizeEv", "gs::DefaultPropertyWorker::Finalize"], [74, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker10GetContextEv", "gs::DefaultPropertyWorker::GetContext"], [74, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init"], [74, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init::comm_spec"], [74, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init::pe_spec"], [74, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE", "gs::DefaultPropertyWorker::Output"], [74, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE", "gs::DefaultPropertyWorker::Output::os"], [74, 1, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query"], [74, 2, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query::Args"], [74, 3, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query::args"], [74, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker9context_tE", "gs::DefaultPropertyWorker::context_t"], [74, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker10fragment_tE", "gs::DefaultPropertyWorker::fragment_t"], [74, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker17message_manager_tE", "gs::DefaultPropertyWorker::message_manager_t"], [74, 1, 1, "_CPPv4N2gs21DefaultPropertyWorkerD0Ev", "gs::DefaultPropertyWorker::~DefaultPropertyWorker"], [74, 0, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker"], [74, 0, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker"], [74, 2, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker::APP_T"], [74, 2, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker::APP_T"], [74, 1, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker"], [74, 1, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker"], [74, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::app"], [74, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::app"], [74, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::graph"], [74, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::graph"], [74, 1, 1, "_CPPv4N2gs13DefaultWorker8FinalizeEv", "gs::DefaultWorker::Finalize"], [74, 1, 1, "_CPPv4N2gs13DefaultWorker8FinalizeEv", "gs::DefaultWorker::Finalize"], [74, 1, 1, "_CPPv4N2gs13DefaultWorker10GetContextEv", "gs::DefaultWorker::GetContext"], [74, 1, 1, "_CPPv4N2gs13DefaultWorker10GetContextEv", "gs::DefaultWorker::GetContext"], [74, 1, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init"], [74, 1, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init"], [74, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::comm_spec"], [74, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::comm_spec"], [74, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::pe_spec"], [74, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::pe_spec"], [74, 1, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output"], [74, 1, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output"], [74, 3, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output::os"], [74, 3, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output::os"], [74, 1, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query"], [74, 1, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query"], [74, 2, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::Args"], [74, 2, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::Args"], [74, 3, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::args"], [74, 3, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::args"], [74, 5, 1, "_CPPv4N2gs13DefaultWorker9context_tE", "gs::DefaultWorker::context_t"], [74, 5, 1, "_CPPv4N2gs13DefaultWorker9context_tE", "gs::DefaultWorker::context_t"], [74, 5, 1, "_CPPv4N2gs13DefaultWorker10fragment_tE", "gs::DefaultWorker::fragment_t"], [74, 5, 1, "_CPPv4N2gs13DefaultWorker10fragment_tE", "gs::DefaultWorker::fragment_t"], [74, 5, 1, "_CPPv4N2gs13DefaultWorker17message_manager_tE", "gs::DefaultWorker::message_manager_t"], [74, 5, 1, "_CPPv4N2gs13DefaultWorker17message_manager_tE", "gs::DefaultWorker::message_manager_t"], [74, 1, 1, "_CPPv4N2gs13DefaultWorkerD0Ev", "gs::DefaultWorker::~DefaultWorker"], [74, 1, 1, "_CPPv4N2gs13DefaultWorkerD0Ev", "gs::DefaultWorker::~DefaultWorker"], [74, 0, 1, "_CPPv4N2gs14DispatchResultE", "gs::DispatchResult"], [74, 6, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicyE", "gs::DispatchResult::AggregatePolicy"], [74, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE", "gs::DispatchResult::AggregatePolicy::kConcat"], [74, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE", "gs::DispatchResult::AggregatePolicy::kMergeGraphDef"], [74, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE", "gs::DispatchResult::AggregatePolicy::kPickFirst"], [74, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE", "gs::DispatchResult::AggregatePolicy::kPickFirstNonEmpty"], [74, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE", "gs::DispatchResult::AggregatePolicy::kPickFirstNonEmptyGraphDef"], [74, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE", "gs::DispatchResult::AggregatePolicy::kRequireConsistent"], [74, 1, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult"], [74, 1, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEv", "gs::DispatchResult::DispatchResult"], [74, 3, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult::error_code"], [74, 3, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult::worker_id"], [74, 1, 1, "_CPPv4NK2gs14DispatchResult16aggregate_policyEv", "gs::DispatchResult::aggregate_policy"], [74, 1, 1, "_CPPv4NK2gs14DispatchResult4dataEv", "gs::DispatchResult::data"], [74, 1, 1, "_CPPv4NK2gs14DispatchResult10error_codeEv", "gs::DispatchResult::error_code"], [74, 1, 1, "_CPPv4N2gs14DispatchResult9graph_defEv", "gs::DispatchResult::graph_def"], [74, 1, 1, "_CPPv4NK2gs14DispatchResult9graph_defEv", "gs::DispatchResult::graph_def"], [74, 1, 1, "_CPPv4NK2gs14DispatchResult14has_large_dataEv", "gs::DispatchResult::has_large_data"], [74, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE", "gs::DispatchResult::kConcat"], [74, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE", "gs::DispatchResult::kMergeGraphDef"], [74, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE", "gs::DispatchResult::kPickFirst"], [74, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE", "gs::DispatchResult::kPickFirstNonEmpty"], [74, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE", "gs::DispatchResult::kPickFirstNonEmptyGraphDef"], [74, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE", "gs::DispatchResult::kRequireConsistent"], [74, 1, 1, "_CPPv4N2gs14DispatchResult7messageEv", "gs::DispatchResult::message"], [74, 1, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data"], [74, 1, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data"], [74, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::arc"], [74, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::data"], [74, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::large_data"], [74, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::large_data"], [74, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::policy"], [74, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::policy"], [74, 1, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error"], [74, 3, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error::error_code"], [74, 3, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error::message"], [74, 1, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def"], [74, 3, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def::graph_def"], [74, 3, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def::policy"], [74, 1, 1, "_CPPv4NK2gs14DispatchResult9worker_idEv", "gs::DispatchResult::worker_id"], [74, 0, 1, "_CPPv4N2gs10DispatcherE", "gs::Dispatcher"], [74, 1, 1, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::Dispatch"], [74, 3, 1, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::Dispatch::cmd"], [74, 1, 1, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE", "gs::Dispatcher::Dispatcher"], [74, 3, 1, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE", "gs::Dispatcher::Dispatcher::comm_spec"], [74, 1, 1, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::SetCommand"], [74, 3, 1, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::SetCommand::cmd"], [74, 1, 1, "_CPPv4N2gs10Dispatcher5StartEv", "gs::Dispatcher::Start"], [74, 1, 1, "_CPPv4N2gs10Dispatcher4StopEv", "gs::Dispatcher::Stop"], [74, 1, 1, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE", "gs::Dispatcher::Subscribe"], [74, 3, 1, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE", "gs::Dispatcher::Subscribe::subscriber"], [74, 0, 1, "_CPPv4N2gs12EngineConfigE", "gs::EngineConfig"], [74, 1, 1, "_CPPv4NK2gs12EngineConfig12ToJsonStringEv", "gs::EngineConfig::ToJsonString"], [74, 4, 1, "_CPPv4N2gs12EngineConfig15enable_java_sdkE", "gs::EngineConfig::enable_java_sdk"], [74, 4, 1, "_CPPv4N2gs12EngineConfig8networkxE", "gs::EngineConfig::networkx"], [74, 4, 1, "_CPPv4N2gs12EngineConfig21vineyard_rpc_endpointE", "gs::EngineConfig::vineyard_rpc_endpoint"], [74, 4, 1, "_CPPv4N2gs12EngineConfig15vineyard_socketE", "gs::EngineConfig::vineyard_socket"], [74, 0, 1, "_CPPv4I0EN2gs15FragmentWrapperE", "gs::FragmentWrapper"], [74, 2, 1, "_CPPv4I0EN2gs15FragmentWrapperE", "gs::FragmentWrapper::FRAG_T"], [74, 0, 1, "_CPPv4N2gs8GSObjectE", "gs::GSObject"], [74, 1, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject"], [74, 3, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject::id"], [74, 3, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject::type"], [74, 1, 1, "_CPPv4NK2gs8GSObject8ToStringEv", "gs::GSObject::ToString"], [74, 1, 1, "_CPPv4NK2gs8GSObject2idEv", "gs::GSObject::id"], [74, 1, 1, "_CPPv4NK2gs8GSObject4typeEv", "gs::GSObject::type"], [74, 1, 1, "_CPPv4N2gs8GSObjectD0Ev", "gs::GSObject::~GSObject"], [74, 0, 1, "_CPPv4N2gs11GrapeEngineE", "gs::GrapeEngine"], [74, 1, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE", "gs::GrapeEngine::GrapeEngine"], [74, 1, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine"], [74, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE", "gs::GrapeEngine::GrapeEngine::dag_file"], [74, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine::host"], [74, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine::port"], [74, 1, 1, "_CPPv4N2gs11GrapeEngine10RunDAGFileEv", "gs::GrapeEngine::RunDAGFile"], [74, 1, 1, "_CPPv4N2gs11GrapeEngine5StartEv", "gs::GrapeEngine::Start"], [74, 1, 1, "_CPPv4N2gs11GrapeEngine4StopEv", "gs::GrapeEngine::Stop"], [74, 0, 1, "_CPPv4N2gs13GrapeInstanceE", "gs::GrapeInstance"], [74, 1, 1, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE", "gs::GrapeInstance::GrapeInstance"], [74, 3, 1, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE", "gs::GrapeInstance::GrapeInstance::comm_spec"], [74, 1, 1, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE", "gs::GrapeInstance::Init"], [74, 3, 1, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE", "gs::GrapeInstance::Init::vineyard_socket"], [74, 1, 1, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE", "gs::GrapeInstance::OnReceive"], [74, 3, 1, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE", "gs::GrapeInstance::OnReceive::cmd"], [74, 0, 1, "_CPPv4N2gs13ObjectManagerE", "gs::ObjectManager"], [74, 1, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject"], [74, 1, 1, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE", "gs::ObjectManager::GetObject"], [74, 2, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject::T"], [74, 3, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject::id"], [74, 3, 1, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE", "gs::ObjectManager::GetObject::id"], [74, 1, 1, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE", "gs::ObjectManager::HasObject"], [74, 3, 1, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE", "gs::ObjectManager::HasObject::id"], [74, 1, 1, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE", "gs::ObjectManager::PutObject"], [74, 3, 1, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE", "gs::ObjectManager::PutObject::obj"], [74, 1, 1, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE", "gs::ObjectManager::RemoveObject"], [74, 3, 1, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE", "gs::ObjectManager::RemoveObject::id"], [74, 0, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker"], [74, 0, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker"], [74, 2, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker::APP_T"], [74, 2, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker::APP_T"], [74, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv", "gs::ParallelPropertyWorker::Finalize"], [74, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv", "gs::ParallelPropertyWorker::Finalize"], [74, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv", "gs::ParallelPropertyWorker::GetContext"], [74, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv", "gs::ParallelPropertyWorker::GetContext"], [74, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init"], [74, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init"], [74, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::comm_spec"], [74, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::comm_spec"], [74, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::pe_spec"], [74, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::pe_spec"], [74, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output"], [74, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output"], [74, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output::os"], [74, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output::os"], [74, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker"], [74, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker"], [74, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::app"], [74, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::app"], [74, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::graph"], [74, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::graph"], [74, 1, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query"], [74, 1, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query"], [74, 2, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::Args"], [74, 2, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::Args"], [74, 3, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::args"], [74, 3, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::args"], [74, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker9context_tE", "gs::ParallelPropertyWorker::context_t"], [74, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker9context_tE", "gs::ParallelPropertyWorker::context_t"], [74, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE", "gs::ParallelPropertyWorker::fragment_t"], [74, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE", "gs::ParallelPropertyWorker::fragment_t"], [74, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE", "gs::ParallelPropertyWorker::message_manager_t"], [74, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE", "gs::ParallelPropertyWorker::message_manager_t"], [74, 1, 1, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev", "gs::ParallelPropertyWorker::~ParallelPropertyWorker"], [74, 1, 1, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev", "gs::ParallelPropertyWorker::~ParallelPropertyWorker"], [74, 0, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase"], [74, 2, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase::CONTEXT_T"], [74, 2, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase::FRAG_T"], [74, 1, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval"], [74, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::context"], [74, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::graph"], [74, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::messages"], [74, 1, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval"], [74, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::context"], [74, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::graph"], [74, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::messages"], [74, 1, 1, "_CPPv4N2gs15PropertyAppBase15PropertyAppBaseEv", "gs::PropertyAppBase::PropertyAppBase"], [74, 4, 1, "_CPPv4N2gs15PropertyAppBase13load_strategyE", "gs::PropertyAppBase::load_strategy"], [74, 5, 1, "_CPPv4N2gs15PropertyAppBase17message_manager_tE", "gs::PropertyAppBase::message_manager_t"], [74, 4, 1, "_CPPv4N2gs15PropertyAppBase16message_strategyE", "gs::PropertyAppBase::message_strategy"], [74, 4, 1, "_CPPv4N2gs15PropertyAppBase16need_split_edgesE", "gs::PropertyAppBase::need_split_edges"], [74, 1, 1, "_CPPv4N2gs15PropertyAppBaseD0Ev", "gs::PropertyAppBase::~PropertyAppBase"], [74, 0, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase"], [74, 2, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase::CONTEXT_T"], [74, 2, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase::FRAG_T"], [74, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval"], [74, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval::context"], [74, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval::graph"], [74, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval"], [74, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval::context"], [74, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval::graph"], [74, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase19PropertyAutoAppBaseEv", "gs::PropertyAutoAppBase::PropertyAutoAppBase"], [74, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase13load_strategyE", "gs::PropertyAutoAppBase::load_strategy"], [74, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase16message_strategyE", "gs::PropertyAutoAppBase::message_strategy"], [74, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase16need_split_edgesE", "gs::PropertyAutoAppBase::need_split_edges"], [74, 1, 1, "_CPPv4N2gs19PropertyAutoAppBaseD0Ev", "gs::PropertyAutoAppBase::~PropertyAutoAppBase"], [74, 0, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker"], [74, 0, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker"], [74, 2, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker::APP_T"], [74, 2, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker::APP_T"], [74, 1, 1, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv", "gs::PropertyAutoWorker::Finalize"], [74, 1, 1, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv", "gs::PropertyAutoWorker::Finalize"], [74, 1, 1, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv", "gs::PropertyAutoWorker::GetContext"], [74, 1, 1, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv", "gs::PropertyAutoWorker::GetContext"], [74, 1, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init"], [74, 1, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init"], [74, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::comm_spec"], [74, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::comm_spec"], [74, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::pe_spec"], [74, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::pe_spec"], [74, 1, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output"], [74, 1, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output"], [74, 3, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output::os"], [74, 3, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output::os"], [74, 1, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker"], [74, 1, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker"], [74, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::app"], [74, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::app"], [74, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::graph"], [74, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::graph"], [74, 1, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query"], [74, 1, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query"], [74, 2, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::Args"], [74, 2, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::Args"], [74, 3, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::args"], [74, 3, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::args"], [74, 5, 1, "_CPPv4N2gs18PropertyAutoWorker9context_tE", "gs::PropertyAutoWorker::context_t"], [74, 5, 1, "_CPPv4N2gs18PropertyAutoWorker9context_tE", "gs::PropertyAutoWorker::context_t"], [74, 5, 1, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE", "gs::PropertyAutoWorker::fragment_t"], [74, 5, 1, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE", "gs::PropertyAutoWorker::fragment_t"], [74, 5, 1, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE", "gs::PropertyAutoWorker::message_manager_t"], [74, 5, 1, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE", "gs::PropertyAutoWorker::message_manager_t"], [74, 1, 1, "_CPPv4N2gs18PropertyAutoWorkerD0Ev", "gs::PropertyAutoWorker::~PropertyAutoWorker"], [74, 1, 1, "_CPPv4N2gs18PropertyAutoWorkerD0Ev", "gs::PropertyAutoWorker::~PropertyAutoWorker"], [74, 0, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext"], [74, 2, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext::DATA_T"], [74, 2, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext::FRAG_T"], [74, 1, 1, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t", "gs::TensorContext::TensorContext"], [74, 3, 1, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t", "gs::TensorContext::TensorContext::fragment"], [74, 1, 1, "_CPPv4N2gs13TensorContext6assignERK6data_t", "gs::TensorContext::assign"], [74, 1, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign"], [74, 3, 1, "_CPPv4N2gs13TensorContext6assignERK6data_t", "gs::TensorContext::assign::data"], [74, 3, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign::data"], [74, 3, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign::shape"], [74, 5, 1, "_CPPv4N2gs13TensorContext6data_tE", "gs::TensorContext::data_t"], [74, 1, 1, "_CPPv4N2gs13TensorContext8fragmentEv", "gs::TensorContext::fragment"], [74, 1, 1, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE", "gs::TensorContext::set_shape"], [74, 3, 1, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE", "gs::TensorContext::set_shape::shape"], [74, 1, 1, "_CPPv4NK2gs13TensorContext5shapeEv", "gs::TensorContext::shape"], [74, 1, 1, "_CPPv4N2gs13TensorContext6tensorEv", "gs::TensorContext::tensor"], [74, 0, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper"], [74, 2, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper::DATA_T"], [74, 2, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper::FRAG_T"], [74, 1, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper"], [74, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::ctx"], [74, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::frag_wrapper"], [74, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::id"], [74, 1, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays"], [74, 3, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays::comm_spec"], [74, 3, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays::selectors"], [74, 1, 1, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE", "gs::TensorContextWrapper::ToDataframe"], [74, 3, 1, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE", "gs::TensorContextWrapper::ToDataframe::comm_spec"], [74, 1, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray"], [74, 3, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray::axis"], [74, 3, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray::comm_spec"], [74, 1, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe"], [74, 3, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe::client"], [74, 3, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe::comm_spec"], [74, 1, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor"], [74, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::axis"], [74, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::client"], [74, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::comm_spec"], [74, 1, 1, "_CPPv4N2gs20TensorContextWrapper12context_typeEv", "gs::TensorContextWrapper::context_type"], [74, 1, 1, "_CPPv4N2gs20TensorContextWrapper16fragment_wrapperEv", "gs::TensorContextWrapper::fragment_wrapper"], [74, 0, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper"], [74, 2, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper::DATA_T"], [74, 2, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper::FRAG_T"], [74, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays"], [74, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays::comm_spec"], [74, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays::selectors"], [74, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe"], [74, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::comm_spec"], [74, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::range"], [74, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::selectors"], [74, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray"], [74, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::comm_spec"], [74, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::range"], [74, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::selector"], [74, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe"], [74, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::client"], [74, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::comm_spec"], [74, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::range"], [74, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::selectors"], [74, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor"], [74, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::client"], [74, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::comm_spec"], [74, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::range"], [74, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::selector"], [74, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper"], [74, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::ctx"], [74, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::frag_wrapper"], [74, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::id"], [74, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper12context_typeEv", "gs::VertexDataContextWrapper::context_type"], [74, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper16fragment_wrapperEv", "gs::VertexDataContextWrapper::fragment_wrapper"], [74, 0, 1, "_CPPv4I0EN2gs21VertexPropertyContextE", "gs::VertexPropertyContext"], [74, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContextE", "gs::VertexPropertyContext::FRAG_T"], [74, 1, 1, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t", "gs::VertexPropertyContext::VertexPropertyContext"], [74, 3, 1, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t", "gs::VertexPropertyContext::VertexPropertyContext::fragment"], [74, 1, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column"], [74, 3, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column::name"], [74, 3, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column::type"], [74, 1, 1, "_CPPv4N2gs21VertexPropertyContext8fragmentEv", "gs::VertexPropertyContext::fragment"], [74, 5, 1, "_CPPv4N2gs21VertexPropertyContext10fragment_tE", "gs::VertexPropertyContext::fragment_t"], [74, 1, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t", "gs::VertexPropertyContext::get_column"], [74, 1, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE", "gs::VertexPropertyContext::get_column"], [74, 3, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t", "gs::VertexPropertyContext::get_column::index"], [74, 3, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE", "gs::VertexPropertyContext::get_column::name"], [74, 1, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column"], [74, 1, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column"], [74, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column::DATA_T"], [74, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column::DATA_T"], [74, 3, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column::index"], [74, 3, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column::name"], [74, 5, 1, "_CPPv4N2gs21VertexPropertyContext5oid_tE", "gs::VertexPropertyContext::oid_t"], [74, 5, 1, "_CPPv4N2gs21VertexPropertyContext9prop_id_tE", "gs::VertexPropertyContext::prop_id_t"], [74, 1, 1, "_CPPv4N2gs21VertexPropertyContext14properties_mapEv", "gs::VertexPropertyContext::properties_map"], [74, 1, 1, "_CPPv4N2gs21VertexPropertyContext17vertex_propertiesEv", "gs::VertexPropertyContext::vertex_properties"], [74, 5, 1, "_CPPv4N2gs21VertexPropertyContext8vertex_tE", "gs::VertexPropertyContext::vertex_t"], [74, 0, 1, "_CPPv4N2gs3rpc16AnalyticalServerE", "gs::rpc::AnalyticalServer"], [74, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer"], [74, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::dispatcher"], [74, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::host"], [74, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::port"], [74, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer11StartServerEv", "gs::rpc::AnalyticalServer::StartServer"], [74, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer10StopServerEv", "gs::rpc::AnalyticalServer::StopServer"], [0, 8, 1, "", "all_pairs_shortest_path_length"], [0, 8, 1, "", "attribute_assortativity"], [0, 8, 1, "", "average_degree_connectivity"], [0, 8, 1, "", "betweenness_centrality"], [0, 8, 1, "", "bfs"], [0, 8, 1, "", "closeness_centrality"], [0, 8, 1, "id0", "clustering"], [0, 8, 1, "", "degree_assortativity_coefficient"], [0, 8, 1, "", "degree_centrality"], [0, 8, 1, "", "dfs"], [0, 8, 1, "", "eigenvector_centrality"], [0, 8, 1, "", "hits"], [0, 8, 1, "", "katz_centrality"], [0, 8, 1, "", "kkore"], [0, 8, 1, "", "kshell"], [0, 8, 1, "", "lpa"], [0, 8, 1, "id1", "pagerank"], [0, 8, 1, "", "sampling_path"], [0, 8, 1, "", "sssp"], [0, 8, 1, "id2", "voterank"]], "graphscope": [[293, 9, 1, "", "Session"], [80, 12, 1, "", "Vertex"], [75, 8, 1, "", "attribute_assortativity_coefficient"], [75, 8, 1, "", "average_degree_connectivity"], [75, 8, 1, "", "average_shortest_path_length"], [75, 8, 1, "", "avg_clustering"], [75, 8, 1, "", "bfs"], [75, 8, 1, "", "cdlp"], [75, 8, 1, "", "clustering"], [81, 8, 1, "", "declare"], [75, 8, 1, "", "degree_assortativity_coefficient"], [75, 8, 1, "", "degree_centrality"], [75, 8, 1, "", "eigenvector_centrality"], [126, 8, 1, "", "g"], [127, 8, 1, "", "get_default_session"], [128, 8, 1, "", "get_option"], [129, 8, 1, "", "graphlearn"], [130, 8, 1, "", "gremlin"], [131, 8, 1, "", "has_default_session"], [75, 8, 1, "", "hits"], [75, 8, 1, "", "is_simple_path"], [75, 8, 1, "", "k_core"], [75, 8, 1, "", "k_shell"], [75, 8, 1, "", "katz_centrality"], [75, 8, 1, "", "louvain"], [75, 8, 1, "", "lpa"], [75, 8, 1, "", "lpa_u2i"], [75, 8, 1, "", "numeric_assortativity_coefficient"], [75, 8, 1, "", "pagerank"], [75, 8, 1, "", "pagerank_nx"], [132, 14, 1, "", "session"], [133, 8, 1, "", "set_option"], [75, 8, 1, "", "sssp"], [75, 8, 1, "", "triangles"], [75, 8, 1, "", "voterank"], [75, 8, 1, "", "wcc"]], "graphscope.Session": [[293, 10, 1, "", "__enter__"], [293, 10, 1, "", "__exit__"], [293, 10, 1, "", "__init__"], [293, 10, 1, "", "add_lib"], [293, 10, 1, "", "as_default"], [293, 10, 1, "", "close"], [293, 10, 1, "", "connected"], [293, 11, 1, "", "engine_config"], [293, 10, 1, "", "get_config"], [293, 10, 1, "", "graphlearn"], [293, 10, 1, "", "gremlin"], [293, 11, 1, "", "info"], [293, 10, 1, "", "learning"], [293, 10, 1, "", "load_from"], [293, 10, 1, "", "load_from_gar"], [293, 10, 1, "", "run_fetches"]], "graphscope.analytical.app": [[75, 9, 1, "", "JavaApp"]], "graphscope.analytical.app.JavaApp": [[75, 10, 1, "", "__call__"], [75, 10, 1, "", "__init__"], [75, 10, 1, "", "is_compatible"], [75, 10, 1, "", "signature"]], "graphscope.framework.app": [[75, 9, 1, "", "App"], [75, 9, 1, "", "AppAssets"], [75, 9, 1, "", "AppDAGNode"], [82, 8, 1, "", "load_app"]], "graphscope.framework.app.App": [[75, 10, 1, "", "__del__"], [75, 10, 1, "", "__init__"], [75, 11, 1, "", "key"], [75, 11, 1, "", "signature"]], "graphscope.framework.app.AppAssets": [[75, 10, 1, "", "__init__"], [75, 11, 1, "", "algo"], [75, 11, 1, "", "context_type"], [75, 11, 1, "", "gar"], [75, 10, 1, "", "is_compatible"], [75, 11, 1, "", "signature"], [75, 11, 1, "", "type"]], "graphscope.framework.context": [[76, 9, 1, "", "BaseContextDAGNode"], [76, 9, 1, "", "Context"], [76, 9, 1, "", "DynamicVertexDataContext"], [76, 9, 1, "", "LabeledVertexDataContextDAGNode"], [76, 9, 1, "", "LabeledVertexPropertyContextDAGNode"], [76, 9, 1, "", "ResultDAGNode"], [76, 9, 1, "", "TensorContextDAGNode"], [76, 9, 1, "", "VertexDataContextDAGNode"], [76, 9, 1, "", "VertexPropertyContextDAGNode"]], "graphscope.framework.context.BaseContextDAGNode": [[76, 10, 1, "", "to_dataframe"], [76, 10, 1, "", "to_numpy"], [76, 10, 1, "", "to_vineyard_dataframe"], [76, 10, 1, "", "to_vineyard_tensor"]], "graphscope.framework": [[290, 13, 0, "-", "dag_utils"]], "graphscope.framework.dag_utils": [[83, 8, 1, "", "add_column"], [84, 8, 1, "", "add_labels_to_graph"], [85, 8, 1, "", "arrow_to_dynamic"], [86, 8, 1, "", "bind_app"], [87, 8, 1, "", "clear_edges"], [88, 8, 1, "", "clear_graph"], [89, 8, 1, "", "context_to_dataframe"], [90, 8, 1, "", "context_to_numpy"], [91, 8, 1, "", "copy_graph"], [92, 8, 1, "", "create_app"], [93, 8, 1, "", "create_graph"], [94, 8, 1, "", "create_graph_view"], [95, 8, 1, "", "create_loader"], [96, 8, 1, "", "create_subgraph"], [97, 8, 1, "", "create_unload_op"], [98, 8, 1, "", "dynamic_to_arrow"], [99, 8, 1, "", "fetch_gremlin_result"], [100, 8, 1, "", "get_context_data"], [101, 8, 1, "", "graph_to_dataframe"], [102, 8, 1, "", "graph_to_numpy"], [103, 8, 1, "", "gremlin_query"], [104, 8, 1, "", "gremlin_to_subgraph"], [105, 8, 1, "", "modify_edges"], [106, 8, 1, "", "modify_vertices"], [107, 8, 1, "", "output"], [108, 8, 1, "", "project_arrow_property_graph"], [109, 8, 1, "", "project_to_simple"], [110, 8, 1, "", "report_graph"], [111, 8, 1, "", "run_app"], [112, 8, 1, "", "to_data_sink"], [113, 8, 1, "", "to_directed"], [114, 8, 1, "", "to_undirected"], [115, 8, 1, "", "to_vineyard_dataframe"], [116, 8, 1, "", "to_vineyard_tensor"], [117, 8, 1, "", "unload_app"], [118, 8, 1, "", "unload_context"], [119, 8, 1, "", "unload_graph"]], "graphscope.framework.graph": [[148, 9, 1, "", "Graph"], [148, 9, 1, "", "GraphDAGNode"]], "graphscope.framework.graph.Graph": [[148, 10, 1, "", "__init__"], [148, 10, 1, "", "archive"], [148, 10, 1, "", "detach"], [148, 11, 1, "", "key"], [148, 10, 1, "", "load_from"], [148, 10, 1, "", "loaded"], [148, 10, 1, "", "save_to"], [148, 11, 1, "", "schema"], [148, 11, 1, "", "schema_path"], [148, 11, 1, "", "session_id"], [148, 10, 1, "", "to_dataframe"], [148, 10, 1, "", "to_directed"], [148, 10, 1, "", "to_numpy"], [148, 10, 1, "", "to_undirected"], [148, 11, 1, "", "vineyard_id"]], "graphscope.framework.graph.GraphDAGNode": [[148, 10, 1, "", "__init__"], [148, 10, 1, "", "add_column"], [148, 10, 1, "", "add_edges"], [148, 10, 1, "", "add_vertices"], [148, 10, 1, "", "project"]], "graphscope.framework.graph_builder": [[148, 8, 1, "", "load_from"]], "graphscope.framework.loader": [[148, 9, 1, "", "Loader"]], "graphscope.framework.loader.Loader": [[148, 10, 1, "", "__init__"]], "graphscope.framework.operation": [[290, 9, 1, "", "Operation"]], "graphscope.framework.operation.Operation": [[120, 10, 1, "", "__init__"], [121, 10, 1, "", "as_op_def"], [122, 10, 1, "", "eval"], [123, 11, 1, "", "evaluated"], [124, 11, 1, "", "key"], [125, 11, 1, "", "signature"]], "graphscope.interactive.query": [[149, 9, 1, "", "InteractiveQuery"]], "graphscope.interactive.query.InteractiveQuery": [[149, 10, 1, "", "__init__"], [149, 10, 1, "", "close"], [149, 10, 1, "", "execute"], [149, 11, 1, "", "graph_url"], [149, 11, 1, "", "object_id"], [149, 11, 1, "", "session"], [149, 11, 1, "", "session_id"], [149, 10, 1, "", "subgraph"], [149, 10, 1, "", "submit"], [149, 10, 1, "", "traversal_source"]], "graphscope.learning.graph": [[150, 9, 1, "", "Graph"]], "graphscope.learning.graph.Graph": [[150, 10, 1, "", "E"], [150, 10, 1, "", "V"], [150, 10, 1, "", "__init__"], [150, 10, 1, "", "get_handle"]], "graphscope.nx": [[286, 9, 1, "", "DiGraph"], [286, 9, 1, "", "Graph"], [288, 8, 1, "", "read_adjlist"], [288, 8, 1, "", "read_edgelist"]], "graphscope.nx.DiGraph": [[286, 10, 1, "", "__contains__"], [286, 10, 1, "", "__getitem__"], [286, 10, 1, "", "__init__"], [286, 10, 1, "", "__iter__"], [286, 10, 1, "", "__len__"], [286, 10, 1, "", "add_edge"], [286, 10, 1, "", "add_edges_from"], [286, 10, 1, "", "add_node"], [286, 10, 1, "", "add_nodes_from"], [286, 10, 1, "", "add_weighted_edges_from"], [286, 11, 1, "", "adj"], [286, 10, 1, "", "adjacency"], [286, 14, 1, "", "adjlist_inner_dict_factory"], [286, 14, 1, "", "adjlist_outer_dict_factory"], [286, 10, 1, "", "clear"], [286, 10, 1, "", "clear_edges"], [286, 10, 1, "", "copy"], [286, 11, 1, "", "degree"], [286, 14, 1, "", "edge_attr_dict_factory"], [286, 10, 1, "", "edge_subgraph"], [286, 11, 1, "", "edges"], [286, 10, 1, "", "get_edge_data"], [286, 14, 1, "", "graph_attr_dict_factory"], [286, 14, 1, "", "graph_cache_factory"], [286, 11, 1, "", "graph_type"], [286, 10, 1, "", "has_edge"], [286, 10, 1, "", "has_node"], [286, 10, 1, "", "has_predecessor"], [286, 10, 1, "", "has_successor"], [286, 11, 1, "", "in_degree"], [286, 11, 1, "", "in_edges"], [286, 10, 1, "", "is_directed"], [286, 10, 1, "", "is_multigraph"], [286, 11, 1, "", "key"], [286, 11, 1, "", "name"], [286, 10, 1, "", "nbunch_iter"], [286, 10, 1, "", "neighbors"], [286, 14, 1, "", "node_attr_dict_factory"], [286, 14, 1, "", "node_dict_factory"], [286, 11, 1, "", "nodes"], [286, 10, 1, "", "number_of_edges"], [286, 10, 1, "", "number_of_nodes"], [286, 11, 1, "", "op"], [286, 10, 1, "", "order"], [286, 11, 1, "", "out_degree"], [286, 11, 1, "", "out_edges"], [286, 11, 1, "", "pred"], [286, 10, 1, "", "predecessors"], [286, 10, 1, "", "remove_edge"], [286, 10, 1, "", "remove_edges_from"], [286, 10, 1, "", "remove_node"], [286, 10, 1, "", "remove_nodes_from"], [286, 10, 1, "", "reverse"], [286, 11, 1, "", "schema"], [286, 11, 1, "", "session"], [286, 11, 1, "", "session_id"], [286, 10, 1, "", "set_edge_data"], [286, 10, 1, "", "set_node_data"], [286, 11, 1, "", "signature"], [286, 10, 1, "", "size"], [286, 10, 1, "", "subgraph"], [286, 11, 1, "", "succ"], [286, 10, 1, "", "successors"], [286, 10, 1, "", "to_directed"], [286, 10, 1, "", "to_undirected"], [286, 10, 1, "", "to_undirected_class"], [286, 10, 1, "", "update"]], "graphscope.nx.Graph": [[286, 10, 1, "", "__contains__"], [286, 10, 1, "", "__getitem__"], [289, 8, 1, "", "__init__"], [286, 10, 1, "", "__iter__"], [286, 10, 1, "", "__len__"], [289, 8, 1, "", "_convert_arrow_to_dynamic"], [286, 10, 1, "", "add_edge"], [286, 10, 1, "", "add_edges_from"], [286, 10, 1, "", "add_node"], [286, 10, 1, "", "add_nodes_from"], [286, 10, 1, "", "add_weighted_edges_from"], [286, 11, 1, "", "adj"], [286, 10, 1, "", "adjacency"], [286, 14, 1, "", "adjlist_inner_dict_factory"], [286, 14, 1, "", "adjlist_outer_dict_factory"], [286, 10, 1, "", "clear"], [286, 10, 1, "", "clear_edges"], [286, 10, 1, "", "copy"], [286, 11, 1, "", "degree"], [286, 14, 1, "", "edge_attr_dict_factory"], [286, 10, 1, "", "edge_subgraph"], [286, 11, 1, "", "edges"], [286, 10, 1, "", "get_edge_data"], [286, 14, 1, "", "graph_attr_dict_factory"], [286, 14, 1, "", "graph_cache_factory"], [286, 11, 1, "", "graph_type"], [286, 10, 1, "", "has_edge"], [286, 10, 1, "", "has_node"], [286, 10, 1, "", "is_directed"], [286, 10, 1, "", "is_multigraph"], [286, 11, 1, "", "key"], [286, 11, 1, "", "name"], [286, 10, 1, "", "nbunch_iter"], [286, 10, 1, "", "neighbors"], [286, 14, 1, "", "node_attr_dict_factory"], [286, 14, 1, "", "node_dict_factory"], [286, 11, 1, "", "nodes"], [286, 10, 1, "", "number_of_edges"], [286, 10, 1, "", "number_of_nodes"], [286, 11, 1, "", "op"], [286, 10, 1, "", "order"], [286, 10, 1, "", "remove_edge"], [286, 10, 1, "", "remove_edges_from"], [286, 10, 1, "", "remove_node"], [286, 10, 1, "", "remove_nodes_from"], [286, 11, 1, "", "schema"], [286, 11, 1, "", "session"], [286, 11, 1, "", "session_id"], [286, 10, 1, "", "set_edge_data"], [286, 10, 1, "", "set_node_data"], [286, 11, 1, "", "signature"], [286, 10, 1, "", "size"], [286, 10, 1, "", "subgraph"], [286, 10, 1, "", "to_directed"], [286, 10, 1, "", "to_undirected"], [286, 10, 1, "", "to_undirected_class"], [286, 10, 1, "", "update"]], "graphscope.nx.builtin": [[151, 8, 1, "", "average_clustering"], [151, 8, 1, "", "average_shortest_path_length"], [151, 8, 1, "", "bfs_edges"], [151, 8, 1, "", "clustering"], [151, 8, 1, "", "degree_centrality"], [151, 8, 1, "", "eigenvector_centrality"], [151, 8, 1, "", "has_path"], [151, 8, 1, "", "hits"], [151, 8, 1, "", "in_degree_centrality"], [151, 8, 1, "", "k_core"], [151, 8, 1, "", "katz_centrality"], [151, 8, 1, "", "out_degree_centrality"], [151, 8, 1, "", "triangles"]], "graphscope.nx.classes": [[152, 13, 0, "-", "function"]], "graphscope.nx.classes.function": [[153, 8, 1, "", "add_cycle"], [154, 8, 1, "", "add_path"], [155, 8, 1, "", "add_star"], [156, 8, 1, "", "all_neighbors"], [157, 8, 1, "", "common_neighbors"], [158, 8, 1, "", "create_empty_copy"], [159, 8, 1, "", "degree"], [160, 8, 1, "", "degree_histogram"], [161, 8, 1, "", "density"], [162, 8, 1, "", "edge_subgraph"], [163, 8, 1, "", "edges"], [164, 8, 1, "", "freeze"], [165, 8, 1, "", "induced_subgraph"], [166, 8, 1, "", "info"], [167, 8, 1, "", "is_directed"], [168, 8, 1, "", "is_empty"], [169, 8, 1, "", "is_frozen"], [170, 8, 1, "", "is_negatively_weighted"], [171, 8, 1, "", "is_weighted"], [172, 8, 1, "", "neighbors"], [173, 8, 1, "", "nodes"], [174, 8, 1, "", "nodes_with_selfloops"], [175, 8, 1, "", "non_edges"], [176, 8, 1, "", "non_neighbors"], [177, 8, 1, "", "number_of_edges"], [178, 8, 1, "", "number_of_nodes"], [179, 8, 1, "", "number_of_selfloops"], [180, 8, 1, "", "selfloop_edges"], [181, 8, 1, "", "subgraph"], [182, 8, 1, "", "to_directed"], [183, 8, 1, "", "to_undirected"]], "graphscope.nx.generators": [[285, 13, 0, "-", "atlas"], [285, 13, 0, "-", "classic"], [285, 13, 0, "-", "community"], [285, 13, 0, "-", "degree_seq"], [285, 13, 0, "-", "directed"], [285, 13, 0, "-", "duplication"], [285, 13, 0, "-", "ego"], [285, 13, 0, "-", "expanders"], [285, 13, 0, "-", "geometric"], [285, 13, 0, "-", "harary_graph"], [285, 13, 0, "-", "intersection"], [285, 13, 0, "-", "joint_degree_seq"], [285, 13, 0, "-", "mycielski"], [285, 13, 0, "-", "nonisomorphic_trees"], [285, 13, 0, "-", "small"], [285, 13, 0, "-", "social"], [285, 13, 0, "-", "spectral_graph_forge"], [285, 13, 0, "-", "sudoku"], [285, 13, 0, "-", "trees"], [285, 13, 0, "-", "triads"]], "graphscope.nx.generators.atlas": [[184, 8, 1, "", "graph_atlas"], [185, 8, 1, "", "graph_atlas_g"]], "graphscope.nx.generators.classic": [[186, 8, 1, "", "balanced_tree"], [187, 8, 1, "", "barbell_graph"], [188, 8, 1, "", "binomial_tree"], [189, 8, 1, "", "circulant_graph"], [190, 8, 1, "", "circular_ladder_graph"], [191, 8, 1, "", "complete_graph"], [192, 8, 1, "", "complete_multipartite_graph"], [193, 8, 1, "", "cycle_graph"], [194, 8, 1, "", "dorogovtsev_goltsev_mendes_graph"], [195, 8, 1, "", "empty_graph"], [196, 8, 1, "", "full_rary_tree"], [197, 8, 1, "", "ladder_graph"], [198, 8, 1, "", "lollipop_graph"], [199, 8, 1, "", "null_graph"], [200, 8, 1, "", "path_graph"], [201, 8, 1, "", "star_graph"], [202, 8, 1, "", "trivial_graph"], [203, 8, 1, "", "turan_graph"], [204, 8, 1, "", "wheel_graph"]], "graphscope.nx.generators.community": [[205, 8, 1, "", "LFR_benchmark_graph"], [206, 8, 1, "", "caveman_graph"], [207, 8, 1, "", "connected_caveman_graph"], [208, 8, 1, "", "gaussian_random_partition_graph"], [209, 8, 1, "", "planted_partition_graph"], [210, 8, 1, "", "random_partition_graph"], [211, 8, 1, "", "relaxed_caveman_graph"], [212, 8, 1, "", "ring_of_cliques"], [213, 8, 1, "", "stochastic_block_model"], [214, 8, 1, "", "windmill_graph"]], "graphscope.nx.generators.degree_seq": [[215, 8, 1, "", "configuration_model"], [216, 8, 1, "", "degree_sequence_tree"], [217, 8, 1, "", "directed_configuration_model"], [218, 8, 1, "", "directed_havel_hakimi_graph"], [219, 8, 1, "", "expected_degree_graph"], [220, 8, 1, "", "havel_hakimi_graph"], [221, 8, 1, "", "random_degree_sequence_graph"]], "graphscope.nx.generators.directed": [[222, 8, 1, "", "gn_graph"], [223, 8, 1, "", "gnc_graph"], [224, 8, 1, "", "gnr_graph"], [225, 8, 1, "", "random_k_out_graph"], [226, 8, 1, "", "scale_free_graph"]], "graphscope.nx.generators.duplication": [[227, 8, 1, "", "duplication_divergence_graph"], [228, 8, 1, "", "partial_duplication_graph"]], "graphscope.nx.generators.ego": [[229, 8, 1, "", "ego_graph"]], "graphscope.nx.generators.expanders": [[230, 8, 1, "", "chordal_cycle_graph"], [231, 8, 1, "", "margulis_gabber_galil_graph"], [232, 8, 1, "", "paley_graph"]], "graphscope.nx.generators.geometric": [[233, 8, 1, "", "geographical_threshold_graph"], [234, 8, 1, "", "random_geometric_graph"], [235, 8, 1, "", "soft_random_geometric_graph"], [236, 8, 1, "", "thresholded_random_geometric_graph"], [237, 8, 1, "", "waxman_graph"]], "graphscope.nx.generators.harary_graph": [[238, 8, 1, "", "hkn_harary_graph"], [239, 8, 1, "", "hnm_harary_graph"]], "graphscope.nx.generators.intersection": [[240, 8, 1, "", "general_random_intersection_graph"], [241, 8, 1, "", "k_random_intersection_graph"], [242, 8, 1, "", "uniform_random_intersection_graph"]], "graphscope.nx.generators.joint_degree_seq": [[243, 8, 1, "", "directed_joint_degree_graph"], [244, 8, 1, "", "is_valid_directed_joint_degree"], [245, 8, 1, "", "is_valid_joint_degree"], [246, 8, 1, "", "joint_degree_graph"]], "graphscope.nx.generators.mycielski": [[247, 8, 1, "", "mycielski_graph"], [248, 8, 1, "", "mycielskian"]], "graphscope.nx.generators.nonisomorphic_trees": [[249, 8, 1, "", "nonisomorphic_trees"], [250, 8, 1, "", "number_of_nonisomorphic_trees"]], "graphscope.nx.generators.small": [[251, 8, 1, "", "LCF_graph"], [252, 8, 1, "", "bull_graph"], [253, 8, 1, "", "chvatal_graph"], [254, 8, 1, "", "cubical_graph"], [255, 8, 1, "", "desargues_graph"], [256, 8, 1, "", "diamond_graph"], [257, 8, 1, "", "dodecahedral_graph"], [258, 8, 1, "", "frucht_graph"], [259, 8, 1, "", "heawood_graph"], [260, 8, 1, "", "house_graph"], [261, 8, 1, "", "house_x_graph"], [262, 8, 1, "", "icosahedral_graph"], [263, 8, 1, "", "krackhardt_kite_graph"], [264, 8, 1, "", "make_small_graph"], [265, 8, 1, "", "moebius_kantor_graph"], [266, 8, 1, "", "octahedral_graph"], [267, 8, 1, "", "pappus_graph"], [268, 8, 1, "", "petersen_graph"], [269, 8, 1, "", "sedgewick_maze_graph"], [270, 8, 1, "", "tetrahedral_graph"], [271, 8, 1, "", "truncated_cube_graph"], [272, 8, 1, "", "truncated_tetrahedron_graph"], [273, 8, 1, "", "tutte_graph"]], "graphscope.nx.generators.social": [[274, 8, 1, "", "davis_southern_women_graph"], [275, 8, 1, "", "florentine_families_graph"], [276, 8, 1, "", "karate_club_graph"], [277, 8, 1, "", "les_miserables_graph"]], "graphscope.nx.generators.spectral_graph_forge": [[278, 8, 1, "", "spectral_graph_forge"]], "graphscope.nx.generators.sudoku": [[279, 8, 1, "", "sudoku_graph"]], "graphscope.nx.generators.trees": [[280, 8, 1, "", "prefix_tree"], [281, 8, 1, "", "random_tree"]], "graphscope.nx.generators.triads": [[282, 8, 1, "", "triad_graph"]], "networkx.generators": [[285, 13, 0, "-", "internet_as_graphs"], [285, 13, 0, "-", "stochastic"]], "networkx.generators.internet_as_graphs": [[283, 8, 1, "", "random_internet_as_graph"]], "networkx.generators.stochastic": [[284, 8, 1, "", "stochastic_graph"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:function", "2": "cpp:templateParam", "3": "cpp:functionParam", "4": "cpp:member", "5": "cpp:type", "6": "cpp:enum", "7": "cpp:enumerator", "8": "py:function", "9": "py:class", "10": "py:method", "11": "py:property", "12": "py:data", "13": "py:module", "14": "py:attribute"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "function", "C++ function"], "2": ["cpp", "templateParam", "C++ template parameter"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "member", "C++ member"], "5": ["cpp", "type", "C++ type"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "enumerator", "C++ enumerator"], "8": ["py", "function", "Python function"], "9": ["py", "class", "Python class"], "10": ["py", "method", "Python method"], "11": ["py", "property", "Python property"], "12": ["py", "data", "Python data"], "13": ["py", "module", "Python module"], "14": ["py", "attribute", "Python attribute"]}, "titleterms": {"built": [0, 6, 56, 146, 299, 301], "algorithm": [0, 1, 2, 6, 9, 11, 15, 16, 17, 18, 19, 21, 22, 23, 31, 56, 134, 151, 301, 303], "all": [0, 30, 33, 36, 38], "pair": 0, "shortest": 0, "path": [0, 50, 53, 54], "length": 0, "attribut": [0, 20, 135, 152], "assort": 0, "averag": 0, "degre": [0, 159, 285], "connect": [0, 27, 29, 299], "between": [0, 50, 295], "central": 0, "breadth": 0, "first": [0, 47], "search": 0, "close": 0, "cluster": [0, 27, 28, 38, 47, 62], "coeffici": 0, "depth": 0, "eigenvector": 0, "hyperlink": 0, "induc": [0, 20], "topic": [0, 44], "katz": 0, "k": 0, "core": 0, "shell": 0, "label": [0, 53, 54, 135, 298, 319], "propag": 0, "pagerank": 0, "sampl": [0, 60, 69, 134, 138, 140, 143, 146], "singl": [0, 43], "sourc": [0, 30, 36, 53, 78, 135, 141, 144, 145], "voterank": 0, "custom": [1, 23, 28, 299], "aggreg": [1, 50, 53, 54, 57], "deploy": [2, 28, 35, 46, 47], "gae": [2, 31, 66, 303, 307], "prerequisit": [2, 16, 27, 28, 29, 30, 47, 299], "onli": [2, 34], "python": [2, 15, 18, 32, 33, 36, 56, 73, 291, 299, 303, 311], "sdk": [2, 16, 31, 77], "helm": [2, 29], "execut": [2, 31, 64], "graph": [2, 9, 11, 19, 20, 27, 31, 42, 43, 44, 46, 54, 56, 57, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 134, 136, 137, 138, 139, 140, 142, 146, 148, 150, 152, 285, 286, 288, 289, 295, 297, 298, 299, 300, 301, 307], "analyt": [2, 3, 4, 7, 10, 24, 36, 42, 46, 56, 64, 67, 72, 74, 75, 307], "uninstal": [2, 29, 299], "design": [3, 9, 31, 48, 56, 57, 64, 144, 298], "engin": [3, 4, 7, 9, 10, 12, 24, 33, 36, 46, 51, 56, 58, 59, 63, 64, 72, 74, 298, 307], "dev": [4, 30, 33, 38, 49, 58], "test": [4, 33, 34, 38, 49, 58, 141], "environ": [4, 30, 33, 36, 38, 49, 58], "build": [4, 30, 33, 38, 49, 58, 78, 134, 141, 299, 319], "how": [4, 19, 34, 37, 38, 44, 45, 50, 58, 134, 144, 146, 307], "faq": [5, 50], "program": [6, 12, 14, 31, 43, 144], "model": [6, 12, 14, 15, 16, 17, 24, 31, 57, 62, 63, 66, 69, 134, 142, 146, 298, 299], "flash": [6, 15, 66], "motiv": [6, 9, 48, 64, 298], "The": [6, 19, 48, 297], "overview": [6, 9, 12, 46, 142, 299], "api": [6, 9, 12, 19, 20, 74, 77, 135, 146, 287, 291, 315], "strong": 6, "express": [6, 53, 54], "implement": [6, 15, 17, 34, 144, 298], "architectur": [6, 12, 48, 295], "optim": [6, 50], "get": [7, 34, 41, 51, 59, 65, 141, 296], "start": [7, 41, 49, 51, 54, 59, 65, 146, 296], "instal": [7, 27, 28, 29, 30, 33, 34, 36, 46, 51, 58, 59, 141, 299], "run": [7, 15, 16, 17, 18, 21, 22, 23, 34, 38, 43, 51, 59, 141], "graphscop": [7, 10, 15, 16, 17, 19, 20, 22, 23, 26, 27, 28, 29, 30, 33, 36, 38, 43, 46, 51, 59, 64, 67, 69, 70, 71, 74, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 295, 297, 311, 315, 316], "local": [7, 30, 33, 35, 38, 49, 51, 53, 58, 59, 63, 298, 299], "what": [7, 14, 50, 51, 59, 67, 69, 70], "": [7, 50, 51, 59, 74], "next": [7, 51, 59, 70], "guid": [8, 32, 33, 52, 61, 299, 303, 304], "exampl": [8, 17, 22, 23, 52, 61, 303, 304], "ingress": [9, 66], "increment": [9, 12], "messag": [9, 57], "driven": 9, "differenti": 9, "flexibl": [9, 31], "memoiz": 9, "distribut": [9, 43, 136, 144], "runtim": [9, 31, 144], "kei": [10, 50, 56, 124], "concept": [10, 298], "loadstrategi": 10, "onlyout": 10, "onlyin": 10, "bothinout": 10, "partitionstrategi": 10, "edg": [10, 20, 54, 152, 163, 288, 298, 319], "cut": [10, 298], "vertex": [10, 24, 54, 80, 292, 298, 319], "vertic": [10, 54, 319], "outervertex": 10, "innervertex": 10, "innervertexwithoutgoingedg": 10, "innervertexwithincomingedg": 10, "messagemanag": 10, "messagestrategi": 10, "alongoutgoingedgetooutervertex": 10, "alongincomingedgetooutervertex": 10, "alongedgetooutervertex": 10, "synconoutervertexastarget": 10, "synconoutervertexassourc": 10, "synconoutervertex": 10, "networkx": [11, 19, 283, 284, 287], "compat": [11, 68], "convert": 11, "nx": [11, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282], "support": [11, 23, 53, 56], "oper": [11, 20, 54, 120, 121, 122, 123, 124, 125, 144, 290], "storag": [12, 31, 46, 64, 295, 298], "layer": [12, 64], "grape": [12, 17, 66, 78], "ffi": 12, "comput": [12, 43, 46, 64, 298], "applic": [12, 15, 22, 23, 54, 64, 301], "perform": [13, 19, 31, 50, 56, 72], "tune": 13, "pie": [14, 16, 17, 18, 66, 77, 309], "i": [14, 53, 67, 69, 70], "workflow": [14, 56, 295], "tutori": [15, 16, 17, 18, 19, 20, 21, 22, 23, 54, 55, 62, 63, 73], "develop": [15, 16, 17, 18, 22, 23, 33, 46, 134, 146, 299, 303], "your": [15, 16, 17, 18, 22, 34, 47, 63, 134, 144, 303], "c": [15, 16, 32, 303], "defin": [15, 16, 44, 63, 144, 295], "A": [15, 46], "function": [15, 18, 75, 77, 134, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 293], "integr": [15, 34, 43, 145], "client": [15, 27, 28, 33, 136], "step": [16, 53, 54, 69], "1": [16, 39, 135, 136, 138, 146], "context": [16, 74, 76, 292], "class": [16, 144, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183], "2": [16, 39, 135, 136, 146], "3": [16, 39, 135, 136, 146], "packag": [16, 30, 36, 141], "4": [16, 39, 135, 146], "gar": 16, "file": [16, 28, 36, 145, 297], "github": [16, 17, 25, 34], "templat": [16, 17], "java": [17, 32, 55, 79, 299, 303], "jar": 17, "own": [17, 18, 22, 47, 134, 144], "prepar": [17, 27, 28, 38, 146], "jdk": [17, 78], "submit": [17, 22, 23, 34, 37], "javasdk": 17, "write": 18, "pregel": [18, 24, 77, 309], "us": [18, 20, 27, 28, 30, 47, 50, 56, 70, 141, 144, 146, 292, 295, 299, 300], "math": [18, 309], "h": [18, 309], "netowrkx": [19, 20], "doe": 19, "analysi": [19, 64], "from": [19, 20, 30, 36, 46, 54, 78, 141, 295, 299], "displai": 19, "speed": 19, "up": [19, 27, 28], "over": 19, "creat": [20, 34, 62], "an": [20, 27, 144], "empti": 20, "ad": 20, "node": [20, 57, 62, 63, 152, 173, 299], "examin": 20, "element": 20, "remov": [20, 47], "constructor": 20, "access": 20, "neighbor": [20, 172], "deepcopi": 20, "subgraph": [20, 50, 53, 57, 60, 69, 181], "edge_subgraph": [20, 162], "make": 20, "copi": [20, 36], "direct": [20, 222, 223, 224, 225, 226, 285], "analyz": 20, "object": [20, 75, 76, 136, 148, 290, 293], "transform": [20, 289], "builtin": [21, 75, 151, 290], "giraph": 22, "try": [22, 146], "some": [22, 54], "app": [22, 23, 74, 75, 82], "graphx": 23, "deploi": [23, 26, 27, 28, 29, 47, 299], "along": 23, "spark": 23, "includ": 23, "depend": [23, 30, 36, 141], "toward": 23, "centric": [24, 57], "ga": 24, "simul": 24, "contact": 25, "u": 25, "slack": [25, 34], "discuss": [25, 34], "cloud": [26, 56, 135], "exist": 27, "vineyard": [27, 49, 66, 300], "multipl": [27, 50, 54], "session": [27, 62, 132, 293], "kubernet": [27, 28, 35, 38, 62, 311, 316], "load": [27, 44, 54, 62, 63, 295, 297, 299, 300], "dataset": [27, 299], "anoth": 27, "clean": [27, 28], "k8": [28, 62, 307], "launch": [28, 63], "default": 28, "paramet": 28, "frequent": [28, 40], "imag": [28, 30, 38, 141, 299], "uri": 28, "specifi": 28, "number": 28, "worker": [28, 74], "provid": 28, "kubeconfig": 28, "other": [28, 47, 145], "than": 28, "mount": 28, "volum": 28, "inspect": 28, "releas": [29, 34], "configur": [29, 47, 147, 299], "offlin": [29, 36, 299], "stabl": 30, "version": 30, "preview": 30, "setup": 30, "linux": [30, 311], "maco": [30, 311], "framework": [31, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "multi": [31, 292], "languag": [31, 140], "high": [31, 56, 64], "librari": [31, 56, 141], "code": [32, 34, 144, 305], "style": [32, 34, 287, 298], "rust": 32, "script": 32, "linter": 32, "checker": 32, "contain": [33, 58], "dep": [33, 58], "target": [33, 38], "compon": 33, "individu": 33, "coordin": 33, "contribut": 34, "conduct": 34, "commun": [34, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 285], "report": [34, 45], "bug": [34, 45], "request": [34, 37], "featur": [34, 56, 297], "improv": 34, "document": 34, "chang": 34, "pre": 34, "commit": 34, "minor": 34, "fix": 34, "fork": 34, "branch": [34, 53], "suit": 34, "format": [34, 135, 297, 299], "right": 34, "keep": 34, "pull": [34, 37], "updat": 34, "merg": 34, "pr": 34, "maintain": 34, "ship": 34, "review": 34, "continu": 34, "debug": 35, "command": [35, 306], "techniqu": 35, "mode": [36, 136], "wheel": [36, 141, 311], "download": 36, "destin": 36, "extract": [36, 54], "them": 36, "locat": 36, "basic": [36, 54, 135], "gcc": 36, "g": [36, 126, 306], "third": 36, "parti": 36, "introduct": [39, 53, 138], "arrowfrag": 39, "0": 39, "\u672f\u8bed": 39, "\u8f7d\u56fe": [39, 319], "\u521d\u59cb\u5316partiton": 39, "\u6784\u5efa\u539f\u59cbarrow": 39, "tabl": [39, 46, 135], "shuffl": 39, "vtabl": 39, "\u6784\u5efavertex": 39, "map": [39, 295], "basicarrowvertexmapbuild": 39, "5": [39, 135], "\u6784\u5efafragment\u51c6\u5907": 39, "\u5904\u7406edg": 39, "basicevfragmentload": 39, "fragmentbuilder\u6570\u636e\u521d\u59cb\u5316": 39, "basicarrowfragmentbuild": 39, "6": 39, "fragment\u6784\u5efa": 39, "\u8bbf\u95eefragment": 39, "\u8bbf\u95ee\u9876\u70b9": 39, "\u8bbf\u95ee\u5185\u90e8\u70b9": 39, "\u8303\u56f4\u5916\u90e8\u70b9": 39, "\u8bbf\u95ee\u5168\u90e8\u70b9": 39, "\u8bbf\u95ee\u9876\u70b9\u6570\u636e": 39, "\u8bbf\u95ee\u8fb9": 39, "\u8bbf\u95ee\u51fa\u8fb9": 39, "\u8bbf\u95ee\u5165\u8fb9": 39, "\u8bbf\u95ee\u8fb9\u4e0a\u7684\u6570\u636e": 39, "ask": 40, "question": 40, "gle": [41, 57, 304, 307], "workload": [42, 67, 68, 69, 71, 295], "interact": [42, 46, 51, 65, 68, 72, 149, 307], "queri": [42, 48, 50, 54, 64, 65, 137, 149, 299], "learn": [42, 46, 57, 58, 59, 63, 64, 65, 69, 71, 134, 142, 150, 307], "data": [43, 47, 50, 135, 142, 145, 146, 297, 299], "scientist": 43, "challeng": [43, 67, 69], "handl": [43, 71], "solut": 43, "machin": [43, 63], "pydata": 43, "ecosystem": 43, "schema": 44, "advanc": 44, "tip": 44, "reduc": 44, "memori": [44, 300], "consumpt": 44, "One": [46, 65, 292], "stop": [46, 65], "larg": [46, 67, 69], "scale": [46, 302], "system": [46, 71, 145, 147], "alibaba": [46, 135], "troubleshoot": [46, 299], "util": [46, 306], "refer": [46, 74, 79, 291, 298], "indic": 46, "standalon": 47, "gie": [47, 48, 49, 50, 307], "servic": [47, 49], "process": [48, 63, 65, 71, 134, 299], "store": [49, 299], "manual": 49, "gremlin": [50, 53, 54, 56, 68, 130, 317], "usag": 50, "differ": [50, 292], "inner": 50, "id": [50, 53, 54, 298], "properti": [50, 53, 54, 68, 298, 319], "expand": [50, 53, 230, 231, 232, 285], "filter": [50, 53, 54], "like": 50, "sql": 50, "group": [50, 53, 54], "valu": [50, 53, 54], "appropri": 50, "index": 50, "standard": [53, 297], "v": 53, "e": 53, "out": [53, 54, 146], "inE": [53, 54], "both": [53, 54], "outv": [53, 54], "inv": [53, 54], "otherv": [53, 54], "bothv": [53, 54], "hasid": [53, 54], "haslabel": 53, "ha": 53, "hasnot": 53, "where": [53, 54], "travers": [53, 54, 56, 60, 68, 139], "predic": 53, "dedup": [53, 54], "project": [53, 54, 78], "constant": [53, 54], "valuemap": [53, 54], "select": [53, 54], "count": 53, "fold": [53, 54], "sum": [53, 54], "min": [53, 54], "max": [53, 54], "mean": [53, 54], "groupcount": [53, 54], "order": [53, 54, 298], "statist": 53, "limit": [53, 54, 70, 299], "coin": 53, "union": 53, "match": [53, 54, 68], "syntact": [53, 54], "sugar": [53, 54], "pathexpand": 53, "endv": 53, "To": 53, "ident": 53, "elementmap": 53, "unfold": 53, "Will": 53, "Not": 53, "repeat": 53, "sideeffect": 53, "ldbc": 54, "retriev": [54, 298], "appli": [54, 69], "real": 54, "expans": 54, "mani": 54, "point": 54, "after": 54, "pattern": [54, 68], "relat": [54, 295], "syntax": 54, "complex": 54, "bi2": 54, "bi3": 54, "bi4": 54, "left": 54, "part": 54, "bi11": 54, "bi14": 54, "user": [55, 73, 135, 303, 304], "eas": 56, "interfac": [56, 144, 145, 298], "cypher": 56, "extens": 56, "gnn": [56, 62, 69, 146, 313], "train": [56, 62, 63, 69, 134], "infer": 56, "nativ": 56, "across": 56, "orchestr": 56, "paradigm": [57, 69], "egograph": 57, "base": 57, "pass": 57, "pipelin": 57, "docker": [58, 141, 311], "neighborhood": 60, "neg": [60, 143], "gsl": [60, 140], "classif": [62, 63], "neural": [62, 69], "network": [62, 69, 285], "egographsag": 63, "unifi": [64, 298], "platform": 64, "disaggreg": 64, "divers": 64, "bi": 64, "qp": 64, "quick": [65, 146], "glossari": 66, "gart": [66, 295], "grin": [66, 298], "graphar": [66, 297], "groot": [66, 299, 307], "gum": 66, "maxgraph": 66, "deprec": 66, "v6d": 66, "gaia": 66, "pegasu": 66, "can": [67, 69], "do": [67, 69], "tinkerpop": [68, 317], "constraint": 68, "typic": 69, "introduc": 70, "why": 70, "ar": 70, "case": 70, "posit": 71, "compar": 71, "databas": 71, "variou": 71, "type": [71, 77, 135, 286], "benchmark": 72, "result": [72, 292], "gpu": 72, "reproduc": 72, "fragment": 74, "appasset": 75, "javaapp": 75, "cython": 77, "about": 78, "structur": [78, 152], "javadoc": 79, "declar": 81, "load_app": 82, "dag_util": [83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "add_column": 83, "add_labels_to_graph": 84, "arrow_to_dynam": 85, "bind_app": 86, "clear_edg": 87, "clear_graph": 88, "context_to_datafram": 89, "context_to_numpi": 90, "copy_graph": 91, "create_app": 92, "create_graph": 93, "create_graph_view": 94, "create_load": 95, "create_subgraph": 96, "create_unload_op": 97, "dynamic_to_arrow": 98, "fetch_gremlin_result": 99, "get_context_data": 100, "graph_to_datafram": 101, "graph_to_numpi": 102, "gremlin_queri": 103, "gremlin_to_subgraph": 104, "modify_edg": 105, "modify_vertic": 106, "output": 107, "project_arrow_property_graph": 108, "project_to_simpl": 109, "report_graph": 110, "run_app": 111, "to_data_sink": 112, "to_direct": [113, 182], "to_undirect": [114, 183], "to_vineyard_datafram": 115, "to_vineyard_tensor": 116, "unload_app": 117, "unload_context": 118, "unload_graph": 119, "__init__": 120, "as_op_def": 121, "eval": 122, "evalu": 123, "signatur": 125, "get_default_sess": 127, "get_opt": 128, "graphlearn": 129, "has_default_sess": 131, "set_opt": 133, "encod": [134, 142], "loss": 134, "weight": 135, "put": 135, "togeth": 135, "maxcomput": 135, "describ": 136, "topologi": 136, "stand": 136, "alon": 136, "server": 136, "pip": 141, "tensorflow": 141, "git": 141, "compil": [141, 144], "new": 144, "clone": 144, "regist": [144, 145], "bytestreamaccessfil": 145, "structuredaccessfil": 145, "writablefil": 145, "scheme": 145, "gl": 146, "construct": 146, "loader": [148, 319], "self": 152, "loop": 152, "freez": [152, 164], "add_cycl": 153, "add_path": 154, "add_star": 155, "all_neighbor": 156, "common_neighbor": 157, "create_empty_copi": 158, "degree_histogram": 160, "densiti": 161, "induced_subgraph": 165, "info": 166, "is_direct": 167, "is_empti": 168, "is_frozen": 169, "is_negatively_weight": 170, "is_weight": 171, "nodes_with_selfloop": 174, "non_edg": 175, "non_neighbor": 176, "number_of_edg": 177, "number_of_nod": 178, "number_of_selfloop": 179, "selfloop_edg": 180, "gener": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285], "atla": [184, 185, 285], "graph_atla": 184, "graph_atlas_g": 185, "classic": [186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 285], "balanced_tre": 186, "barbell_graph": 187, "binomial_tre": 188, "circulant_graph": 189, "circular_ladder_graph": 190, "complete_graph": 191, "complete_multipartite_graph": 192, "cycle_graph": 193, "dorogovtsev_goltsev_mendes_graph": 194, "empty_graph": 195, "full_rary_tre": 196, "ladder_graph": 197, "lollipop_graph": 198, "null_graph": 199, "path_graph": 200, "star_graph": 201, "trivial_graph": 202, "turan_graph": 203, "wheel_graph": 204, "lfr_benchmark_graph": 205, "caveman_graph": 206, "connected_caveman_graph": 207, "gaussian_random_partition_graph": 208, "planted_partition_graph": 209, "random_partition_graph": 210, "relaxed_caveman_graph": 211, "ring_of_cliqu": 212, "stochastic_block_model": 213, "windmill_graph": 214, "degree_seq": [215, 216, 217, 218, 219, 220, 221], "configuration_model": 215, "degree_sequence_tre": 216, "directed_configuration_model": 217, "directed_havel_hakimi_graph": 218, "expected_degree_graph": 219, "havel_hakimi_graph": 220, "random_degree_sequence_graph": 221, "gn_graph": 222, "gnc_graph": 223, "gnr_graph": 224, "random_k_out_graph": 225, "scale_free_graph": 226, "duplic": [227, 228, 285], "duplication_divergence_graph": 227, "partial_duplication_graph": 228, "ego": [229, 285], "ego_graph": 229, "chordal_cycle_graph": 230, "margulis_gabber_galil_graph": 231, "paley_graph": 232, "geometr": [233, 234, 235, 236, 237, 285], "geographical_threshold_graph": 233, "random_geometric_graph": 234, "soft_random_geometric_graph": 235, "thresholded_random_geometric_graph": 236, "waxman_graph": 237, "harary_graph": [238, 239], "hkn_harary_graph": 238, "hnm_harary_graph": 239, "intersect": [240, 241, 242, 285], "general_random_intersection_graph": 240, "k_random_intersection_graph": 241, "uniform_random_intersection_graph": 242, "joint_degree_seq": [243, 244, 245, 246], "directed_joint_degree_graph": 243, "is_valid_directed_joint_degre": 244, "is_valid_joint_degre": 245, "joint_degree_graph": 246, "mycielski": [247, 248, 285], "mycielski_graph": 247, "mycielskian": 248, "nonisomorphic_tre": [249, 250], "number_of_nonisomorphic_tre": 250, "small": [251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 285], "lcf_graph": 251, "bull_graph": 252, "chvatal_graph": 253, "cubical_graph": 254, "desargues_graph": 255, "diamond_graph": 256, "dodecahedral_graph": 257, "frucht_graph": 258, "heawood_graph": 259, "house_graph": 260, "house_x_graph": 261, "icosahedral_graph": 262, "krackhardt_kite_graph": 263, "make_small_graph": 264, "moebius_kantor_graph": 265, "octahedral_graph": 266, "pappus_graph": 267, "petersen_graph": 268, "sedgewick_maze_graph": 269, "tetrahedral_graph": 270, "truncated_cube_graph": 271, "truncated_tetrahedron_graph": 272, "tutte_graph": 273, "social": [274, 275, 276, 277, 285], "davis_southern_women_graph": 274, "florentine_families_graph": 275, "karate_club_graph": 276, "les_miserables_graph": 277, "spectral_graph_forg": 278, "sudoku": [279, 285], "sudoku_graph": 279, "tree": [280, 281, 285], "prefix_tre": 280, "random_tre": 281, "triad": [282, 285], "triad_graph": 282, "internet_as_graph": 283, "random_internet_as_graph": 283, "stochast": [284, 285], "stochastic_graph": 284, "diverg": 285, "sequenc": 285, "AS": 285, "spectral": 285, "non": 285, "isomorph": 285, "joint": 285, "harari": 285, "digraph": 286, "read": 288, "list": [288, 298], "adjac": 288, "selector": 292, "tensorcontext": 292, "vertexdatacontext": 292, "labeledvertexdatacontext": 292, "vertexpropertycontext": 292, "labeledvertexpropertycontext": 292, "method": 292, "dimension": 292, "rang": 292, "resourc": 294, "estim": 294, "bridg": 295, "gap": 295, "oltp": 295, "log": [295, 299, 307], "inform": 297, "archiv": 297, "predefin": 298, "macro": 298, "partit": [298, 299, 302], "strategi": 298, "guidelin": 298, "For": 298, "detail": 298, "handler": 298, "arrai": 298, "iter": 298, "master": 298, "mirror": 298, "complet": 298, "natur": 298, "trait": 298, "persist": 299, "known": 299, "artifacthub": 299, "directori": 299, "common": 299, "modifi": 299, "j": 299, "import": 299, "restart": 299, "destroi": 299, "view": 299, "In": 300, "immut": 300, "bind": 301, "repartit": 302, "fennel": 302, "xtrapulp": 302, "hybrid": 302, "error": 305, "line": 306, "find": 307, "monitor": 308, "\u56fe\u5206\u6790\u5f15\u64ce": 309, "\u5185\u7f6e\u7b97\u6cd5": 309, "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": 309, "\u4f7f\u7528": 309, "\u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": 309, "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528": 309, "\u4e2d\u7684\u51fd\u6570": 309, "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": 309, "\u8fd0\u884cjava\u7f16\u5199\u7684\u7b97\u6cd5": 309, "\u8fd0\u884c\u793a\u4f8b\u7684java\u7b97\u6cd5": 309, "\u4f7f\u7528java\u7f16\u5199\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5": 309, "\u90e8\u7f72": 310, "\u4f7f\u7528helm\u90e8\u7f72graphscop": 310, "\u5728aw": 310, "\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": 310, "\u672c\u5730\u90e8\u7f72graphscop": 310, "\u5f00\u53d1\u8005\u6307\u5357": 311, "\u57fa\u4e8e": [311, 316], "\u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5": 311, "\u6784\u5efa": 311, "\u4ee3\u7801\u98ce\u683c": 311, "\u5e38\u89c1\u95ee\u9898": 312, "\u5feb\u901f\u4e0a\u624b": 313, "\u793a\u4f8b": 313, "\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 313, "\u521b\u5efa\u4f1a\u8bdd": 313, "\u4ea4\u4e92\u5f0f\u67e5\u8be2": 313, "\u56fe\u5206\u6790": 313, "\u56fe\u795e\u7ecf\u7f51\u7edc": 313, "\u5173\u95ed\u4f1a\u8bdd": 313, "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": 314, "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": 314, "\u6295\u5f71": 314, "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 314, "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": 314, "\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": 315, "\u76ee\u5f55": [315, 320], "\u53c2\u8003": 315, "\u7d22\u5f15": 315, "\u5b89\u88c5": 316, "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": 316, "\u5ba2\u6237\u7aef": 316, "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": 317, "apach": 317, "\u5229\u7528python": 317, "\u8fde\u63a5graphscop": 317, "\u5229\u7528java": 317, "consol": 317, "\u5f00\u53d1\u63a7\u5236\u53f0": 317, "gremlin\u7f16\u7a0b\u5165\u95e8": 317, "101": 317, "\u56fe\u6570\u636e\u6a21\u578b": 317, "\u67e5\u8be2\u8bed\u8a00": 317, "\u4e00\u4e2a\u4f8b\u5b50": 317, "gremlin\u517c\u5bb9\u6027": 317, "\u5bf9\u6bd4tinkerpop": 317, "\u5c5e\u6027\u56fe\u6a21\u578b\u7ea6\u675f": 317, "\u5c1a\u4e0d\u652f\u6301\u7684\u529f\u80fd\u7279\u6027": 317, "\u652f\u6301\u7684gremlin\u64cd\u4f5c": 317, "\u5df2\u77e5\u9650\u5236": 317, "\u56fe\u5b66\u4e60\u5f15\u64ce": 318, "\u56fe\u5b66\u4e60\u6a21\u578b": 318, "\u6570\u636e\u6a21\u578b": 318, "\u7f16\u7801\u5668": 318, "\u81ea\u5b9a\u4e49\u7b97\u6cd5": 318, "\u91c7\u6837": 318, "\u56fe\u6570\u636e\u6d41": 318, "\u6a21\u578b": 318, "\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": 318, "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": 319, "\u624b\u52a8\u914d\u7f6e\u56fe": 319, "vid_field": 319, "src_label": 319, "dst_label": 319, "src_field": 319, "dst_field": 319, "\u9ad8\u7ea7\u7528\u6cd5": 319, "\u6ca1\u6709\u6b67\u4e49\u65f6": 319, "\u81ea\u52a8\u63a8\u65ad\u70b9\u6807\u7b7e": 319, "\u4ece\u8fb9\u4e2d\u63a8\u65ad\u70b9": 319, "\u591a\u79cd\u8fb9\u5173\u7cfb": 319, "\u6307\u5b9a\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b": 319, "\u56fe\u7684\u5176\u4ed6\u53c2\u6570": 319, "\u5b8c\u6574\u7684\u793a\u4f8b": 319, "\u4ece": 319, "panda": 319, "\u6216": 319, "numpi": 319, "\u4e2d\u8f7d\u56fe": 319, "\u7684\u53d8\u79cd": 319, "\u5165\u95e8\u6559\u7a0b": 320}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Built-in Algorithms": [[0, "built-in-algorithms"], [6, "built-in-algorithms"]], "All Pairs Shortest Path Length": [[0, "all-pairs-shortest-path-length"]], "Attribute Assortativity": [[0, "attribute-assortativity"]], "Average Degree Connectivity": [[0, "average-degree-connectivity"]], "Betweenness Centrality": [[0, "betweenness-centrality"]], "Breadth-First Search": [[0, "breadth-first-search"]], "Closeness Centrality": [[0, "closeness-centrality"]], "Clustering": [[0, "clustering"]], "Degree Assortativity Coefficient": [[0, "degree-assortativity-coefficient"]], "Degree Centrality": [[0, "degree-centrality"]], "Depth-First Search": [[0, "depth-first-search"]], "Eigenvector Centrality": [[0, "eigenvector-centrality"]], "Hyperlink-Induced Topic Search": [[0, "hyperlink-induced-topic-search"]], "Katz Centrality": [[0, "katz-centrality"]], "K-Core": [[0, "k-core"]], "K-Shell": [[0, "k-shell"]], "Label Propagation Algorithm": [[0, "label-propagation-algorithm"]], "PageRank": [[0, "pagerank"]], "Sampling Path": [[0, "sampling-path"]], "Single-Source Shortest Paths": [[0, "single-source-shortest-paths"]], "VoteRank": [[0, "voterank"]], "Customized Algorithms": [[1, "customized-algorithms"]], "Aggregators": [[1, "aggregators"]], "Deployment for GAE": [[2, "deployment-for-gae"]], "Prerequisites": [[2, "prerequisites"], [27, "prerequisites"], [28, "prerequisites"], [29, "prerequisites"], [30, "prerequisites"], [47, "prerequisites"], [299, "prerequisites"]], "Deployment GAE only": [[2, "deployment-gae-only"]], "Deployment with Python SDK": [[2, "deployment-with-python-sdk"]], "Deployment with Helm": [[2, "deployment-with-helm"]], "Execute graph analytical algorithms": [[2, "execute-graph-analytical-algorithms"]], "Uninstall deployment": [[2, "uninstall-deployment"]], "Design of Analytical Engine": [[3, "design-of-analytical-engine"], [3, null]], "Dev and Test": [[4, "dev-and-test"], [49, "dev-and-test"], [58, "dev-and-test"]], "Dev Environment": [[4, "dev-environment"], [33, "dev-environment"], [38, "dev-environment"], [49, "dev-environment"], [58, "dev-environment"]], "Build Analytical Engine": [[4, "build-analytical-engine"]], "How to Test": [[4, "how-to-test"], [38, "how-to-test"], [58, "how-to-test"]], "FAQs": [[5, "faqs"]], "Programming Model: FLASH": [[6, "programming-model-flash"]], "Motivation": [[6, "motivation"], [9, "motivation"], [64, "motivation"]], "The FLASH Programming Model": [[6, "the-flash-programming-model"]], "Overview": [[6, "overview"], [9, "overview"], [46, null], [142, "overview"], [299, "overview"]], "FLASH API": [[6, "flash-api"]], "Strong Expressiveness": [[6, "strong-expressiveness"]], "Implementation": [[6, "implementation"]], "Architecture": [[6, "architecture"], [12, "architecture"]], "Optimizations": [[6, "optimizations"]], "Getting Started": [[7, "getting-started"], [51, "getting-started"], [59, "getting-started"], [65, "getting-started"], [296, "getting-started"]], "Installation": [[7, "installation"], [29, "installation"], [51, "installation"], [59, "installation"], [299, "installation"]], "Running GraphScope Analytical Engine on Local": [[7, "running-graphscope-analytical-engine-on-local"]], "What\u2019s the Next": [[7, "whats-the-next"], [51, "whats-the-next"], [59, "whats-the-next"]], "Guide and Examples": [[8, "guide-and-examples"], [52, "guide-and-examples"], [61, "guide-and-examples"]], "Ingress: Incrementalize Graph Algorithms": [[9, "ingress-incrementalize-graph-algorithms"]], "Design of Ingress": [[9, "design-of-ingress"]], "Message-driven Differentiation": [[9, "message-driven-differentiation"]], "Flexible Memoization": [[9, "flexible-memoization"]], "Ingress API": [[9, "ingress-api"]], "Distributed Runtime Engine": [[9, "distributed-runtime-engine"]], "Key Concepts": [[10, "key-concepts"]], "LoadStrategy": [[10, "loadstrategy"]], "OnlyOut": [[10, "onlyout"]], "OnlyIn": [[10, "onlyin"]], "BothInOut": [[10, "bothinout"]], "PartitionStrategy": [[10, "partitionstrategy"]], "Edge Cut": [[10, "edge-cut"]], "Vertex Cut": [[10, "vertex-cut"]], "Vertices on GraphScope analytical engine": [[10, "vertices-on-graphscope-analytical-engine"]], "OuterVertex": [[10, "outervertex"]], "InnerVertex": [[10, "innervertex"]], "InnerVertexWithOutgoingEdge": [[10, "innervertexwithoutgoingedge"]], "InnerVertexWithIncomingEdge": [[10, "innervertexwithincomingedge"]], "MessageManager and MessageStrategy": [[10, "messagemanager-and-messagestrategy"]], "AlongOutgoingEdgeToOuterVertex": [[10, "alongoutgoingedgetooutervertex"]], "AlongIncomingEdgeToOuterVertex": [[10, "alongincomingedgetooutervertex"]], "AlongEdgeToOuterVertex": [[10, "alongedgetooutervertex"]], "SyncOnOuterVertexAsTarget": [[10, "synconoutervertexastarget"]], "SyncOnOuterVertexAsSource": [[10, "synconoutervertexassource"]], "SyncOnOuterVertex": [[10, "synconoutervertex"]], "NetworkX Compatibility": [[11, "networkx-compatibility"]], "Convert a Graph to a nx.Graph": [[11, "convert-a-graph-to-a-nx-graph"]], "Supported Graph Operations": [[11, "supported-graph-operations"]], "Supported Algorithms": [[11, "supported-algorithms"]], "Overview and Architecture": [[12, "overview-and-architecture"]], "Storage Layer": [[12, "storage-layer"]], "Engine Layer": [[12, "engine-layer"]], "GRAPE Engine": [[12, "grape-engine"]], "Programming Model APIs": [[12, "programming-model-apis"]], "FFIs": [[12, "ffis"]], "Incremental Computation Engine": [[12, "incremental-computation-engine"]], "Application Layer": [[12, "application-layer"]], "Performance Tuning": [[13, "performance-tuning"]], "Programming Model: PIE": [[14, "programming-model-pie"]], "What is the PIE Model?": [[14, "what-is-the-pie-model"]], "Workflow of PIE": [[14, "workflow-of-pie"]], "Tutorial: Develop Your Algorithms in C++ with FLASH Model": [[15, "tutorial-develop-your-algorithms-in-c-with-flash-model"]], "Developing Algorithms with FLASH Model": [[15, "developing-algorithms-with-flash-model"]], "Defining A FLASH Application": [[15, "defining-a-flash-application"]], "Implementing the Run Function": [[15, "implementing-the-run-function"]], "Integrating with the Python Client of GraphScope": [[15, "integrating-with-the-python-client-of-graphscope"]], "Running the FLASH Algorithms": [[15, "running-the-flash-algorithms"]], "Tutorial: Develop your Algorithm in C++ with PIE Model": [[16, "tutorial-develop-your-algorithm-in-c-with-pie-model"]], "Prerequisites:": [[16, "prerequisites"]], "Step 1: Define the context class": [[16, "step-1-define-the-context-class"]], "Step 2: Define the Algorithm class": [[16, "step-2-define-the-algorithm-class"]], "Step 3: Package the Algorithm": [[16, "step-3-package-the-algorithm"]], "Step 4: Run the .gar file on GraphScope": [[16, "step-4-run-the-gar-file-on-graphscope"]], "GraphScope C++ SDK with Github Template": [[16, "graphscope-c-sdk-with-github-template"]], "Tutorial: Develop your Algorithm in Java with PIE Model": [[17, "tutorial-develop-your-algorithm-in-java-with-pie-model"]], "Run example algorithms with example jar": [[17, "run-example-algorithms-with-example-jar"]], "Implement your own algorithms in Java.": [[17, "implement-your-own-algorithms-in-java"]], "Prepare GRAPE-jdk": [[17, "prepare-grape-jdk"]], "Implement your algorithm": [[17, "implement-your-algorithm"]], "Submit to GraphScope": [[17, "submit-to-graphscope"]], "GraphScope JavaSDK with Github Template": [[17, "graphscope-javasdk-with-github-template"]], "Tutorial: Develop algorithms in Python": [[18, "tutorial-develop-algorithms-in-python"]], "Writing Your Own Algorithms in PIE": [[18, "writing-your-own-algorithms-in-pie"]], "Writing Algorithms in Pregel": [[18, "writing-algorithms-in-pregel"]], "Using math.h Functions in Algorithms": [[18, "using-math-h-functions-in-algorithms"]], "Run Your Own Algorithms": [[18, "run-your-own-algorithms"]], "Tutorial: Graph Algorithms with NetowrkX APIs": [[19, "tutorial-graph-algorithms-with-netowrkx-apis"]], "How does Networkx Perform Graph Analysis?": [[19, "how-does-networkx-perform-graph-analysis"]], "How to Perform Graph Analysis with NetworkX APIs from GraphScope": [[19, "how-to-perform-graph-analysis-with-networkx-apis-from-graphscope"]], "Graph Analysis": [[19, "graph-analysis"]], "Graph Display": [[19, "graph-display"]], "The Performance Speed-up of GraphScope over NetworkX": [[19, "the-performance-speed-up-of-graphscope-over-networkx"]], "Tutorial: Graph Operations with NetowrkX APIs": [[20, "tutorial-graph-operations-with-netowrkx-apis"]], "Creating an Empty Graph": [[20, "creating-an-empty-graph"]], "Adding Nodes": [[20, "adding-nodes"]], "Adding Edges": [[20, "adding-edges"]], "Examining Elements of a Graph": [[20, "examining-elements-of-a-graph"]], "Removing Elements from a Graph": [[20, "removing-elements-from-a-graph"]], "Using Graph Constructors": [[20, "using-graph-constructors"]], "Accessing Edges and Neighbors": [[20, "accessing-edges-and-neighbors"]], "Adding Attributes to Graphs, Nodes and Edges": [[20, "adding-attributes-to-graphs-nodes-and-edges"]], "Graph Attributes": [[20, "graph-attributes"]], "Node Attributes": [[20, "node-attributes"]], "Edge Attributes": [[20, "edge-attributes"]], "Induce deepcopy subgraph and edge_subgraph": [[20, "induce-deepcopy-subgraph-and-edge-subgraph"]], "Making Copies": [[20, "making-copies"]], "Directed Graphs": [[20, "directed-graphs"]], "Analyzing Graphs": [[20, "analyzing-graphs"]], "Create graph from GraphScope Graph Object": [[20, "create-graph-from-graphscope-graph-object"]], "Transform to GraphScope Graph Object": [[20, "transform-to-graphscope-graph-object"]], "Tutorial: Running Builtin Algorithms": [[21, "tutorial-running-builtin-algorithms"]], "Tutorial: Run Giraph Applications on GraphScope": [[22, "tutorial-run-giraph-applications-on-graphscope"]], "Try some example giraph apps": [[22, "try-some-example-giraph-apps"]], "Run your own Giraph apps.": [[22, "run-your-own-giraph-apps"]], "Develop Giraph algorithm": [[22, "develop-giraph-algorithm"]], "Submit to GraphScope.": [[22, "submit-to-graphscope"]], "Tutorial: Run GraphX Applications on GraphScope": [[23, "tutorial-run-graphx-applications-on-graphscope"]], "Deploy GraphScope along with Spark": [[23, "deploy-graphscope-along-with-spark"]], "Run example GraphX apps": [[23, "run-example-graphx-apps"]], "Submit to Spark": [[23, "submit-to-spark"]], "Run customized GraphX apps": [[23, "run-customized-graphx-apps"]], "Include dependency": [[23, "include-dependency"]], "Develop customized GraphX algorithm towards GraphScope.": [[23, "develop-customized-graphx-algorithm-towards-graphscope"]], "Run customized GraphX algorithms on Spark with GraphScope support": [[23, "run-customized-graphx-algorithms-on-spark-with-graphscope-support"]], "Vertex-Centric Model": [[24, "vertex-centric-model"]], "Pregel Model": [[24, "pregel-model"]], "GAS Model": [[24, "gas-model"]], "Simulation of Pregel Model in Analytical Engine": [[24, "simulation-of-pregel-model-in-analytical-engine"]], "Contact Us": [[25, "contact-us"]], "Slack": [[25, "slack"], [34, "slack"]], "Discussion on Github": [[25, "discussion-on-github"]], "Deploy GraphScope on Clouds": [[26, "deploy-graphscope-on-clouds"]], "Use an existing vineyard cluster with multiple GraphScope sessions": [[27, "use-an-existing-vineyard-cluster-with-multiple-graphscope-sessions"]], "Install GraphScope Client": [[27, "install-graphscope-client"], [28, "install-graphscope-client"]], "Prepare a Kubernetes cluster": [[27, "prepare-a-kubernetes-cluster"], [28, "prepare-a-kubernetes-cluster"], [38, "prepare-a-kubernetes-cluster"]], "Deploy a Vineyard Cluster": [[27, "deploy-a-vineyard-cluster"]], "Load the dataset to the Kubernetes cluster": [[27, "load-the-dataset-to-the-kubernetes-cluster"]], "Load a graph to the existing vineyard cluster": [[27, "load-a-graph-to-the-existing-vineyard-cluster"]], "Connect to the existing vineyard cluster with another GraphScope session": [[27, "connect-to-the-existing-vineyard-cluster-with-another-graphscope-session"]], "Cleaning up": [[27, "cleaning-up"]], "Deploy GraphScope on K8s cluster": [[28, "deploy-graphscope-on-k8s-cluster"]], "Deploying GraphScope": [[28, "deploying-graphscope"]], "Launch with default parameters": [[28, "launch-with-default-parameters"]], "Frequently used parameters": [[28, "frequently-used-parameters"]], "Customize image URI": [[28, "customize-image-uri"]], "Specify the number of workers": [[28, "specify-the-number-of-workers"]], "Provide a kubeconfig file other than default": [[28, "provide-a-kubeconfig-file-other-than-default"]], "Mount volumes": [[28, "mount-volumes"]], "Inspect the deployment": [[28, "inspect-the-deployment"]], "Cleaning Up": [[28, "cleaning-up"]], "Deploy GraphScope with helm": [[29, "deploy-graphscope-with-helm"]], "Connect to GraphScope": [[29, "connect-to-graphscope"]], "Uninstall the release": [[29, "uninstall-the-release"]], "Configuration": [[29, "configuration"]], "Offline Installation": [[29, "offline-installation"]], "Install GraphScope on Local": [[30, "install-graphscope-on-local"]], "Install from packages": [[30, "install-from-packages"]], "Install stable version of GraphScope": [[30, "install-stable-version-of-graphscope"]], "Install preview version of GraphScope": [[30, "install-preview-version-of-graphscope"]], "Install from source": [[30, "install-from-source"], [36, "install-from-source"]], "Setup build environment for Linux and macOS": [[30, "setup-build-environment-for-linux-and-macos"]], "Use dev image with all dependencies installed": [[30, "use-dev-image-with-all-dependencies-installed"]], "Build and install": [[30, "build-and-install"]], "Design of GAE": [[31, "design-of-gae"]], "Graph Storage": [[31, "graph-storage"]], "Execution Framework": [[31, "execution-framework"]], "Flexible programming models": [[31, "flexible-programming-models"]], "Multi-language SDKs": [[31, "multi-language-sdks"]], "High-performance runtime": [[31, "high-performance-runtime"]], "Algorithm Library": [[31, "algorithm-library"]], "Code Style Guide": [[32, "code-style-guide"]], "C++ Style": [[32, "c-style"]], "Python Style": [[32, "python-style"]], "Rust Style": [[32, "rust-style"]], "Java Style": [[32, "java-style"]], "Script Style": [[32, "script-style"]], "Style Linter and Checker": [[32, "style-linter-and-checker"]], "Development Guide": [[33, "development-guide"]], "Develop with dev containers.": [[33, "develop-with-dev-containers"]], "Install deps on local": [[33, "install-deps-on-local"], [58, "install-deps-on-local"]], "Build All Targets for GraphScope": [[33, "build-all-targets-for-graphscope"], [38, "build-all-targets-for-graphscope"]], "Build Components Individually": [[33, "build-components-individually"]], "Build and Test Engines": [[33, "build-and-test-engines"]], "Build Coordinator": [[33, "build-coordinator"]], "Build Python Client": [[33, "build-python-client"]], "How to Contribute": [[34, "how-to-contribute"]], "Code of Conduct": [[34, "code-of-conduct"]], "Community": [[34, "community"], [285, "module-graphscope.nx.generators.community"]], "GitHub Discussion": [[34, "github-discussion"]], "Reporting Bugs": [[34, "reporting-bugs"]], "Requesting Features": [[34, "requesting-features"]], "Improving Documentation": [[34, "improving-documentation"]], "Contributing Code and Documentation Changes": [[34, "contributing-code-and-documentation-changes"]], "Install pre-commit": [[34, "install-pre-commit"]], "Minor Fixes": [[34, "minor-fixes"]], "Fork and Create a Branch": [[34, "fork-and-create-a-branch"]], "Get the Test Suite Running": [[34, "get-the-test-suite-running"]], "Implement Your Fix or Feature": [[34, "implement-your-fix-or-feature"]], "Get the Code Format and Style Right": [[34, "get-the-code-format-and-style-right"]], "Submitting Your Changes": [[34, "submitting-your-changes"]], "Discussing and Keeping Your Pull Request Updated": [[34, "discussing-and-keeping-your-pull-request-updated"]], "Merging a PR (maintainers only)": [[34, "merging-a-pr-maintainers-only"]], "Shipping a Release (maintainers only)": [[34, "shipping-a-release-maintainers-only"]], "How to Review Pull Requests": [[34, "how-to-review-pull-requests"]], "Continuous integration testing": [[34, "continuous-integration-testing"]], "Debugging on local deployment": [[35, "debugging-on-local-deployment"]], "Debugging on Kubernetes deployment": [[35, "debugging-on-kubernetes-deployment"]], "Commands for Debugging": [[35, "commands-for-debugging"]], "Debugging Techniques": [[35, "debugging-techniques"]], "Install GraphScope in offline mode": [[36, "install-graphscope-in-offline-mode"]], "Install from wheels": [[36, "install-from-wheels"]], "Download dependencies and GraphScope": [[36, "download-dependencies-and-graphscope"]], "Copy all files to the destination environment and extract them to a location": [[36, "copy-all-files-to-the-destination-environment-and-extract-them-to-a-location"]], "Install basic packages and gcc-g++,\u00a0python": [[36, "install-basic-packages-and-gcc-g-python"]], "Install third-party dependencies and GraphScope Analytical Engine": [[36, "install-third-party-dependencies-and-graphscope-analytical-engine"]], "How to Submit Pull-requests": [[37, "how-to-submit-pull-requests"]], "Test GraphScope on local": [[38, "test-graphscope-on-local"]], "Run tests": [[38, "run-tests"], [38, "id1"]], "Test GraphScope on Kubernetes cluster": [[38, "test-graphscope-on-kubernetes-cluster"]], "Build images": [[38, "build-images"]], "Introduction to ArrowFragment": [[39, "introduction-to-arrowfragment"]], "0. \u672f\u8bed": [[39, "id1"]], "1. \u8f7d\u56fe": [[39, "id2"]], "1.1 \u521d\u59cb\u5316partitoner": [[39, "partitoner"]], "1.2 \u6784\u5efa\u539f\u59cbarrow table": [[39, "arrow-table"]], "1.3. Shuffle vtable": [[39, "shuffle-vtable"]], "1.4. \u6784\u5efaVertex map(BasicArrowVertexMapBuilder)": [[39, "vertex-map-basicarrowvertexmapbuilder"]], "1.5. \u6784\u5efaFragment\u51c6\u5907": [[39, "fragment"]], "1.5.1. \u5904\u7406edge table(BasicEVFragmentLoader)": [[39, "edge-table-basicevfragmentloader"]], "1.5.2 FragmentBuilder\u6570\u636e\u521d\u59cb\u5316 (BasicArrowFragmentBuilder)": [[39, "fragmentbuilder-basicarrowfragmentbuilder"]], "1.6 Fragment\u6784\u5efa": [[39, "id3"]], "2. \u8bbf\u95eeFragment": [[39, "id4"]], "2.1 \u8bbf\u95ee\u9876\u70b9": [[39, "id5"]], "2.1.1 \u8bbf\u95ee\u5185\u90e8\u70b9": [[39, "id6"]], "2.1.2 \u8303\u56f4\u5916\u90e8\u70b9": [[39, "id7"]], "2.1.3 \u8bbf\u95ee\u5168\u90e8\u70b9": [[39, "id8"]], "2.1.4 \u8bbf\u95ee\u9876\u70b9\u6570\u636e": [[39, "id9"]], "2.2 \u8bbf\u95ee\u8fb9": [[39, "id10"]], "2.2.1 \u8bbf\u95ee\u51fa\u8fb9": [[39, "id11"]], "2.2.2 \u8bbf\u95ee\u5165\u8fb9": [[39, "id12"]], "2.2.3 \u8bbf\u95ee\u8fb9\u4e0a\u7684\u6570\u636e": [[39, "id13"]], "Frequently Asked Questions": [[40, "frequently-asked-questions"]], "Getting Started for GLE": [[41, "getting-started-for-gle"]], "Graph Workloads": [[42, "graph-workloads"]], "Graph Analytics": [[42, "graph-analytics"]], "Graph Interactive Query": [[42, "graph-interactive-query"]], "Graph Learning": [[42, "graph-learning"], [150, "graph-learning"]], "GraphScope for Data Scientists": [[43, "graphscope-for-data-scientists"]], "Challenges of Handling Graph Computation": [[43, "challenges-of-handling-graph-computation"]], "Solutions of GraphScope": [[43, "solutions-of-graphscope"]], "Program as Single Machine and Run as Distributed": [[43, "program-as-single-machine-and-run-as-distributed"]], "Integration with PyData Ecosystem": [[43, "integration-with-pydata-ecosystem"]], "How to Load Graphs": [[44, "how-to-load-graphs"]], "Define Graph Schema": [[44, "define-graph-schema"]], "Load Graphs": [[44, "load-graphs"]], "Advanced Topics": [[44, "advanced-topics"]], "Tips for reduce memory consumption of graphs": [[44, "tips-for-reduce-memory-consumption-of-graphs"]], "How to Report Bugs": [[45, "how-to-report-bugs"]], "GraphScope: A One-Stop Large-Scale Graph Computing System from Alibaba": [[46, "graphscope-a-one-stop-large-scale-graph-computing-system-from-alibaba"]], "Installation & Deployment": [[46, null]], "Graph Analytical Engine": [[46, null], [72, "graph-analytical-engine"]], "Graph Interactive Engine": [[46, null], [72, "graph-interactive-engine"]], "Graph Learning Engine": [[46, null]], "Storage Engine": [[46, null]], "troubleshooting & utilities": [[46, null]], "Development": [[46, null]], "Reference": [[46, null], [298, "reference"]], "Indices and tables": [[46, "indices-and-tables"]], "Standalone Deployment for GIE": [[47, "standalone-deployment-for-gie"]], "Deploy Your First GIE Service": [[47, "deploy-your-first-gie-service"]], "Remove the GIE Service": [[47, "remove-the-gie-service"]], "Using Your Own Data": [[47, "using-your-own-data"]], "Deploy on a Cluster": [[47, "deploy-on-a-cluster"]], "Other Useful Configurations": [[47, "other-useful-configurations"]], "Design of GIE": [[48, "design-of-gie"]], "The Motivations": [[48, "the-motivations"]], "The Architecture": [[48, "the-architecture"]], "Query Processing": [[48, "query-processing"]], "Build GIE with Vineyard Store on Local": [[49, "build-gie-with-vineyard-store-on-local"]], "Test GIE with Vineyard Store on Local": [[49, "test-gie-with-vineyard-store-on-local"]], "Manually Start the GIE Services": [[49, "manually-start-the-gie-services"]], "FAQs for GIE Gremlin Usage": [[50, "faqs-for-gie-gremlin-usage"]], "What\u2019s the difference between Inner ID and Property ID ?": [[50, "whats-the-difference-between-inner-id-and-property-id"]], "How to use path expand in GIE Gremlin ?": [[50, "how-to-use-path-expand-in-gie-gremlin"]], "How to filter data in GIE Gremlin like SQL ?": [[50, "how-to-filter-data-in-gie-gremlin-like-sql"]], "How to aggregate data in GIE Gremlin like SQL?": [[50, "how-to-aggregate-data-in-gie-gremlin-like-sql"]], "group by multiple keys": [[50, "group-by-multiple-keys"]], "group by multiple values:": [[50, "group-by-multiple-values"]], "How to optimize Gremlin queries for performance in GIE?": [[50, "how-to-optimize-gremlin-queries-for-performance-in-gie"]], "Use appropriate indexing": [[50, "use-appropriate-indexing"]], "How to use subgraph in GIE Gremlin ?": [[50, "how-to-use-subgraph-in-gie-gremlin"]], "Running GraphScope Interactive Engine on Local": [[51, "running-graphscope-interactive-engine-on-local"]], "Supported Gremlin Steps": [[53, "supported-gremlin-steps"]], "Introduction": [[53, "introduction"]], "Standard Steps": [[53, "standard-steps"]], "Source": [[53, "source"]], "V()": [[53, "v"]], "E()": [[53, "e"]], "Expand": [[53, "expand"]], "outE()": [[53, "oute"]], "inE()": [[53, "ine"]], "bothE()": [[53, "bothe"]], "out()": [[53, "out"], [53, "id5"]], "in()": [[53, "in"], [53, "id6"]], "both()": [[53, "both"], [53, "id7"]], "outV()": [[53, "outv"]], "inV()": [[53, "inv"]], "otherV()": [[53, "otherv"]], "bothV()": [[53, "bothv"]], "Filter": [[53, "filter"]], "hasId()": [[53, "hasid"], [54, "hasid"]], "hasLabel()": [[53, "haslabel"]], "has()": [[53, "has"]], "hasNot()": [[53, "hasnot"]], "is()": [[53, "is"]], "where(traversal)": [[53, "where-traversal"]], "where(predicate)": [[53, "where-predicate"]], "not(traversal)": [[53, "not-traversal"]], "dedup()": [[53, "dedup"], [54, "dedup"]], "Project": [[53, "project"]], "id()": [[53, "id"]], "label()": [[53, "label"]], "constant()": [[53, "constant"], [54, "constant"]], "valueMap()": [[53, "valuemap"], [54, "valuemap"]], "values()": [[53, "values"]], "select()": [[53, "select"], [54, "select"]], "Aggregate": [[53, "aggregate"]], "count()": [[53, "count"]], "fold()": [[53, "fold"], [54, "fold"]], "sum()": [[53, "sum"]], "min()": [[53, "min"]], "max()": [[53, "max"]], "mean()": [[53, "mean"]], "group()": [[53, "group"], [54, "group"]], "groupCount()": [[53, "groupcount"], [54, "groupcount"]], "Order": [[53, "order"], [298, "order"]], "order()": [[53, "id1"]], "Statistics": [[53, "statistics"]], "limit()": [[53, "limit"]], "coin()": [[53, "coin"]], "Union": [[53, "union"]], "union()": [[53, "id2"]], "Match": [[53, "match"]], "match()": [[53, "id3"]], "Subgraph": [[53, "subgraph"]], "subgraph()": [[53, "id4"]], "Syntactic Sugars": [[53, "syntactic-sugars"]], "PathExpand": [[53, "pathexpand"]], "endV()": [[53, "endv"]], "Expression": [[53, "expression"]], "Aggregate (Group)": [[53, "aggregate-group"]], "Limitations": [[53, "limitations"]], "To be Supported": [[53, "to-be-supported"]], "identity()": [[53, "identity"]], "elementMap()": [[53, "elementmap"]], "path()": [[53, "path"]], "unfold()": [[53, "unfold"]], "local()": [[53, "local"]], "Will Not be Supported": [[53, "will-not-be-supported"]], "repeat()": [[53, "repeat"]], "properties()": [[53, "properties"]], "sideEffect": [[53, "sideeffect"]], "branch": [[53, "branch"]], "Tutorial: LDBC Gremlin": [[54, "tutorial-ldbc-gremlin"]], "Load the LDBC Graph": [[54, "load-the-ldbc-graph"]], "Basic Vertex/Edge Query": [[54, "basic-vertex-edge-query"]], "Retrieve Vertices and Edges": [[54, "retrieve-vertices-and-edges"]], "Apply Some Filters": [[54, "apply-some-filters"]], "Extract Property Values": [[54, "extract-property-values"]], "Real Applications": [[54, "real-applications"], [54, "id1"]], "Basic Traversal Query": [[54, "basic-traversal-query"]], "Expansion": [[54, "expansion"]], "out(), in() and both()": [[54, "out-in-and-both"]], "outE(), inE() and bothE()": [[54, "oute-ine-and-bothe"]], "outV(), inV(), bothV() and otherV()": [[54, "outv-inv-bothv-and-otherv"]], "Multiple Expansion Steps": [[54, "multiple-expansion-steps"]], "Expansion from many starting points": [[54, "expansion-from-many-starting-points"]], "Filter & Expansion": [[54, "filter-expansion"]], "Apply filters after expansion": [[54, "apply-filters-after-expansion"]], "Expansion as filters": [[54, "expansion-as-filters"]], "Path Expansion (Syntactic Sugar)": [[54, "path-expansion-syntactic-sugar"]], "Pattern Match": [[54, "pattern-match"]], "Relational Operations": [[54, "relational-operations"]], "Filter Steps": [[54, "filter-steps"]], "where()": [[54, "where"]], "Project Steps": [[54, "project-steps"]], "id() and label()": [[54, "id-and-label"]], "Aggregate Steps": [[54, "aggregate-steps"]], "sum(), min(), max() and  mean()": [[54, "sum-min-max-and-mean"]], "Order Step": [[54, "order-step"]], "Limit Step": [[54, "limit-step"]], "Expression(Syntax Sugar)": [[54, "expression-syntax-sugar"]], "Complex Queries": [[54, "complex-queries"]], "LDBC BI2": [[54, "ldbc-bi2"]], "LDBC BI3": [[54, "ldbc-bi3"]], "LDBC BI4(Left Part)": [[54, "ldbc-bi4-left-part"]], "LDBC BI11": [[54, "ldbc-bi11"]], "LDBC BI14": [[54, "ldbc-bi14"]], "Tutorials for Java Users": [[55, "tutorials-for-java-users"]], "Key Features": [[56, "key-features"]], "Ease-of-use: Python Interface": [[56, "ease-of-use-python-interface"]], "Graph Traversal Support, in Gremlin and Cypher": [[56, "graph-traversal-support-in-gremlin-and-cypher"]], "High Performant Built-in Algorithms": [[56, "high-performant-built-in-algorithms"]], "Extensible Algorithm Library for Graph Analytics": [[56, "extensible-algorithm-library-for-graph-analytics"]], "GNN Training & Inference": [[56, "gnn-training-inference"]], "Cloud Native Design": [[56, "cloud-native-design"]], "Across-Engine Workflow Orchestration": [[56, "across-engine-workflow-orchestration"]], "Design of GLE": [[57, "design-of-gle"]], "Model Paradigms": [[57, "model-paradigms"]], "EgoGraph-based node-centric aggregation": [[57, "egograph-based-node-centric-aggregation"]], "SubGraph-based graph message passing": [[57, "subgraph-based-graph-message-passing"]], "Pipeline for Learning": [[57, "pipeline-for-learning"]], "Dev on docker container": [[58, "dev-on-docker-container"]], "Build Learning Engine": [[58, "build-learning-engine"]], "Running GraphScope Learning Engine on Local": [[59, "running-graphscope-learning-engine-on-local"]], "Graph Sampling": [[60, "graph-sampling"], [138, "graph-sampling"]], "Graph Traversal": [[60, "graph-traversal"], [68, "graph-traversal"], [139, "graph-traversal"]], "Neighborhood Sampling": [[60, "neighborhood-sampling"]], "Subgraph Sampling": [[60, "subgraph-sampling"], [69, "subgraph-sampling"]], "Negative Sampling": [[60, "negative-sampling"], [143, "negative-sampling"]], "GSL": [[60, "gsl"]], "Tutorial: Training a Node Classification Model on K8s Cluster": [[62, "tutorial-training-a-node-classification-model-on-k8s-cluster"]], "Create a session on kubernetes and load graph": [[62, "create-a-session-on-kubernetes-and-load-graph"]], "Graph neural networks (GNNs)": [[62, "graph-neural-networks-gnns"]], "Tutorial: Training a Node Classification Model on Your Local Machine": [[63, "tutorial-training-a-node-classification-model-on-your-local-machine"]], "Load Graph": [[63, "load-graph"]], "Define the Training Process for the EgoGraphSAGE Model": [[63, "define-the-training-process-for-the-egographsage-model"]], "Launch the Learning Engine": [[63, "launch-the-learning-engine"]], "Train the Model": [[63, "train-the-model"]], "Design of GraphScope": [[64, "design-of-graphscope"]], "Unified Graph Computing Platform": [[64, "unified-graph-computing-platform"]], "Application layer": [[64, "application-layer"]], "Execution engine layer": [[64, "execution-engine-layer"]], "Storage layer": [[64, "storage-layer"]], "Disaggregated Design for Diverse Graph Applications": [[64, "disaggregated-design-for-diverse-graph-applications"]], "GraphScope for BI analysis": [[64, "graphscope-for-bi-analysis"]], "GraphScope for high QPS queries": [[64, "graphscope-for-high-qps-queries"]], "GraphScope for graph analytics": [[64, "graphscope-for-graph-analytics"]], "GraphScope for learning": [[64, "graphscope-for-learning"]], "One-stop Graph Processing": [[65, "one-stop-graph-processing"]], "Graph Interactive Query Quick Start": [[65, "graph-interactive-query-quick-start"]], "Graph Learning Quick Start": [[65, "graph-learning-quick-start"]], "Glossary": [[66, "glossary"]], "FLASH": [[66, "flash"]], "GRAPE": [[66, "grape"]], "GAE": [[66, "gae"]], "GART": [[66, "gart"]], "GRIN": [[66, "grin"]], "GraphAr": [[66, "graphar"]], "Groot": [[66, "groot"]], "GUM": [[66, "gum"]], "MaxGraph (deprecated)": [[66, "maxgraph-deprecated"]], "Vineyard, or v6d": [[66, "vineyard-or-v6d"]], "GAIA": [[66, "gaia"]], "Ingress": [[66, "ingress"]], "Pegasus": [[66, "pegasus"]], "PIE-model": [[66, "pie-model"]], "Graph Analytics Workloads": [[67, "graph-analytics-workloads"]], "What is Graph Analytics": [[67, "what-is-graph-analytics"]], "Challenges of Graph Analytics on Large Graphs": [[67, "challenges-of-graph-analytics-on-large-graphs"]], "What can GraphScope Do": [[67, "what-can-graphscope-do"], [69, "what-can-graphscope-do"]], "Graph Interactive Workloads": [[68, "graph-interactive-workloads"]], "Tinkerpop and Gremlin": [[68, "tinkerpop-and-gremlin"]], "Pattern Matching": [[68, "pattern-matching"]], "Compatibility with TinkerPop": [[68, "compatibility-with-tinkerpop"]], "Property Graph Constraints": [[68, "property-graph-constraints"]], "Graph Learning Workloads": [[69, "graph-learning-workloads"]], "What is Graph Neural Network": [[69, "what-is-graph-neural-network"]], "Typical GNN Models": [[69, "typical-gnn-models"]], "Paradigm of Model Training": [[69, "paradigm-of-model-training"]], "Steps of Model Training": [[69, "steps-of-model-training"]], "Challenges of Applying GNNs on Large Graphs": [[69, "challenges-of-applying-gnns-on-large-graphs"]], "Introducing GraphScope": [[70, "introducing-graphscope"]], "What is GraphScope": [[70, "what-is-graphscope"]], "Why use GraphScope": [[70, "why-use-graphscope"]], "What are the Use Cases": [[70, "what-are-the-use-cases"]], "What are the Limitations": [[70, "what-are-the-limitations"]], "What are the Next": [[70, "what-are-the-next"]], "Positioning of GraphScope": [[71, "positioning-of-graphscope"]], "Compare with Graph Processing Systems": [[71, "compare-with-graph-processing-systems"]], "Compare with Graph Databases": [[71, "compare-with-graph-databases"]], "Compare with Graph Learning Systems": [[71, "compare-with-graph-learning-systems"]], "Handling Various Types of Graph Workloads": [[71, "handling-various-types-of-graph-workloads"]], "Performance and Benchmark": [[72, "performance-and-benchmark"]], "Results": [[72, "results"]], "Performance on GPUs": [[72, "performance-on-gpus"]], "Reproducing the results": [[72, "reproducing-the-results"]], "Tutorials for Python Users": [[73, "tutorials-for-python-users"]], "Analytical Engine API Reference": [[74, "analytical-engine-api-reference"]], "Analytical Engine": [[74, "analytical-engine"]], "Fragments in GraphScope": [[74, "fragments-in-graphscope"]], "Analytical Apps": [[74, "analytical-apps"]], "Analytical Workers": [[74, "analytical-workers"]], "App\u2019s Context": [[74, "app-s-context"]], "Analytical App": [[75, "analytical-app"]], "AppAssets": [[75, "appassets"]], "JavaApp": [[75, "javaapp"]], "App object": [[75, "app-object"]], "Functions": [[75, "functions"], [77, "functions"], [152, "functions"]], "BuiltIn apps": [[75, "builtin-apps"]], "Context": [[76, "context"]], "Context object": [[76, "context-object"]], "Cython SDK API": [[77, "cython-sdk-api"]], "Pregel": [[77, "pregel"]], "PIE": [[77, "pie"]], "GraphScope types": [[77, "graphscope-types"]], "About Grape JDK": [[78, "about-grape-jdk"]], "Project Structure": [[78, "project-structure"]], "Building from source": [[78, "building-from-source"]], "Java Reference (javadoc)": [[79, "java-reference-javadoc"]], "graphscope.Vertex": [[80, "graphscope-vertex"]], "graphscope.declare": [[81, "graphscope-declare"]], "graphscope.framework.app.load_app": [[82, "graphscope-framework-app-load-app"]], "graphscope.framework.dag_utils.add_column": [[83, "graphscope-framework-dag-utils-add-column"]], "graphscope.framework.dag_utils.add_labels_to_graph": [[84, "graphscope-framework-dag-utils-add-labels-to-graph"]], "graphscope.framework.dag_utils.arrow_to_dynamic": [[85, "graphscope-framework-dag-utils-arrow-to-dynamic"]], "graphscope.framework.dag_utils.bind_app": [[86, "graphscope-framework-dag-utils-bind-app"]], "graphscope.framework.dag_utils.clear_edges": [[87, "graphscope-framework-dag-utils-clear-edges"]], "graphscope.framework.dag_utils.clear_graph": [[88, "graphscope-framework-dag-utils-clear-graph"]], "graphscope.framework.dag_utils.context_to_dataframe": [[89, "graphscope-framework-dag-utils-context-to-dataframe"]], "graphscope.framework.dag_utils.context_to_numpy": [[90, "graphscope-framework-dag-utils-context-to-numpy"]], "graphscope.framework.dag_utils.copy_graph": [[91, "graphscope-framework-dag-utils-copy-graph"]], "graphscope.framework.dag_utils.create_app": [[92, "graphscope-framework-dag-utils-create-app"]], "graphscope.framework.dag_utils.create_graph": [[93, "graphscope-framework-dag-utils-create-graph"]], "graphscope.framework.dag_utils.create_graph_view": [[94, "graphscope-framework-dag-utils-create-graph-view"]], "graphscope.framework.dag_utils.create_loader": [[95, "graphscope-framework-dag-utils-create-loader"]], "graphscope.framework.dag_utils.create_subgraph": [[96, "graphscope-framework-dag-utils-create-subgraph"]], "graphscope.framework.dag_utils.create_unload_op": [[97, "graphscope-framework-dag-utils-create-unload-op"]], "graphscope.framework.dag_utils.dynamic_to_arrow": [[98, "graphscope-framework-dag-utils-dynamic-to-arrow"]], "graphscope.framework.dag_utils.fetch_gremlin_result": [[99, "graphscope-framework-dag-utils-fetch-gremlin-result"]], "graphscope.framework.dag_utils.get_context_data": [[100, "graphscope-framework-dag-utils-get-context-data"]], "graphscope.framework.dag_utils.graph_to_dataframe": [[101, "graphscope-framework-dag-utils-graph-to-dataframe"]], "graphscope.framework.dag_utils.graph_to_numpy": [[102, "graphscope-framework-dag-utils-graph-to-numpy"]], "graphscope.framework.dag_utils.gremlin_query": [[103, "graphscope-framework-dag-utils-gremlin-query"]], "graphscope.framework.dag_utils.gremlin_to_subgraph": [[104, "graphscope-framework-dag-utils-gremlin-to-subgraph"]], "graphscope.framework.dag_utils.modify_edges": [[105, "graphscope-framework-dag-utils-modify-edges"]], "graphscope.framework.dag_utils.modify_vertices": [[106, "graphscope-framework-dag-utils-modify-vertices"]], "graphscope.framework.dag_utils.output": [[107, "graphscope-framework-dag-utils-output"]], "graphscope.framework.dag_utils.project_arrow_property_graph": [[108, "graphscope-framework-dag-utils-project-arrow-property-graph"]], "graphscope.framework.dag_utils.project_to_simple": [[109, "graphscope-framework-dag-utils-project-to-simple"]], "graphscope.framework.dag_utils.report_graph": [[110, "graphscope-framework-dag-utils-report-graph"]], "graphscope.framework.dag_utils.run_app": [[111, "graphscope-framework-dag-utils-run-app"]], "graphscope.framework.dag_utils.to_data_sink": [[112, "graphscope-framework-dag-utils-to-data-sink"]], "graphscope.framework.dag_utils.to_directed": [[113, "graphscope-framework-dag-utils-to-directed"]], "graphscope.framework.dag_utils.to_undirected": [[114, "graphscope-framework-dag-utils-to-undirected"]], "graphscope.framework.dag_utils.to_vineyard_dataframe": [[115, "graphscope-framework-dag-utils-to-vineyard-dataframe"]], "graphscope.framework.dag_utils.to_vineyard_tensor": [[116, "graphscope-framework-dag-utils-to-vineyard-tensor"]], "graphscope.framework.dag_utils.unload_app": [[117, "graphscope-framework-dag-utils-unload-app"]], "graphscope.framework.dag_utils.unload_context": [[118, "graphscope-framework-dag-utils-unload-context"]], "graphscope.framework.dag_utils.unload_graph": [[119, "graphscope-framework-dag-utils-unload-graph"]], "graphscope.framework.operation.Operation.__init__": [[120, "graphscope-framework-operation-operation-init"]], "graphscope.framework.operation.Operation.as_op_def": [[121, "graphscope-framework-operation-operation-as-op-def"]], "graphscope.framework.operation.Operation.eval": [[122, "graphscope-framework-operation-operation-eval"]], "graphscope.framework.operation.Operation.evaluated": [[123, "graphscope-framework-operation-operation-evaluated"]], "graphscope.framework.operation.Operation.key": [[124, "graphscope-framework-operation-operation-key"]], "graphscope.framework.operation.Operation.signature": [[125, "graphscope-framework-operation-operation-signature"]], "graphscope.g": [[126, "graphscope-g"]], "graphscope.get_default_session": [[127, "graphscope-get-default-session"]], "graphscope.get_option": [[128, "graphscope-get-option"]], "graphscope.graphlearn": [[129, "graphscope-graphlearn"]], "graphscope.gremlin": [[130, "graphscope-gremlin"]], "graphscope.has_default_session": [[131, "graphscope-has-default-session"]], "graphscope.session": [[132, "graphscope-session"]], "graphscope.set_option": [[133, "graphscope-set-option"]], "Developing Your Own Model": [[134, "developing-your-own-model"]], "How to Build a Graph Learning Algorithm": [[134, "how-to-build-a-graph-learning-algorithm"]], "Sampling": [[134, "sampling"]], "Encoder": [[134, "encoder"], [142, "encoder"]], "Loss Function and Training Process": [[134, "loss-function-and-training-process"]], "Data Source": [[135, "data-source"]], "1 Data format": [[135, "data-format"]], "1.1 Basic format": [[135, "basic-format"]], "1.2 Attribute format\uff08ATTRIBUTED\uff09": [[135, "attribute-format-attributed"]], "1.3 Weight format\uff08WEIGHTED\uff09": [[135, "weight-format-weighted"]], "1.4 Label format\uff08LABELED\uff09": [[135, "label-format-labeled"]], "1.5 Putting together": [[135, "putting-together"]], "2 Data source type": [[135, "data-source-type"]], "2.2 Alibaba Cloud MaxCompute data table": [[135, "alibaba-cloud-maxcompute-data-table"]], "3 User API": [[135, "user-api"]], "Graph Object": [[136, "graph-object"]], "2 Describe the Topology": [[136, "describe-the-topology"]], "3.1 Stand-alone Mode": [[136, "stand-alone-mode"]], "3.2 Distributed Mode \u2013 Client/Server Mode": [[136, "distributed-mode-client-server-mode"]], "Graph Query": [[137, "graph-query"]], "1 Introduction": [[138, "introduction"]], "Graph Sampling Language\uff08GSL)": [[140, "graph-sampling-language-gsl"]], "Install from pip": [[141, "install-from-pip"]], "Get wheel package": [[141, "get-wheel-package"]], "Install using pip": [[141, "install-using-pip"]], "Install TensorFlow": [[141, "install-tensorflow"]], "Build from source": [[141, "build-from-source"]], "Install git": [[141, "install-git"]], "Install dependent libraries": [[141, "install-dependent-libraries"]], "Compile": [[141, "compile"], [144, "compile"]], "Install": [[141, "install"]], "Run test": [[141, "run-test"]], "Docker image": [[141, "docker-image"]], "Graph Learning Model": [[142, "graph-learning-model"]], "Data model": [[142, "data-model"]], "Defining Your Own Operator": [[144, "defining-your-own-operator"]], "Programming Interface": [[144, "programming-interface"]], "Distributed Runtime Design": [[144, "distributed-runtime-design"]], "Implement a New Operator": [[144, "implement-a-new-operator"]], "Clone source code": [[144, "clone-source-code"]], "Implement your operator class": [[144, "implement-your-operator-class"]], "Register Operator": [[144, "register-operator"]], "How to Use an Operator": [[144, "how-to-use-an-operator"]], "Integrating Other Data Sources": [[145, "integrating-other-data-sources"]], "File System Interface": [[145, "file-system-interface"]], "ByteStreamAccessFile": [[145, "bytestreamaccessfile"]], "StructuredAccessFile": [[145, "structuredaccessfile"]], "WritableFile": [[145, "writablefile"]], "Register with Scheme": [[145, "register-with-scheme"]], "Quick Start": [[146, "quick-start"]], "1 Trying out the built-in models": [[146, "trying-out-the-built-in-models"]], "2 How to use the GL APIs": [[146, "how-to-use-the-gl-apis"]], "3 Developing a GNN model": [[146, "developing-a-gnn-model"]], "3.1 Data Preparation": [[146, "data-preparation"]], "3.2 Graph Construction": [[146, "graph-construction"]], "3.3 Graph Sampling": [[146, "graph-sampling"]], "3.4 GNN Model": [[146, "gnn-model"]], "System configuration": [[147, "system-configuration"]], "Graph": [[148, "graph"], [152, "graph"], [286, "graph"]], "Graph object": [[148, "graph-object"]], "Loader object": [[148, "loader-object"]], "Graph Functions": [[148, "graph-functions"]], "Interactive Query": [[149, "interactive-query"]], "Builtin algorithms": [[151, "builtin-algorithms"]], "Nodes": [[152, "nodes"]], "Edges": [[152, "edges"]], "Self loops": [[152, "self-loops"]], "Attributes": [[152, "attributes"]], "Freezing graph structure": [[152, "freezing-graph-structure"]], "graphscope.nx.classes.function.add_cycle": [[153, "graphscope-nx-classes-function-add-cycle"]], "graphscope.nx.classes.function.add_path": [[154, "graphscope-nx-classes-function-add-path"]], "graphscope.nx.classes.function.add_star": [[155, "graphscope-nx-classes-function-add-star"]], "graphscope.nx.classes.function.all_neighbors": [[156, "graphscope-nx-classes-function-all-neighbors"]], "graphscope.nx.classes.function.common_neighbors": [[157, "graphscope-nx-classes-function-common-neighbors"]], "graphscope.nx.classes.function.create_empty_copy": [[158, "graphscope-nx-classes-function-create-empty-copy"]], "graphscope.nx.classes.function.degree": [[159, "graphscope-nx-classes-function-degree"]], "graphscope.nx.classes.function.degree_histogram": [[160, "graphscope-nx-classes-function-degree-histogram"]], "graphscope.nx.classes.function.density": [[161, "graphscope-nx-classes-function-density"]], "graphscope.nx.classes.function.edge_subgraph": [[162, "graphscope-nx-classes-function-edge-subgraph"]], "graphscope.nx.classes.function.edges": [[163, "graphscope-nx-classes-function-edges"]], "graphscope.nx.classes.function.freeze": [[164, "graphscope-nx-classes-function-freeze"]], "graphscope.nx.classes.function.induced_subgraph": [[165, "graphscope-nx-classes-function-induced-subgraph"]], "graphscope.nx.classes.function.info": [[166, "graphscope-nx-classes-function-info"]], "graphscope.nx.classes.function.is_directed": [[167, "graphscope-nx-classes-function-is-directed"]], "graphscope.nx.classes.function.is_empty": [[168, "graphscope-nx-classes-function-is-empty"]], "graphscope.nx.classes.function.is_frozen": [[169, "graphscope-nx-classes-function-is-frozen"]], "graphscope.nx.classes.function.is_negatively_weighted": [[170, "graphscope-nx-classes-function-is-negatively-weighted"]], "graphscope.nx.classes.function.is_weighted": [[171, "graphscope-nx-classes-function-is-weighted"]], "graphscope.nx.classes.function.neighbors": [[172, "graphscope-nx-classes-function-neighbors"]], "graphscope.nx.classes.function.nodes": [[173, "graphscope-nx-classes-function-nodes"]], "graphscope.nx.classes.function.nodes_with_selfloops": [[174, "graphscope-nx-classes-function-nodes-with-selfloops"]], "graphscope.nx.classes.function.non_edges": [[175, "graphscope-nx-classes-function-non-edges"]], "graphscope.nx.classes.function.non_neighbors": [[176, "graphscope-nx-classes-function-non-neighbors"]], "graphscope.nx.classes.function.number_of_edges": [[177, "graphscope-nx-classes-function-number-of-edges"]], "graphscope.nx.classes.function.number_of_nodes": [[178, "graphscope-nx-classes-function-number-of-nodes"]], "graphscope.nx.classes.function.number_of_selfloops": [[179, "graphscope-nx-classes-function-number-of-selfloops"]], "graphscope.nx.classes.function.selfloop_edges": [[180, "graphscope-nx-classes-function-selfloop-edges"]], "graphscope.nx.classes.function.subgraph": [[181, "graphscope-nx-classes-function-subgraph"]], "graphscope.nx.classes.function.to_directed": [[182, "graphscope-nx-classes-function-to-directed"]], "graphscope.nx.classes.function.to_undirected": [[183, "graphscope-nx-classes-function-to-undirected"]], "graphscope.nx.generators.atlas.graph_atlas": [[184, "graphscope-nx-generators-atlas-graph-atlas"]], "graphscope.nx.generators.atlas.graph_atlas_g": [[185, "graphscope-nx-generators-atlas-graph-atlas-g"]], "graphscope.nx.generators.classic.balanced_tree": [[186, "graphscope-nx-generators-classic-balanced-tree"]], "graphscope.nx.generators.classic.barbell_graph": [[187, "graphscope-nx-generators-classic-barbell-graph"]], "graphscope.nx.generators.classic.binomial_tree": [[188, "graphscope-nx-generators-classic-binomial-tree"]], "graphscope.nx.generators.classic.circulant_graph": [[189, "graphscope-nx-generators-classic-circulant-graph"]], "graphscope.nx.generators.classic.circular_ladder_graph": [[190, "graphscope-nx-generators-classic-circular-ladder-graph"]], "graphscope.nx.generators.classic.complete_graph": [[191, "graphscope-nx-generators-classic-complete-graph"]], "graphscope.nx.generators.classic.complete_multipartite_graph": [[192, "graphscope-nx-generators-classic-complete-multipartite-graph"]], "graphscope.nx.generators.classic.cycle_graph": [[193, "graphscope-nx-generators-classic-cycle-graph"]], "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph": [[194, "graphscope-nx-generators-classic-dorogovtsev-goltsev-mendes-graph"]], "graphscope.nx.generators.classic.empty_graph": [[195, "graphscope-nx-generators-classic-empty-graph"]], "graphscope.nx.generators.classic.full_rary_tree": [[196, "graphscope-nx-generators-classic-full-rary-tree"]], "graphscope.nx.generators.classic.ladder_graph": [[197, "graphscope-nx-generators-classic-ladder-graph"]], "graphscope.nx.generators.classic.lollipop_graph": [[198, "graphscope-nx-generators-classic-lollipop-graph"]], "graphscope.nx.generators.classic.null_graph": [[199, "graphscope-nx-generators-classic-null-graph"]], "graphscope.nx.generators.classic.path_graph": [[200, "graphscope-nx-generators-classic-path-graph"]], "graphscope.nx.generators.classic.star_graph": [[201, "graphscope-nx-generators-classic-star-graph"]], "graphscope.nx.generators.classic.trivial_graph": [[202, "graphscope-nx-generators-classic-trivial-graph"]], "graphscope.nx.generators.classic.turan_graph": [[203, "graphscope-nx-generators-classic-turan-graph"]], "graphscope.nx.generators.classic.wheel_graph": [[204, "graphscope-nx-generators-classic-wheel-graph"]], "graphscope.nx.generators.community.LFR_benchmark_graph": [[205, "graphscope-nx-generators-community-lfr-benchmark-graph"]], "graphscope.nx.generators.community.caveman_graph": [[206, "graphscope-nx-generators-community-caveman-graph"]], "graphscope.nx.generators.community.connected_caveman_graph": [[207, "graphscope-nx-generators-community-connected-caveman-graph"]], "graphscope.nx.generators.community.gaussian_random_partition_graph": [[208, "graphscope-nx-generators-community-gaussian-random-partition-graph"]], "graphscope.nx.generators.community.planted_partition_graph": [[209, "graphscope-nx-generators-community-planted-partition-graph"]], "graphscope.nx.generators.community.random_partition_graph": [[210, "graphscope-nx-generators-community-random-partition-graph"]], "graphscope.nx.generators.community.relaxed_caveman_graph": [[211, "graphscope-nx-generators-community-relaxed-caveman-graph"]], "graphscope.nx.generators.community.ring_of_cliques": [[212, "graphscope-nx-generators-community-ring-of-cliques"]], "graphscope.nx.generators.community.stochastic_block_model": [[213, "graphscope-nx-generators-community-stochastic-block-model"]], "graphscope.nx.generators.community.windmill_graph": [[214, "graphscope-nx-generators-community-windmill-graph"]], "graphscope.nx.generators.degree_seq.configuration_model": [[215, "graphscope-nx-generators-degree-seq-configuration-model"]], "graphscope.nx.generators.degree_seq.degree_sequence_tree": [[216, "graphscope-nx-generators-degree-seq-degree-sequence-tree"]], "graphscope.nx.generators.degree_seq.directed_configuration_model": [[217, "graphscope-nx-generators-degree-seq-directed-configuration-model"]], "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph": [[218, "graphscope-nx-generators-degree-seq-directed-havel-hakimi-graph"]], "graphscope.nx.generators.degree_seq.expected_degree_graph": [[219, "graphscope-nx-generators-degree-seq-expected-degree-graph"]], "graphscope.nx.generators.degree_seq.havel_hakimi_graph": [[220, "graphscope-nx-generators-degree-seq-havel-hakimi-graph"]], "graphscope.nx.generators.degree_seq.random_degree_sequence_graph": [[221, "graphscope-nx-generators-degree-seq-random-degree-sequence-graph"]], "graphscope.nx.generators.directed.gn_graph": [[222, "graphscope-nx-generators-directed-gn-graph"]], "graphscope.nx.generators.directed.gnc_graph": [[223, "graphscope-nx-generators-directed-gnc-graph"]], "graphscope.nx.generators.directed.gnr_graph": [[224, "graphscope-nx-generators-directed-gnr-graph"]], "graphscope.nx.generators.directed.random_k_out_graph": [[225, "graphscope-nx-generators-directed-random-k-out-graph"]], "graphscope.nx.generators.directed.scale_free_graph": [[226, "graphscope-nx-generators-directed-scale-free-graph"]], "graphscope.nx.generators.duplication.duplication_divergence_graph": [[227, "graphscope-nx-generators-duplication-duplication-divergence-graph"]], "graphscope.nx.generators.duplication.partial_duplication_graph": [[228, "graphscope-nx-generators-duplication-partial-duplication-graph"]], "graphscope.nx.generators.ego.ego_graph": [[229, "graphscope-nx-generators-ego-ego-graph"]], "graphscope.nx.generators.expanders.chordal_cycle_graph": [[230, "graphscope-nx-generators-expanders-chordal-cycle-graph"]], "graphscope.nx.generators.expanders.margulis_gabber_galil_graph": [[231, "graphscope-nx-generators-expanders-margulis-gabber-galil-graph"]], "graphscope.nx.generators.expanders.paley_graph": [[232, "graphscope-nx-generators-expanders-paley-graph"]], "graphscope.nx.generators.geometric.geographical_threshold_graph": [[233, "graphscope-nx-generators-geometric-geographical-threshold-graph"]], "graphscope.nx.generators.geometric.random_geometric_graph": [[234, "graphscope-nx-generators-geometric-random-geometric-graph"]], "graphscope.nx.generators.geometric.soft_random_geometric_graph": [[235, "graphscope-nx-generators-geometric-soft-random-geometric-graph"]], "graphscope.nx.generators.geometric.thresholded_random_geometric_graph": [[236, "graphscope-nx-generators-geometric-thresholded-random-geometric-graph"]], "graphscope.nx.generators.geometric.waxman_graph": [[237, "graphscope-nx-generators-geometric-waxman-graph"]], "graphscope.nx.generators.harary_graph.hkn_harary_graph": [[238, "graphscope-nx-generators-harary-graph-hkn-harary-graph"]], "graphscope.nx.generators.harary_graph.hnm_harary_graph": [[239, "graphscope-nx-generators-harary-graph-hnm-harary-graph"]], "graphscope.nx.generators.intersection.general_random_intersection_graph": [[240, "graphscope-nx-generators-intersection-general-random-intersection-graph"]], "graphscope.nx.generators.intersection.k_random_intersection_graph": [[241, "graphscope-nx-generators-intersection-k-random-intersection-graph"]], "graphscope.nx.generators.intersection.uniform_random_intersection_graph": [[242, "graphscope-nx-generators-intersection-uniform-random-intersection-graph"]], "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph": [[243, "graphscope-nx-generators-joint-degree-seq-directed-joint-degree-graph"]], "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree": [[244, "graphscope-nx-generators-joint-degree-seq-is-valid-directed-joint-degree"]], "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree": [[245, "graphscope-nx-generators-joint-degree-seq-is-valid-joint-degree"]], "graphscope.nx.generators.joint_degree_seq.joint_degree_graph": [[246, "graphscope-nx-generators-joint-degree-seq-joint-degree-graph"]], "graphscope.nx.generators.mycielski.mycielski_graph": [[247, "graphscope-nx-generators-mycielski-mycielski-graph"]], "graphscope.nx.generators.mycielski.mycielskian": [[248, "graphscope-nx-generators-mycielski-mycielskian"]], "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees": [[249, "graphscope-nx-generators-nonisomorphic-trees-nonisomorphic-trees"]], "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees": [[250, "graphscope-nx-generators-nonisomorphic-trees-number-of-nonisomorphic-trees"]], "graphscope.nx.generators.small.LCF_graph": [[251, "graphscope-nx-generators-small-lcf-graph"]], "graphscope.nx.generators.small.bull_graph": [[252, "graphscope-nx-generators-small-bull-graph"]], "graphscope.nx.generators.small.chvatal_graph": [[253, "graphscope-nx-generators-small-chvatal-graph"]], "graphscope.nx.generators.small.cubical_graph": [[254, "graphscope-nx-generators-small-cubical-graph"]], "graphscope.nx.generators.small.desargues_graph": [[255, "graphscope-nx-generators-small-desargues-graph"]], "graphscope.nx.generators.small.diamond_graph": [[256, "graphscope-nx-generators-small-diamond-graph"]], "graphscope.nx.generators.small.dodecahedral_graph": [[257, "graphscope-nx-generators-small-dodecahedral-graph"]], "graphscope.nx.generators.small.frucht_graph": [[258, "graphscope-nx-generators-small-frucht-graph"]], "graphscope.nx.generators.small.heawood_graph": [[259, "graphscope-nx-generators-small-heawood-graph"]], "graphscope.nx.generators.small.house_graph": [[260, "graphscope-nx-generators-small-house-graph"]], "graphscope.nx.generators.small.house_x_graph": [[261, "graphscope-nx-generators-small-house-x-graph"]], "graphscope.nx.generators.small.icosahedral_graph": [[262, "graphscope-nx-generators-small-icosahedral-graph"]], "graphscope.nx.generators.small.krackhardt_kite_graph": [[263, "graphscope-nx-generators-small-krackhardt-kite-graph"]], "graphscope.nx.generators.small.make_small_graph": [[264, "graphscope-nx-generators-small-make-small-graph"]], "graphscope.nx.generators.small.moebius_kantor_graph": [[265, "graphscope-nx-generators-small-moebius-kantor-graph"]], "graphscope.nx.generators.small.octahedral_graph": [[266, "graphscope-nx-generators-small-octahedral-graph"]], "graphscope.nx.generators.small.pappus_graph": [[267, "graphscope-nx-generators-small-pappus-graph"]], "graphscope.nx.generators.small.petersen_graph": [[268, "graphscope-nx-generators-small-petersen-graph"]], "graphscope.nx.generators.small.sedgewick_maze_graph": [[269, "graphscope-nx-generators-small-sedgewick-maze-graph"]], "graphscope.nx.generators.small.tetrahedral_graph": [[270, "graphscope-nx-generators-small-tetrahedral-graph"]], "graphscope.nx.generators.small.truncated_cube_graph": [[271, "graphscope-nx-generators-small-truncated-cube-graph"]], "graphscope.nx.generators.small.truncated_tetrahedron_graph": [[272, "graphscope-nx-generators-small-truncated-tetrahedron-graph"]], "graphscope.nx.generators.small.tutte_graph": [[273, "graphscope-nx-generators-small-tutte-graph"]], "graphscope.nx.generators.social.davis_southern_women_graph": [[274, "graphscope-nx-generators-social-davis-southern-women-graph"]], "graphscope.nx.generators.social.florentine_families_graph": [[275, "graphscope-nx-generators-social-florentine-families-graph"]], "graphscope.nx.generators.social.karate_club_graph": [[276, "graphscope-nx-generators-social-karate-club-graph"]], "graphscope.nx.generators.social.les_miserables_graph": [[277, "graphscope-nx-generators-social-les-miserables-graph"]], "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge": [[278, "graphscope-nx-generators-spectral-graph-forge-spectral-graph-forge"]], "graphscope.nx.generators.sudoku.sudoku_graph": [[279, "graphscope-nx-generators-sudoku-sudoku-graph"]], "graphscope.nx.generators.trees.prefix_tree": [[280, "graphscope-nx-generators-trees-prefix-tree"]], "graphscope.nx.generators.trees.random_tree": [[281, "graphscope-nx-generators-trees-random-tree"]], "graphscope.nx.generators.triads.triad_graph": [[282, "graphscope-nx-generators-triads-triad-graph"]], "networkx.generators.internet_as_graphs.random_internet_as_graph": [[283, "networkx-generators-internet-as-graphs-random-internet-as-graph"]], "networkx.generators.stochastic.stochastic_graph": [[284, "networkx-generators-stochastic-stochastic-graph"]], "Graph generators": [[285, "graph-generators"]], "Atlas": [[285, "module-graphscope.nx.generators.atlas"]], "Classic": [[285, "module-graphscope.nx.generators.classic"]], "Expanders": [[285, "module-graphscope.nx.generators.expanders"]], "Small": [[285, "module-graphscope.nx.generators.small"]], "Duplication Divergence": [[285, "module-graphscope.nx.generators.duplication"]], "Degree Sequence": [[285, "module-graphscope.nx.generators.degree_seq"]], "Directed": [[285, "module-graphscope.nx.generators.directed"]], "Geometric": [[285, "module-graphscope.nx.generators.geometric"]], "Ego Graph": [[285, "module-graphscope.nx.generators.ego"]], "Stochastic": [[285, "module-networkx.generators.stochastic"]], "AS graph": [[285, "module-networkx.generators.internet_as_graphs"]], "Intersection": [[285, "module-graphscope.nx.generators.intersection"]], "Social Networks": [[285, "module-graphscope.nx.generators.social"]], "Spectral": [[285, "module-graphscope.nx.generators.spectral_graph_forge"]], "Trees": [[285, "module-graphscope.nx.generators.trees"]], "Non Isomorphic Trees": [[285, "module-graphscope.nx.generators.nonisomorphic_trees"]], "Triads": [[285, "module-graphscope.nx.generators.triads"]], "Joint Degree Sequence": [[285, "module-graphscope.nx.generators.joint_degree_seq"]], "Mycielski": [[285, "module-graphscope.nx.generators.mycielski"]], "Harary Graph": [[285, "module-graphscope.nx.generators.harary_graph"]], "Sudoku": [[285, "module-graphscope.nx.generators.sudoku"]], "Graph types": [[286, "graph-types"]], "DiGraph": [[286, "digraph"]], "NetworkX-style API": [[287, "networkx-style-api"]], "Reading graphs": [[288, "reading-graphs"]], "Edge List": [[288, "edge-list"]], "Adjacency List": [[288, "adjacency-list"]], "Graph Transformation": [[289, "graph-transformation"]], "Operation": [[290, "operation"]], "Operation object": [[290, "operation-object"]], "BuiltIn operations": [[290, "module-graphscope.framework.dag_utils"]], "Python API Reference": [[291, "python-api-reference"]], "Selector": [[292, "selector"]], "Selectors in different context": [[292, "selectors-in-different-context"]], "TensorContext": [[292, "tensorcontext"]], "VertexDataContext": [[292, "vertexdatacontext"]], "LabeledVertexDataContext": [[292, "labeledvertexdatacontext"]], "VertexPropertyContext": [[292, "vertexpropertycontext"]], "LabeledVertexPropertyContext": [[292, "labeledvertexpropertycontext"]], "Methods that use selectors": [[292, "methods-that-use-selectors"]], "One-dimensional results": [[292, "one-dimensional-results"]], "Multi-dimensional results": [[292, "multi-dimensional-results"]], "Vertex Range": [[292, "vertex-range"]], "Session": [[293, "session"]], "Session object": [[293, "session-object"]], "Session Functions": [[293, "session-functions"]], "Resources Estimator": [[294, "resources-estimator"]], "GART: Bridging the Gap between Relational OLTP and Graph Workloads": [[295, "gart-bridging-the-gap-between-relational-oltp-and-graph-workloads"]], "Architecture and Workflow": [[295, "architecture-and-workflow"]], "Defining Graph Mapping in GART": [[295, "defining-graph-mapping-in-gart"]], "Loading Logs to GART Storage": [[295, "loading-logs-to-gart-storage"]], "Using Loaded Graphs from GraphScope": [[295, "using-loaded-graphs-from-graphscope"]], "GraphAr: Standard Graph Data File Format": [[297, "graphar-standard-graph-data-file-format"]], "The GraphAr File Format": [[297, "the-graphar-file-format"]], "Features": [[297, "features"]], "File Format": [[297, "file-format"]], "Information files": [[297, "information-files"]], "Data files": [[297, "data-files"]], "GraphAr in GraphScope": [[297, "graphar-in-graphscope"]], "Loading GraphAr Data into GraphScope": [[297, "loading-graphar-data-into-graphscope"]], "Archiving the Graph Data in GraphAr": [[297, "archiving-the-graph-data-in-graphar"]], "GRIN: Graph Retrieval INterface": [[298, "grin-graph-retrieval-interface"]], "Motivations": [[298, "motivations"]], "Unified Graph Retrieval": [[298, "unified-graph-retrieval"]], "GRIN Concepts": [[298, "grin-concepts"]], "Predefined Macros": [[298, "predefined-macros"]], "Partition Strategy": [[298, "partition-strategy"]], "Edge-cut Partition Strategy": [[298, "edge-cut-partition-strategy"]], "Vertex-cut Partition Strategy": [[298, "vertex-cut-partition-strategy"]], "Property Graph Model": [[298, "property-graph-model"]], "Implementation Guideline": [[298, "implementation-guideline"]], "For computing engine": [[298, "for-computing-engine"]], "For storage engine": [[298, "for-storage-engine"]], "Design Details": [[298, "design-details"]], "Handler": [[298, "handler"]], "Edge": [[298, "edge"]], "List": [[298, "list"]], "Array-style Retrieval": [[298, "array-style-retrieval"]], "List Iterator": [[298, "list-iterator"]], "Property": [[298, "property"]], "Label": [[298, "label"], [319, "label"]], "Master and Mirror": [[298, "master-and-mirror"]], "Local Complete": [[298, "local-complete"]], "Natural ID Trait": [[298, "natural-id-trait"]], "Groot: Persistent Graph Store": [[299, "groot-persistent-graph-store"]], "Known Limitation": [[299, "known-limitation"]], "Deploy Groot": [[299, "deploy-groot"]], "Install from ArtifactHub": [[299, "install-from-artifacthub"]], "Installing from a local directory": [[299, "installing-from-a-local-directory"]], "Common Configurations": [[299, "common-configurations"]], "Connecting to Groot": [[299, "connecting-to-groot"]], "Connection": [[299, "connection"]], "Building and Modifying Graph Models": [[299, "building-and-modifying-graph-models"]], "Using Built-in Datasets": [[299, "using-built-in-datasets"]], "Customizing Models and Datasets": [[299, "customizing-models-and-datasets"]], "Querying Data": [[299, "querying-data"]], "Python": [[299, "python"]], "Java": [[299, "java"]], "Node.js": [[299, "node-js"]], "Data Import": [[299, "data-import"]], "Offline Import": [[299, "offline-import"]], "Prerequisite": [[299, "prerequisite"]], "Data Format": [[299, "data-format"]], "Loading Process": [[299, "loading-process"]], "Build: Building a partitioned graph": [[299, "build-building-a-partitioned-graph"]], "Uninstalling and Restarting": [[299, "uninstalling-and-restarting"]], "Uninstall Groot": [[299, "uninstall-groot"]], "Restart Groot": [[299, "restart-groot"]], "Destroy Groot": [[299, "destroy-groot"]], "Developing Guide": [[299, "developing-guide"]], "Build image": [[299, "build-image"]], "Persistence": [[299, "persistence"]], "Troubleshooting": [[299, "troubleshooting"]], "Viewing logs": [[299, "viewing-logs"]], "Configuring logs": [[299, "configuring-logs"]], "In-memory immutable graphs on Vineyard": [[300, "in-memory-immutable-graphs-on-vineyard"]], "Graphs in Vineyard": [[300, "graphs-in-vineyard"]], "Loading Graphs to Vineyard": [[300, "loading-graphs-to-vineyard"]], "Using Loaded Graphs": [[300, "using-loaded-graphs"]], "Applications and algorithms": [[301, "applications-and-algorithms"]], "Bind application to graph": [[301, "bind-application-to-graph"]], "Built-in algorithms": [[301, "built-in-algorithms"]], "Scaling and repartitioning": [[302, "scaling-and-repartitioning"]], "Fennel": [[302, "fennel"]], "XtraPuLP": [[302, "xtrapulp"]], "Hybrid partitioning": [[302, "hybrid-partitioning"]], "User Guide and Examples of GAE": [[303, "user-guide-and-examples-of-gae"]], "Developing Your Algorithms with Python": [[303, "developing-your-algorithms-with-python"]], "Developing Your Algorithms with C++": [[303, "developing-your-algorithms-with-c"]], "Developing Your Algorithms with Java": [[303, "developing-your-algorithms-with-java"]], "User Guide and Examples of GLE": [[304, "user-guide-and-examples-of-gle"]], "Error Codes": [[305, "error-codes"]], "Command-line Utility gs": [[306, "command-line-utility-gs"]], "How to Find logs": [[307, "how-to-find-logs"]], "Find logs in k8s": [[307, "find-logs-in-k8s"]], "Find logs for Graph Analytical Engine (GAE)": [[307, "find-logs-for-graph-analytical-engine-gae"]], "Find logs for Graph Interactive Engine (GIE)": [[307, "find-logs-for-graph-interactive-engine-gie"]], "Find logs for Graph Learning Engine (GLE)": [[307, "find-logs-for-graph-learning-engine-gle"]], "Find logs for Groot": [[307, "find-logs-for-groot"]], "Monitoring": [[308, "monitoring"]], "\u56fe\u5206\u6790\u5f15\u64ce": [[309, "id1"]], "\u5185\u7f6e\u7b97\u6cd5": [[309, "id2"]], "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": [[309, "id3"]], "\u4f7f\u7528 PIE \u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[309, "pie"]], "\u4f7f\u7528 Pregel \u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[309, "pregel"]], "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528 math.h \u4e2d\u7684\u51fd\u6570": [[309, "math-h"]], "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[309, "id5"]], "\u8fd0\u884cJava\u7f16\u5199\u7684\u7b97\u6cd5": [[309, "java"]], "\u8fd0\u884c\u793a\u4f8b\u7684Java\u7b97\u6cd5": [[309, "id6"]], "\u4f7f\u7528Java\u7f16\u5199\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5": [[309, "id7"]], "\u90e8\u7f72": [[310, "id1"]], "\u4f7f\u7528Helm\u90e8\u7f72GraphScope": [[310, "helmgraphscope"]], "\u5728AWS/\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": [[310, "aws"]], "\u672c\u5730\u90e8\u7f72GraphScope": [[310, "graphscope"]], "\u5f00\u53d1\u8005\u6307\u5357": [[311, "id1"]], "\u57fa\u4e8e Docker \u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5 GraphScope": [[311, "docker-graphscope"]], "\u57fa\u4e8e Kubernetes \u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5 GraphScope": [[311, "kubernetes-graphscope"]], "\u6784\u5efa Python Wheels": [[311, "python-wheels"]], "Linux": [[311, "linux"]], "macOS": [[311, "macos"]], "\u4ee3\u7801\u98ce\u683c": [[311, "id3"]], "\u5e38\u89c1\u95ee\u9898": [[312, "id1"]], "\u5feb\u901f\u4e0a\u624b": [[313, "id1"]], "\u793a\u4f8b: \u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [[313, "id3"]], "\u521b\u5efa\u4f1a\u8bdd": [[313, "id4"]], "\u4ea4\u4e92\u5f0f\u67e5\u8be2": [[313, "id6"]], "\u56fe\u5206\u6790": [[313, "id7"]], "\u56fe\u795e\u7ecf\u7f51\u7edc (GNNs)": [[313, "gnns"]], "\u5173\u95ed\u4f1a\u8bdd": [[313, "id8"]], "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": [[314, "graph-transformation"]], "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": [[314, "id2"]], "\u6295\u5f71": [[314, "id3"]], "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": [[314, "id4"]], "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": [[314, "id5"]], "GraphScope: \u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": [[315, "graphscope"]], "\u76ee\u5f55": [[315, null], [320, null]], "API \u53c2\u8003": [[315, null]], "\u7d22\u5f15": [[315, "id1"]], "\u5b89\u88c5": [[316, "id1"]], "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": [[316, "id2"]], "\u57fa\u4e8e Kubernetes \u5b89\u88c5 GraphScope \u5ba2\u6237\u7aef": [[316, "kubernetes-graphscope"]], "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": [[317, "id1"]], "Apache TinkerPop": [[317, "apache-tinkerpop"]], "\u5229\u7528Python\uff08Gremlin\uff09\u8fde\u63a5GraphScope": [[317, "python-gremlin-graphscope"]], "\u5229\u7528Java\uff08Gremlin\uff09\u8fde\u63a5GraphScope": [[317, "java-gremlin-graphscope"]], "Gremlin Console\uff08\u5f00\u53d1\u63a7\u5236\u53f0\uff09": [[317, "id5"]], "Gremlin\u7f16\u7a0b\u5165\u95e8\u2013101": [[317, "gremlin-101"]], "\u56fe\u6570\u636e\u6a21\u578b": [[317, "id8"]], "\u67e5\u8be2\u8bed\u8a00": [[317, "id9"]], "\u4e00\u4e2a\u4f8b\u5b50": [[317, "id10"]], "Gremlin\u517c\u5bb9\u6027\uff08\u5bf9\u6bd4TinkerPop\uff09": [[317, "gremlin-tinkerpop"]], "\u5c5e\u6027\u56fe\u6a21\u578b\u7ea6\u675f": [[317, "id11"]], "\u5c1a\u4e0d\u652f\u6301\u7684\u529f\u80fd\u7279\u6027": [[317, "id12"]], "\u652f\u6301\u7684Gremlin\u64cd\u4f5c": [[317, "id13"]], "\u5df2\u77e5\u9650\u5236": [[317, "id14"]], "\u56fe\u5b66\u4e60\u5f15\u64ce": [[318, "id1"]], "\u56fe\u5b66\u4e60\u6a21\u578b": [[318, "id2"]], "\u6570\u636e\u6a21\u578b": [[318, "id3"]], "\u7f16\u7801\u5668": [[318, "id4"]], "\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[318, "id5"]], "\u91c7\u6837": [[318, "id6"]], "\u56fe\u6570\u636e\u6d41": [[318, "id7"]], "\u6a21\u578b": [[318, "id8"]], "\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": [[318, "id9"]], "\u8f7d\u56fe": [[319, "loading-graphs"]], "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": [[319, "id3"]], "\u624b\u52a8\u914d\u7f6e\u56fe": [[319, "id4"]], "Build Vertex": [[319, "build-vertex"]], "vertices": [[319, "vertices"]], "properties": [[319, "properties"], [319, "id7"]], "vid_field": [[319, "vid-field"]], "Build Edge": [[319, "build-edge"]], "edges": [[319, "edges"]], "label": [[319, "id6"]], "src_label and dst_label": [[319, "src-label-and-dst-label"]], "src_field and dst_field": [[319, "src-field-and-dst-field"]], "\u9ad8\u7ea7\u7528\u6cd5": [[319, "id8"]], "\u6ca1\u6709\u6b67\u4e49\u65f6\uff0c\u81ea\u52a8\u63a8\u65ad\u70b9\u6807\u7b7e": [[319, "id9"]], "\u4ece\u8fb9\u4e2d\u63a8\u65ad\u70b9": [[319, "id10"]], "\u591a\u79cd\u8fb9\u5173\u7cfb": [[319, "id11"]], "\u6307\u5b9a\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b": [[319, "id12"]], "\u56fe\u7684\u5176\u4ed6\u53c2\u6570": [[319, "id13"]], "\u5b8c\u6574\u7684\u793a\u4f8b": [[319, "id14"]], "\u4ece Pandas \u6216 Numpy \u4e2d\u8f7d\u56fe": [[319, "pandas-numpy"]], "\u4ece Pandas \u4e2d\u8f7d\u56fe": [[319, "pandas"]], "\u4ece Numpy \u4e2d\u8f7d\u56fe": [[319, "numpy"]], "Loader \u7684\u53d8\u79cd": [[319, "loader"]], "\u5165\u95e8\u6559\u7a0b": [[320, "id1"]]}, "indexentries": {"all_pairs_shortest_path_length()": [[0, "all_pairs_shortest_path_length"]], "attribute_assortativity()": [[0, "attribute_assortativity"]], "average_degree_connectivity()": [[0, "average_degree_connectivity"]], "betweenness_centrality()": [[0, "betweenness_centrality"]], "bfs()": [[0, "bfs"]], "built-in function": [[0, "all_pairs_shortest_path_length"], [0, "attribute_assortativity"], [0, "average_degree_connectivity"], [0, "betweenness_centrality"], [0, "bfs"], [0, "closeness_centrality"], [0, "degree_assortativity_coefficient"], [0, "degree_centrality"], [0, "dfs"], [0, "eigenvector_centrality"], [0, "hits"], [0, "id0"], [0, "id1"], [0, "id2"], [0, "katz_centrality"], [0, "kkore"], [0, "kshell"], [0, "lpa"], [0, "sampling_path"], [0, "sssp"]], "closeness_centrality()": [[0, "closeness_centrality"]], "clustering()": [[0, "id0"]], "degree_assortativity_coefficient()": [[0, "degree_assortativity_coefficient"]], "degree_centrality()": [[0, "degree_centrality"]], "dfs()": [[0, "dfs"]], "eigenvector_centrality()": [[0, "eigenvector_centrality"]], "hits()": [[0, "hits"]], "katz_centrality()": [[0, "katz_centrality"]], "kkore()": [[0, "kkore"]], "kshell()": [[0, "kshell"]], "lpa()": [[0, "lpa"]], "pagerank()": [[0, "id1"]], "sampling_path()": [[0, "sampling_path"]], "sssp()": [[0, "sssp"]], "voterank()": [[0, "id2"]], "gs::appbase (c++ class)": [[74, "_CPPv4I00EN2gs7AppBaseE"]], "gs::appbase::appbase (c++ function)": [[74, "_CPPv4N2gs7AppBase7AppBaseEv"]], "gs::appbase::inceval (c++ function)": [[74, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::appbase::peval (c++ function)": [[74, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::appbase::load_strategy (c++ member)": [[74, "_CPPv4N2gs7AppBase13load_strategyE"]], "gs::appbase::message_manager_t (c++ type)": [[74, "_CPPv4N2gs7AppBase17message_manager_tE"]], "gs::appbase::message_strategy (c++ member)": [[74, "_CPPv4N2gs7AppBase16message_strategyE"]], "gs::appbase::need_split_edges (c++ member)": [[74, "_CPPv4N2gs7AppBase16need_split_edgesE"]], "gs::appbase::~appbase (c++ function)": [[74, "_CPPv4N2gs7AppBaseD0Ev"]], "gs::appentry (c++ class)": [[74, "_CPPv4N2gs8AppEntryE"]], "gs::appentry::appentry (c++ function)": [[74, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE"]], "gs::appentry::createworker (c++ function)": [[74, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::appentry::init (c++ function)": [[74, "_CPPv4N2gs8AppEntry4InitEv"]], "gs::appentry::query (c++ function)": [[74, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE"]], "gs::argtypeat (c++ struct)": [[74, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE"]], "gs::argsnum (c++ struct)": [[74, "_CPPv4I0EN2gs7ArgsNumE"]], "gs::argsunpacker (c++ struct)": [[74, "_CPPv4I0EN2gs12ArgsUnpackerE"]], "gs::arrowfragmentloader (c++ class)": [[74, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE"]], "gs::arrowfragmentloader::addlabelstofragment (c++ function)": [[74, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE"]], "gs::arrowfragmentloader::addlabelstofragmentasfragmentgroup (c++ function)": [[74, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE"]], "gs::arrowfragmentloader::arrowfragmentloader (c++ function)": [[74, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE"], [74, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb"]], "gs::arrowfragmentloader::loadedgetables (c++ function)": [[74, "_CPPv4N2gs19ArrowFragmentLoader14LoadEdgeTablesEv"]], "gs::arrowfragmentloader::loadfragment (c++ function)": [[74, "_CPPv4N2gs19ArrowFragmentLoader12LoadFragmentEv"]], "gs::arrowfragmentloader::loadfragmentasfragmentgroup (c++ function)": [[74, "_CPPv4N2gs19ArrowFragmentLoader27LoadFragmentAsFragmentGroupEv"]], "gs::arrowfragmentloader::loadvertexedgetables (c++ function)": [[74, "_CPPv4N2gs19ArrowFragmentLoader20LoadVertexEdgeTablesEv"]], "gs::arrowfragmentloader::loadvertextables (c++ function)": [[74, "_CPPv4N2gs19ArrowFragmentLoader16LoadVertexTablesEv"]], "gs::arrowfragmentloader::initpartitioner (c++ function)": [[74, "_CPPv4N2gs19ArrowFragmentLoader15initPartitionerEv"]], "gs::arrowfragmentloader::~arrowfragmentloader (c++ function)": [[74, "_CPPv4N2gs19ArrowFragmentLoaderD0Ev"]], "gs::arrowprojectedfragment (c++ class)": [[74, "_CPPv4I00000EN2gs22ArrowProjectedFragmentE"]], "gs::arrowprojectedfragment::construct (c++ function)": [[74, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE"]], "gs::arrowprojectedfragment::create (c++ function)": [[74, "_CPPv4N2gs22ArrowProjectedFragment6CreateEv"]], "gs::arrowprojectedfragment::getdata (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t"]], "gs::arrowprojectedfragment::getedgenum (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment10GetEdgeNumEv"]], "gs::arrowprojectedfragment::getfragid (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t"]], "gs::arrowprojectedfragment::getid (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinedgenum (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment12GetInEdgeNumEv"]], "gs::arrowprojectedfragment::getincomingadjlist (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingAdjListERK8vertex_t"], [74, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingAdjListERK8vertex_t5fid_t"]], "gs::arrowprojectedfragment::getincomingedgenum (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingEdgeNumEv"]], "gs::arrowprojectedfragment::getincominginnervertexadjlist (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListERK8vertex_t"]], "gs::arrowprojectedfragment::getincomingoutervertexadjlist (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertex (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexgid (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexid (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexinternalid (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinnerverticesnum (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment19GetInnerVerticesNumEv"]], "gs::arrowprojectedfragment::getinternalid (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getlocalindegree (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t"]], "gs::arrowprojectedfragment::getlocaloutdegree (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t"]], "gs::arrowprojectedfragment::getoutedgenum (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment13GetOutEdgeNumEv"]], "gs::arrowprojectedfragment::getoutervertex (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexgid (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexid (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexinternalid (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getouterverticesnum (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment19GetOuterVerticesNumEv"]], "gs::arrowprojectedfragment::getoutgoingadjlist (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingAdjListERK8vertex_t"], [74, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingAdjListERK8vertex_t5fid_t"]], "gs::arrowprojectedfragment::getoutgoingedgenum (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingEdgeNumEv"]], "gs::arrowprojectedfragment::getoutgoinginnervertexadjlist (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListERK8vertex_t"]], "gs::arrowprojectedfragment::getoutgoingoutervertexadjlist (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListERK8vertex_t"]], "gs::arrowprojectedfragment::gettotalverticesnum (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment19GetTotalVerticesNumEv"]], "gs::arrowprojectedfragment::getvertex (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getvertexmap (c++ function)": [[74, "_CPPv4N2gs22ArrowProjectedFragment12GetVertexMapEv"], [74, "_CPPv4NK2gs22ArrowProjectedFragment12GetVertexMapEv"]], "gs::arrowprojectedfragment::getverticesnum (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment14GetVerticesNumEv"]], "gs::arrowprojectedfragment::gid2oid (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t"]], "gs::arrowprojectedfragment::gid2vertex (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::iedests (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::ioedests (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::innervertexgid2vertex (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::innervertices (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment13InnerVerticesEv"]], "gs::arrowprojectedfragment::isinnervertex (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t"]], "gs::arrowprojectedfragment::isoutervertex (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t"]], "gs::arrowprojectedfragment::mirrorvertices (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t"]], "gs::arrowprojectedfragment::oedests (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::oid2gid (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t"], [74, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t"]], "gs::arrowprojectedfragment::outervertexgid2vertex (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::outervertices (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t"], [74, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesEv"]], "gs::arrowprojectedfragment::preparetorunapp (c++ function)": [[74, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE"]], "gs::arrowprojectedfragment::project (c++ function)": [[74, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_tEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t"]], "gs::arrowprojectedfragment::vertex2gid (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t"]], "gs::arrowprojectedfragment::vertices (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment8VerticesEv"]], "gs::arrowprojectedfragment::adj_list_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment10adj_list_tE"]], "gs::arrowprojectedfragment::const_adj_list_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment16const_adj_list_tE"]], "gs::arrowprojectedfragment::directed (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment8directedEv"]], "gs::arrowprojectedfragment::edata_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment7edata_tE"]], "gs::arrowprojectedfragment::edge_label (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment10edge_labelEv"]], "gs::arrowprojectedfragment::edge_prop_id (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment12edge_prop_idEv"]], "gs::arrowprojectedfragment::eid_array_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment11eid_array_tE"]], "gs::arrowprojectedfragment::eid_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment5eid_tE"]], "gs::arrowprojectedfragment::fid (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment3fidEv"]], "gs::arrowprojectedfragment::fnum (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment4fnumEv"]], "gs::arrowprojectedfragment::get_arrow_fragment (c++ function)": [[74, "_CPPv4N2gs22ArrowProjectedFragment18get_arrow_fragmentEv"]], "gs::arrowprojectedfragment::get_edata_array_accessor (c++ function)": [[74, "_CPPv4N2gs22ArrowProjectedFragment24get_edata_array_accessorEv"]], "gs::arrowprojectedfragment::get_ie_offsets_begin_ptr (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment24get_ie_offsets_begin_ptrEv"]], "gs::arrowprojectedfragment::get_ie_offsets_end_ptr (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment22get_ie_offsets_end_ptrEv"]], "gs::arrowprojectedfragment::get_in_edges_ptr (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment16get_in_edges_ptrEv"]], "gs::arrowprojectedfragment::get_oe_offsets_begin_ptr (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment24get_oe_offsets_begin_ptrEv"]], "gs::arrowprojectedfragment::get_oe_offsets_end_ptr (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment22get_oe_offsets_end_ptrEv"]], "gs::arrowprojectedfragment::get_out_edges_ptr (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment17get_out_edges_ptrEv"]], "gs::arrowprojectedfragment::get_vdata_array_accessor (c++ function)": [[74, "_CPPv4N2gs22ArrowProjectedFragment24get_vdata_array_accessorEv"]], "gs::arrowprojectedfragment::inner_vertex_array_t (c++ type)": [[74, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE"]], "gs::arrowprojectedfragment::inner_vertices_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment16inner_vertices_tE"]], "gs::arrowprojectedfragment::internal_oid_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment14internal_oid_tE"]], "gs::arrowprojectedfragment::label_id_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment10label_id_tE"]], "gs::arrowprojectedfragment::load_strategy (c++ member)": [[74, "_CPPv4N2gs22ArrowProjectedFragment13load_strategyE"]], "gs::arrowprojectedfragment::nbr_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment5nbr_tE"]], "gs::arrowprojectedfragment::nbr_unit_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment10nbr_unit_tE"]], "gs::arrowprojectedfragment::oid_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment5oid_tE"]], "gs::arrowprojectedfragment::outer_vertex_array_t (c++ type)": [[74, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE"]], "gs::arrowprojectedfragment::outer_vertices_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment16outer_vertices_tE"]], "gs::arrowprojectedfragment::prop_id_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment9prop_id_tE"]], "gs::arrowprojectedfragment::property_graph_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment16property_graph_tE"]], "gs::arrowprojectedfragment::property_vertex_map_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment21property_vertex_map_tE"]], "gs::arrowprojectedfragment::sub_vertices_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment14sub_vertices_tE"]], "gs::arrowprojectedfragment::vdata_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment7vdata_tE"]], "gs::arrowprojectedfragment::vertex_array_t (c++ type)": [[74, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE"]], "gs::arrowprojectedfragment::vertex_label (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment12vertex_labelEv"]], "gs::arrowprojectedfragment::vertex_map_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment12vertex_map_tE"]], "gs::arrowprojectedfragment::vertex_prop_id (c++ function)": [[74, "_CPPv4NK2gs22ArrowProjectedFragment14vertex_prop_idEv"]], "gs::arrowprojectedfragment::vertex_range_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment14vertex_range_tE"]], "gs::arrowprojectedfragment::vertex_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment8vertex_tE"]], "gs::arrowprojectedfragment::vertices_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment10vertices_tE"]], "gs::arrowprojectedfragment::vid_array_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment11vid_array_tE"]], "gs::arrowprojectedfragment::vid_t (c++ type)": [[74, "_CPPv4N2gs22ArrowProjectedFragment5vid_tE"]], "gs::arrowprojectedfragment::~arrowprojectedfragment (c++ function)": [[74, "_CPPv4N2gs22ArrowProjectedFragmentD0Ev"]], "gs::arrowprojectedvertexmap (c++ class)": [[74, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE"]], "gs::arrowprojectedvertexmap::construct (c++ function)": [[74, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE"]], "gs::arrowprojectedvertexmap::create (c++ function)": [[74, "_CPPv4N2gs23ArrowProjectedVertexMap6CreateEv"]], "gs::arrowprojectedvertexmap::getfidfromgid (c++ function)": [[74, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetFidFromGidE5vid_t"]], "gs::arrowprojectedvertexmap::getgid (c++ function)": [[74, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t"], [74, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t"]], "gs::arrowprojectedvertexmap::getinnervertexsize (c++ function)": [[74, "_CPPv4NK2gs23ArrowProjectedVertexMap18GetInnerVertexSizeE5fid_t"]], "gs::arrowprojectedvertexmap::getlidfromgid (c++ function)": [[74, "_CPPv4NK2gs23ArrowProjectedVertexMap13GetLidFromGidE5vid_t"]], "gs::arrowprojectedvertexmap::getoffsetfromlid (c++ function)": [[74, "_CPPv4N2gs23ArrowProjectedVertexMap16GetOffsetFromLidE5vid_t"]], "gs::arrowprojectedvertexmap::getoid (c++ function)": [[74, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t"]], "gs::arrowprojectedvertexmap::gettotalverticesnum (c++ function)": [[74, "_CPPv4NK2gs23ArrowProjectedVertexMap19GetTotalVerticesNumEv"]], "gs::arrowprojectedvertexmap::offset2lid (c++ function)": [[74, "_CPPv4N2gs23ArrowProjectedVertexMap10Offset2LidERK5vid_t"]], "gs::arrowprojectedvertexmap::project (c++ function)": [[74, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t"]], "gs::ctxwrapperbuilder (c++ struct)": [[74, "_CPPv4I00EN2gs17CtxWrapperBuilderE"]], "gs::defaultpropertyworker (c++ class)": [[74, "_CPPv4I0EN2gs21DefaultPropertyWorkerE"]], "gs::defaultpropertyworker::defaultpropertyworker (c++ function)": [[74, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::defaultpropertyworker::finalize (c++ function)": [[74, "_CPPv4N2gs21DefaultPropertyWorker8FinalizeEv"]], "gs::defaultpropertyworker::getcontext (c++ function)": [[74, "_CPPv4N2gs21DefaultPropertyWorker10GetContextEv"]], "gs::defaultpropertyworker::init (c++ function)": [[74, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::defaultpropertyworker::output (c++ function)": [[74, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE"]], "gs::defaultpropertyworker::query (c++ function)": [[74, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args"]], "gs::defaultpropertyworker::context_t (c++ type)": [[74, "_CPPv4N2gs21DefaultPropertyWorker9context_tE"]], "gs::defaultpropertyworker::fragment_t (c++ type)": [[74, "_CPPv4N2gs21DefaultPropertyWorker10fragment_tE"]], "gs::defaultpropertyworker::message_manager_t (c++ type)": [[74, "_CPPv4N2gs21DefaultPropertyWorker17message_manager_tE"]], "gs::defaultpropertyworker::~defaultpropertyworker (c++ function)": [[74, "_CPPv4N2gs21DefaultPropertyWorkerD0Ev"]], "gs::defaultworker (c++ class)": [[74, "_CPPv4I0EN2gs13DefaultWorkerE"]], "gs::defaultworker::defaultworker (c++ function)": [[74, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::defaultworker::finalize (c++ function)": [[74, "_CPPv4N2gs13DefaultWorker8FinalizeEv"]], "gs::defaultworker::getcontext (c++ function)": [[74, "_CPPv4N2gs13DefaultWorker10GetContextEv"]], "gs::defaultworker::init (c++ function)": [[74, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::defaultworker::output (c++ function)": [[74, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE"]], "gs::defaultworker::query (c++ function)": [[74, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args"]], "gs::defaultworker::context_t (c++ type)": [[74, "_CPPv4N2gs13DefaultWorker9context_tE"]], "gs::defaultworker::fragment_t (c++ type)": [[74, "_CPPv4N2gs13DefaultWorker10fragment_tE"]], "gs::defaultworker::message_manager_t (c++ type)": [[74, "_CPPv4N2gs13DefaultWorker17message_manager_tE"]], "gs::defaultworker::~defaultworker (c++ function)": [[74, "_CPPv4N2gs13DefaultWorkerD0Ev"]], "gs::dispatchresult (c++ class)": [[74, "_CPPv4N2gs14DispatchResultE"]], "gs::dispatchresult::aggregatepolicy (c++ enum)": [[74, "_CPPv4N2gs14DispatchResult15AggregatePolicyE"]], "gs::dispatchresult::aggregatepolicy::kconcat (c++ enumerator)": [[74, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE"]], "gs::dispatchresult::aggregatepolicy::kmergegraphdef (c++ enumerator)": [[74, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE"]], "gs::dispatchresult::aggregatepolicy::kpickfirst (c++ enumerator)": [[74, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE"]], "gs::dispatchresult::aggregatepolicy::kpickfirstnonempty (c++ enumerator)": [[74, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE"]], "gs::dispatchresult::aggregatepolicy::kpickfirstnonemptygraphdef (c++ enumerator)": [[74, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE"]], "gs::dispatchresult::aggregatepolicy::krequireconsistent (c++ enumerator)": [[74, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE"]], "gs::dispatchresult::dispatchresult (c++ function)": [[74, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE"], [74, "_CPPv4N2gs14DispatchResult14DispatchResultEv"]], "gs::dispatchresult::aggregate_policy (c++ function)": [[74, "_CPPv4NK2gs14DispatchResult16aggregate_policyEv"]], "gs::dispatchresult::data (c++ function)": [[74, "_CPPv4NK2gs14DispatchResult4dataEv"]], "gs::dispatchresult::error_code (c++ function)": [[74, "_CPPv4NK2gs14DispatchResult10error_codeEv"]], "gs::dispatchresult::graph_def (c++ function)": [[74, "_CPPv4N2gs14DispatchResult9graph_defEv"], [74, "_CPPv4NK2gs14DispatchResult9graph_defEv"]], "gs::dispatchresult::has_large_data (c++ function)": [[74, "_CPPv4NK2gs14DispatchResult14has_large_dataEv"]], "gs::dispatchresult::message (c++ function)": [[74, "_CPPv4N2gs14DispatchResult7messageEv"]], "gs::dispatchresult::set_data (c++ function)": [[74, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb"], [74, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb"]], "gs::dispatchresult::set_error (c++ function)": [[74, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE"]], "gs::dispatchresult::set_graph_def (c++ function)": [[74, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy"]], "gs::dispatchresult::worker_id (c++ function)": [[74, "_CPPv4NK2gs14DispatchResult9worker_idEv"]], "gs::dispatcher (c++ class)": [[74, "_CPPv4N2gs10DispatcherE"]], "gs::dispatcher::dispatch (c++ function)": [[74, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE"]], "gs::dispatcher::dispatcher (c++ function)": [[74, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE"]], "gs::dispatcher::setcommand (c++ function)": [[74, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE"]], "gs::dispatcher::start (c++ function)": [[74, "_CPPv4N2gs10Dispatcher5StartEv"]], "gs::dispatcher::stop (c++ function)": [[74, "_CPPv4N2gs10Dispatcher4StopEv"]], "gs::dispatcher::subscribe (c++ function)": [[74, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE"]], "gs::engineconfig (c++ struct)": [[74, "_CPPv4N2gs12EngineConfigE"]], "gs::engineconfig::tojsonstring (c++ function)": [[74, "_CPPv4NK2gs12EngineConfig12ToJsonStringEv"]], "gs::engineconfig::enable_java_sdk (c++ member)": [[74, "_CPPv4N2gs12EngineConfig15enable_java_sdkE"]], "gs::engineconfig::networkx (c++ member)": [[74, "_CPPv4N2gs12EngineConfig8networkxE"]], "gs::engineconfig::vineyard_rpc_endpoint (c++ member)": [[74, "_CPPv4N2gs12EngineConfig21vineyard_rpc_endpointE"]], "gs::engineconfig::vineyard_socket (c++ member)": [[74, "_CPPv4N2gs12EngineConfig15vineyard_socketE"]], "gs::fragmentwrapper (c++ class)": [[74, "_CPPv4I0EN2gs15FragmentWrapperE"]], "gs::gsobject (c++ class)": [[74, "_CPPv4N2gs8GSObjectE"]], "gs::gsobject::gsobject (c++ function)": [[74, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType"]], "gs::gsobject::tostring (c++ function)": [[74, "_CPPv4NK2gs8GSObject8ToStringEv"]], "gs::gsobject::id (c++ function)": [[74, "_CPPv4NK2gs8GSObject2idEv"]], "gs::gsobject::type (c++ function)": [[74, "_CPPv4NK2gs8GSObject4typeEv"]], "gs::gsobject::~gsobject (c++ function)": [[74, "_CPPv4N2gs8GSObjectD0Ev"]], "gs::grapeengine (c++ class)": [[74, "_CPPv4N2gs11GrapeEngineE"]], "gs::grapeengine::grapeengine (c++ function)": [[74, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE"], [74, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi"]], "gs::grapeengine::rundagfile (c++ function)": [[74, "_CPPv4N2gs11GrapeEngine10RunDAGFileEv"]], "gs::grapeengine::start (c++ function)": [[74, "_CPPv4N2gs11GrapeEngine5StartEv"]], "gs::grapeengine::stop (c++ function)": [[74, "_CPPv4N2gs11GrapeEngine4StopEv"]], "gs::grapeinstance (c++ class)": [[74, "_CPPv4N2gs13GrapeInstanceE"]], "gs::grapeinstance::grapeinstance (c++ function)": [[74, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE"]], "gs::grapeinstance::init (c++ function)": [[74, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE"]], "gs::grapeinstance::onreceive (c++ function)": [[74, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE"]], "gs::objectmanager (c++ class)": [[74, "_CPPv4N2gs13ObjectManagerE"]], "gs::objectmanager::getobject (c++ function)": [[74, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE"], [74, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE"]], "gs::objectmanager::hasobject (c++ function)": [[74, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE"]], "gs::objectmanager::putobject (c++ function)": [[74, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE"]], "gs::objectmanager::removeobject (c++ function)": [[74, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE"]], "gs::parallelpropertyworker (c++ class)": [[74, "_CPPv4I0EN2gs22ParallelPropertyWorkerE"]], "gs::parallelpropertyworker::finalize (c++ function)": [[74, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv"]], "gs::parallelpropertyworker::getcontext (c++ function)": [[74, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv"]], "gs::parallelpropertyworker::init (c++ function)": [[74, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::parallelpropertyworker::output (c++ function)": [[74, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE"]], "gs::parallelpropertyworker::parallelpropertyworker (c++ function)": [[74, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::parallelpropertyworker::query (c++ function)": [[74, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args"]], "gs::parallelpropertyworker::context_t (c++ type)": [[74, "_CPPv4N2gs22ParallelPropertyWorker9context_tE"]], "gs::parallelpropertyworker::fragment_t (c++ type)": [[74, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE"]], "gs::parallelpropertyworker::message_manager_t (c++ type)": [[74, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE"]], "gs::parallelpropertyworker::~parallelpropertyworker (c++ function)": [[74, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev"]], "gs::propertyappbase (c++ class)": [[74, "_CPPv4I00EN2gs15PropertyAppBaseE"]], "gs::propertyappbase::inceval (c++ function)": [[74, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::propertyappbase::peval (c++ function)": [[74, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::propertyappbase::propertyappbase (c++ function)": [[74, "_CPPv4N2gs15PropertyAppBase15PropertyAppBaseEv"]], "gs::propertyappbase::load_strategy (c++ member)": [[74, "_CPPv4N2gs15PropertyAppBase13load_strategyE"]], "gs::propertyappbase::message_manager_t (c++ type)": [[74, "_CPPv4N2gs15PropertyAppBase17message_manager_tE"]], "gs::propertyappbase::message_strategy (c++ member)": [[74, "_CPPv4N2gs15PropertyAppBase16message_strategyE"]], "gs::propertyappbase::need_split_edges (c++ member)": [[74, "_CPPv4N2gs15PropertyAppBase16need_split_edgesE"]], "gs::propertyappbase::~propertyappbase (c++ function)": [[74, "_CPPv4N2gs15PropertyAppBaseD0Ev"]], "gs::propertyautoappbase (c++ class)": [[74, "_CPPv4I00EN2gs19PropertyAutoAppBaseE"]], "gs::propertyautoappbase::inceval (c++ function)": [[74, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T"]], "gs::propertyautoappbase::peval (c++ function)": [[74, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T"]], "gs::propertyautoappbase::propertyautoappbase (c++ function)": [[74, "_CPPv4N2gs19PropertyAutoAppBase19PropertyAutoAppBaseEv"]], "gs::propertyautoappbase::load_strategy (c++ member)": [[74, "_CPPv4N2gs19PropertyAutoAppBase13load_strategyE"]], "gs::propertyautoappbase::message_strategy (c++ member)": [[74, "_CPPv4N2gs19PropertyAutoAppBase16message_strategyE"]], "gs::propertyautoappbase::need_split_edges (c++ member)": [[74, "_CPPv4N2gs19PropertyAutoAppBase16need_split_edgesE"]], "gs::propertyautoappbase::~propertyautoappbase (c++ function)": [[74, "_CPPv4N2gs19PropertyAutoAppBaseD0Ev"]], "gs::propertyautoworker (c++ class)": [[74, "_CPPv4I0EN2gs18PropertyAutoWorkerE"]], "gs::propertyautoworker::finalize (c++ function)": [[74, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv"]], "gs::propertyautoworker::getcontext (c++ function)": [[74, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv"]], "gs::propertyautoworker::init (c++ function)": [[74, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::propertyautoworker::output (c++ function)": [[74, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE"]], "gs::propertyautoworker::propertyautoworker (c++ function)": [[74, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::propertyautoworker::query (c++ function)": [[74, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args"]], "gs::propertyautoworker::context_t (c++ type)": [[74, "_CPPv4N2gs18PropertyAutoWorker9context_tE"]], "gs::propertyautoworker::fragment_t (c++ type)": [[74, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE"]], "gs::propertyautoworker::message_manager_t (c++ type)": [[74, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE"]], "gs::propertyautoworker::~propertyautoworker (c++ function)": [[74, "_CPPv4N2gs18PropertyAutoWorkerD0Ev"]], "gs::tensorcontext (c++ class)": [[74, "_CPPv4I00EN2gs13TensorContextE"]], "gs::tensorcontext::tensorcontext (c++ function)": [[74, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t"]], "gs::tensorcontext::assign (c++ function)": [[74, "_CPPv4N2gs13TensorContext6assignERK6data_t"], [74, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE"]], "gs::tensorcontext::data_t (c++ type)": [[74, "_CPPv4N2gs13TensorContext6data_tE"]], "gs::tensorcontext::fragment (c++ function)": [[74, "_CPPv4N2gs13TensorContext8fragmentEv"]], "gs::tensorcontext::set_shape (c++ function)": [[74, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE"]], "gs::tensorcontext::shape (c++ function)": [[74, "_CPPv4NK2gs13TensorContext5shapeEv"]], "gs::tensorcontext::tensor (c++ function)": [[74, "_CPPv4N2gs13TensorContext6tensorEv"]], "gs::tensorcontextwrapper (c++ class)": [[74, "_CPPv4I000EN2gs20TensorContextWrapperE"]], "gs::tensorcontextwrapper::tensorcontextwrapper (c++ function)": [[74, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE"]], "gs::tensorcontextwrapper::toarrowarrays (c++ function)": [[74, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE"]], "gs::tensorcontextwrapper::todataframe (c++ function)": [[74, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE"]], "gs::tensorcontextwrapper::tondarray (c++ function)": [[74, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t"]], "gs::tensorcontextwrapper::tovineyarddataframe (c++ function)": [[74, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE"]], "gs::tensorcontextwrapper::tovineyardtensor (c++ function)": [[74, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t"]], "gs::tensorcontextwrapper::context_type (c++ function)": [[74, "_CPPv4N2gs20TensorContextWrapper12context_typeEv"]], "gs::tensorcontextwrapper::fragment_wrapper (c++ function)": [[74, "_CPPv4N2gs20TensorContextWrapper16fragment_wrapperEv"]], "gs::vertexdatacontextwrapper (c++ class)": [[74, "_CPPv4I00EN2gs24VertexDataContextWrapperE"]], "gs::vertexdatacontextwrapper::toarrowarrays (c++ function)": [[74, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE"]], "gs::vertexdatacontextwrapper::todataframe (c++ function)": [[74, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tondarray (c++ function)": [[74, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tovineyarddataframe (c++ function)": [[74, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tovineyardtensor (c++ function)": [[74, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::vertexdatacontextwrapper (c++ function)": [[74, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE"]], "gs::vertexdatacontextwrapper::context_type (c++ function)": [[74, "_CPPv4N2gs24VertexDataContextWrapper12context_typeEv"]], "gs::vertexdatacontextwrapper::fragment_wrapper (c++ function)": [[74, "_CPPv4N2gs24VertexDataContextWrapper16fragment_wrapperEv"]], "gs::vertexpropertycontext (c++ class)": [[74, "_CPPv4I0EN2gs21VertexPropertyContextE"]], "gs::vertexpropertycontext::vertexpropertycontext (c++ function)": [[74, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t"]], "gs::vertexpropertycontext::add_column (c++ function)": [[74, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType"]], "gs::vertexpropertycontext::fragment (c++ function)": [[74, "_CPPv4N2gs21VertexPropertyContext8fragmentEv"]], "gs::vertexpropertycontext::fragment_t (c++ type)": [[74, "_CPPv4N2gs21VertexPropertyContext10fragment_tE"]], "gs::vertexpropertycontext::get_column (c++ function)": [[74, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t"], [74, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE"]], "gs::vertexpropertycontext::get_typed_column (c++ function)": [[74, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t"], [74, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE"]], "gs::vertexpropertycontext::oid_t (c++ type)": [[74, "_CPPv4N2gs21VertexPropertyContext5oid_tE"]], "gs::vertexpropertycontext::prop_id_t (c++ type)": [[74, "_CPPv4N2gs21VertexPropertyContext9prop_id_tE"]], "gs::vertexpropertycontext::properties_map (c++ function)": [[74, "_CPPv4N2gs21VertexPropertyContext14properties_mapEv"]], "gs::vertexpropertycontext::vertex_properties (c++ function)": [[74, "_CPPv4N2gs21VertexPropertyContext17vertex_propertiesEv"]], "gs::vertexpropertycontext::vertex_t (c++ type)": [[74, "_CPPv4N2gs21VertexPropertyContext8vertex_tE"]], "gs::rpc::analyticalserver (c++ class)": [[74, "_CPPv4N2gs3rpc16AnalyticalServerE"]], "gs::rpc::analyticalserver::analyticalserver (c++ function)": [[74, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi"]], "gs::rpc::analyticalserver::startserver (c++ function)": [[74, "_CPPv4N2gs3rpc16AnalyticalServer11StartServerEv"]], "gs::rpc::analyticalserver::stopserver (c++ function)": [[74, "_CPPv4N2gs3rpc16AnalyticalServer10StopServerEv"]], "app (class in graphscope.framework.app)": [[75, "graphscope.framework.app.App"]], "appassets (class in graphscope.framework.app)": [[75, "graphscope.framework.app.AppAssets"]], "appdagnode (class in graphscope.framework.app)": [[75, "graphscope.framework.app.AppDAGNode"]], "javaapp (class in graphscope.analytical.app)": [[75, "graphscope.analytical.app.JavaApp"]], "__call__() (graphscope.analytical.app.javaapp method)": [[75, "graphscope.analytical.app.JavaApp.__call__"]], "__del__() (graphscope.framework.app.app method)": [[75, "graphscope.framework.app.App.__del__"]], "__init__() (graphscope.analytical.app.javaapp method)": [[75, "graphscope.analytical.app.JavaApp.__init__"]], "__init__() (graphscope.framework.app.app method)": [[75, "graphscope.framework.app.App.__init__"]], "__init__() (graphscope.framework.app.appassets method)": [[75, "graphscope.framework.app.AppAssets.__init__"]], "algo (graphscope.framework.app.appassets property)": [[75, "graphscope.framework.app.AppAssets.algo"]], "attribute_assortativity_coefficient() (in module graphscope)": [[75, "graphscope.attribute_assortativity_coefficient"]], "average_degree_connectivity() (in module graphscope)": [[75, "graphscope.average_degree_connectivity"]], "average_shortest_path_length() (in module graphscope)": [[75, "graphscope.average_shortest_path_length"]], "avg_clustering() (in module graphscope)": [[75, "graphscope.avg_clustering"]], "bfs() (in module graphscope)": [[75, "graphscope.bfs"]], "cdlp() (in module graphscope)": [[75, "graphscope.cdlp"]], "clustering() (in module graphscope)": [[75, "graphscope.clustering"]], "context_type (graphscope.framework.app.appassets property)": [[75, "graphscope.framework.app.AppAssets.context_type"]], "degree_assortativity_coefficient() (in module graphscope)": [[75, "graphscope.degree_assortativity_coefficient"]], "degree_centrality() (in module graphscope)": [[75, "graphscope.degree_centrality"]], "eigenvector_centrality() (in module graphscope)": [[75, "graphscope.eigenvector_centrality"]], "gar (graphscope.framework.app.appassets property)": [[75, "graphscope.framework.app.AppAssets.gar"]], "hits() (in module graphscope)": [[75, "graphscope.hits"]], "is_compatible() (graphscope.analytical.app.javaapp method)": [[75, "graphscope.analytical.app.JavaApp.is_compatible"]], "is_compatible() (graphscope.framework.app.appassets method)": [[75, "graphscope.framework.app.AppAssets.is_compatible"]], "is_simple_path() (in module graphscope)": [[75, "graphscope.is_simple_path"]], "k_core() (in module graphscope)": [[75, "graphscope.k_core"]], "k_shell() (in module graphscope)": [[75, "graphscope.k_shell"]], "katz_centrality() (in module graphscope)": [[75, "graphscope.katz_centrality"]], "key (graphscope.framework.app.app property)": [[75, "graphscope.framework.app.App.key"]], "louvain() (in module graphscope)": [[75, "graphscope.louvain"]], "lpa() (in module graphscope)": [[75, "graphscope.lpa"]], "lpa_u2i() (in module graphscope)": [[75, "graphscope.lpa_u2i"]], "numeric_assortativity_coefficient() (in module graphscope)": [[75, "graphscope.numeric_assortativity_coefficient"]], "pagerank() (in module graphscope)": [[75, "graphscope.pagerank"]], "pagerank_nx() (in module graphscope)": [[75, "graphscope.pagerank_nx"]], "signature (graphscope.framework.app.app property)": [[75, "graphscope.framework.app.App.signature"]], "signature (graphscope.framework.app.appassets property)": [[75, "graphscope.framework.app.AppAssets.signature"]], "signature() (graphscope.analytical.app.javaapp method)": [[75, "graphscope.analytical.app.JavaApp.signature"]], "sssp() (in module graphscope)": [[75, "graphscope.sssp"]], "triangles() (in module graphscope)": [[75, "graphscope.triangles"]], "type (graphscope.framework.app.appassets property)": [[75, "graphscope.framework.app.AppAssets.type"]], "voterank() (in module graphscope)": [[75, "graphscope.voterank"]], "wcc() (in module graphscope)": [[75, "graphscope.wcc"]], "basecontextdagnode (class in graphscope.framework.context)": [[76, "graphscope.framework.context.BaseContextDAGNode"]], "context (class in graphscope.framework.context)": [[76, "graphscope.framework.context.Context"]], "dynamicvertexdatacontext (class in graphscope.framework.context)": [[76, "graphscope.framework.context.DynamicVertexDataContext"]], "labeledvertexdatacontextdagnode (class in graphscope.framework.context)": [[76, "graphscope.framework.context.LabeledVertexDataContextDAGNode"]], "labeledvertexpropertycontextdagnode (class in graphscope.framework.context)": [[76, "graphscope.framework.context.LabeledVertexPropertyContextDAGNode"]], "resultdagnode (class in graphscope.framework.context)": [[76, "graphscope.framework.context.ResultDAGNode"]], "tensorcontextdagnode (class in graphscope.framework.context)": [[76, "graphscope.framework.context.TensorContextDAGNode"]], "vertexdatacontextdagnode (class in graphscope.framework.context)": [[76, "graphscope.framework.context.VertexDataContextDAGNode"]], "vertexpropertycontextdagnode (class in graphscope.framework.context)": [[76, "graphscope.framework.context.VertexPropertyContextDAGNode"]], "to_dataframe() (graphscope.framework.context.basecontextdagnode method)": [[76, "graphscope.framework.context.BaseContextDAGNode.to_dataframe"]], "to_numpy() (graphscope.framework.context.basecontextdagnode method)": [[76, "graphscope.framework.context.BaseContextDAGNode.to_numpy"]], "to_vineyard_dataframe() (graphscope.framework.context.basecontextdagnode method)": [[76, "graphscope.framework.context.BaseContextDAGNode.to_vineyard_dataframe"]], "to_vineyard_tensor() (graphscope.framework.context.basecontextdagnode method)": [[76, "graphscope.framework.context.BaseContextDAGNode.to_vineyard_tensor"]], "vertex (in module graphscope)": [[80, "graphscope.Vertex"]], "declare() (in module graphscope)": [[81, "graphscope.declare"]], "load_app() (in module graphscope.framework.app)": [[82, "graphscope.framework.app.load_app"]], "add_column() (in module graphscope.framework.dag_utils)": [[83, "graphscope.framework.dag_utils.add_column"]], "add_labels_to_graph() (in module graphscope.framework.dag_utils)": [[84, "graphscope.framework.dag_utils.add_labels_to_graph"]], "arrow_to_dynamic() (in module graphscope.framework.dag_utils)": [[85, "graphscope.framework.dag_utils.arrow_to_dynamic"]], "bind_app() (in module graphscope.framework.dag_utils)": [[86, "graphscope.framework.dag_utils.bind_app"]], "clear_edges() (in module graphscope.framework.dag_utils)": [[87, "graphscope.framework.dag_utils.clear_edges"]], "clear_graph() (in module graphscope.framework.dag_utils)": [[88, "graphscope.framework.dag_utils.clear_graph"]], "context_to_dataframe() (in module graphscope.framework.dag_utils)": [[89, "graphscope.framework.dag_utils.context_to_dataframe"]], "context_to_numpy() (in module graphscope.framework.dag_utils)": [[90, "graphscope.framework.dag_utils.context_to_numpy"]], "copy_graph() (in module graphscope.framework.dag_utils)": [[91, "graphscope.framework.dag_utils.copy_graph"]], "create_app() (in module graphscope.framework.dag_utils)": [[92, "graphscope.framework.dag_utils.create_app"]], "create_graph() (in module graphscope.framework.dag_utils)": [[93, "graphscope.framework.dag_utils.create_graph"]], "create_graph_view() (in module graphscope.framework.dag_utils)": [[94, "graphscope.framework.dag_utils.create_graph_view"]], "create_loader() (in module graphscope.framework.dag_utils)": [[95, "graphscope.framework.dag_utils.create_loader"]], "create_subgraph() (in module graphscope.framework.dag_utils)": [[96, "graphscope.framework.dag_utils.create_subgraph"]], "create_unload_op() (in module graphscope.framework.dag_utils)": [[97, "graphscope.framework.dag_utils.create_unload_op"]], "dynamic_to_arrow() (in module graphscope.framework.dag_utils)": [[98, "graphscope.framework.dag_utils.dynamic_to_arrow"]], "fetch_gremlin_result() (in module graphscope.framework.dag_utils)": [[99, "graphscope.framework.dag_utils.fetch_gremlin_result"]], "get_context_data() (in module graphscope.framework.dag_utils)": [[100, "graphscope.framework.dag_utils.get_context_data"]], "graph_to_dataframe() (in module graphscope.framework.dag_utils)": [[101, "graphscope.framework.dag_utils.graph_to_dataframe"]], "graph_to_numpy() (in module graphscope.framework.dag_utils)": [[102, "graphscope.framework.dag_utils.graph_to_numpy"]], "gremlin_query() (in module graphscope.framework.dag_utils)": [[103, "graphscope.framework.dag_utils.gremlin_query"]], "gremlin_to_subgraph() (in module graphscope.framework.dag_utils)": [[104, "graphscope.framework.dag_utils.gremlin_to_subgraph"]], "modify_edges() (in module graphscope.framework.dag_utils)": [[105, "graphscope.framework.dag_utils.modify_edges"]], "modify_vertices() (in module graphscope.framework.dag_utils)": [[106, "graphscope.framework.dag_utils.modify_vertices"]], "output() (in module graphscope.framework.dag_utils)": [[107, "graphscope.framework.dag_utils.output"]], "project_arrow_property_graph() (in module graphscope.framework.dag_utils)": [[108, "graphscope.framework.dag_utils.project_arrow_property_graph"]], "project_to_simple() (in module graphscope.framework.dag_utils)": [[109, "graphscope.framework.dag_utils.project_to_simple"]], "report_graph() (in module graphscope.framework.dag_utils)": [[110, "graphscope.framework.dag_utils.report_graph"]], "run_app() (in module graphscope.framework.dag_utils)": [[111, "graphscope.framework.dag_utils.run_app"]], "to_data_sink() (in module graphscope.framework.dag_utils)": [[112, "graphscope.framework.dag_utils.to_data_sink"]], "to_directed() (in module graphscope.framework.dag_utils)": [[113, "graphscope.framework.dag_utils.to_directed"]], "to_undirected() (in module graphscope.framework.dag_utils)": [[114, "graphscope.framework.dag_utils.to_undirected"]], "to_vineyard_dataframe() (in module graphscope.framework.dag_utils)": [[115, "graphscope.framework.dag_utils.to_vineyard_dataframe"]], "to_vineyard_tensor() (in module graphscope.framework.dag_utils)": [[116, "graphscope.framework.dag_utils.to_vineyard_tensor"]], "unload_app() (in module graphscope.framework.dag_utils)": [[117, "graphscope.framework.dag_utils.unload_app"]], "unload_context() (in module graphscope.framework.dag_utils)": [[118, "graphscope.framework.dag_utils.unload_context"]], "unload_graph() (in module graphscope.framework.dag_utils)": [[119, "graphscope.framework.dag_utils.unload_graph"]], "__init__() (graphscope.framework.operation.operation method)": [[120, "graphscope.framework.operation.Operation.__init__"]], "as_op_def() (graphscope.framework.operation.operation method)": [[121, "graphscope.framework.operation.Operation.as_op_def"]], "eval() (graphscope.framework.operation.operation method)": [[122, "graphscope.framework.operation.Operation.eval"]], "evaluated (graphscope.framework.operation.operation property)": [[123, "graphscope.framework.operation.Operation.evaluated"]], "key (graphscope.framework.operation.operation property)": [[124, "graphscope.framework.operation.Operation.key"]], "signature (graphscope.framework.operation.operation property)": [[125, "graphscope.framework.operation.Operation.signature"]], "g() (in module graphscope)": [[126, "graphscope.g"]], "get_default_session() (in module graphscope)": [[127, "graphscope.get_default_session"]], "get_option() (in module graphscope)": [[128, "graphscope.get_option"]], "graphlearn() (in module graphscope)": [[129, "graphscope.graphlearn"]], "gremlin() (in module graphscope)": [[130, "graphscope.gremlin"]], "has_default_session() (in module graphscope)": [[131, "graphscope.has_default_session"]], "session (in module graphscope)": [[132, "graphscope.session"]], "set_option() (in module graphscope)": [[133, "graphscope.set_option"]], "graph (class in graphscope.framework.graph)": [[148, "graphscope.framework.graph.Graph"]], "graphdagnode (class in graphscope.framework.graph)": [[148, "graphscope.framework.graph.GraphDAGNode"]], "loader (class in graphscope.framework.loader)": [[148, "graphscope.framework.loader.Loader"]], "__init__() (graphscope.framework.graph.graph method)": [[148, "graphscope.framework.graph.Graph.__init__"]], "__init__() (graphscope.framework.graph.graphdagnode method)": [[148, "graphscope.framework.graph.GraphDAGNode.__init__"]], "__init__() (graphscope.framework.loader.loader method)": [[148, "graphscope.framework.loader.Loader.__init__"]], "add_column() (graphscope.framework.graph.graphdagnode method)": [[148, "graphscope.framework.graph.GraphDAGNode.add_column"]], "add_edges() (graphscope.framework.graph.graphdagnode method)": [[148, "graphscope.framework.graph.GraphDAGNode.add_edges"]], "add_vertices() (graphscope.framework.graph.graphdagnode method)": [[148, "graphscope.framework.graph.GraphDAGNode.add_vertices"]], "archive() (graphscope.framework.graph.graph method)": [[148, "graphscope.framework.graph.Graph.archive"]], "detach() (graphscope.framework.graph.graph method)": [[148, "graphscope.framework.graph.Graph.detach"]], "key (graphscope.framework.graph.graph property)": [[148, "graphscope.framework.graph.Graph.key"]], "load_from() (graphscope.framework.graph.graph class method)": [[148, "graphscope.framework.graph.Graph.load_from"]], "load_from() (in module graphscope.framework.graph_builder)": [[148, "graphscope.framework.graph_builder.load_from"]], "loaded() (graphscope.framework.graph.graph method)": [[148, "graphscope.framework.graph.Graph.loaded"]], "project() (graphscope.framework.graph.graphdagnode method)": [[148, "graphscope.framework.graph.GraphDAGNode.project"]], "save_to() (graphscope.framework.graph.graph method)": [[148, "graphscope.framework.graph.Graph.save_to"]], "schema (graphscope.framework.graph.graph property)": [[148, "graphscope.framework.graph.Graph.schema"]], "schema_path (graphscope.framework.graph.graph property)": [[148, "graphscope.framework.graph.Graph.schema_path"]], "session_id (graphscope.framework.graph.graph property)": [[148, "graphscope.framework.graph.Graph.session_id"]], "to_dataframe() (graphscope.framework.graph.graph method)": [[148, "graphscope.framework.graph.Graph.to_dataframe"]], "to_directed() (graphscope.framework.graph.graph method)": [[148, "graphscope.framework.graph.Graph.to_directed"]], "to_numpy() (graphscope.framework.graph.graph method)": [[148, "graphscope.framework.graph.Graph.to_numpy"]], "to_undirected() (graphscope.framework.graph.graph method)": [[148, "graphscope.framework.graph.Graph.to_undirected"]], "vineyard_id (graphscope.framework.graph.graph property)": [[148, "graphscope.framework.graph.Graph.vineyard_id"]], "interactivequery (class in graphscope.interactive.query)": [[149, "graphscope.interactive.query.InteractiveQuery"]], "__init__() (graphscope.interactive.query.interactivequery method)": [[149, "graphscope.interactive.query.InteractiveQuery.__init__"]], "close() (graphscope.interactive.query.interactivequery method)": [[149, "graphscope.interactive.query.InteractiveQuery.close"]], "execute() (graphscope.interactive.query.interactivequery method)": [[149, "graphscope.interactive.query.InteractiveQuery.execute"]], "graph_url (graphscope.interactive.query.interactivequery property)": [[149, "graphscope.interactive.query.InteractiveQuery.graph_url"]], "object_id (graphscope.interactive.query.interactivequery property)": [[149, "graphscope.interactive.query.InteractiveQuery.object_id"]], "session (graphscope.interactive.query.interactivequery property)": [[149, "graphscope.interactive.query.InteractiveQuery.session"]], "session_id (graphscope.interactive.query.interactivequery property)": [[149, "graphscope.interactive.query.InteractiveQuery.session_id"]], "subgraph() (graphscope.interactive.query.interactivequery method)": [[149, "graphscope.interactive.query.InteractiveQuery.subgraph"]], "submit() (graphscope.interactive.query.interactivequery method)": [[149, "graphscope.interactive.query.InteractiveQuery.submit"]], "traversal_source() (graphscope.interactive.query.interactivequery method)": [[149, "graphscope.interactive.query.InteractiveQuery.traversal_source"]], "e() (graphscope.learning.graph.graph method)": [[150, "graphscope.learning.graph.Graph.E"]], "graph (class in graphscope.learning.graph)": [[150, "graphscope.learning.graph.Graph"]], "v() (graphscope.learning.graph.graph method)": [[150, "graphscope.learning.graph.Graph.V"]], "__init__() (graphscope.learning.graph.graph method)": [[150, "graphscope.learning.graph.Graph.__init__"]], "get_handle() (graphscope.learning.graph.graph method)": [[150, "graphscope.learning.graph.Graph.get_handle"]], "average_clustering() (in module graphscope.nx.builtin)": [[151, "graphscope.nx.builtin.average_clustering"]], "average_shortest_path_length() (in module graphscope.nx.builtin)": [[151, "graphscope.nx.builtin.average_shortest_path_length"]], "bfs_edges() (in module graphscope.nx.builtin)": [[151, "graphscope.nx.builtin.bfs_edges"]], "clustering() (in module graphscope.nx.builtin)": [[151, "graphscope.nx.builtin.clustering"]], "degree_centrality() (in module graphscope.nx.builtin)": [[151, "graphscope.nx.builtin.degree_centrality"]], "eigenvector_centrality() (in module graphscope.nx.builtin)": [[151, "graphscope.nx.builtin.eigenvector_centrality"]], "has_path() (in module graphscope.nx.builtin)": [[151, "graphscope.nx.builtin.has_path"]], "hits() (in module graphscope.nx.builtin)": [[151, "graphscope.nx.builtin.hits"]], "in_degree_centrality() (in module graphscope.nx.builtin)": [[151, "graphscope.nx.builtin.in_degree_centrality"]], "k_core() (in module graphscope.nx.builtin)": [[151, "graphscope.nx.builtin.k_core"]], "katz_centrality() (in module graphscope.nx.builtin)": [[151, "graphscope.nx.builtin.katz_centrality"]], "out_degree_centrality() (in module graphscope.nx.builtin)": [[151, "graphscope.nx.builtin.out_degree_centrality"]], "triangles() (in module graphscope.nx.builtin)": [[151, "graphscope.nx.builtin.triangles"]], "graphscope.nx.classes.function": [[152, "module-graphscope.nx.classes.function"]], "module": [[152, "module-graphscope.nx.classes.function"], [285, "module-graphscope.nx.generators.atlas"], [285, "module-graphscope.nx.generators.classic"], [285, "module-graphscope.nx.generators.community"], [285, "module-graphscope.nx.generators.degree_seq"], [285, "module-graphscope.nx.generators.directed"], [285, "module-graphscope.nx.generators.duplication"], [285, "module-graphscope.nx.generators.ego"], [285, "module-graphscope.nx.generators.expanders"], [285, "module-graphscope.nx.generators.geometric"], [285, "module-graphscope.nx.generators.harary_graph"], [285, "module-graphscope.nx.generators.intersection"], [285, "module-graphscope.nx.generators.joint_degree_seq"], [285, "module-graphscope.nx.generators.mycielski"], [285, "module-graphscope.nx.generators.nonisomorphic_trees"], [285, "module-graphscope.nx.generators.small"], [285, "module-graphscope.nx.generators.social"], [285, "module-graphscope.nx.generators.spectral_graph_forge"], [285, "module-graphscope.nx.generators.sudoku"], [285, "module-graphscope.nx.generators.trees"], [285, "module-graphscope.nx.generators.triads"], [285, "module-networkx.generators.internet_as_graphs"], [285, "module-networkx.generators.stochastic"], [290, "module-graphscope.framework.dag_utils"]], "add_cycle() (in module graphscope.nx.classes.function)": [[153, "graphscope.nx.classes.function.add_cycle"]], "add_path() (in module graphscope.nx.classes.function)": [[154, "graphscope.nx.classes.function.add_path"]], "add_star() (in module graphscope.nx.classes.function)": [[155, "graphscope.nx.classes.function.add_star"]], "all_neighbors() (in module graphscope.nx.classes.function)": [[156, "graphscope.nx.classes.function.all_neighbors"]], "common_neighbors() (in module graphscope.nx.classes.function)": [[157, "graphscope.nx.classes.function.common_neighbors"]], "create_empty_copy() (in module graphscope.nx.classes.function)": [[158, "graphscope.nx.classes.function.create_empty_copy"]], "degree() (in module graphscope.nx.classes.function)": [[159, "graphscope.nx.classes.function.degree"]], "degree_histogram() (in module graphscope.nx.classes.function)": [[160, "graphscope.nx.classes.function.degree_histogram"]], "density() (in module graphscope.nx.classes.function)": [[161, "graphscope.nx.classes.function.density"]], "edge_subgraph() (in module graphscope.nx.classes.function)": [[162, "graphscope.nx.classes.function.edge_subgraph"]], "edges() (in module graphscope.nx.classes.function)": [[163, "graphscope.nx.classes.function.edges"]], "freeze() (in module graphscope.nx.classes.function)": [[164, "graphscope.nx.classes.function.freeze"]], "induced_subgraph() (in module graphscope.nx.classes.function)": [[165, "graphscope.nx.classes.function.induced_subgraph"]], "info() (in module graphscope.nx.classes.function)": [[166, "graphscope.nx.classes.function.info"]], "is_directed() (in module graphscope.nx.classes.function)": [[167, "graphscope.nx.classes.function.is_directed"]], "is_empty() (in module graphscope.nx.classes.function)": [[168, "graphscope.nx.classes.function.is_empty"]], "is_frozen() (in module graphscope.nx.classes.function)": [[169, "graphscope.nx.classes.function.is_frozen"]], "is_negatively_weighted() (in module graphscope.nx.classes.function)": [[170, "graphscope.nx.classes.function.is_negatively_weighted"]], "is_weighted() (in module graphscope.nx.classes.function)": [[171, "graphscope.nx.classes.function.is_weighted"]], "neighbors() (in module graphscope.nx.classes.function)": [[172, "graphscope.nx.classes.function.neighbors"]], "nodes() (in module graphscope.nx.classes.function)": [[173, "graphscope.nx.classes.function.nodes"]], "nodes_with_selfloops() (in module graphscope.nx.classes.function)": [[174, "graphscope.nx.classes.function.nodes_with_selfloops"]], "non_edges() (in module graphscope.nx.classes.function)": [[175, "graphscope.nx.classes.function.non_edges"]], "non_neighbors() (in module graphscope.nx.classes.function)": [[176, "graphscope.nx.classes.function.non_neighbors"]], "number_of_edges() (in module graphscope.nx.classes.function)": [[177, "graphscope.nx.classes.function.number_of_edges"]], "number_of_nodes() (in module graphscope.nx.classes.function)": [[178, "graphscope.nx.classes.function.number_of_nodes"]], "number_of_selfloops() (in module graphscope.nx.classes.function)": [[179, "graphscope.nx.classes.function.number_of_selfloops"]], "selfloop_edges() (in module graphscope.nx.classes.function)": [[180, "graphscope.nx.classes.function.selfloop_edges"]], "subgraph() (in module graphscope.nx.classes.function)": [[181, "graphscope.nx.classes.function.subgraph"]], "to_directed() (in module graphscope.nx.classes.function)": [[182, "graphscope.nx.classes.function.to_directed"]], "to_undirected() (in module graphscope.nx.classes.function)": [[183, "graphscope.nx.classes.function.to_undirected"]], "graph_atlas() (in module graphscope.nx.generators.atlas)": [[184, "graphscope.nx.generators.atlas.graph_atlas"]], "graph_atlas_g() (in module graphscope.nx.generators.atlas)": [[185, "graphscope.nx.generators.atlas.graph_atlas_g"]], "balanced_tree() (in module graphscope.nx.generators.classic)": [[186, "graphscope.nx.generators.classic.balanced_tree"]], "barbell_graph() (in module graphscope.nx.generators.classic)": [[187, "graphscope.nx.generators.classic.barbell_graph"]], "binomial_tree() (in module graphscope.nx.generators.classic)": [[188, "graphscope.nx.generators.classic.binomial_tree"]], "circulant_graph() (in module graphscope.nx.generators.classic)": [[189, "graphscope.nx.generators.classic.circulant_graph"]], "circular_ladder_graph() (in module graphscope.nx.generators.classic)": [[190, "graphscope.nx.generators.classic.circular_ladder_graph"]], "complete_graph() (in module graphscope.nx.generators.classic)": [[191, "graphscope.nx.generators.classic.complete_graph"]], "complete_multipartite_graph() (in module graphscope.nx.generators.classic)": [[192, "graphscope.nx.generators.classic.complete_multipartite_graph"]], "cycle_graph() (in module graphscope.nx.generators.classic)": [[193, "graphscope.nx.generators.classic.cycle_graph"]], "dorogovtsev_goltsev_mendes_graph() (in module graphscope.nx.generators.classic)": [[194, "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph"]], "empty_graph() (in module graphscope.nx.generators.classic)": [[195, "graphscope.nx.generators.classic.empty_graph"]], "full_rary_tree() (in module graphscope.nx.generators.classic)": [[196, "graphscope.nx.generators.classic.full_rary_tree"]], "ladder_graph() (in module graphscope.nx.generators.classic)": [[197, "graphscope.nx.generators.classic.ladder_graph"]], "lollipop_graph() (in module graphscope.nx.generators.classic)": [[198, "graphscope.nx.generators.classic.lollipop_graph"]], "null_graph() (in module graphscope.nx.generators.classic)": [[199, "graphscope.nx.generators.classic.null_graph"]], "path_graph() (in module graphscope.nx.generators.classic)": [[200, "graphscope.nx.generators.classic.path_graph"]], "star_graph() (in module graphscope.nx.generators.classic)": [[201, "graphscope.nx.generators.classic.star_graph"]], "trivial_graph() (in module graphscope.nx.generators.classic)": [[202, "graphscope.nx.generators.classic.trivial_graph"]], "turan_graph() (in module graphscope.nx.generators.classic)": [[203, "graphscope.nx.generators.classic.turan_graph"]], "wheel_graph() (in module graphscope.nx.generators.classic)": [[204, "graphscope.nx.generators.classic.wheel_graph"]], "lfr_benchmark_graph() (in module graphscope.nx.generators.community)": [[205, "graphscope.nx.generators.community.LFR_benchmark_graph"]], "caveman_graph() (in module graphscope.nx.generators.community)": [[206, "graphscope.nx.generators.community.caveman_graph"]], "connected_caveman_graph() (in module graphscope.nx.generators.community)": [[207, "graphscope.nx.generators.community.connected_caveman_graph"]], "gaussian_random_partition_graph() (in module graphscope.nx.generators.community)": [[208, "graphscope.nx.generators.community.gaussian_random_partition_graph"]], "planted_partition_graph() (in module graphscope.nx.generators.community)": [[209, "graphscope.nx.generators.community.planted_partition_graph"]], "random_partition_graph() (in module graphscope.nx.generators.community)": [[210, "graphscope.nx.generators.community.random_partition_graph"]], "relaxed_caveman_graph() (in module graphscope.nx.generators.community)": [[211, "graphscope.nx.generators.community.relaxed_caveman_graph"]], "ring_of_cliques() (in module graphscope.nx.generators.community)": [[212, "graphscope.nx.generators.community.ring_of_cliques"]], "stochastic_block_model() (in module graphscope.nx.generators.community)": [[213, "graphscope.nx.generators.community.stochastic_block_model"]], "windmill_graph() (in module graphscope.nx.generators.community)": [[214, "graphscope.nx.generators.community.windmill_graph"]], "configuration_model() (in module graphscope.nx.generators.degree_seq)": [[215, "graphscope.nx.generators.degree_seq.configuration_model"]], "degree_sequence_tree() (in module graphscope.nx.generators.degree_seq)": [[216, "graphscope.nx.generators.degree_seq.degree_sequence_tree"]], "directed_configuration_model() (in module graphscope.nx.generators.degree_seq)": [[217, "graphscope.nx.generators.degree_seq.directed_configuration_model"]], "directed_havel_hakimi_graph() (in module graphscope.nx.generators.degree_seq)": [[218, "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph"]], "expected_degree_graph() (in module graphscope.nx.generators.degree_seq)": [[219, "graphscope.nx.generators.degree_seq.expected_degree_graph"]], "havel_hakimi_graph() (in module graphscope.nx.generators.degree_seq)": [[220, "graphscope.nx.generators.degree_seq.havel_hakimi_graph"]], "random_degree_sequence_graph() (in module graphscope.nx.generators.degree_seq)": [[221, "graphscope.nx.generators.degree_seq.random_degree_sequence_graph"]], "gn_graph() (in module graphscope.nx.generators.directed)": [[222, "graphscope.nx.generators.directed.gn_graph"]], "gnc_graph() (in module graphscope.nx.generators.directed)": [[223, "graphscope.nx.generators.directed.gnc_graph"]], "gnr_graph() (in module graphscope.nx.generators.directed)": [[224, "graphscope.nx.generators.directed.gnr_graph"]], "random_k_out_graph() (in module graphscope.nx.generators.directed)": [[225, "graphscope.nx.generators.directed.random_k_out_graph"]], "scale_free_graph() (in module graphscope.nx.generators.directed)": [[226, "graphscope.nx.generators.directed.scale_free_graph"]], "duplication_divergence_graph() (in module graphscope.nx.generators.duplication)": [[227, "graphscope.nx.generators.duplication.duplication_divergence_graph"]], "partial_duplication_graph() (in module graphscope.nx.generators.duplication)": [[228, "graphscope.nx.generators.duplication.partial_duplication_graph"]], "ego_graph() (in module graphscope.nx.generators.ego)": [[229, "graphscope.nx.generators.ego.ego_graph"]], "chordal_cycle_graph() (in module graphscope.nx.generators.expanders)": [[230, "graphscope.nx.generators.expanders.chordal_cycle_graph"]], "margulis_gabber_galil_graph() (in module graphscope.nx.generators.expanders)": [[231, "graphscope.nx.generators.expanders.margulis_gabber_galil_graph"]], "paley_graph() (in module graphscope.nx.generators.expanders)": [[232, "graphscope.nx.generators.expanders.paley_graph"]], "geographical_threshold_graph() (in module graphscope.nx.generators.geometric)": [[233, "graphscope.nx.generators.geometric.geographical_threshold_graph"]], "random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[234, "graphscope.nx.generators.geometric.random_geometric_graph"]], "soft_random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[235, "graphscope.nx.generators.geometric.soft_random_geometric_graph"]], "thresholded_random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[236, "graphscope.nx.generators.geometric.thresholded_random_geometric_graph"]], "waxman_graph() (in module graphscope.nx.generators.geometric)": [[237, "graphscope.nx.generators.geometric.waxman_graph"]], "hkn_harary_graph() (in module graphscope.nx.generators.harary_graph)": [[238, "graphscope.nx.generators.harary_graph.hkn_harary_graph"]], "hnm_harary_graph() (in module graphscope.nx.generators.harary_graph)": [[239, "graphscope.nx.generators.harary_graph.hnm_harary_graph"]], "general_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[240, "graphscope.nx.generators.intersection.general_random_intersection_graph"]], "k_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[241, "graphscope.nx.generators.intersection.k_random_intersection_graph"]], "uniform_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[242, "graphscope.nx.generators.intersection.uniform_random_intersection_graph"]], "directed_joint_degree_graph() (in module graphscope.nx.generators.joint_degree_seq)": [[243, "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph"]], "is_valid_directed_joint_degree() (in module graphscope.nx.generators.joint_degree_seq)": [[244, "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree"]], "is_valid_joint_degree() (in module graphscope.nx.generators.joint_degree_seq)": [[245, "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree"]], "joint_degree_graph() (in module graphscope.nx.generators.joint_degree_seq)": [[246, "graphscope.nx.generators.joint_degree_seq.joint_degree_graph"]], "mycielski_graph() (in module graphscope.nx.generators.mycielski)": [[247, "graphscope.nx.generators.mycielski.mycielski_graph"]], "mycielskian() (in module graphscope.nx.generators.mycielski)": [[248, "graphscope.nx.generators.mycielski.mycielskian"]], "nonisomorphic_trees() (in module graphscope.nx.generators.nonisomorphic_trees)": [[249, "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees"]], "number_of_nonisomorphic_trees() (in module graphscope.nx.generators.nonisomorphic_trees)": [[250, "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees"]], "lcf_graph() (in module graphscope.nx.generators.small)": [[251, "graphscope.nx.generators.small.LCF_graph"]], "bull_graph() (in module graphscope.nx.generators.small)": [[252, "graphscope.nx.generators.small.bull_graph"]], "chvatal_graph() (in module graphscope.nx.generators.small)": [[253, "graphscope.nx.generators.small.chvatal_graph"]], "cubical_graph() (in module graphscope.nx.generators.small)": [[254, "graphscope.nx.generators.small.cubical_graph"]], "desargues_graph() (in module graphscope.nx.generators.small)": [[255, "graphscope.nx.generators.small.desargues_graph"]], "diamond_graph() (in module graphscope.nx.generators.small)": [[256, "graphscope.nx.generators.small.diamond_graph"]], "dodecahedral_graph() (in module graphscope.nx.generators.small)": [[257, "graphscope.nx.generators.small.dodecahedral_graph"]], "frucht_graph() (in module graphscope.nx.generators.small)": [[258, "graphscope.nx.generators.small.frucht_graph"]], "heawood_graph() (in module graphscope.nx.generators.small)": [[259, "graphscope.nx.generators.small.heawood_graph"]], "house_graph() (in module graphscope.nx.generators.small)": [[260, "graphscope.nx.generators.small.house_graph"]], "house_x_graph() (in module graphscope.nx.generators.small)": [[261, "graphscope.nx.generators.small.house_x_graph"]], "icosahedral_graph() (in module graphscope.nx.generators.small)": [[262, "graphscope.nx.generators.small.icosahedral_graph"]], "krackhardt_kite_graph() (in module graphscope.nx.generators.small)": [[263, "graphscope.nx.generators.small.krackhardt_kite_graph"]], "make_small_graph() (in module graphscope.nx.generators.small)": [[264, "graphscope.nx.generators.small.make_small_graph"]], "moebius_kantor_graph() (in module graphscope.nx.generators.small)": [[265, "graphscope.nx.generators.small.moebius_kantor_graph"]], "octahedral_graph() (in module graphscope.nx.generators.small)": [[266, "graphscope.nx.generators.small.octahedral_graph"]], "pappus_graph() (in module graphscope.nx.generators.small)": [[267, "graphscope.nx.generators.small.pappus_graph"]], "petersen_graph() (in module graphscope.nx.generators.small)": [[268, "graphscope.nx.generators.small.petersen_graph"]], "sedgewick_maze_graph() (in module graphscope.nx.generators.small)": [[269, "graphscope.nx.generators.small.sedgewick_maze_graph"]], "tetrahedral_graph() (in module graphscope.nx.generators.small)": [[270, "graphscope.nx.generators.small.tetrahedral_graph"]], "truncated_cube_graph() (in module graphscope.nx.generators.small)": [[271, "graphscope.nx.generators.small.truncated_cube_graph"]], "truncated_tetrahedron_graph() (in module graphscope.nx.generators.small)": [[272, "graphscope.nx.generators.small.truncated_tetrahedron_graph"]], "tutte_graph() (in module graphscope.nx.generators.small)": [[273, "graphscope.nx.generators.small.tutte_graph"]], "davis_southern_women_graph() (in module graphscope.nx.generators.social)": [[274, "graphscope.nx.generators.social.davis_southern_women_graph"]], "florentine_families_graph() (in module graphscope.nx.generators.social)": [[275, "graphscope.nx.generators.social.florentine_families_graph"]], "karate_club_graph() (in module graphscope.nx.generators.social)": [[276, "graphscope.nx.generators.social.karate_club_graph"]], "les_miserables_graph() (in module graphscope.nx.generators.social)": [[277, "graphscope.nx.generators.social.les_miserables_graph"]], "spectral_graph_forge() (in module graphscope.nx.generators.spectral_graph_forge)": [[278, "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge"]], "sudoku_graph() (in module graphscope.nx.generators.sudoku)": [[279, "graphscope.nx.generators.sudoku.sudoku_graph"]], "prefix_tree() (in module graphscope.nx.generators.trees)": [[280, "graphscope.nx.generators.trees.prefix_tree"]], "random_tree() (in module graphscope.nx.generators.trees)": [[281, "graphscope.nx.generators.trees.random_tree"]], "triad_graph() (in module graphscope.nx.generators.triads)": [[282, "graphscope.nx.generators.triads.triad_graph"]], "random_internet_as_graph() (in module networkx.generators.internet_as_graphs)": [[283, "networkx.generators.internet_as_graphs.random_internet_as_graph"]], "stochastic_graph() (in module networkx.generators.stochastic)": [[284, "networkx.generators.stochastic.stochastic_graph"]], "graphscope.nx.generators.atlas": [[285, "module-graphscope.nx.generators.atlas"]], "graphscope.nx.generators.classic": [[285, "module-graphscope.nx.generators.classic"]], "graphscope.nx.generators.community": [[285, "module-graphscope.nx.generators.community"]], "graphscope.nx.generators.degree_seq": [[285, "module-graphscope.nx.generators.degree_seq"]], "graphscope.nx.generators.directed": [[285, "module-graphscope.nx.generators.directed"]], "graphscope.nx.generators.duplication": [[285, "module-graphscope.nx.generators.duplication"]], "graphscope.nx.generators.ego": [[285, "module-graphscope.nx.generators.ego"]], "graphscope.nx.generators.expanders": [[285, "module-graphscope.nx.generators.expanders"]], "graphscope.nx.generators.geometric": [[285, "module-graphscope.nx.generators.geometric"]], "graphscope.nx.generators.harary_graph": [[285, "module-graphscope.nx.generators.harary_graph"]], "graphscope.nx.generators.intersection": [[285, "module-graphscope.nx.generators.intersection"]], "graphscope.nx.generators.joint_degree_seq": [[285, "module-graphscope.nx.generators.joint_degree_seq"]], "graphscope.nx.generators.mycielski": [[285, "module-graphscope.nx.generators.mycielski"]], "graphscope.nx.generators.nonisomorphic_trees": [[285, "module-graphscope.nx.generators.nonisomorphic_trees"]], "graphscope.nx.generators.small": [[285, "module-graphscope.nx.generators.small"]], "graphscope.nx.generators.social": [[285, "module-graphscope.nx.generators.social"]], "graphscope.nx.generators.spectral_graph_forge": [[285, "module-graphscope.nx.generators.spectral_graph_forge"]], "graphscope.nx.generators.sudoku": [[285, "module-graphscope.nx.generators.sudoku"]], "graphscope.nx.generators.trees": [[285, "module-graphscope.nx.generators.trees"]], "graphscope.nx.generators.triads": [[285, "module-graphscope.nx.generators.triads"]], "networkx.generators.internet_as_graphs": [[285, "module-networkx.generators.internet_as_graphs"]], "networkx.generators.stochastic": [[285, "module-networkx.generators.stochastic"]], "digraph (class in graphscope.nx)": [[286, "graphscope.nx.DiGraph"]], "graph (class in graphscope.nx)": [[286, "graphscope.nx.Graph"]], "__contains__() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.__contains__"]], "__contains__() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.__contains__"]], "__getitem__() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.__getitem__"]], "__getitem__() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.__getitem__"]], "__init__() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.__init__"]], "__init__() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.__init__"]], "__iter__() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.__iter__"]], "__iter__() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.__iter__"]], "__len__() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.__len__"]], "__len__() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.__len__"]], "add_edge() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.add_edge"]], "add_edge() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.add_edge"]], "add_edges_from() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.add_edges_from"]], "add_edges_from() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.add_edges_from"]], "add_node() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.add_node"]], "add_node() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.add_node"]], "add_nodes_from() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.add_nodes_from"]], "add_nodes_from() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.add_nodes_from"]], "add_weighted_edges_from() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.add_weighted_edges_from"]], "add_weighted_edges_from() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.add_weighted_edges_from"]], "adj (graphscope.nx.digraph property)": [[286, "graphscope.nx.DiGraph.adj"]], "adj (graphscope.nx.graph property)": [[286, "graphscope.nx.Graph.adj"]], "adjacency() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.adjacency"]], "adjacency() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.adjacency"]], "adjlist_inner_dict_factory (graphscope.nx.digraph attribute)": [[286, "graphscope.nx.DiGraph.adjlist_inner_dict_factory"]], "adjlist_inner_dict_factory (graphscope.nx.graph attribute)": [[286, "graphscope.nx.Graph.adjlist_inner_dict_factory"]], "adjlist_outer_dict_factory (graphscope.nx.digraph attribute)": [[286, "graphscope.nx.DiGraph.adjlist_outer_dict_factory"]], "adjlist_outer_dict_factory (graphscope.nx.graph attribute)": [[286, "graphscope.nx.Graph.adjlist_outer_dict_factory"]], "clear() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.clear"]], "clear() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.clear"]], "clear_edges() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.clear_edges"]], "clear_edges() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.clear_edges"]], "copy() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.copy"]], "copy() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.copy"]], "degree (graphscope.nx.digraph property)": [[286, "graphscope.nx.DiGraph.degree"]], "degree (graphscope.nx.graph property)": [[286, "graphscope.nx.Graph.degree"]], "edge_attr_dict_factory (graphscope.nx.digraph attribute)": [[286, "graphscope.nx.DiGraph.edge_attr_dict_factory"]], "edge_attr_dict_factory (graphscope.nx.graph attribute)": [[286, "graphscope.nx.Graph.edge_attr_dict_factory"]], "edge_subgraph() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.edge_subgraph"]], "edge_subgraph() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.edge_subgraph"]], "edges (graphscope.nx.digraph property)": [[286, "graphscope.nx.DiGraph.edges"]], "edges (graphscope.nx.graph property)": [[286, "graphscope.nx.Graph.edges"]], "get_edge_data() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.get_edge_data"]], "get_edge_data() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.get_edge_data"]], "graph_attr_dict_factory (graphscope.nx.digraph attribute)": [[286, "graphscope.nx.DiGraph.graph_attr_dict_factory"]], "graph_attr_dict_factory (graphscope.nx.graph attribute)": [[286, "graphscope.nx.Graph.graph_attr_dict_factory"]], "graph_cache_factory (graphscope.nx.digraph attribute)": [[286, "graphscope.nx.DiGraph.graph_cache_factory"]], "graph_cache_factory (graphscope.nx.graph attribute)": [[286, "graphscope.nx.Graph.graph_cache_factory"]], "graph_type (graphscope.nx.digraph property)": [[286, "graphscope.nx.DiGraph.graph_type"]], "graph_type (graphscope.nx.graph property)": [[286, "graphscope.nx.Graph.graph_type"]], "has_edge() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.has_edge"]], "has_edge() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.has_edge"]], "has_node() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.has_node"]], "has_node() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.has_node"]], "has_predecessor() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.has_predecessor"]], "has_successor() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.has_successor"]], "in_degree (graphscope.nx.digraph property)": [[286, "graphscope.nx.DiGraph.in_degree"]], "in_edges (graphscope.nx.digraph property)": [[286, "graphscope.nx.DiGraph.in_edges"]], "is_directed() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.is_directed"]], "is_directed() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.is_directed"]], "is_multigraph() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.is_multigraph"]], "is_multigraph() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.is_multigraph"]], "key (graphscope.nx.digraph property)": [[286, "graphscope.nx.DiGraph.key"]], "key (graphscope.nx.graph property)": [[286, "graphscope.nx.Graph.key"]], "name (graphscope.nx.digraph property)": [[286, "graphscope.nx.DiGraph.name"]], "name (graphscope.nx.graph property)": [[286, "graphscope.nx.Graph.name"]], "nbunch_iter() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.nbunch_iter"]], "nbunch_iter() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.nbunch_iter"]], "neighbors() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.neighbors"]], "neighbors() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.neighbors"]], "node_attr_dict_factory (graphscope.nx.digraph attribute)": [[286, "graphscope.nx.DiGraph.node_attr_dict_factory"]], "node_attr_dict_factory (graphscope.nx.graph attribute)": [[286, "graphscope.nx.Graph.node_attr_dict_factory"]], "node_dict_factory (graphscope.nx.digraph attribute)": [[286, "graphscope.nx.DiGraph.node_dict_factory"]], "node_dict_factory (graphscope.nx.graph attribute)": [[286, "graphscope.nx.Graph.node_dict_factory"]], "nodes (graphscope.nx.digraph property)": [[286, "graphscope.nx.DiGraph.nodes"]], "nodes (graphscope.nx.graph property)": [[286, "graphscope.nx.Graph.nodes"]], "number_of_edges() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.number_of_edges"]], "number_of_edges() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.number_of_edges"]], "number_of_nodes() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.number_of_nodes"]], "number_of_nodes() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.number_of_nodes"]], "op (graphscope.nx.digraph property)": [[286, "graphscope.nx.DiGraph.op"]], "op (graphscope.nx.graph property)": [[286, "graphscope.nx.Graph.op"]], "order() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.order"]], "order() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.order"]], "out_degree (graphscope.nx.digraph property)": [[286, "graphscope.nx.DiGraph.out_degree"]], "out_edges (graphscope.nx.digraph property)": [[286, "graphscope.nx.DiGraph.out_edges"]], "pred (graphscope.nx.digraph property)": [[286, "graphscope.nx.DiGraph.pred"]], "predecessors() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.predecessors"]], "remove_edge() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.remove_edge"]], "remove_edge() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.remove_edge"]], "remove_edges_from() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.remove_edges_from"]], "remove_edges_from() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.remove_edges_from"]], "remove_node() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.remove_node"]], "remove_node() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.remove_node"]], "remove_nodes_from() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.remove_nodes_from"]], "remove_nodes_from() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.remove_nodes_from"]], "reverse() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.reverse"]], "schema (graphscope.nx.digraph property)": [[286, "graphscope.nx.DiGraph.schema"]], "schema (graphscope.nx.graph property)": [[286, "graphscope.nx.Graph.schema"]], "session (graphscope.nx.digraph property)": [[286, "graphscope.nx.DiGraph.session"]], "session (graphscope.nx.graph property)": [[286, "graphscope.nx.Graph.session"]], "session_id (graphscope.nx.digraph property)": [[286, "graphscope.nx.DiGraph.session_id"]], "session_id (graphscope.nx.graph property)": [[286, "graphscope.nx.Graph.session_id"]], "set_edge_data() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.set_edge_data"]], "set_edge_data() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.set_edge_data"]], "set_node_data() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.set_node_data"]], "set_node_data() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.set_node_data"]], "signature (graphscope.nx.digraph property)": [[286, "graphscope.nx.DiGraph.signature"]], "signature (graphscope.nx.graph property)": [[286, "graphscope.nx.Graph.signature"]], "size() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.size"]], "size() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.size"]], "subgraph() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.subgraph"]], "subgraph() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.subgraph"]], "succ (graphscope.nx.digraph property)": [[286, "graphscope.nx.DiGraph.succ"]], "successors() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.successors"]], "to_directed() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.to_directed"]], "to_directed() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.to_directed"]], "to_undirected() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.to_undirected"]], "to_undirected() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.to_undirected"]], "to_undirected_class() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.to_undirected_class"]], "to_undirected_class() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.to_undirected_class"]], "update() (graphscope.nx.digraph method)": [[286, "graphscope.nx.DiGraph.update"]], "update() (graphscope.nx.graph method)": [[286, "graphscope.nx.Graph.update"]], "read_adjlist() (in module graphscope.nx)": [[288, "graphscope.nx.read_adjlist"]], "read_edgelist() (in module graphscope.nx)": [[288, "graphscope.nx.read_edgelist"]], "__init__() (in module graphscope.nx.graph)": [[289, "graphscope.nx.Graph.__init__"]], "_convert_arrow_to_dynamic() (in module graphscope.nx.graph)": [[289, "graphscope.nx.Graph._convert_arrow_to_dynamic"]], "operation (class in graphscope.framework.operation)": [[290, "graphscope.framework.operation.Operation"]], "graphscope.framework.dag_utils": [[290, "module-graphscope.framework.dag_utils"]], "session (class in graphscope)": [[293, "graphscope.Session"]], "__enter__() (graphscope.session method)": [[293, "graphscope.Session.__enter__"]], "__exit__() (graphscope.session method)": [[293, "graphscope.Session.__exit__"]], "__init__() (graphscope.session method)": [[293, "graphscope.Session.__init__"]], "add_lib() (graphscope.session method)": [[293, "graphscope.Session.add_lib"]], "as_default() (graphscope.session method)": [[293, "graphscope.Session.as_default"]], "close() (graphscope.session method)": [[293, "graphscope.Session.close"]], "connected() (graphscope.session method)": [[293, "graphscope.Session.connected"]], "engine_config (graphscope.session property)": [[293, "graphscope.Session.engine_config"]], "get_config() (graphscope.session method)": [[293, "graphscope.Session.get_config"]], "graphlearn() (graphscope.session method)": [[293, "graphscope.Session.graphlearn"]], "gremlin() (graphscope.session method)": [[293, "graphscope.Session.gremlin"]], "info (graphscope.session property)": [[293, "graphscope.Session.info"]], "learning() (graphscope.session method)": [[293, "graphscope.Session.learning"]], "load_from() (graphscope.session method)": [[293, "graphscope.Session.load_from"]], "load_from_gar() (graphscope.session method)": [[293, "graphscope.Session.load_from_gar"]], "run_fetches() (graphscope.session method)": [[293, "graphscope.Session.run_fetches"]]}})